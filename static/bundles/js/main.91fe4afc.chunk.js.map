{"version":3,"sources":["../config/polyfills.js","reducers/notesReducer.js","constants/actionTypes.js","reducers/index.js","reducers/authReducer.js","reducers/noteDetailReducer.js","reducers/paymentsReducer.js","reducers/userDetailReducer.js","store/index.js","constants/urls.js","utils/authUtils.js","actions/authActions.js","components/general/Organisms/LoadScreen/LoadScreen.js","utils/renderUtils.js","components/general/Atoms/Links/Links.js","components/Header.js","components/auth/RequireAuth.js","components/Landing.js","components/auth/Login.js","components/auth/Logout.js","components/auth/Signup.js","components/auth/SignupDone.js","components/auth/AccountActivation.js","components/general/Atoms/Buttons/Buttons.js","components/auth/Molecules/Tables/UserDetailTable.js","components/auth/Templates/UserProfile.js","components/general/Organisms/ErrorPage/ErrorPage.js","components/auth/Templates/UserProfileDetail.js","actions/userDetailActions.js","components/auth/Atoms/ImageDrop/ImageDrop.js","components/auth/UserProfileEdit.js","components/auth/PasswordChange.js","components/auth/PasswordReset.js","components/auth/PasswordResetDone.js","components/auth/PasswordResetConfirm.js","reactify/PostInline.js","reactify/Posts.js","routingComps/ReactifyComp.js","reactify/PostForm.js","reactify/PostDetail.js","reactify/PostCreate.js","actions/notesActions.js","components/notes/Organisms/Modal/Modal.js","components/notes/Atoms/AddInputs/AddInputs.js","components/notes/Atoms/Checkboxes/CheckboxIsCorp.js","components/notes/Atoms/Checkboxes/CheckboxIsPayed.js","components/notes/Atoms/Dropdown/Dropdown.js","components/notes/Molecules/Forms/InputFormNoteQuickAdd.js","components/notes/Molecules/Tables/OrderingHeaderTable.js","components/notes/Molecules/Tables/OrderingBodyTable.js","utils/helpers.js","components/notes/Templates/Notes.js","components/notes/Atoms/DatePick/DatePickLastCall.js","components/notes/Atoms/FileDrop/FileDrop.js","components/notes/Molecules/Forms/InputFormNoteDetail.js","components/notes/Molecules/Tables/DetailPreviewTable.js","components/notes/Templates/NoteDetail.js","actions/noteDetailActions.js","components/notes/Molecules/Forms/InputFormNoteAdd.js","components/notes/Templates/NoteNew.js","components/notes/Templates/Payments.js","utils/paymentsUtils.js","actions/paymentsActions.js","components/MainContent.js","components/App.js","registerServiceWorker.js","index.js"],"names":["Promise","__webpack_require__","enable","window","Object","assign","initialState","noteitems","loading","AuthTypes","LOGIN","LOGOUT","CHANGE_PASSWORD","USER_PROFILE","rootReducer","combineReducers","form","formReducer","auth","state","arguments","length","undefined","action","type","objectSpread","authenticated","token","payload","user","notes","noteList","map","a","reduce","b","concat","toConsumableArray","slice","filter","index","self","findIndex","t","created_at","id","fetching","unshift","note","selectById","indexEdit","p","noteToUpdate","text","phone","status","is_corporate","is_payed","email","linkedin_profile","website","correspondence","splice","deleteById","indexDel","nextafterdelete","next","deleted","detail","updated","hasError","errors","page","lead","leads","loaded","error","userdetail","store","logger","createLogger","middleware","applyMiddleware","thunk","compose","createStoreWithMiddleware","createStore","configureStore","ROOT_URL","HOMEPAGE_URL","require","homepage","AuthUrls","SIGNUP","RESET_PASSWORD","RESET_PASSWORD_CONFIRM","USER_ACTIVATION","getUserToken","authLogin","getUserProfile","dispatch","getState","axios","get","headers","authorization","then","response","data","catch","console","log","processServerError","keys","newDict","key","push","_error","LoadScreen","react_default","createElement","className","LoadObject","props","objectclass","renderField","_ref","input","label","_ref$meta","meta","touched","renderTextAreaField","_ref2","_ref2$meta","renderError","errorMessages","JSON","stringify","toast","NavigationLink","_Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","value","_this$props","urltext","customclass","url","toLowerCase","NavItem_default","Link","to","pathname","fromDashboard","Component","NavigationUserLink","_Component2","_this$props2","avatar","src","alt","username","renderUser","LoadScreen_LoadObject","HomeButton","role","index_es","icon","faHome","color","BrandButton","Header","_this","call","toggleNavbar","setState","collapsed","Fragment","Nav","navbar","Links_NavigationLink","Links_NavigationUserLink","Navbar","dark","expand","Links_BrandButton","NavbarToggler","onClick","Collapse","isOpen","renderLinks","connect","RequireAuth","ComposedComponent","Authentication","checkAuthentication","nextProps","history","is_staff","is_superuser","Landing","Login","handleSubmit","pristine","submitting","onSubmit","Field","name","component","validate","required","message","Button","disabled","reduxForm","formValues","loginUrl","post","localStorage","setItem","processedError","SubmissionError","onChange","values","clearSubmitErrors","test","Logout","logoutUser","removeItem","Signup","password1","password2","signupUrl","SignupDone","AccountActivation","match","params","activateUserUrl","info","ReturnButton","Button_default","outline","context","router","goBack","faUndoAlt","contextTypes","PropTypes","object","SaveButton","faSave","ClearButton","onClear","UserDetailTable","Table","striped","Buttons_ReturnButton","Links_HomeButton","style","backgroundImage","first_name","last_name","href","about","UserProfile","UserDetailTable_UserDetailTable","LoadScreen_LoadScreen","ErrorPage","rotation","faSpaceShuttle","UserProfileDetail","prevProps","fetchUserDetail","_this$state","ErrorPage_ErrorPage","renderNote","Content-Type","endpoint","fetch","res","json","ImageDrop","attached","handleDrop","files","_this2","_this$props$meta","classNameLabel","cbFunction","drop_class","drop_text","dist_es","onDrop","f","maxSize","getRootProps","getInputProps","defaultProps","Atoms_ImageDrop_ImageDrop","dropzone_options","multiple","accept","initialValues","formData","FormData","String","forEach","append","patch","PasswordChange","changePasswordUrl","new_password1","new_password2","PasswordReset","resetPasswordUrl","PasswordResetDone","PasswordResetConfirm","_props$match$params","uid","resetPasswordConfirmUrl","PostInline","elClass","showContent","slug","title","content","Posts","togglePostListClass","bind","assertThisInitialized","handleNewPost","loadMorePosts","posts","postsListClass","previous","author","count","loadPosts","nextEndpoint","thisComp","lookupOptions","method","csrfToken","cookie","load","responseData","results","postItemData","currentPosts","event","preventDefault","postItem","reactify_PostInline","ReacTifyComp","reactify_Posts","PostForm","handleInputChange","handleDraftChange","clearForm","postTitleRef","React","createRef","postContentRef","deletePost","draft","publish","moment","Date","format","X-CSRFToken","Authorization","body","credentials","newPostItemUpdated","alert","newPostItemCreated","defaultState","postCreateForm","reset","current","updatePost","createPost","target","defineProperty","cancelClass","deleteClass","ref","el","htmlFor","placeholder","checked","PostDetail","handlePostItemUpdated","doneLoading","loadPost","owner","reactify_PostForm","postItemUpdated","PostCreate","fetchNotes","ModalDelete","modaldelete","toggle","Modal","ModalHeader","ModalBody","ModalFooter","FormGroup","row","onSelectForDelete","faTrash","InputName","Label","Input","onInputChange","FormText","InputPhone","InputEmail","_Component3","_this$props3","InputLinkedin","_Component4","_this$props4","InputWebsite","_Component5","_this$props5","InputCorrespondence","_Component6","_this$props6","CheckboxIsCorp","faMale","faUsers","handleCheckboxIsCorpBtnClick","active","CheckboxIsPayed","faHandHoldingUsd","faCheckCircle","handleCheckboxIsPayBtnClick","CustomDropdown","dropdownOpen","Dropdown","onToggle","DropdownToggle","caret","DropdownMenu","DropdownItem","onChangeValue","InputFormNoteQuickAdd","updateNoteId","AddInputs_InputName","AddInputs_InputPhone","AddInputs_InputEmail","AddInputs_InputLinkedin","AddInputs_InputWebsite","AddInputs_InputCorrespondence","CheckboxIsCorp_CheckboxIsCorp","Dropdown_CustomDropdown","CheckboxIsPayed_CheckboxIsPayed","OrderingHeaderTable","_getPrototypeOf2","_len","args","Array","_key","order","is_ordering_name","searchtext","onBtnClickOrderingName","ordername","newordername","charAt","indexOf","includes","onOrderNotes","faLongArrowAltDown","faExchangeAlt","faTimes","OrderingBodyTable","scope","prevLink","location","owner_username","onSelectForEdit","faEdit","onToggleModalDelete","handleValidation","fields","trim","lastAtPos","lastIndexOf","lastDotPos","Notes","resetForm","addNew","modal","resetSearch","searching","searchNotes","selectForEdit","updateNoteIndex","selectForDelete","deleteNote","prevState","toggleModal","toggleModalDelete","handleChange","e","_this$setState","changeValue","currentTarget","textContent","onCheckboxIsCorpBtnClick","onCheckboxIsPayBtnClick","dataFromCallback","mapped","item","join","orderNotes","submitNote","validation_errors","addNote","updateNote","isArray","nextForDelete","lastChar","parseInt","Form","InputFormNoteQuickAdd_InputFormNoteQuickAdd","_this$state2","renderModal","Modal_ModalDelete","faPlusSquare","CustomInput","inline","faSearch","OrderingHeaderTable_OrderingHeaderTable","OrderingBodyTable_OrderingBodyTable","renderNotes","noteId","DatePickLastCall","handleChangeDate","date","defaultFormat","toDate","add_call","last_call","is_valid_date","isValid","handleResetCallClick","react_datepicker_es","selected","showTimeSelect","timeFormat","timeIntervals","dateFormat","timeCaption","handleAddCallClick","FileDrop","acceptedFiles","rejectedFiles","onSelectDrop","documents","split","faFileUpload","InputFormNoteDetail","DatePickLastCall_DatePickLastCall","Atoms_FileDrop_FileDrop","DetailPreviewTable","NoteDetail","changeDate","getData","onAddCallClick","onResetCallClick","updateDetailNote","fetchDetailNote","detailed","Container","fluid","Row","InputFormNoteDetail_InputFormNoteDetail","Buttons_SaveButton","DetailPreviewTable_DetailPreviewTable","Accept","toISOString","InputFormNoteAdd","NoteNew","addDetailNote","redirectToNewPage","Redirect","Form_default","InputFormNoteAdd_InputFormNoteAdd","Buttons_ClearButton","Payments","fetchPaymentsLead","newstate","true_investors","converted","processed","rejected","count_payed","payed","price_all","price_payed","prices","Math","ceil","price","paymentsUtil","total","colSpan","renderPayments","MainContent","Switch","Route","exact","path","components_Landing","auth_Login","auth_Logout","auth_Signup","auth_AccountActivation","SignupDone_SignupDone","auth_PasswordReset","PasswordResetDone_PasswordResetDone","auth_PasswordResetConfirm","UserProfileEdit","ReactifyComp","App","components_Header","lib","hideProgressBar","position","autoClose","removeCloseButton","components_MainContent","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","URL","process","origin","addEventListener","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","getItem","ReactDOM","render","es","BrowserRouter","App_App","document","getElementById"],"mappings":"uIAEA,qBAAAA,UAIEC,EAAQ,KAAgCC,SAE1CC,OAAAH,QAAmBC,EAAQ,MAI3BA,EAAQ,IAIRG,OAAAC,OAAgBJ,EAAQ,oiHChBlBK,EAAe,CAAC,CAACC,UAAW,GACXC,SAAS,ICDzB,IAAMC,EAAY,CACrBC,MAAO,QACPC,OAAQ,SACRC,gBAAiB,kBACjBC,aAAc,gBCMlB,IAUeC,EAVKC,YAAgB,CAChCC,KAAMC,IACNC,KCVW,WAA0C,IAAjCC,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzB,CAACZ,SAAS,GAAOe,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrD,OAAOC,EAAOC,MACV,KAAKf,EAAUC,MACX,OAAON,OAAAqB,EAAA,EAAArB,CAAA,GAAKe,EAAZ,CAAmBO,eAAe,EAAMC,MAAOJ,EAAOK,UAC1D,KAAKnB,EAAUE,OACX,OAAOP,OAAAqB,EAAA,EAAArB,CAAA,GAAKe,EAAZ,CAAmBO,eAAe,EAAOC,MAAO,OACpD,KAAKlB,EAAUI,aACX,OAAOT,OAAAqB,EAAA,EAAArB,CAAA,GAAKe,EAAZ,CAAmBU,KAAMN,EAAOK,QAASpB,SAAS,IAM1D,OAAOW,GDFPW,MFTW,WAA2C,IAA5BX,EAA4BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBd,EAAciB,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAElDS,EAAWZ,EAAMa,IAAI,SAAAC,GAAC,OAAIA,EAAE1B,YAAW2B,OAAO,SAACD,EAAGE,GAAJ,SAAAC,OAAAhC,OAAAiC,EAAA,EAAAjC,CAAc6B,GAAd7B,OAAAiC,EAAA,EAAAjC,CAAoB+B,KAAI,IAAIG,QAE9E,OAAQf,EAAOC,MAEX,IAAK,cAID,OAFAO,EAAWA,EAASQ,OAAO,SAACR,EAAUS,EAAOC,GAAlB,OAA2BA,EAAKC,UAAU,SAAAC,GAAC,OAAIA,EAAEC,aAAeb,EAASa,YAAcD,EAAEE,KAAOd,EAASc,OAAQL,IAErI,CAACpC,OAAAqB,EAAA,EAAArB,CAAA,GACIe,EAAMA,EAAME,OAAO,GADxB,CAECd,UAAWwB,EACXvB,SAAS,EACTsC,UAAU,KAKtB,IAAK,eASL,IAAK,cAED,MAAO,CAAC1C,OAAAqB,EAAA,EAAArB,CAAA,GAEIe,EACDI,EAAOO,MAHX,CAICtB,SAAS,KAIrB,IAAK,WAQD,OANAuB,EAASgB,QAAQxB,EAAOyB,MAMjB,CAAA5C,OAAAqB,EAAA,EAAArB,CAAA,GAESe,EAAMA,EAAME,OAAO,GAF5B,CAGSd,UAAWwB,EACXvB,SAAS,KAI7B,IAAK,cAGD,IAAIyC,EAAa9B,EAAMI,EAAOiB,OAAOjC,UAAUgB,EAAOsB,IAAIA,GACtDK,EAAYnB,EAASW,UAAU,SAAAS,GAAC,OAAIA,EAAEN,KAAOI,IAE7CG,EAAerB,EAASmB,GAW5B,OAVAE,EAAaC,KAAO9B,EAAOyB,KAAKK,KAChCD,EAAaE,MAAQ/B,EAAOyB,KAAKM,MACjCF,EAAaG,OAAShC,EAAOyB,KAAKO,OAClCH,EAAaI,aAAejC,EAAOyB,KAAKQ,aACxCJ,EAAaK,SAAWlC,EAAOyB,KAAKS,SACpCL,EAAaM,MAAQnC,EAAOyB,KAAKU,MACjCN,EAAaO,iBAAmBpC,EAAOyB,KAAKW,iBAC5CP,EAAaQ,QAAUrC,EAAOyB,KAAKY,QACnCR,EAAaS,eAAiBtC,EAAOyB,KAAKa,eAC1C9B,EAAS+B,OAAOZ,EAAW,EAAGE,GACvB,CAAChD,OAAAqB,EAAA,EAAArB,CAAA,GACIe,EAAMA,EAAME,OAAO,GADxB,CAEKd,UAAWwB,EACXvB,SAAS,KAGzB,IAAK,cAED,IAAIuD,EAAa5C,EAAMI,EAAOsB,IAAItC,UAAUgB,EAAOiB,OAAOK,GACtDmB,EAAWjC,EAASW,UAAU,SAAAS,GAAC,OAAIA,EAAEN,KAAOkB,IAEhD,OADAhC,EAAS+B,OAAOE,EAAU,GACnB,CAAC5D,OAAAqB,EAAA,EAAArB,CAAA,GACQe,EAAMA,EAAME,OAAO,GAD5B,CAESd,UAAWwB,EACXvB,SAAS,EACTyD,gBAAiB9C,EAAM,GAAG+C,KAC1BC,SAAS,KAOjC,OAAOhD,GEpFPiD,OEdW,WAAyG,IAA9EjD,EAA8EC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtE,CAACZ,SAAS,EAAM6D,SAAS,EAAOC,UAAU,EAAOC,OAAQ,IAAKhD,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACpH,OAAOC,EAAOC,MAEV,IAAK,oBACD,OAAOpB,OAAAqB,EAAA,EAAArB,CAAA,GAAKe,EAAUI,EAAO6C,OAA7B,CAAqC5D,SAAS,EAAO8D,UAAU,EAAOC,OAAQ,KAClF,IAAK,qBACD,OAAOnE,OAAAqB,EAAA,EAAArB,CAAA,GAAKe,EAAUI,EAAO6C,OAA7B,CAAqC5D,SAAS,EAAO6D,SAAS,EAAMC,UAAU,EAAOC,OAAQ,KACjG,IAAK,kBACD,OAAOnE,OAAAqB,EAAA,EAAArB,CAAA,GAAKe,EAAUI,EAAO6C,OAA7B,CAAqC5D,SAAS,EAAO8D,UAAU,EAAOC,OAAQ,KAElF,IAAK,oBACD,OAAOnE,OAAAqB,EAAA,EAAArB,CAAA,GAAIe,EAAX,CACImD,UAAU,EACVC,OAAQ,CAACC,KAAM,sBACfhE,SAAS,IAMrB,OAAOW,GFLPsD,KGfW,WAAoF,IAA3DtD,EAA2DC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAnD,CAACsD,MAAO,GAAIlE,SAAS,EAAMmE,QAAQ,GAAQpD,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/F,OAAOC,EAAOC,MACV,IAAK,sBACD,OAAOpB,OAAAqB,EAAA,EAAArB,CAAA,GAAKe,EAAZ,CAAmBuD,MAAMtE,OAAAiC,EAAA,EAAAjC,CAAKmB,EAAOmD,OAAQlE,SAAS,EAAOmE,QAAQ,IACzE,IAAK,iBACD,OAAOvE,OAAAqB,EAAA,EAAArB,CAAA,GAAIe,EAAX,CAAkBX,SAAS,EAAOoE,MAAO,cAIjD,OAAOzD,GHOP0D,WIhBW,WAA4D,IAAjC1D,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzB,CAACZ,SAAS,GAAOe,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACvE,OAAOC,EAAOC,MAEV,IAAK,oBACD,OAAOpB,OAAAqB,EAAA,EAAArB,CAAA,GAAKe,EACLI,EAAOsD,WADd,CAEIP,UAAU,EACVC,OAAQ,GACR/D,SAAS,IAOjB,IAAK,iBACD,OAAOJ,OAAAqB,EAAA,EAAArB,CAAA,GAAIe,EAAX,CACImD,UAAU,EACVC,OAAQ,CAACC,KAAM,kBACfhE,SAAS,IAMrB,OAAOW,KCPX,IAEe2D,EAff,SAAwBxE,GACpB,IAEMyE,EAASC,yBACTC,EAAaC,YAAgBC,IAAOJ,GAM1C,OAJ4BK,YACxBH,EAGGI,CAA0BC,IAA1BD,CAAuCvE,EAAaR,GAGnDiF,4BClBDC,EAAW,yBAGhBC,EAAeC,EAAQ,KAAsBC,SAMtCC,EAAW,CACpBlF,MAAK,GAAA0B,OAJRoD,EAAWC,EAIH,oBACLI,OAAM,GAAAzD,OAAKoD,EAAL,2BACN5E,gBAAe,GAAAwB,OAAKoD,EAAL,8BACfM,eAAc,GAAA1D,OAAKoD,EAAL,6BACdO,uBAAsB,GAAA3D,OAAKoD,EAAL,qCACtBQ,gBAAe,GAAA5D,OAAKoD,EAAL,wCACf3E,aAAY,GAAAuB,OAAKoD,EAAL,oBChBT,SAASS,EAAa9E,GACzB,OAAOA,EAAMD,KAAKS,kBCSf,SAASuE,EAAUvE,GACtB,MAAO,CACHH,KAAMf,EAAUC,MAChBkB,QAASD,GA+DV,SAASwE,IACZ,OAAO,SAASC,GACZ,IAAMzE,EAAQsE,EAAanB,EAAMuB,YAE7B1E,GACA2E,IAAMC,IAAIX,EAAS/E,aAAc,CAC7B2F,QAAS,CACLC,cAAe,SAAW9E,KAE/B+E,KAAK,SAAAC,GAhBpB,IAAwB/E,EAiBRwE,GAjBQxE,EAiBgB+E,EAASC,KAhBtC,CACHpF,KAAMf,EAAUI,aAChBe,QAASA,OAeFiF,MAAM,SAACjC,GAGNkC,QAAQC,IAAInC,MA0H5B,SAASoC,EAAmBpC,GAExB,OAAQxE,OAAO6G,KAAKrC,GAAO1C,OAAO,SAASgF,EAASC,GAShD,MARY,qBAARA,EACAD,EAAO,OAAWE,KAAKxC,EAAMuC,IACd,UAARA,EAEPD,EAAO,OAAWE,KAAK,mCAEvBF,EAAQC,GAAOvC,EAAMuC,GAElBD,GACR,CAACG,OAAU,oHC7NLC,UAAa,kBACxBC,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,cACbF,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,UACbF,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,WACbF,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,aACfF,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,kBAMVC,EAAa,SAACC,GAAD,OACxBJ,EAAAtF,EAAAuF,cAAA,OAAKC,UAAS,GAAArF,OAAKuF,EAAMC,cACvBL,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,UACfF,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,SACfF,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,SACfF,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,YCLNI,EAAc,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,MAAOC,EAAVF,EAAUE,MAAOxG,EAAjBsG,EAAiBtG,KAAjByG,EAAAH,EAAuBI,KAAQC,EAA/BF,EAA+BE,QAASvD,EAAxCqD,EAAwCrD,MAAxC,OACvB2C,EAAAtF,EAAAuF,cAAA,WACID,EAAAtF,EAAAuF,cAAA,aAAQQ,GACRT,EAAAtF,EAAAuF,cAAA,WACID,EAAAtF,EAAAuF,cAAA,QAAApH,OAAAC,OAAA,CAAOoH,UAAU,gBAAmBM,EAApC,CAA2CvG,KAAMA,MAEpD2G,GAAavD,GAAS2C,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,0BAAyBF,EAAAtF,EAAAuF,cAAA,aAAQ5C,MAIlEwD,EAAsB,SAAAC,GAAA,IAAGN,EAAHM,EAAGN,MAAOC,EAAVK,EAAUL,MAAOxG,EAAjB6G,EAAiB7G,KAAjB8G,EAAAD,EAAuBH,KAAQC,EAA/BG,EAA+BH,QAASvD,EAAxC0D,EAAwC1D,MAAxC,OAC/B2C,EAAAtF,EAAAuF,cAAA,WACID,EAAAtF,EAAAuF,cAAA,aAAQQ,GACRT,EAAAtF,EAAAuF,cAAA,WACID,EAAAtF,EAAAuF,cAAA,WAAApH,OAAAC,OAAA,CAAUoH,UAAU,gBAAmBM,EAAvC,CAA8CvG,KAAMA,MAEvD2G,GAAavD,GAAS2C,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,0BAAyBF,EAAAtF,EAAAuF,cAAA,aAAQ5C,MAYlE2D,EAAc,SAACC,GACnBA,IACmC,OAAhCC,KAAKC,UAAUF,GACfG,QAAM/D,MAAM4D,EAAc,GAAG,IAE7BG,QAAM/D,MAAM,8BCtCXgE,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAxI,OAAA0I,EAAA,EAAA1I,CAAA2I,KAAAH,GAAAxI,OAAA4I,EAAA,EAAA5I,CAAA2I,KAAA3I,OAAA6I,EAAA,EAAA7I,CAAAwI,GAAAM,MAAAH,KAAA3H,YAAA,OAAAhB,OAAA+I,EAAA,EAAA/I,CAAAwI,EAAAC,GAAAzI,OAAAgJ,EAAA,EAAAhJ,CAAAwI,EAAA,EAAAzB,IAAA,SAAAkC,MAAA,WAEW,IAAAC,EACyBP,KAAKpB,MAA9B4B,EADAD,EACAC,QAASC,EADTF,EACSE,YACXC,EAAMF,EAAQG,cACnB,OACEnC,EAAAtF,EAAAuF,cAACmC,EAAA1H,EAAD,CAASkF,IAAG,IAAA/E,OAAMqH,IACjBlC,EAAAtF,EAAAuF,cAACoC,EAAA,EAAD,CAAMnC,UAAS,YAAArF,OAAcoH,GAC3BK,GAAI,CACHC,SAAQ,IAAA1H,OAAMqH,GACZtI,MAAO,CAAC4I,eAAe,KAErBR,QAZdX,EAAA,CAAoCoB,aAmBvBC,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAA7J,OAAA0I,EAAA,EAAA1I,CAAA2I,KAAAkB,GAAA7J,OAAA4I,EAAA,EAAA5I,CAAA2I,KAAA3I,OAAA6I,EAAA,EAAA7I,CAAA6J,GAAAf,MAAAH,KAAA3H,YAAA,OAAAhB,OAAA+I,EAAA,EAAA/I,CAAA6J,EAAAC,GAAA9J,OAAAgJ,EAAA,EAAAhJ,CAAA6J,EAAA,EAAA9C,IAAA,SAAAkC,MAAA,WAEW,IAAAc,EAC+BpB,KAAKpB,MAApC4B,EADAY,EACAZ,QAASC,EADTW,EACSX,YAAa3H,EADtBsI,EACsBtI,KACxB4H,EAAMF,EAAQG,cAEnB,OACEnC,EAAAtF,EAAAuF,cAACmC,EAAA1H,EAAD,CAASkF,IAAG,IAAA/E,OAAMqH,IACjBlC,EAAAtF,EAAAuF,cAACoC,EAAA,EAAD,CAAMnC,UAAS,YAAArF,OAAcoH,GAC3BK,GAAI,CACHC,SAAQ,IAAA1H,OAAMqH,GACZtI,MAAO,CAAC4I,eAAe,KAEtBlI,EDtCa,SAACA,GACzB,GAAIA,EACA,OACE0F,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,QACV5F,EAAKuI,OAAS7C,EAAAtF,EAAAuF,cAAA,OAAK6C,IAAG,GAAAjI,OAAKP,EAAKuI,QAAU3C,UAAU,cAAc6C,IAAI,WAAc,GACrF/C,EAAAtF,EAAAuF,cAAA,QAAMC,UAAU,iBAAiB5F,EAAK0I,WCiC9BC,CAAW3I,GAAQ0F,EAAAtF,EAAAuF,cAACiD,EAAD,CAAY7C,YAAY,mBAb/DqC,EAAA,CAAwCD,aAoB3BU,EAAa,kBACzBnD,EAAAtF,EAAAuF,cAACoC,EAAA,EAAD,CAAMnC,UAAU,6CACfkD,KAAK,SACLd,GAAI,CACDC,SAAQ,aACV3I,MAAO,CAAC4I,eAAe,KAErBxC,EAAAtF,EAAAuF,cAACoD,EAAA,EAAD,CAAiBC,KAAMC,IAAQC,MAAM,WAI7BC,EAAc,kBACvBzD,EAAAtF,EAAAuF,cAACoC,EAAA,EAAD,CAAMnC,UAAU,eACdoC,GAAI,CACAC,SAAQ,IACR3I,MAAO,CAAC4I,eAAe,KAH7B,kBC9CEkB,cACF,SAAAA,EAAYtD,GAAO,IAAAuD,EAAA,OAAA9K,OAAA0I,EAAA,EAAA1I,CAAA2I,KAAAkC,IACfC,EAAA9K,OAAA4I,EAAA,EAAA5I,CAAA2I,KAAA3I,OAAA6I,EAAA,EAAA7I,CAAA6K,GAAAE,KAAApC,KAAMpB,KAKVyD,aAAe,WACXF,EAAKG,SAAS,CACVC,WAAYJ,EAAK/J,MAAMmK,aAN3BJ,EAAK/J,MAAQ,CACTmK,WAAW,GAHAJ,oFAkBfnC,KAAKpB,MAAMxB,uDAIX,GAAI4C,KAAKpB,MAAMjG,cAAe,KAClBG,EAASkH,KAAKpB,MAAd9F,KACR,OACI0F,EAAAtF,EAAAuF,cAAAD,EAAAtF,EAAAsJ,SAAA,KACIhE,EAAAtF,EAAAuF,cAACgE,EAAA,EAAD,CAAKC,QAAM,EAAChE,UAAU,gBAClBF,EAAAtF,EAAAuF,cAACkE,EAAD,CACEnC,QAAQ,YACRC,YAAY,oBAEdjC,EAAAtF,EAAAuF,cAACkE,EAAD,CACEnC,QAAQ,WACRC,YAAY,qBAGlBjC,EAAAtF,EAAAuF,cAACgE,EAAA,EAAD,CAAKC,QAAM,EAAChE,UAAU,kBAClBF,EAAAtF,EAAAuF,cAACmE,EAAD,CACIpC,QAAQ,UACR1H,KAAMA,EACN2H,YAAY,aAEhBjC,EAAAtF,EAAAuF,cAACkE,EAAD,CACInC,QAAQ,SACRC,YAAY,iBAM5B,OACQjC,EAAAtF,EAAAuF,cAACgE,EAAA,EAAD,CAAK/D,UAAU,UAAUgE,QAAM,GAC3BlE,EAAAtF,EAAAuF,cAACkE,EAAD,CACEnC,QAAQ,QACRC,YAAY,oBAEfjC,EAAAtF,EAAAuF,cAACkE,EAAD,CACGnC,QAAQ,SACRC,YAAY,sDAQ9B,OACIjC,EAAAtF,EAAAuF,cAACoE,EAAA,EAAD,CAAQb,MAAM,OAAOc,MAAI,EAACC,OAAO,MAC7BvE,EAAAtF,EAAAuF,cAACuE,EAAD,MACAxE,EAAAtF,EAAAuF,cAACwE,EAAA,EAAD,CAAeC,QAASlD,KAAKqC,eAC3B7D,EAAAtF,EAAAuF,cAAC0E,EAAA,EAAD,CAAUC,QAASpD,KAAK5H,MAAMmK,UAAWG,QAAM,GACxC1C,KAAKqD,uBAxETpC,aAsFrB,IASeqC,eAhBf,SAAyBlL,GACrB,MAAO,CACHO,cAAeP,EAAMD,KAAKQ,cAC1BG,KAAMV,EAAMD,KAAKW,OAIE,SAAAuE,GACvB,MAAO,CACHD,eAAgB,WACZ,OAAOC,EAASD,QAMbkG,CAA6CpB,uBCxG7CqB,GAAA,SAASC,GAAmB,IACjCC,EADiC,SAAA3D,GAAA,SAAA2D,IAAA,OAAApM,OAAA0I,EAAA,EAAA1I,CAAA2I,KAAAyD,GAAApM,OAAA4I,EAAA,EAAA5I,CAAA2I,KAAA3I,OAAA6I,EAAA,EAAA7I,CAAAoM,GAAAtD,MAAAH,KAAA3H,YAAA,OAAAhB,OAAA+I,EAAA,EAAA/I,CAAAoM,EAAA3D,GAAAzI,OAAAgJ,EAAA,EAAAhJ,CAAAoM,EAAA,EAAArF,IAAA,qBAAAkC,MAAA,WAQ/BN,KAAK0D,oBAAoB1D,KAAKpB,SARC,CAAAR,IAAA,sBAAAkC,MAAA,SAYfqD,GAChB3D,KAAK0D,oBAAoBC,KAbM,CAAAvF,IAAA,sBAAAkC,MAAA,SAgBf1B,GACXA,EAAMjG,eACPqH,KAAKpB,MAAMgF,QAAQvF,KAAK,YAlBG,CAAAD,IAAA,SAAAkC,MAAA,WAuB/B,OAAO9B,EAAAtF,EAAAuF,cAAC+E,EAAsBxD,KAAKpB,WAvBJ6E,EAAA,CACVxC,aAsC7B,OAAOqC,YAZP,SAAyBlL,GAGrB,IAAIyL,GAAW,EAIf,OAHIzL,EAAMD,KAAKW,OAASV,EAAMD,KAAKW,KAAK+K,UAAYzL,EAAMD,KAAKW,KAAKgL,gBAChED,GAAW,GAER,CAAElL,cAAeP,EAAMD,KAAKQ,cAC3BkL,SAAUA,IAIfP,CAAyBG,IC/BrBM,oLAPX,OACGvF,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,eACnBF,EAAAtF,EAAAuF,cAAA,qFAJmBwC,6DCQhB+C,oLASO,IAAAzD,EACiDP,KAAKpB,MAAnDqF,EADH1D,EACG0D,aAAcpI,EADjB0E,EACiB1E,MAAOqI,EADxB3D,EACwB2D,SAAUC,EADlC5D,EACkC4D,WAEvC,OACI3F,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,8BAEXF,EAAAtF,EAAAuF,cAAA,QACIC,UAAU,6BACV0F,SAAUH,GAEVzF,EAAAtF,EAAAuF,cAAA,MAAIC,UAAU,kBAAd,iBACAF,EAAAtF,EAAAuF,cAAA,WAEAD,EAAAtF,EAAAuF,cAAA,YAAUC,UAAU,cAChBF,EAAAtF,EAAAuF,cAAC4F,GAAA,EAAD,CAAOC,KAAK,QAAQrF,MAAM,QAAQsF,UAAWzF,EACtCrG,KAAK,OAAO+L,SAAU,CAACC,oBAAS,CAACC,QAAS,gCAKrDlG,EAAAtF,EAAAuF,cAAA,YAAUC,UAAU,cAChBF,EAAAtF,EAAAuF,cAAC4F,GAAA,EAAD,CAAOC,KAAK,WAAWrF,MAAM,WAAWsF,UAAWzF,EAC5CrG,KAAK,WAAY+L,SAAU,CAACC,oBAAS,CAACC,QAAS,gCAI1DlG,EAAAtF,EAAAuF,cAAA,YAAUC,UAAU,cACdc,EAAY3D,GACd2C,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,eACXF,EAAAtF,EAAAuF,cAACoC,EAAA,EAAD,CAAMe,KAAK,SAASd,GAAG,UAAUpC,UAAU,oDAA3C,UACAF,EAAAtF,EAAAuF,cAACkG,GAAA,EAAD,CAAQnM,OAAO,SAASwJ,MAAM,OAAOtD,UAAU,8BAA8BkG,SAAUV,GAAYC,GAAnG,WAIR3F,EAAAtF,EAAAuF,cAACoC,EAAA,EAAD,CAAMC,GAAG,kBAAkBpC,UAAU,yBAArC,6BA3CAuC,aA8DL4D,gBAAU,CACrB5M,KAAM,QACNmM,SP3DG,SAAmBU,EAAYzH,EAAUuB,GACxC,IAAMmG,EAAWlI,EAASlF,MAE1B,OAAO4F,IAAMyH,KAAKD,EAAUD,GAAYnH,KAAK,SAACC,GAG1C,IAAMhF,EAAQgF,EAASC,KAAKO,IAE5Bf,EAASF,EAAUvE,IACnBqM,aAAaC,QAAQ,QAAStM,GAG9BgG,EAAMgF,QAAQvF,KAAK,cAEnBhB,EAASD,OACVU,MAAM,SAAAjC,GACL,IAAMsJ,EAAiBlH,EAAmBpC,EAAM+B,SAASC,MACzD,MAAM,IAAIuH,IAAgBD,MO2ClCE,SAAU,SAACC,EAAQjI,EAAUuB,GACrBA,EAAM/C,OAAOwB,EAASkI,aAAkB,WAEhDf,SAlBsB,SAAAc,GACtB,IAAM9J,EAAS,GACPb,EAAU2K,EAAV3K,MAQR,OANKA,EAEO,4CAA4C6K,KAAK7K,KACzDa,EAAOb,MAAQ,yBAFfa,EAAOb,MAAQ,0BAKZa,IAEIqJ,CAOZb,IC5EGyB,gMAOEzF,KAAKpB,MAAM8G,8CAIX,OACIlH,EAAAtF,EAAAuF,cAAA,wEAZSwC,aAiBNqC,eAAQ,KAAM,CAAEoC,WRgBxB,WAGH,OAFAT,aAAaU,WAAW,SACxBV,aAAaU,WAAW,aACjB,CACHlN,KAAMf,EAAUE,UQpBT0L,CAA8BmC,ICbvCG,oLAOO,IAAArF,EACiDP,KAAKpB,MAAnDqF,EADH1D,EACG0D,aAAcpI,EADjB0E,EACiB1E,MAAOqI,EADxB3D,EACwB2D,SAAUC,EADlC5D,EACkC4D,WAEvC,OACI3F,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,8BACXF,EAAAtF,EAAAuF,cAAA,QACIC,UAAU,6BACV0F,SAAUH,GAEVzF,EAAAtF,EAAAuF,cAAA,MAAIC,UAAU,kBAAd,WACAF,EAAAtF,EAAAuF,cAAA,WAEAD,EAAAtF,EAAAuF,cAAA,YAAUC,UAAU,cAChBF,EAAAtF,EAAAuF,cAAC4F,GAAA,EAAD,CAAOC,KAAK,QAAQrF,MAAM,QAAQsF,UAAWzF,EACtCrG,KAAK,UAGhB+F,EAAAtF,EAAAuF,cAAA,YAAUC,UAAU,cAChBF,EAAAtF,EAAAuF,cAAC4F,GAAA,EAAD,CAAOC,KAAK,WAAWrF,MAAM,WAAWsF,UAAWzF,EAC5CrG,KAAK,OAAO+L,SAAU,CAACC,oBAAS,CAACC,QAAS,gCAIrDlG,EAAAtF,EAAAuF,cAAA,YAAUC,UAAU,cAChBF,EAAAtF,EAAAuF,cAAC4F,GAAA,EAAD,CAAOC,KAAK,YAAYrF,MAAM,WAAWsF,UAAWzF,EAC7CrG,KAAK,WAAW+L,SAAU,CAACC,oBAAS,CAACC,QAAS,gCAIzDlG,EAAAtF,EAAAuF,cAAA,YAAUC,UAAU,cAChBF,EAAAtF,EAAAuF,cAAC4F,GAAA,EAAD,CAAOC,KAAK,YAAYrF,MAAM,mBAAmBsF,UAAWzF,EACrDrG,KAAK,WAAW+L,SAAU,CAACC,oBAAS,CAACC,QAAS,gCAIvDlF,EAAY3D,GAEd2C,EAAAtF,EAAAuF,cAAA,YAAUC,UAAU,cAChBF,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,eACXF,EAAAtF,EAAAuF,cAACoC,EAAA,EAAD,CAAMe,KAAK,SAASd,GAAG,SAASpC,UAAU,oDAA1C,SACAF,EAAAtF,EAAAuF,cAACkG,GAAA,EAAD,CAAQnM,OAAO,SAASwJ,MAAM,OAAOtD,UAAU,8BAA8BkG,SAAUV,GAAYC,GAAnG,sBA/CPlD,aA8EN4D,gBAAU,CACrB5M,KAAM,SACNuM,SAvBiB,SAAAc,GACjB,IAAM9J,EAAS,GACPb,EAA0C2K,EAA1C3K,MAAO6G,EAAmC8D,EAAnC9D,SAAUqE,EAAyBP,EAAzBO,UAAWC,EAAcR,EAAdQ,UAgBpC,OAdKtE,EAEMA,EAASlJ,OAAS,KACzBkD,EAAOgG,SAAW,iCAFlBhG,EAAOgG,SAAW,0BAIjB7G,EAEO,4CAA4C6K,KAAK7K,KACzDa,EAAOb,MAAQ,yBAFfa,EAAOb,MAAQ,0BAKfkL,IAAcC,IACdtK,EAAOsK,UAAY,4BAEhBtK,GAMP6J,SAAU,SAACC,EAAQjI,EAAUuB,GACrBA,EAAM/C,OAAOwB,EAASkI,aAAkB,YAEhDnB,ST/CG,SAAoBU,EAAYzH,EAAUuB,GAC7C,IAAMmH,EAAYlJ,EAASC,OAE3B,OAAOS,IAAMyH,KAAKe,EAAWjB,GACxBnH,KAAK,SAACC,GASHgB,EAAMgF,QAAQvF,KAAK,kBAEtBP,MAAM,SAACjC,GAGJ,IAAMsJ,EAAiBlH,EAAmBpC,EAAM+B,SAASC,MACzD,MAAM,IAAIuH,IAAgBD,OSsBvBN,CAOZe,IC5FkBI,oLAEb,OACIxH,EAAAtF,EAAAuF,cAAA,MAAIC,UAAU,QAAd,qHAH4BuC,aCGlCgF,oLAMO,IAAA1F,EAC2BP,KAAKpB,MAA7BqF,EADH1D,EACG0D,aAAcpI,EADjB0E,EACiB1E,MAEtB,OACI2C,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,8BACXF,EAAAtF,EAAAuF,cAAA,QACIC,UAAU,6BACV0F,SAAUH,GAEVzF,EAAAtF,EAAAuF,cAAA,MAAIC,UAAU,kBAAd,0DACAF,EAAAtF,EAAAuF,cAAA,WAEAD,EAAAtF,EAAAuF,cAAA,YAAUC,UAAU,0BACfc,EAAY3D,GACb2C,EAAAtF,EAAAuF,cAAA,UAAQjG,OAAO,SAASkG,UAAU,0BAAlC,sBApBQuC,aA4BjB4D,gBAAU,CACrB5M,KAAM,0BACNmM,SX2HG,SAA6BU,EAAYzH,EAAUuB,GAAO,IACrDR,EAAQQ,EAAMsH,MAAMC,OAApB/H,IACFgI,EAAkBvJ,EAASI,gBAC3BY,EAAOxG,OAAOC,OAAOwN,EAAY,CAAE1G,QAEzC,OAAOb,IAAMyH,KAAKoB,EAAiBvI,GAC9BF,KAAK,SAAAC,GACFgC,QAAMyG,KAAK,+DACXzH,EAAMgF,QAAQvF,KAAK,YACpBP,MAAM,SAACjC,GAGN,IAAMsJ,EAAiBlH,EAAmBpC,EAAM+B,SAASC,MACzD,MAAM,IAAIuH,IAAgBD,MWvIlCE,SAAU,SAACC,EAAQjI,EAAUuB,GACrBA,EAAM/C,OAAOwB,EAASkI,aAAkB,8BAJrCV,CAMZoB,qDCjCUK,GAAb,SAAAxG,GAAA,SAAAwG,IAAA,OAAAjP,OAAA0I,EAAA,EAAA1I,CAAA2I,KAAAsG,GAAAjP,OAAA4I,EAAA,EAAA5I,CAAA2I,KAAA3I,OAAA6I,EAAA,EAAA7I,CAAAiP,GAAAnG,MAAAH,KAAA3H,YAAA,OAAAhB,OAAA+I,EAAA,EAAA/I,CAAAiP,EAAAxG,GAAAzI,OAAAgJ,EAAA,EAAAhJ,CAAAiP,EAAA,EAAAlI,IAAA,SAAAkC,MAAA,WAMI,OACI9B,EAAAtF,EAAAuF,cAAC8H,GAAArN,EAAD,CAAQ8I,MAAM,OAAOwE,SAAO,EAAC9H,UAAU,wBAAwBkD,KAAK,SAClEsB,QAASlD,KAAKyG,QAAQC,OAAO9C,QAAQ+C,QACrCnI,EAAAtF,EAAAuF,cAACoD,EAAA,EAAD,CAAiBC,KAAM8E,IAAW5E,MAAM,mBATlDsE,EAAA,CAAkCrF,aAArBqF,GACJO,aAAe,CACpBH,OAAQI,KAAUC,QAaf,IAAMC,GAAa,kBACtBxI,EAAAtF,EAAAuF,cAAC8H,GAAArN,EAAD,CAAQ8I,MAAM,OAAOtD,UAAU,YAAYjG,KAAK,UAC9C+F,EAAAtF,EAAAuF,cAACoD,EAAA,EAAD,CAAiBC,KAAMmF,IAAQjF,MAAM,gBAI9BkF,GAAc,SAAAtI,GAAK,OAC5BJ,EAAAtF,EAAAuF,cAAC8H,GAAArN,EAAD,CAAQsN,SAAO,EAAC9H,UAAU,YAAYjG,KAAK,SACzCyK,QAAStE,EAAMuI,SADjB,UCtBSC,GAAkB,SAACtL,GAC9B,OAAIA,EAEA0C,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,yBACbF,EAAAtF,EAAAuF,cAAC4I,GAAA,EAAD,CAAOC,SAAO,EAAC5I,UAAU,qBACvBF,EAAAtF,EAAAuF,cAAA,aACED,EAAAtF,EAAAuF,cAAA,UACED,EAAAtF,EAAAuF,cAAA,qBAAa3C,EAAW0F,UACxBhD,EAAAtF,EAAAuF,cAAA,UACED,EAAAtF,EAAAuF,cAAC8I,GAAD,MACA/I,EAAAtF,EAAAuF,cAAC+I,EAAD,SAINhJ,EAAAtF,EAAAuF,cAAA,aACED,EAAAtF,EAAAuF,cAAA,UACED,EAAAtF,EAAAuF,cAAA,qBACAD,EAAAtF,EAAAuF,cAAA,UACED,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,SACX+I,MAAO,CAAEC,gBAAe,OAAArO,OAASyC,EAAWuF,OAApB,UAIhC7C,EAAAtF,EAAAuF,cAAA,UACED,EAAAtF,EAAAuF,cAAA,yBACAD,EAAAtF,EAAAuF,cAAA,UAAK3C,EAAW6L,aAElBnJ,EAAAtF,EAAAuF,cAAA,UACED,EAAAtF,EAAAuF,cAAA,wBACAD,EAAAtF,EAAAuF,cAAA,UAAK3C,EAAW8L,YAElBpJ,EAAAtF,EAAAuF,cAAA,UACED,EAAAtF,EAAAuF,cAAA,oBACAD,EAAAtF,EAAAuF,cAAA,UAAK3C,EAAWnB,QAElB6D,EAAAtF,EAAAuF,cAAA,UACED,EAAAtF,EAAAuF,cAAA,sBACAD,EAAAtF,EAAAuF,cAAA,UAAID,EAAAtF,EAAAuF,cAAA,KAAGC,UAAU,4BAA4BmJ,KAAI,GAAAxO,OAAKyC,EAAWjB,UAAaiB,EAAWjB,WAE3F2D,EAAAtF,EAAAuF,cAAA,UACED,EAAAtF,EAAAuF,cAAA,oBACAD,EAAAtF,EAAAuF,cAAA,UAAK3C,EAAWgM,WAOrB,MC7CHC,gMAWE/H,KAAKpB,MAAMxB,sDAGF,IACDtE,EAASkH,KAAKpB,MAAd9F,KAER,OAAIA,EAGE0F,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,yBACbF,EAAAtF,EAAAuF,cAACuJ,GACOlP,IAKT,sCAGF,IACErB,EAAWuI,KAAKpB,MAAhBnH,QAEP,OACI+G,EAAAtF,EAAAuF,cAAA,WACGhH,EACC+G,EAAAtF,EAAAuF,cAACwJ,EAAD,MAEAzJ,EAAAtF,EAAAuF,cAAA,WACKuB,KAAKyB,aACNjD,EAAAtF,EAAAuF,cAAA,WACAD,EAAAtF,EAAAuF,cAAA,YAAUC,UAAU,cAChBF,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,eACXF,EAAAtF,EAAAuF,cAACoC,EAAA,EAAD,CAAMC,GAAG,gBAAgBpC,UAAU,4CAAnC,kBACAF,EAAAtF,EAAAuF,cAACoC,EAAA,EAAD,CAAMC,GAAG,mBAAmBpC,UAAU,oDAAtC,8BA5CFuC,aAApB8G,GAOKlB,aAAe,CAClBH,OAAQI,KAAUC,QAqDXzD,mBAPf,SAAyBlL,GACrB,MAAO,CACHU,KAAMV,EAAMD,KAAKW,KACjBrB,QAASW,EAAMD,KAAKV,UAIY,CAAE2F,kBAA3BkG,CAA8CyE,IChEhDG,WAAY,SAAAnJ,GAAA,IAAEvD,EAAFuD,EAAEvD,OAAF,OACrBgD,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,cACbF,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,iBACbF,EAAAtF,EAAAuF,cAAA,mBACCjD,EACGgD,EAAAtF,EAAAuF,cAAA,SAAIjD,GAEJgD,EAAAtF,EAAAuF,cAAA,+DAEJD,EAAAtF,EAAAuF,cAAA,uBAAcD,EAAAtF,EAAAuF,cAAC+I,EAAD,QAEhBhJ,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,SACbF,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,cACfF,EAAAtF,EAAAuF,cAACoD,EAAA,EAAD,CAAiBsG,SAAU,IAAKzJ,UAAU,OAAOoD,KAAMsG,IAAgBpG,MAAM,aCZ/EqG,eACF,SAAAA,EAAYzJ,GAAM,IAAAuD,EAAA,OAAA9K,OAAA0I,EAAA,EAAA1I,CAAA2I,KAAAqI,IACdlG,EAAA9K,OAAA4I,EAAA,EAAA5I,CAAA2I,KAAA3I,OAAA6I,EAAA,EAAA7I,CAAAgR,GAAAjG,KAAApC,KAAMpB,KACDxG,MAAQ,CACZ0D,WAAY,GACZrE,SAAS,EACT8D,UAAU,GALG4G,kFASCmG,GACbtI,KAAKpB,MAAM9C,aAAewM,EAAUxM,YAC5CkE,KAAKsC,SAAS,CACZxG,WAAakE,KAAKpB,MAAM9C,WACxBrE,QAASuI,KAAKpB,MAAM9C,WAAWrE,QAC/B8D,SAAUyE,KAAKpB,MAAM9C,WAAWP,SAChCC,OAAQwE,KAAKpB,MAAM9C,WAAWN,qDAK5B,GAAIwE,KAAKpB,MAAMsH,MAAM,KACZpM,EAAMkG,KAAKpB,MAAMsH,MAAMC,OAAvBrM,GACPkG,KAAKsC,SAAS,CACVxI,GAAIA,IAERkG,KAAKpB,MAAM2J,gBAAgBzO,yCAIlB,IACDgC,EAAekE,KAAKpB,MAApB9C,WADC0M,EAEoBxI,KAAK5H,MAA1BmD,EAFCiN,EAEDjN,SAAUC,EAFTgN,EAEShN,OAElB,OAAKD,EASGiD,EAAAtF,EAAAuF,cAACgK,GAAD,CACIjN,OAAQA,GAAUA,EAAOC,OAR3B+C,EAAAtF,EAAAuF,cAACuJ,GACKlM,oCAYV,IACCrE,EAAWuI,KAAK5H,MAAhBX,QACP,OACI+G,EAAAtF,EAAAuF,cAAA,WACGhH,EAAS+G,EAAAtF,EAAAuF,cAACwJ,EAAD,MAAejI,KAAK0I,qBArDZzH,aAyEjBqC,eAdS,SAAAlL,GACpB,MAAO,CACL0D,WAAY1D,EAAM0D,aAIG,SAAAuB,GACvB,MAAO,CACLkL,gBAAiB,SAACzO,GACduD,EC1EqB,SAACvD,GAC5B,OAAO,SAACuD,EAAUC,GACd,IAAIG,EAAU,CAACkL,eAAgB,oBAC1B/P,EAAS0E,IAAWnF,KAApBS,MACCgQ,EAAQ,aAAAvP,OAAgBS,EAAhB,KAKd,OAJIlB,IACA6E,EAAO,cAAP,SAAApE,OAAoCT,IAGjCiQ,MAAMD,EAAU,CAACnL,YACnBE,KAAK,SAAAmL,GACF,GAAIA,EAAItO,OAAS,IACb,OAAOsO,EAAIC,OAAOpL,KAAK,SAAAE,GACnB,MAAO,CAACrD,OAAQsO,EAAItO,OAAQqD,UAMhC,MAFA+B,QAAM/D,MAAM,mBACZkC,QAAQC,IAAI,iBACN8K,IAIbnL,KAAK,SAAAmL,GACF,GAAmB,MAAfA,EAAItO,OACJ,OAAO6C,EAAS,CAAC5E,KAAM,oBAAqBqD,WAAYgN,EAAIjL,OACzD,GAAmB,MAAfiL,EAAItO,QAAiC,MAAfsO,EAAItO,OAGjC,MAFAoF,QAAM/D,MAAM,2BACZwB,EAAS,CAAC5E,KAAM,uBAAwBqD,WAAYgN,EAAIjL,OAClDiL,EAAIjL,KAEU,MAAfiL,EAAItO,SACToF,QAAM/D,MAAM,wBACZwB,EAAS,CAAC5E,KAAM,sBAIvBqF,MAAM,SAAAjC,GAGHkC,QAAQC,IAAI,QAASnC,MDkClBC,CAA2BhC,OAK/BwJ,CAA6C+E,aEvEtDW,sNAqBJ5Q,MAAQ,CAAE6Q,UAAU,KACpBC,WAAa,SAACC,GACfhH,EAAKG,SAAS,CAAC2G,UAAU,6EAEf,IAAAG,EAAApJ,KAAAO,EACuGP,KAAKpB,MAA3GF,EADD6B,EACC7B,UAAoB2G,EADrB9E,EACYvB,MAASqG,SADrBgE,EAAA9I,EACiCpB,KAAQtD,EADzCwN,EACyCxN,MAAOuD,EADhDiK,EACgDjK,QAAWH,EAD3DsB,EAC2DtB,MAAOqK,EADlE/I,EACkE+I,eAAgBhF,EADlF/D,EACkF+D,KAAMiF,EADxFhJ,EACwFgJ,WAE9FC,EAAa,kDACbC,EAAY,GASb,OAPCzJ,KAAKpB,MAAMI,MAAMsB,OAASN,KAAK5H,MAAM6Q,UACxCO,EAAa,2CACbC,EAAY,qBAEZD,EAAa,kDAIThL,EAAAtF,EAAAuF,cAAA,OAAKC,UAAW,GAAArF,OAAGqF,IAAe7C,GAASuD,EAAU,cAAgB,KAClEH,GAAST,EAAAtF,EAAAuF,cAAA,KAAGC,UAAW4K,GAAkB,IAAKrK,GAC/CT,EAAAtF,EAAAuF,cAACiL,GAAA,EAAD,CACEC,OAAQ,SAACC,GAGP,OAFAL,EAAWK,GACXR,EAAKF,WAAWU,GACTvE,EAASuE,EAAE,KAEpBtF,KAAMA,EACNuF,QAlDW,KAoDR,SAAA9K,GAAA,IAAE+K,EAAF/K,EAAE+K,aAAcC,EAAhBhL,EAAgBgL,cAAhB,OACGvL,EAAAtF,EAAAuF,cAAA,MAAApH,OAAAC,OAAA,GAASwS,IAAT,CAAyBpL,UAAS,GAAArF,OAAKmQ,GACrC/B,MAAO,CAAEC,gBAAe,OAAArO,OAAS+P,EAAKxK,MAAMI,MAAMsB,MAA1B,QACtB9B,EAAAtF,EAAAuF,cAAA,QAAWsL,KACXvL,EAAAtF,EAAAuF,cAAA,QAAMC,UAAU,yBAAhB,GAAArF,OAA4CoQ,OAIvD5N,GAASuD,EAAUZ,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,0BAAyBF,EAAAtF,EAAAuF,cAAA,aAAQ5C,IAAuB,WA1D3EoF,cAAlB+H,GAiBGgB,aAAe,CACpBtL,UAAW,GACX6K,WAAY,cA4CD,IAAAU,GAAA,SAAArL,GAAK,OAAIJ,EAAAtF,EAAAuF,cAAC4F,GAAA,EAADhN,OAAAC,OAAA,GAAWsH,EAAX,CAAkB2F,UAAWyE,OC9D/ChF,oLAMO,IAAAzD,EAC2BP,KAAKpB,MAA7BqF,EADH1D,EACG0D,aAAcpI,EADjB0E,EACiB1E,MAEtB,OACI2C,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,8BAEXF,EAAAtF,EAAAuF,cAAA,QACIC,UAAU,6BACV0F,SAAUH,GAEVzF,EAAAtF,EAAAuF,cAAA,MAAIC,UAAU,kBAAd,gBACAF,EAAAtF,EAAAuF,cAAA,WAEAD,EAAAtF,EAAAuF,cAAA,YAAUC,UAAU,cAChBF,EAAAtF,EAAAuF,cAAC4F,GAAA,EAAD,CAAOC,KAAK,WAAWrF,MAAM,WAAWsF,UAAWzF,EAC5CrG,KAAK,UAIhB+F,EAAAtF,EAAAuF,cAAA,YAAUC,UAAU,cAChBF,EAAAtF,EAAAuF,cAAC4F,GAAA,EAAD,CAAOC,KAAK,aAAarF,MAAM,aAAasF,UAAWzF,EAChDrG,KAAK,UAIhB+F,EAAAtF,EAAAuF,cAAA,YAAUC,UAAU,cAChBF,EAAAtF,EAAAuF,cAAC4F,GAAA,EAAD,CAAOC,KAAK,YAAYrF,MAAM,YAAYsF,UAAWzF,EAC9CrG,KAAK,UAIhB+F,EAAAtF,EAAAuF,cAAA,YAAUC,UAAU,cAChBF,EAAAtF,EAAAuF,cAAC4F,GAAA,EAAD,CAAOC,KAAK,UAAUrF,MAAM,UAAUsF,UAAWzF,EAC1CrG,KAAK,UAIhB+F,EAAAtF,EAAAuF,cAAA,YAAUC,UAAU,cAChBF,EAAAtF,EAAAuF,cAAC4F,GAAA,EAAD,CAAOC,KAAK,QAAQrF,MAAM,iBAAiBsF,UAAWlF,EAC/C5G,KAAK,UAGhB+F,EAAAtF,EAAAuF,cAAA,YAAUC,UAAU,cAChBF,EAAAtF,EAAAuF,cAACwL,GAAD,CACC3F,KAAK,SACLrF,MAAM,UACLqK,eAAe,mBACf5K,UAAU,aACVwL,iBAAkB,CAChBC,UAAU,EACVC,OAAQ,YAGV5L,EAAAtF,EAAAuF,cAAA,0BAGND,EAAAtF,EAAAuF,cAAA,YAAUC,UAAU,cACfc,EAAY3D,GACb2C,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,eACXF,EAAAtF,EAAAuF,cAAA,UAAQjG,OAAO,SAASkG,UAAU,4CAAlC,QACAF,EAAAtF,EAAAuF,cAACoC,EAAA,EAAD,CAAMC,GAAG,WAAWpC,UAAU,oDAA9B,qBAlERuC,aAkFLqC,mBANf,SAAyBlL,GACrB,MAAO,CACHiS,cAAejS,EAAMD,KAAKW,OAInBwK,CAAyBuB,aAAU,CAC9C5M,KAAM,sBACNoN,SAAU,SAACC,EAAQjI,EAAUuB,GACrBA,EAAM/C,OAAOwB,EAASkI,aAAkB,yBAEhDnB,SnB8EG,SAA2BU,EAAYzH,EAAUuB,GACpD,IAAMhG,EAAQsE,EAAanB,EAAMuB,YAE7ByJ,EAASjC,EAGPwF,EAAW,IAAIC,SAcrB,MAbiC,kBAAtBzF,EAAWzD,QAClByD,EAAWzD,kBAAkBmJ,QACP,OAAtB1F,EAAWzD,OACXhK,OAAO6G,KAAK6I,GAAQ0D,QAAQ,SAAArM,GAAG,MAClB,WAARA,GAAqBkM,EAASI,OAAOtM,EAAK2I,EAAO3I,MAGtD/G,OAAO6G,KAAK6I,GAAQ0D,QAAQ,SAAArM,GAAG,OAC3BkM,EAASI,OAAOtM,EAAK2I,EAAO3I,MAK7Bb,IAAMoN,MAAM9N,EAAS/E,aAAcwS,EAAU,CAC5C7M,QAAS,CACLkL,eAAgB,sBAChBjL,cAAe,SAAW9E,KAGjC+E,KAAK,SAAAC,GACFgC,QAAMyG,KAAK,8CACXzH,EAAMgF,QAAQvF,KAAK,cACpBP,MAAM,SAACjC,GAGN,IAAMsJ,EAAiBlH,EAAmBpC,EAAM+B,SAASC,MACzD,MAAM,IAAIuH,IAAgBD,OmBpHEN,CAMrCb,KC1FG4G,oLAMO,IAAArK,EACiDP,KAAKpB,MAAnDqF,EADH1D,EACG0D,aAAcpI,EADjB0E,EACiB1E,MAAOqI,EADxB3D,EACwB2D,SAAUC,EADlC5D,EACkC4D,WAEvC,OACI3F,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,8BACXF,EAAAtF,EAAAuF,cAAA,QACIC,UAAU,6BACV0F,SAAUH,GAEVzF,EAAAtF,EAAAuF,cAAA,MAAIC,UAAU,kBAAd,mBACAF,EAAAtF,EAAAuF,cAAA,WAEAD,EAAAtF,EAAAuF,cAAA,YAAUC,UAAU,cAChBF,EAAAtF,EAAAuF,cAAC4F,GAAA,EAAD,CAAOC,KAAK,eAAerF,MAAM,eAAesF,UAAWzF,EACpDrG,KAAK,WAAW+L,SAAU,CAACC,oBAAS,CAACC,QAAS,gCAIzDlG,EAAAtF,EAAAuF,cAAA,YAAUC,UAAU,cAChBF,EAAAtF,EAAAuF,cAAC4F,GAAA,EAAD,CAAOC,KAAK,gBAAgBrF,MAAM,eAAesF,UAAWzF,EACrDrG,KAAK,WAAW+L,SAAU,CAACC,oBAAS,CAACC,QAAS,gCAIzDlG,EAAAtF,EAAAuF,cAAA,YAAUC,UAAU,cAChBF,EAAAtF,EAAAuF,cAAC4F,GAAA,EAAD,CAAOC,KAAK,gBAAgBrF,MAAM,uBAAuBsF,UAAWzF,EAC7DrG,KAAK,WAAW+L,SAAU,CAACC,oBAAS,CAACC,QAAS,gCAIzDlG,EAAAtF,EAAAuF,cAAA,YAAUC,UAAU,cACfc,EAAY3D,GACb2C,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,eACXF,EAAAtF,EAAAuF,cAACkG,GAAA,EAAD,CAAQnM,OAAO,SAASwJ,MAAM,OAAOtD,UAAU,8BAA8BkG,SAAUV,GAAYC,GAAnG,UACA3F,EAAAtF,EAAAuF,cAACoC,EAAA,EAAD,CAAMC,GAAG,WAAWpC,UAAU,oDAA9B,qBAxCCuC,aA2Dd4D,gBAAU,CACrB5M,KAAM,kBACNmM,SpB4BG,SAAwBU,EAAYzH,EAAUuB,GACjD,IAAMiM,EAAoBhO,EAAShF,gBAC7Be,EAAQsE,EAAanB,EAAMuB,YAEjC,GAAI1E,EACA,OAAO2E,IAAMyH,KAAK6F,EAAmB/F,EAAY,CAC7CrH,QAAS,CACLC,cAAe,SAAW9E,KAG7B+E,KAAK,SAACC,GACHgC,QAAMyG,KAAK,0CAOXzH,EAAMgF,QAAQvF,KAAK,cAEtBP,MAAM,SAACjC,GAGJ,IAAMsJ,EAAiBlH,EAAmBpC,EAAM+B,SAASC,MACzD,MAAM,IAAIuH,IAAgBD,MoBnDtCE,SAAU,SAACC,EAAQjI,EAAUuB,GACrBA,EAAM/C,OAAOwB,EAASkI,aAAkB,qBAEhDf,SAfiB,SAAAc,GACjB,IAAM9J,EAAS,GAKf,OAJyC8J,EAAjCwF,gBAAiCxF,EAAlByF,gBAEnBvP,EAAOuP,cAAgB,4BAEpBvP,IAGIqJ,CAOZ+F,ICnEGI,oLAMO,IAAAzK,EAC2BP,KAAKpB,MAA7BqF,EADH1D,EACG0D,aAAcpI,EADjB0E,EACiB1E,MAEtB,OACI2C,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,8BAEXF,EAAAtF,EAAAuF,cAAA,QACIC,UAAU,6BACV0F,SAAUH,GAEVzF,EAAAtF,EAAAuF,cAAA,MAAIC,UAAU,kBAAd,uBACAF,EAAAtF,EAAAuF,cAAA,WAEAD,EAAAtF,EAAAuF,cAAA,YAAUC,UAAU,cAChBF,EAAAtF,EAAAuF,cAAC4F,GAAA,EAAD,CAAOC,KAAK,QAAQrF,MAAM,0BAA0BsF,UAAWzF,EACxDrG,KAAK,OAAO+L,SAAU,CAACC,oBAAS,CAACC,QAAS,gCAGrDlG,EAAAtF,EAAAuF,cAAA,YAAUC,UAAU,0BACfc,EAAY3D,GACb2C,EAAAtF,EAAAuF,cAAA,UAAQjG,OAAO,SAASkG,UAAU,0BAAlC,oBA1BIuC,aAkCb4D,gBAAU,CACrB5M,KAAM,iBACNoN,SAAU,SAACC,EAAQjI,EAAUuB,GACrBA,EAAM/C,OAAOwB,EAASkI,aAAkB,oBAEhDnB,SrBgFG,SAAuBU,EAAYzH,EAAUuB,GAChD,IAAMqM,EAAmBpO,EAASE,eAElC,OAAOQ,IAAMyH,KAAKiG,EAAkBnG,GAC/BnH,KAAK,SAAAC,GAEFgB,EAAMgF,QAAQvF,KAAK,0BACpBP,MAAM,SAACjC,GAGN,IAAMsJ,EAAiBlH,EAAmBpC,EAAM+B,SAASC,MACzD,MAAM,IAAIuH,IAAgBD,OqBhGvBN,CAMZmG,IC7CkBE,oLAEb,OACI1M,EAAAtF,EAAAuF,cAAA,MAAIC,UAAU,QAAd,8GAHmCuC,aCIzCkK,oLAMO,IAAA5K,EAC2BP,KAAKpB,MAA7BqF,EADH1D,EACG0D,aAAcpI,EADjB0E,EACiB1E,MAEtB,OACI2C,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,8BACXF,EAAAtF,EAAAuF,cAAA,QACIC,UAAU,6BACV0F,SAAUH,GAEVzF,EAAAtF,EAAAuF,cAAA,MAAIC,UAAU,kBAAd,uBACAF,EAAAtF,EAAAuF,cAAA,WAEAD,EAAAtF,EAAAuF,cAAA,YAAUC,UAAU,cAChBF,EAAAtF,EAAAuF,cAAC4F,GAAA,EAAD,CAAOC,KAAK,gBAAgBrF,MAAM,eAAesF,UAAWzF,EACrDrG,KAAK,WAAW+L,SAAU,CAACC,oBAAS,CAACC,QAAS,gCAIzDlG,EAAAtF,EAAAuF,cAAA,YAAUC,UAAU,cAChBF,EAAAtF,EAAAuF,cAAC4F,GAAA,EAAD,CAAOC,KAAK,gBAAgBrF,MAAM,uBAAuBsF,UAAWzF,EAC7DrG,KAAK,WAAW+L,SAAU,CAACC,oBAAS,CAACC,QAAS,gCAIzDlG,EAAAtF,EAAAuF,cAAA,YAAUC,UAAU,0BACfc,EAAY3D,GACb2C,EAAAtF,EAAAuF,cAAA,UAAQjG,OAAO,SAASkG,UAAU,0BAAlC,oBAhCWuC,aAkDpB4D,gBAAU,CACrB5M,KAAM,yBACNmM,SvBmFG,SAA+BU,EAAYzH,EAAUuB,GAAO,IAAAwM,EACxCxM,EAAMsH,MAAMC,OAA3BkF,EADuDD,EACvDC,IAAKzS,EADkDwS,EAClDxS,MACP0S,EAA0BzO,EAASG,uBACnCa,EAAOxG,OAAOC,OAAOwN,EAAY,CAAEuG,MAAKzS,UAE9C,OAAO2E,IAAMyH,KAAKsG,EAAyBzN,GACtCF,KAAK,SAAAC,GACFgC,QAAMyG,KAAK,uDACXzH,EAAMgF,QAAQvF,KAAK,YACpBP,MAAM,SAACjC,GAGN,IAAMsJ,EAAiBlH,EAAmBpC,EAAM+B,SAASC,MACzD,MAAM,IAAIuH,IAAgBD,MuB/FlCE,SAAU,SAACC,EAAQjI,EAAUuB,GACrBA,EAAM/C,OAAOwB,EAASkI,aAAkB,4BAEhDf,SAfiB,SAAAc,GACjB,IAAM9J,EAAS,GAKf,OAJyC8J,EAAjCwF,gBAAiCxF,EAAlByF,gBAEnBvP,EAAOuP,cAAgB,4BAEpBvP,IAGIqJ,CAOZsG,yCC5BYI,oLAtBJ,IACEvG,EAAQhF,KAAKpB,MAAboG,KACAwG,EAAWxL,KAAKpB,MAAhB4M,QACDC,EAA0B,SAAZD,EAAqB,UAAY,SACvD,OACEhN,EAAAtF,EAAAuF,cAAA,gBACclG,IAATyM,EACCxG,EAAAtF,EAAAuF,cAAA,OAAKC,UAAW8M,GAChBhN,EAAAtF,EAAAuF,cAACoC,EAAA,EAAD,CACEC,GAAI,CAACC,SAAQ,gBAAA1H,OAAiB2L,EAAK0G,MACnCtT,MAAO,CAAC4I,eAAe,KAErBxC,EAAAtF,EAAAuF,cAAA,UAAKuG,EAAK2G,QAERnN,EAAAtF,EAAAuF,cAAA,KAAGC,UAAW+M,GAAczG,EAAK4G,UAEvC,WA1Ba3K,aCSnB4K,eAEJ,SAAAA,EAAYjN,GAAM,IAAAuD,EAAA,OAAA9K,OAAA0I,EAAA,EAAA1I,CAAA2I,KAAA6L,IACd1J,EAAA9K,OAAA4I,EAAA,EAAA5I,CAAA2I,KAAA3I,OAAA6I,EAAA,EAAA7I,CAAAwU,GAAAzJ,KAAApC,KAAMpB,KACDkN,oBAAsB3J,EAAK2J,oBAAoBC,KAAzB1U,OAAA2U,GAAA,EAAA3U,QAAA2U,GAAA,EAAA3U,CAAA8K,KAC3BA,EAAK8J,cAAgB9J,EAAK8J,cAAcF,KAAnB1U,OAAA2U,GAAA,EAAA3U,QAAA2U,GAAA,EAAA3U,CAAA8K,KACrBA,EAAK+J,cAAe/J,EAAK+J,cAAcH,KAAnB1U,OAAA2U,GAAA,EAAA3U,QAAA2U,GAAA,EAAA3U,CAAA8K,KACpBA,EAAK/J,MAAQ,CACT+T,MAAO,GACPC,eAAgB,OAChBjR,KAAM,KACNkR,SAAU,KACVC,QAAQ,EACRC,MAAO,EACP5T,eAAe,GAZLwJ,+EAgBH,IACJhH,EAAQ6E,KAAK5H,MAAb+C,KACM,OAATA,QAA0B5C,IAAT4C,GAChB6E,KAAKpB,MAAM4N,UAAUrR,qCAKpBsR,GACN,IAAI7D,EAAW,mBACMrQ,IAAjBkU,IACA7D,EAAW6D,GAEf,IAAIC,EAAW1M,KACX2M,EAAgB,CAChBC,OAAQ,MACRnP,QAAS,CACLkL,eAAgB,qBAGlBkE,EAAYC,KAAOC,KAAK,aACxBnU,EAAQsE,EAAanB,EAAMuB,YACjCS,QAAQC,IAAI,QAASpF,GACrBmF,QAAQC,IAAI,YAAa6O,QAEPtU,IAAdsU,IACAF,EAAa,YAAkB,UAC/BA,EAAa,QAAY,eAAiBE,GAG9ChE,MAAMD,EAAU+D,GACfhP,KAAK,SAASC,GACX,OAAOA,EAASmL,SACjBpL,KAAK,SAASqP,GACbjP,QAAQC,IAAIgP,GAIXN,EAASpK,SAAS,CACX6J,MAAOO,EAAStU,MAAM+T,MAAM9S,OAAO2T,EAAaC,SAChD9R,KAAM6R,EAAa7R,KACnBkR,SAAUW,EAAaX,SACvBC,OAAQU,EAAaV,OACrBC,MAAOS,EAAaT,MACpB5T,cAAe+T,EAAS9N,MAAMxG,MAAMD,KAAKQ,kBAElDmF,MAAM,SAASjC,GACdkC,QAAQC,IAAI,QAASnC,2CAIfqR,GAEV,IAAIC,EAAenN,KAAK5H,MAAM+T,MAC9BgB,EAAanT,QAAQkT,GACrBlN,KAAKsC,SAAS,CACV6J,MAAOgB,gDAMKC,GAChBA,EAAMC,iBAEmB,KADFrN,KAAK5H,MAAMgU,eAE9BpM,KAAKsC,SAAS,CACV8J,eAAgB,SAGpBpM,KAAKsC,SAAS,CACV8J,eAAgB,iDAOxBpM,KAAKsC,SAAS,CACV6J,MAAO,GACPC,eAAgB,OAChBjR,KAAM,KACNkR,SAAU,KACVC,QAAQ,EACRC,MAAO,EACP5T,eAAe,IAEnBqH,KAAKwM,6CAcA,IACEL,EAASnM,KAAK5H,MAAd+T,MACAC,EAAkBpM,KAAK5H,MAAvBgU,eAEAjR,EAAQ6E,KAAK5H,MAAb+C,KAEAxC,EAAiBqH,KAAK5H,MAAtBO,cAET,OACE6F,EAAAtF,EAAAuF,cAAA,YACqB,IAAlB9F,EACC6F,EAAAtF,EAAAuF,cAACoC,EAAA,EAAD,CAAMnC,UAAU,OAAOoC,GAAI,CACzBC,SAAQ,uBACR3I,MAAO,CAAE4I,eAAe,KAF1B,eAIA,GACAxC,EAAAtF,EAAAuF,cAAA,UAAQyE,QAASlD,KAAK8L,qBAAtB,gBACCK,EAAM7T,OAAS,EAAI6T,EAAMlT,IAAI,SAACqU,EAAU7T,GACvC,OACE+E,EAAAtF,EAAAuF,cAAC8O,GAAD,CAAYvI,KAAMsI,EAAUlP,IAAG,iBAAA/E,OAAmBI,GAAS+R,QAASY,MAEnE5N,EAAAtF,EAAAuF,cAAA,2BACG,OAATtD,EAAgBqD,EAAAtF,EAAAuF,cAAA,UAAQyE,QAASlD,KAAKkM,eAAtB,aAA0D,WA7I/DjL,aA6JLqC,eANS,SAAClL,GACvB,MAAO,CACLA,MAAOA,IAIIkL,CAAyBuI,ICpJzB2B,iOAVX,OACEhP,EAAAtF,EAAAuF,cAAA,WACED,EAAAtF,EAAAuF,cAACoC,EAAA,EAAD,CAAMnC,UAAU,YAAYoC,GAAG,WAA/B,eACAtC,EAAAtF,EAAAuF,cAACgP,GAAD,cATmBxM,0CCgRZyM,eA1QX,SAAAA,EAAY9O,GAAM,IAAAuD,EAAA,OAAA9K,OAAA0I,EAAA,EAAA1I,CAAA2I,KAAA0N,IACdvL,EAAA9K,OAAA4I,EAAA,EAAA5I,CAAA2I,KAAA3I,OAAA6I,EAAA,EAAA7I,CAAAqW,GAAAtL,KAAApC,KAAMpB,KACDqF,aAAe9B,EAAK8B,aAAa8H,KAAlB1U,OAAA2U,GAAA,EAAA3U,QAAA2U,GAAA,EAAA3U,CAAA8K,KACpBA,EAAKwL,kBAAoBxL,EAAKwL,kBAAkB5B,KAAvB1U,OAAA2U,GAAA,EAAA3U,QAAA2U,GAAA,EAAA3U,CAAA8K,KACzBA,EAAKyL,kBAAoBzL,EAAKyL,kBAAkB7B,KAAvB1U,OAAA2U,GAAA,EAAA3U,QAAA2U,GAAA,EAAA3U,CAAA8K,KACzBA,EAAK0L,UAAY1L,EAAK0L,UAAU9B,KAAf1U,OAAA2U,GAAA,EAAA3U,QAAA2U,GAAA,EAAA3U,CAAA8K,KACjBA,EAAK2L,aAAeC,IAAMC,YAC1B7L,EAAK8L,eAAiBF,IAAMC,YAC5B7L,EAAK+L,WAAY/L,EAAK+L,WAAWnC,KAAhB1U,OAAA2U,GAAA,EAAA3U,QAAA2U,GAAA,EAAA3U,CAAA8K,KACjBA,EAAK/J,MAAQ,CACT+V,OAAO,EACPxC,MAAO,KACPD,KAAM,KACNE,QAAS,KACTwC,QAASC,KAAO,IAAIC,MAAQC,OAAO,cACnC/S,OAAQ,IAfE2G,0EAmBPtE,GAAK,IACPmH,EAAQhF,KAAKpB,MAAboG,KACD4D,EAAQ,cAAAvP,OAAiB2L,EAAK0G,KAAtB,KACRmB,EAAYC,KAAOC,KAAK,aACxBnU,EAAQsE,EAAanB,EAAMuB,YACjCS,QAAQC,IAAI,QAASpF,GACrBmF,QAAQC,IAAI,YAAa6O,GACzB,IAAIH,EAAW1M,KACf,QAAkBzH,IAAdsU,EAAyB,CACzB,IAAIF,EAAgB,CAChBC,OAAQ,MACRnP,QAAS,CACLkL,eAAgB,mBAChB6F,cAAe3B,EACf4B,cAAiB,SAAW7V,GAEhC8V,KAAMhP,KAAKC,UAAU9B,GACrB8Q,YAAa,WAGjB9F,MAAMD,EAAU+D,GACfhP,KAAK,SAASC,GACX,OAAOA,EAASmL,SACjBpL,KAAK,SAASqP,GACbjP,QAAQC,IAAIgP,GACRN,EAAS9N,MAAMgQ,oBACflC,EAAS9N,MAAMgQ,mBAAmB5B,GAEtCN,EAASmB,cACV/P,MAAM,SAASjC,GACdkC,QAAQC,IAAI,QAASnC,GACrBgT,MAAM,mFAKLhR,GACT,IACMgP,EAAYC,KAAOC,KAAK,aAC1BL,EAAW1M,KAEf,GADAjC,QAAQC,IAAI,OAAQ6O,QACFtU,IAAdsU,EAAyB,CACzB,IAAIF,EAAgB,CAChBC,OAAQ,OACRnP,QAAS,CACLkL,eAAgB,mBAChB6F,cAAe3B,GAEnB6B,KAAMhP,KAAKC,UAAU9B,GACrB8Q,YAAa,WAGjB9F,MAfa,cAeG8D,GACfhP,KAAK,SAASC,GACX,OAAOA,EAASmL,SACjBpL,KAAK,SAASqP,GACbjP,QAAQC,IAAIgP,GACRN,EAAS9N,MAAMkQ,oBACfpC,EAAS9N,MAAMkQ,mBAAmB9B,GAEtCN,EAASmB,YACTnB,EAASqC,iBACVjR,MAAM,SAASjC,GACdkC,QAAQC,IAAI,QAASnC,GACrBgT,MAAM,mFAKLzB,GACTA,EAAMC,iBADU,IAETrI,EAAQhF,KAAKpB,MAAboG,KACD4D,EAAQ,cAAAvP,OAAiB2L,EAAK0G,KAAtB,KACRmB,EAAYC,KAAOC,KAAK,aAE9B,OADAhP,QAAQC,IAAIgH,GACL6D,MAAMD,EAAU,CACjBgE,OAAQ,SACRnP,QAAS,CACLkL,eAAgB,mBAChB6F,cAAe3B,GAEnB8B,YAAa,YACdhR,KAAK,SAASC,GACf,OAAOA,IACND,KAAK,SAAAE,GACa,MAAhBA,EAAKrD,QAENuD,QAAQC,IAAI,yBAEbF,MAAM,SAASjC,GACdkC,QAAQC,IAAI,QAASnC,GACrBgT,MAAM,iFAILzB,GACHA,GACFA,EAAMC,iBAERrN,KAAKgP,eAAeC,gDAIpBjP,KAAK8N,aAAaoB,QAAQ,GAC1BlP,KAAKiO,eAAeiB,QAAQ,wCAEpB9B,GACTA,EAAMC,iBACN,IAAIxP,EAAOmC,KAAK5H,MACR4M,EAAQhF,KAAKpB,MAAboG,UACMzM,IAATyM,EACFhF,KAAKmP,WAAWtR,GAEhBmC,KAAKoP,WAAWvR,GAGlBE,QAAQC,IAAI,CAACgH,mDAEAoI,GACXA,EAAMC,iBACN,IAAIjP,EAAMgP,EAAMiC,OAAO/K,KACnBhE,EAAQ8M,EAAMiC,OAAO/O,MAEb,UAARlC,GACIkC,EAAMhI,OAAS,KACfuW,MAAM,0BAGd7O,KAAKsC,SAALjL,OAAAiY,GAAA,EAAAjY,CAAA,GACK+G,EAAMkC,8CAKC8M,GAChBpN,KAAKsC,SAAS,CACZ6L,OAAQnO,KAAK5H,MAAM+V,+CAIrBnO,KAAKsC,SAAS,CACV6L,OAAO,EACPxC,MAAO,KACPC,QAAS,KACTF,KAAM,KACN0C,QAASC,KAAO,IAAIC,MAAQC,OAAO,4DAGtB,IACVvJ,EAAQhF,KAAKpB,MAAboG,UAEMzM,IAATyM,EACFhF,KAAKsC,SAAS,CACV6L,MAAOnJ,EAAKmJ,MACZxC,MAAO3G,EAAK2G,MACZC,QAAS5G,EAAK4G,QACdF,KAAM1G,EAAK0G,KACX0C,QAASC,KAAOrJ,EAAKoJ,SAASG,OAAO,gBAGzCvO,KAAK+O,gDAIF,IAAA3F,EAAApJ,KACAoO,EAAWpO,KAAK5H,MAAhBgW,QACEzC,EAAS3L,KAAK5H,MAAduT,MACAC,EAAW5L,KAAK5H,MAAhBwT,QACAF,EAAQ1L,KAAK5H,MAAbsT,KACD6D,OAAkChX,IAApByH,KAAKpB,MAAMoG,KAAqB,SAAW,GACzDwK,OAAkCjX,IAApByH,KAAKpB,MAAMoG,KAAqB,SAAW,GACjE,OACExG,EAAAtF,EAAAuF,cAAA,WACED,EAAAtF,EAAAuF,cAAA,QAAM2F,SAAUpE,KAAKiE,aAAcwL,IAAK,SAACC,GAAD,OAAOtG,EAAK4F,eAAiBU,IACjElR,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,cACpBF,EAAAtF,EAAAuF,cAAA,SAAOkR,QAAQ,aAAf,SACAnR,EAAAtF,EAAAuF,cAAA,SACEhG,KAAK,OACLqB,GAAG,YACHwK,KAAK,QACL5F,UAAU,eACVkR,YAAY,kBACPtP,MAAOqL,GAAS,GACrB8D,IAAKzP,KAAK8N,aACVzI,SAAUrF,KAAK2N,kBACflJ,SAAS,cAEZjG,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,cACdF,EAAAtF,EAAAuF,cAAA,SAAOkR,QAAQ,WAAf,WACAnR,EAAAtF,EAAAuF,cAAA,YACE3E,GAAG,UACHwK,KAAK,UACL5F,UAAU,eACVkR,YAAY,eACPtP,MAAOsL,GAAW,GACvB6D,IAAKzP,KAAKiO,eACV5I,SAAUrF,KAAK2N,kBACflJ,SAAS,cAEZjG,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,cACCF,EAAAtF,EAAAuF,cAAA,SAAOkR,QAAQ,QAAf,QACAnR,EAAAtF,EAAAuF,cAAA,SACEhG,KAAK,OACLqB,GAAG,OACHwK,KAAK,OACL5F,UAAU,eACVkR,YAAY,YACZtP,MAAOoL,GAAQ,GACfrG,SAAUrF,KAAK2N,kBACflJ,SAAS,cAErBjG,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,cACpBF,EAAAtF,EAAAuF,cAAA,SAAOkR,QAAQ,SACdnR,EAAAtF,EAAAuF,cAAA,SACEhG,KAAK,WACLqB,GAAG,QACHwK,KAAK,QACL5F,UAAU,OACV2G,SAAUrF,KAAK4N,kBACfiC,QAAS7P,KAAK5H,MAAM+V,QAPvB,SAUW3P,EAAAtF,EAAAuF,cAAA,UAAQyE,QAAS,SAACkK,GAASA,EAAMC,iBAAiBjE,EAAKwE,sBAAvD,iBAEZpP,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,cACdF,EAAAtF,EAAAuF,cAAA,SAAOkR,QAAQ,WAAf,gBACAnR,EAAAtF,EAAAuF,cAAA,SACEhG,KAAK,OACLqB,GAAG,UACHwK,KAAK,UACL5F,UAAU,eACV2G,SAAUrF,KAAK2N,kBACflJ,SAAS,WACTnE,MAAO8N,KAGV5P,EAAAtF,EAAAuF,cAAA,UAAQhG,KAAK,SAASiG,UAAU,oBAAhC,QACAF,EAAAtF,EAAAuF,cAAA,UAAQC,UAAS,qBAAArF,OAAuBkW,GAAerM,QAASlD,KAAK6N,WAArE,SACIrP,EAAAtF,EAAAuF,cAAA,UAAQC,UAAS,mBAAArF,OAAqBmW,GAAetM,QAASlD,KAAKkO,YAAnE,mBAlQejN,aC6HR6O,eA/HX,SAAAA,EAAYlR,GAAM,IAAAuD,EAAA,OAAA9K,OAAA0I,EAAA,EAAA1I,CAAA2I,KAAA8P,IACd3N,EAAA9K,OAAA4I,EAAA,EAAA5I,CAAA2I,KAAA3I,OAAA6I,EAAA,EAAA7I,CAAAyY,GAAA1N,KAAApC,KAAMpB,KACDmR,sBAAuB5N,EAAK4N,sBAAsBhE,KAA3B1U,OAAA2U,GAAA,EAAA3U,QAAA2U,GAAA,EAAA3U,CAAA8K,KAC5BA,EAAK/J,MAAQ,CACRsT,KAAM,KACN1G,KAAM,KACNgL,aAAa,GANJ7N,qFAUI+K,GAClBlN,KAAKsC,SAAS,CACV0C,KAAMkI,qCAGLxB,GACP,IAAM9C,EAAQ,cAAAvP,OAAiBqS,EAAjB,KACVgB,EAAW1M,KACX2M,EAAgB,CAChBC,OAAQ,MACRnP,QAAS,CACLkL,eAAgB,qBAIlBkE,EAAYC,KAAOC,KAAK,kBACZxU,IAAdsU,IACAF,EAAa,YAAkB,UAC/BA,EAAa,QAAY,eAAiBE,GAG9ChE,MAAMD,EAAU+D,GACfhP,KAAK,SAASC,GAIX,OAHwB,MAApBA,EAASpD,QACTuD,QAAQC,IAAI,kBAETJ,EAASmL,SACjBpL,KAAK,SAASqP,GACTA,EAAa3R,OACbqR,EAASpK,SAAS,CACd0N,aAAa,EACbhL,KAAM,OAGb0H,EAASpK,SAAS,CACX0N,aAAa,EACbhL,KAAMgI,MAGflP,MAAM,SAASjC,GACdkC,QAAQC,IAAI,QAASnC,iDASvB,GAJAmE,KAAKsC,SAAS,CACNoJ,KAAM,KACN1G,KAAM,OAEVhF,KAAKpB,MAAMsH,MAAM,KACVwF,EAAQ1L,KAAKpB,MAAMsH,MAAMC,OAAzBuF,KACP1L,KAAKsC,SAAS,CACVoJ,KAAMA,EACNsE,aAAa,IAEjBhQ,KAAKiQ,SAASvE,qCA8Bd,IACGsE,EAAehQ,KAAK5H,MAApB4X,YAEAhL,EAAQhF,KAAK5H,MAAb4M,KACP,OACExG,EAAAtF,EAAAuF,cAAA,YACoB,IAAhBuR,EAAwBxR,EAAAtF,EAAAuF,cAAA,WACb,OAATuG,EAAiB,YACjBxG,EAAAtF,EAAAuF,cAAA,WACED,EAAAtF,EAAAuF,cAAA,KAAGC,UAAU,QAAOF,EAAAtF,EAAAuF,cAACoC,EAAA,EAAD,CAChBC,GAAI,CAACC,SAAQ,gBACb3I,MAAO,CAAC4I,eAAe,KAFP,SAMF,IAAfgE,EAAKkL,MAAiB1R,EAAAtF,EAAAuF,cAACoC,EAAA,EAAD,CAAMC,GAAI,CAC/BC,SAAQ,uBACR3I,MAAO,CAAE4I,eAAe,KAFH,eAGC,IAE1BxC,EAAAtF,EAAAuF,cAAA,UAAKuG,EAAK0G,MACVlN,EAAAtF,EAAAuF,cAAA,UAAKuG,EAAK2G,QACM,IAAf3G,EAAKkL,MAAiB1R,EAAAtF,EAAAuF,cAAC0R,GAAD,CAAUnL,KAAMA,EAAMoL,gBAAiBpQ,KAAK+P,wBAA4B,KAI5F,qBA1HI9O,aCgBVoP,oLAhBX,OACE7R,EAAAtF,EAAAuF,cAAA,WACCD,EAAAtF,EAAAuF,cAACoC,EAAA,EAAD,CACGC,GAAI,CAACC,SAAQ,gBACb3I,MAAO,CAAC4I,eAAe,KAF1B,QAMAxC,EAAAtF,EAAAuF,cAAA,yBACED,EAAAtF,EAAAuF,cAAC0R,GAAD,cAZgBlP,aCFZqP,GAAa,SAAC7D,GACvB,OAAO,SAACpP,EAAUC,GACd,IAAIG,EAAU,CAACkL,eAAgB,oBAC1B/P,EAAS0E,IAAWnF,KAApBS,MACDgQ,EAAW,uBAEMrQ,IAAjBkU,GAA+C,OAAjBA,IAChC7D,EAAW6D,GAET7T,IACA6E,EAAO,cAAP,SAAApE,OAAoCT,IATb,IAWtBG,EAASuE,IAATvE,MACL,OAAO8P,MAAMD,EAAU,CAACnL,YACnBE,KAAK,SAAAmL,GACF,GAAIA,EAAItO,OAAS,IACb,OAAOsO,EAAIC,OAAOpL,KAAK,SAAAE,GACnB,MAAO,CAACrD,OAAQsO,EAAItO,OAAQqD,UAKhC,MAFA+B,QAAM/D,MAAM,kCACZkC,QAAQC,IAAI,iBACN8K,IAKbnL,KAAK,SAAAmL,GACF,GAAmB,MAAfA,EAAItO,OACJ,OAAO6C,EAAS,CAAC5E,KAAM,cAAeM,MAAOA,EAAMsF,KAAKyK,EAAIjL,MAAOpG,SAAS,IACzE,GAAmB,MAAfqR,EAAItO,QAAiC,MAAfsO,EAAItO,OAGjC,MAFAoF,QAAM/D,MAAM,0BACZwB,EAAS,CAAC5E,KAAM,uBAAwBoF,KAAMiL,EAAIjL,OAC5CiL,EAAIjL,yFC1BjB0S,WAAb,SAAAzQ,GAAA,SAAAyQ,IAAA,OAAAlZ,OAAA0I,EAAA,EAAA1I,CAAA2I,KAAAuQ,GAAAlZ,OAAA4I,EAAA,EAAA5I,CAAA2I,KAAA3I,OAAA6I,EAAA,EAAA7I,CAAAkZ,GAAApQ,MAAAH,KAAA3H,YAAA,OAAAhB,OAAA+I,EAAA,EAAA/I,CAAAkZ,EAAAzQ,GAAAzI,OAAAgJ,EAAA,EAAAhJ,CAAAkZ,EAAA,EAAAnS,IAAA,SAAAkC,MAAA,WACW,IAAA6B,EAAAnC,KAAAO,EACyCP,KAAKpB,MAA7C4R,EADDjQ,EACCiQ,YAAalW,EADdiG,EACcjG,KAAMb,EADpB8G,EACoB9G,MAAOK,EAD3ByG,EAC2BzG,GAAI2W,EAD/BlQ,EAC+BkQ,OAEtC,OACEjS,EAAAtF,EAAAuF,cAAA,WACED,EAAAtF,EAAAuF,cAACiS,GAAA,EAAD,CAAOtN,OAAQoN,EAAaC,OAAQA,GAChCjS,EAAAtF,EAAAuF,cAACkS,GAAA,EAAD,CAAa3O,MAAM,QAAnB,iBACAxD,EAAAtF,EAAAuF,cAACmS,GAAA,EAAD,eAAkBpS,EAAAtF,EAAAuF,cAAA,SAAInE,GAAtB,cACAkE,EAAAtF,EAAAuF,cAACoS,GAAA,EAAD,KACErS,EAAAtF,EAAAuF,cAACqS,GAAA,EAAD,CAAWC,KAAG,GACdvS,EAAAtF,EAAAuF,cAACkG,GAAA,EAAD,CAAQjG,UAAU,YAAYsD,MAAM,OAAOkB,QAAS,kBAAMf,EAAKvD,MAAMoS,kBAAkBvX,EAAOK,KAAK0E,EAAAtF,EAAAuF,cAACoD,EAAA,EAAD,CAAiBC,KAAMmP,IAASjP,MAAM,WACzIxD,EAAAtF,EAAAuF,cAACkG,GAAA,EAAD,CAAQjG,UAAU,YAAYwE,QAASuN,GAAvC,kBAZdF,EAAA,CAAiCtP,kCCJpBiQ,GAAb,SAAApR,GAAA,SAAAoR,IAAA,OAAA7Z,OAAA0I,EAAA,EAAA1I,CAAA2I,KAAAkR,GAAA7Z,OAAA4I,EAAA,EAAA5I,CAAA2I,KAAA3I,OAAA6I,EAAA,EAAA7I,CAAA6Z,GAAA/Q,MAAAH,KAAA3H,YAAA,OAAAhB,OAAA+I,EAAA,EAAA/I,CAAA6Z,EAAApR,GAAAzI,OAAAgJ,EAAA,EAAAhJ,CAAA6Z,EAAA,EAAA9S,IAAA,SAAAkC,MAAA,WACW,IAAAC,EACkBP,KAAKpB,MAAtBtE,EADDiG,EACCjG,KAAMkB,EADP+E,EACO/E,OACd,OACEgD,EAAAtF,EAAAuF,cAAA,WACED,EAAAtF,EAAAuF,cAACqS,GAAA,EAAD,KACEtS,EAAAtF,EAAAuF,cAAC0S,GAAA,EAAD,aAAY3S,EAAAtF,EAAAuF,cAAA,QAAMC,UAAU,eAAhB,MACZF,EAAAtF,EAAAuF,cAAC2S,GAAA,EAAD,CACE9M,KAAK,OACLhE,MAAOhG,GAAQ,GACfsV,YAAY,gBACZvK,SAAUrF,KAAKpB,MAAMyS,cACrB5M,UAAQ,IACPjJ,EAAOlB,KAAOkE,EAAAtF,EAAAuF,cAAC6S,GAAA,EAAD,CAAUtP,MAAM,UAAUxG,EAAOlB,MAAkB,SAb9E4W,EAAA,CAA+BjQ,aAoBlBsQ,GAAb,SAAApQ,GAAA,SAAAoQ,IAAA,OAAAla,OAAA0I,EAAA,EAAA1I,CAAA2I,KAAAuR,GAAAla,OAAA4I,EAAA,EAAA5I,CAAA2I,KAAA3I,OAAA6I,EAAA,EAAA7I,CAAAka,GAAApR,MAAAH,KAAA3H,YAAA,OAAAhB,OAAA+I,EAAA,EAAA/I,CAAAka,EAAApQ,GAAA9J,OAAAgJ,EAAA,EAAAhJ,CAAAka,EAAA,EAAAnT,IAAA,SAAAkC,MAAA,WACW,IAAAc,EACmBpB,KAAKpB,MAAvBrE,EADD6G,EACC7G,MAAOiB,EADR4F,EACQ5F,OACf,OACEgD,EAAAtF,EAAAuF,cAAA,WACED,EAAAtF,EAAAuF,cAACqS,GAAA,EAAD,KACEtS,EAAAtF,EAAAuF,cAAC0S,GAAA,EAAD,cAAa3S,EAAAtF,EAAAuF,cAAA,QAAMC,UAAU,eAAhB,MACbF,EAAAtF,EAAAuF,cAAC2S,GAAA,EAAD,CACE9M,KAAK,QACLhE,MAAO/F,GAAS,GAChBqV,YAAY,iBACZvK,SAAUrF,KAAKpB,MAAMyS,cACrB5M,UAAQ,IACPjJ,EAAOjB,MAAQiE,EAAAtF,EAAAuF,cAAC6S,GAAA,EAAD,CAAUtP,MAAM,UAAUxG,EAAOjB,OAAmB,SAbhFgX,EAAA,CAAgCtQ,aAoBnBuQ,GAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAna,OAAA0I,EAAA,EAAA1I,CAAA2I,KAAAwR,GAAAna,OAAA4I,EAAA,EAAA5I,CAAA2I,KAAA3I,OAAA6I,EAAA,EAAA7I,CAAAma,GAAArR,MAAAH,KAAA3H,YAAA,OAAAhB,OAAA+I,EAAA,EAAA/I,CAAAma,EAAAC,GAAApa,OAAAgJ,EAAA,EAAAhJ,CAAAma,EAAA,EAAApT,IAAA,SAAAkC,MAAA,WACW,IAAAoR,EACmB1R,KAAKpB,MAAvBjE,EADD+W,EACC/W,MAAOa,EADRkW,EACQlW,OACf,OACEgD,EAAAtF,EAAAuF,cAAA,WACED,EAAAtF,EAAAuF,cAACqS,GAAA,EAAD,KACEtS,EAAAtF,EAAAuF,cAAC0S,GAAA,EAAD,cAAa3S,EAAAtF,EAAAuF,cAAA,QAAMC,UAAU,eAAhB,MACbF,EAAAtF,EAAAuF,cAAC2S,GAAA,EAAD,CACE9M,KAAK,QACLhE,MAAO3F,GAAS,GAChBiV,YAAY,iBACZvK,SAAUrF,KAAKpB,MAAMyS,cACrB5M,UAAQ,IACPjJ,EAAOb,MAAQ6D,EAAAtF,EAAAuF,cAAC6S,GAAA,EAAD,CAAUtP,MAAM,UAAUxG,EAAOb,OAAmB,SAbhF6W,EAAA,CAAgCvQ,aAmBnB0Q,GAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAta,OAAA0I,EAAA,EAAA1I,CAAA2I,KAAA2R,GAAAta,OAAA4I,EAAA,EAAA5I,CAAA2I,KAAA3I,OAAA6I,EAAA,EAAA7I,CAAAsa,GAAAxR,MAAAH,KAAA3H,YAAA,OAAAhB,OAAA+I,EAAA,EAAA/I,CAAAsa,EAAAC,GAAAva,OAAAgJ,EAAA,EAAAhJ,CAAAsa,EAAA,EAAAvT,IAAA,SAAAkC,MAAA,WACW,IAAAuR,EAC8B7R,KAAKpB,MAAlChE,EADDiX,EACCjX,iBAAkBY,EADnBqW,EACmBrW,OAC1B,OACEgD,EAAAtF,EAAAuF,cAAA,WACED,EAAAtF,EAAAuF,cAACqS,GAAA,EAAD,KACEtS,EAAAtF,EAAAuF,cAAC0S,GAAA,EAAD,iBAAgB3S,EAAAtF,EAAAuF,cAAA,QAAMC,UAAU,eAAhB,MAChBF,EAAAtF,EAAAuF,cAAC2S,GAAA,EAAD,CACE9M,KAAK,mBACLhE,MAAO1F,GAAoB,GAC3BgV,YAAY,wBACZvK,SAAUrF,KAAKpB,MAAMyS,cACrB5M,UAAQ,IACPjJ,EAAOZ,iBAAmB4D,EAAAtF,EAAAuF,cAAC6S,GAAA,EAAD,CAAUtP,MAAM,UAAUxG,EAAOZ,kBAA8B,SAbtG+W,EAAA,CAAmC1Q,aAoBtB6Q,GAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAza,OAAA0I,EAAA,EAAA1I,CAAA2I,KAAA8R,GAAAza,OAAA4I,EAAA,EAAA5I,CAAA2I,KAAA3I,OAAA6I,EAAA,EAAA7I,CAAAya,GAAA3R,MAAAH,KAAA3H,YAAA,OAAAhB,OAAA+I,EAAA,EAAA/I,CAAAya,EAAAC,GAAA1a,OAAAgJ,EAAA,EAAAhJ,CAAAya,EAAA,EAAA1T,IAAA,SAAAkC,MAAA,WACW,IAAA0R,EACqBhS,KAAKpB,MAAzB/D,EADDmX,EACCnX,QAASW,EADVwW,EACUxW,OACjB,OACEgD,EAAAtF,EAAAuF,cAAA,WACED,EAAAtF,EAAAuF,cAACqS,GAAA,EAAD,KACEtS,EAAAtF,EAAAuF,cAAC0S,GAAA,EAAD,gBACA3S,EAAAtF,EAAAuF,cAAC2S,GAAA,EAAD,CACE9M,KAAK,UACLhE,MAAOzF,GAAW,GAClB+U,YAAY,uBACZvK,SAAUrF,KAAKpB,MAAMyS,gBAEpB7V,EAAOX,QAAU2D,EAAAtF,EAAAuF,cAAC6S,GAAA,EAAD,CAAUtP,MAAM,UAAUxG,EAAOX,SAAqB,SAbpFiX,EAAA,CAAkC7Q,aAmBrBgR,GAAb,SAAAC,GAAA,SAAAD,IAAA,OAAA5a,OAAA0I,EAAA,EAAA1I,CAAA2I,KAAAiS,GAAA5a,OAAA4I,EAAA,EAAA5I,CAAA2I,KAAA3I,OAAA6I,EAAA,EAAA7I,CAAA4a,GAAA9R,MAAAH,KAAA3H,YAAA,OAAAhB,OAAA+I,EAAA,EAAA/I,CAAA4a,EAAAC,GAAA7a,OAAAgJ,EAAA,EAAAhJ,CAAA4a,EAAA,EAAA7T,IAAA,SAAAkC,MAAA,WACW,IAAA6R,EAC4BnS,KAAKpB,MAAhC9D,EADDqX,EACCrX,eAAgBU,EADjB2W,EACiB3W,OACxB,OACEgD,EAAAtF,EAAAuF,cAAA,WACED,EAAAtF,EAAAuF,cAACqS,GAAA,EAAD,KACEtS,EAAAtF,EAAAuF,cAAC0S,GAAA,EAAD,uBACA3S,EAAAtF,EAAAuF,cAAC2S,GAAA,EAAD,CACE9M,KAAK,iBACLhE,MAAOxF,GAAkB,GACzB8U,YAAY,0BACZvK,SAAUrF,KAAKpB,MAAMyS,cACrB5Y,KAAK,aAEJ+C,EAAOV,eAAiB0D,EAAAtF,EAAAuF,cAAC6S,GAAA,EAAD,CAAUtP,MAAM,UAAUxG,EAAOV,gBAA4B,SAdlGmX,EAAA,CAAyChR,aC/F5BmR,GAAb,SAAAtS,GAAA,SAAAsS,IAAA,OAAA/a,OAAA0I,EAAA,EAAA1I,CAAA2I,KAAAoS,GAAA/a,OAAA4I,EAAA,EAAA5I,CAAA2I,KAAA3I,OAAA6I,EAAA,EAAA7I,CAAA+a,GAAAjS,MAAAH,KAAA3H,YAAA,OAAAhB,OAAA+I,EAAA,EAAA/I,CAAA+a,EAAAtS,GAAAzI,OAAAgJ,EAAA,EAAAhJ,CAAA+a,EAAA,EAAAhU,IAAA,SAAAkC,MAAA,WACW,IACC7F,EAAiBuF,KAAKpB,MAAtBnE,aACR,OACE+D,EAAAtF,EAAAuF,cAAA,WACED,EAAAtF,EAAAuF,cAACqS,GAAA,EAAD,KACItS,EAAAtF,EAAAuF,cAAC0S,GAAA,EAAD,mBAAkB3S,EAAAtF,EAAAuF,cAACoD,EAAA,EAAD,CAAiBC,KAAMuQ,IAAQrQ,MAAQvH,EAAwB,OAAT,UAAxE,gBAAuG+D,EAAAtF,EAAAuF,cAACoD,EAAA,EAAD,CAAiBC,KAAMwQ,IAAStQ,MAAOvH,EAAe,QAAS,UACtK+D,EAAAtF,EAAAuF,cAACkG,GAAA,EAAD,CAAQjG,UAAU,gBAAgBwE,QAASlD,KAAKpB,MAAM2T,6BAA8BC,OAAQ/X,GAAeA,EAAe,uBAAyB,6BAP/J2X,EAAA,CAAoCnR,aCAvBwR,GAAb,SAAA3S,GAAA,SAAA2S,IAAA,OAAApb,OAAA0I,EAAA,EAAA1I,CAAA2I,KAAAyS,GAAApb,OAAA4I,EAAA,EAAA5I,CAAA2I,KAAA3I,OAAA6I,EAAA,EAAA7I,CAAAob,GAAAtS,MAAAH,KAAA3H,YAAA,OAAAhB,OAAA+I,EAAA,EAAA/I,CAAAob,EAAA3S,GAAAzI,OAAAgJ,EAAA,EAAAhJ,CAAAob,EAAA,EAAArU,IAAA,SAAAkC,MAAA,WACW,IAAAC,EACgCP,KAAKpB,MAApCpE,EADD+F,EACC/F,OAAQqJ,EADTtD,EACSsD,SAAUnJ,EADnB6F,EACmB7F,SAC1B,OACE8D,EAAAtF,EAAAuF,cAAA,WACc,cAAXjE,GAA0BqJ,EACzBrF,EAAAtF,EAAAuF,cAACqS,GAAA,EAAD,KACItS,EAAAtF,EAAAuF,cAAC0S,GAAA,EAAD,YAAW3S,EAAAtF,EAAAuF,cAACoD,EAAA,EAAD,CAAiBC,KAAM4Q,IAAkB1Q,MAAQtH,EAAoB,OAAT,UAAvE,YAAkG8D,EAAAtF,EAAAuF,cAACoD,EAAA,EAAD,CAAiBC,KAAM6Q,IAAe3Q,MAAOtH,EAAW,QAAS,UACnK8D,EAAAtF,EAAAuF,cAACkG,GAAA,EAAD,CAAQjG,UAAU,gBAAgBwE,QAASlD,KAAKpB,MAAMgU,4BAA6BJ,OAAQ9X,GAAWA,EAAW,gBAAkB,oBAErI,UAVZ+X,EAAA,CAAqCxR,qDCDxB4R,GAAb,SAAA/S,GAAA,SAAA+S,IAAA,OAAAxb,OAAA0I,EAAA,EAAA1I,CAAA2I,KAAA6S,GAAAxb,OAAA4I,EAAA,EAAA5I,CAAA2I,KAAA3I,OAAA6I,EAAA,EAAA7I,CAAAwb,GAAA1S,MAAAH,KAAA3H,YAAA,OAAAhB,OAAA+I,EAAA,EAAA/I,CAAAwb,EAAA/S,GAAAzI,OAAAgJ,EAAA,EAAAhJ,CAAAwb,EAAA,EAAAzU,IAAA,SAAAkC,MAAA,WACW,IAAAC,EAC0BP,KAAKpB,MAA9BpE,EADD+F,EACC/F,OAAQsY,EADTvS,EACSuS,aAChB,OACEtU,EAAAtF,EAAAuF,cAAA,WACED,EAAAtF,EAAAuF,cAACqS,GAAA,EAAD,KACEtS,EAAAtF,EAAAuF,cAAC0S,GAAA,EAAD,eACA3S,EAAAtF,EAAAuF,cAACsU,GAAA,EAAD,CAAUrU,UAAU,aAAa0E,OAAQ0P,EAAcrC,OAAQzQ,KAAKpB,MAAMoU,UACxExU,EAAAtF,EAAAuF,cAACwU,GAAA,EAAD,CAAgBvU,UAAU,YAAYwU,OAAK,GACxC1Y,GAAU,IAEbgE,EAAAtF,EAAAuF,cAAC0U,GAAA,EAAD,CAAczU,UAAU,aACtBF,EAAAtF,EAAAuF,cAAC2U,GAAA,EAAD,CAAclQ,QAASlD,KAAKpB,MAAMyU,eAAlC,aACA7U,EAAAtF,EAAAuF,cAAC2U,GAAA,EAAD,CAAclQ,QAASlD,KAAKpB,MAAMyU,eAAlC,aACA7U,EAAAtF,EAAAuF,cAAC2U,GAAA,EAAD,CAAclQ,QAASlD,KAAKpB,MAAMyU,eAAlC,aACA7U,EAAAtF,EAAAuF,cAAC2U,GAAA,EAAD,CAAclQ,QAASlD,KAAKpB,MAAMyU,eAAlC,oBAfdR,EAAA,CAAoC5R,aCEvBqS,GAAb,SAAAxT,GAAA,SAAAwT,IAAA,OAAAjc,OAAA0I,EAAA,EAAA1I,CAAA2I,KAAAsT,GAAAjc,OAAA4I,EAAA,EAAA5I,CAAA2I,KAAA3I,OAAA6I,EAAA,EAAA7I,CAAAic,GAAAnT,MAAAH,KAAA3H,YAAA,OAAAhB,OAAA+I,EAAA,EAAA/I,CAAAic,EAAAxT,GAAAzI,OAAAgJ,EAAA,EAAAhJ,CAAAic,EAAA,EAAAlV,IAAA,SAAAkC,MAAA,WACW,IAAAC,EAOHP,KAAKpB,MANDtE,EADDiG,EACCjG,KAAMC,EADPgG,EACOhG,MAAOI,EADd4F,EACc5F,MACnBC,EAFK2F,EAEL3F,iBAAkBC,EAFb0F,EAEa1F,QAClBC,EAHKyF,EAGLzF,eAAgBL,EAHX8F,EAGW9F,aAChBoJ,EAJKtD,EAILsD,SAAUnJ,EAJL6F,EAIK7F,SAAUoY,EAJfvS,EAIeuS,aACpBtY,EALK+F,EAKL/F,OAAQ+Y,EALHhT,EAKGgT,aACR/X,EANK+E,EAML/E,OAGF,OACEgD,EAAAtF,EAAAuF,cAAA,WACED,EAAAtF,EAAAuF,cAAC+U,GAAD,CACEnC,cAAerR,KAAKpB,MAAMyS,cAC1B/W,KAAMA,EACNkB,OAAQA,IAEVgD,EAAAtF,EAAAuF,cAACgV,GAAD,CACEpC,cAAerR,KAAKpB,MAAMyS,cAC1B9W,MAAOA,EACPiB,OAAQA,IAEVgD,EAAAtF,EAAAuF,cAACiV,GAAD,CACErC,cAAerR,KAAKpB,MAAMyS,cAC1B1W,MAAOA,EACPa,OAAQA,IAEVgD,EAAAtF,EAAAuF,cAACkV,GAAD,CACEtC,cAAerR,KAAKpB,MAAMyS,cAC1BzW,iBAAkBA,EAClBY,OAAQA,IAEVgD,EAAAtF,EAAAuF,cAACmV,GAAD,CACEvC,cAAerR,KAAKpB,MAAMyS,cAC1BxW,QAASA,EACTW,OAAQA,IAEVgD,EAAAtF,EAAAuF,cAACoV,GAAD,CACExC,cAAerR,KAAKpB,MAAMyS,cAC1BvW,eAAgBA,EAChBU,OAAQA,IAGVgD,EAAAtF,EAAAuF,cAACqV,GAAD,CACEvB,6BAA8BvS,KAAKpB,MAAM2T,6BACzC9X,aAAcA,IAEE,OAAjB8Y,EACD/U,EAAAtF,EAAAuF,cAACsV,GAAD,CACEV,cAAerT,KAAKpB,MAAMyU,cAC1BL,SAAUhT,KAAKpB,MAAMoU,SACrBxY,OAAQA,EACRsY,aAAcA,IACb,KACe,OAAjBS,GAAkC,cAAT/Y,GAAwBqJ,EAChDrF,EAAAtF,EAAAuF,cAACuV,GAAD,CACEpB,4BAA6B5S,KAAKpB,MAAMgU,4BACxCpY,OAAQA,EACRqJ,SAAUA,EACVnJ,SAAUA,IAEZ,UA7DV4Y,EAAA,CAA2CrS,aCD9BgT,GAAb,SAAAnU,GAAA,SAAAmU,IAAA,IAAAC,EAAA/R,EAAA9K,OAAA0I,EAAA,EAAA1I,CAAA2I,KAAAiU,GAAA,QAAAE,EAAA9b,UAAAC,OAAA8b,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAAjc,UAAAic,GAAA,OAAAnS,EAAA9K,OAAA4I,EAAA,EAAA5I,CAAA2I,MAAAkU,EAAA7c,OAAA6I,EAAA,EAAA7I,CAAA4c,IAAA7R,KAAAjC,MAAA+T,EAAA,CAAAlU,MAAA3G,OAAA+a,MAEEhc,MAAQ,CAAEmc,MAAO,GAAIC,kBAAkB,EAAOC,WAAY,IAF5DtS,EAIEuS,uBAAyB,SAACC,GAExB,IAAIJ,EAAKld,OAAAiC,EAAA,EAAAjC,CAAO8K,EAAK/J,MAAMmc,OACvBK,EAAe,IAAID,EACnBH,GAAmB,EAGvB,GAA4B,MAAxBG,EAAUE,OAAO,GAAW,CAC9B,IAAIpb,EAAQ8a,EAAMO,QAAQH,EAAUpb,MAAM,EAAGob,EAAUrc,UAExC,IAAXmB,GACF8a,EAAMxZ,OAAOtB,EAAO,QAItB,GAAI8a,EAAMQ,SAASJ,GAAW,CAC5B,IAAIlb,EAAQ8a,EAAMO,QAAQH,IACX,IAAXlb,IACF8a,EAAMxZ,OAAOtB,EAAO,GACpB8a,EAAMxZ,OAAOtB,EAAO,EAAGmb,SAEpB,GAAIL,EAAMQ,SAASH,GAAe,CACvC,IAAInb,EAAQ8a,EAAMO,QAAQF,IACX,IAAXnb,IACF8a,EAAMxZ,OAAOtB,EAAO,GACpB8a,EAAMxZ,OAAOtB,EAAO,EAAGkb,SAGzBJ,EAAMlW,KAAKsW,GASf,GALIJ,EAAMjc,OAAS,IACjBkc,GAAmB,GAIjBD,EAAMQ,SAAS,WAA0B,IAAfR,EAAMjc,OAGlCic,EAAMlW,KAAK,WACN,CAEL,IAAI5E,EAAQ8a,EAAMO,QAAQ,QACX,IAAXrb,GACF8a,EAAMxZ,OAAOtB,EAAO,GAKxB0I,EAAKG,SAAS,CAACkS,iBAAkBA,EAAkBC,WAAY,GAAIF,SAAQ,WAEvEvU,KAAKpB,MAAMoW,aAAahV,KAAK5H,UAxDrC+J,EAAA,OAAA9K,OAAA+I,EAAA,EAAA/I,CAAA4c,EAAAnU,GAAAzI,OAAAgJ,EAAA,EAAAhJ,CAAA4c,EAAA,EAAA7V,IAAA,SAAAkC,MAAA,WA4DW,IAAA8I,EAAApJ,KAEAuU,EAASvU,KAAK5H,MAAdmc,MAEP,OACM/V,EAAAtF,EAAAuF,cAAA,aACED,EAAAtF,EAAAuF,cAAA,UACED,EAAAtF,EAAAuF,cAAA,MAAIC,UAAU,oBAAd,KACAF,EAAAtF,EAAAuF,cAAA,MAAIC,UAAU,yBAAwBF,EAAAtF,EAAAuF,cAACoD,EAAA,EAAD,CAAiBC,KAAMuQ,IAAQrQ,MAAM,UAA3E,MAAuFxD,EAAAtF,EAAAuF,cAACoD,EAAA,EAAD,CAAiBC,KAAMwQ,IAAStQ,MAAM,WAC7HxD,EAAAtF,EAAAuF,cAAA,UACED,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,4BACbF,EAAAtF,EAAAuF,cAAA,qBACAD,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,qCACbF,EAAAtF,EAAAuF,cAACkG,GAAA,EAAD,CAAQ3C,MAAM,OAAOkB,QAAS,kBAAMkG,EAAKsL,uBAAuB,UAC/DH,EAAMQ,SAAS,QAAUvW,EAAAtF,EAAAuF,cAACoD,EAAA,EAAD,CAAiBC,KAAMmT,IAAoBjT,MAAM,UAC1EuS,EAAMQ,SAAS,SAAWvW,EAAAtF,EAAAuF,cAACoD,EAAA,EAAD,CAAiBsG,SAAU,IAAKrG,KAAMmT,IAAoBjT,MAAM,UAC1FxD,EAAAtF,EAAAuF,cAACoD,EAAA,EAAD,CAAiBsG,SAAU,GAAIrG,KAAMoT,IAAelT,MAAM,UAC1DuS,EAAMQ,SAAS,QAAUvW,EAAAtF,EAAAuF,cAACkG,GAAA,EAAD,CAAQ3C,MAAM,OAAOtD,UAAU,kBAAkBwE,QAAS,kBAAMkG,EAAKsL,uBAAuB,WAAUlW,EAAAtF,EAAAuF,cAACoD,EAAA,EAAD,CAAiBC,KAAMqT,IAASnT,MAAM,WACrKuS,EAAMQ,SAAS,SAAWvW,EAAAtF,EAAAuF,cAACkG,GAAA,EAAD,CAAQ3C,MAAM,OAAOtD,UAAU,kBAAkBwE,QAAS,kBAAMkG,EAAKsL,uBAAuB,YAAWlW,EAAAtF,EAAAuF,cAACoD,EAAA,EAAD,CAAiBC,KAAMqT,IAASnT,MAAM,WACvK,MAIPxD,EAAAtF,EAAAuF,cAAA,UACED,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,4BACbF,EAAAtF,EAAAuF,cAAA,oBACAD,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,qCACbF,EAAAtF,EAAAuF,cAACkG,GAAA,EAAD,CAAQ3C,MAAM,OAAOkB,QAAS,kBAAMkG,EAAKsL,uBAAuB,WAC/DH,EAAMQ,SAAS,SAAWvW,EAAAtF,EAAAuF,cAACoD,EAAA,EAAD,CAAiBC,KAAMmT,IAAoBjT,MAAM,UAC3EuS,EAAMQ,SAAS,UAAYvW,EAAAtF,EAAAuF,cAACoD,EAAA,EAAD,CAAiBsG,SAAU,IAAKrG,KAAMmT,IAAoBjT,MAAM,UAC3FxD,EAAAtF,EAAAuF,cAACoD,EAAA,EAAD,CAAiBsG,SAAU,GAAIrG,KAAMoT,IAAelT,MAAM,UAC1DuS,EAAMQ,SAAS,SAAWvW,EAAAtF,EAAAuF,cAACkG,GAAA,EAAD,CAAQ3C,MAAM,OAAOtD,UAAU,kBAAkBwE,QAAS,kBAAMkG,EAAKsL,uBAAuB,YAAWlW,EAAAtF,EAAAuF,cAACoD,EAAA,EAAD,CAAiBC,KAAMqT,IAASnT,MAAM,WACvKuS,EAAMQ,SAAS,UAAYvW,EAAAtF,EAAAuF,cAACkG,GAAA,EAAD,CAAQ3C,MAAM,OAAOtD,UAAU,kBAAkBwE,QAAS,kBAAMkG,EAAKsL,uBAAuB,aAAYlW,EAAAtF,EAAAuF,cAACoD,EAAA,EAAD,CAAiBC,KAAMqT,IAASnT,MAAM,WACzK,MAIPxD,EAAAtF,EAAAuF,cAAA,MAAIC,UAAU,sBAAd,SACAF,EAAAtF,EAAAuF,cAAA,UACED,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,4BACbF,EAAAtF,EAAAuF,cAAA,uBACAD,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,qCACbF,EAAAtF,EAAAuF,cAACkG,GAAA,EAAD,CAAQ3C,MAAM,OAAOkB,QAAS,kBAAMkG,EAAKsL,uBAAuB,YAC/DH,EAAMQ,SAAS,UAAYvW,EAAAtF,EAAAuF,cAACoD,EAAA,EAAD,CAAiBC,KAAMmT,IAAoBjT,MAAM,UAC5EuS,EAAMQ,SAAS,WAAavW,EAAAtF,EAAAuF,cAACoD,EAAA,EAAD,CAAiBsG,SAAU,IAAKrG,KAAMmT,IAAoBjT,MAAM,UAC5FxD,EAAAtF,EAAAuF,cAACoD,EAAA,EAAD,CAAiBsG,SAAU,GAAIrG,KAAMoT,IAAelT,MAAM,UAC1DuS,EAAMQ,SAAS,UAAYvW,EAAAtF,EAAAuF,cAACkG,GAAA,EAAD,CAAQ3C,MAAM,OAAOtD,UAAU,kBAAkBwE,QAAS,kBAAMkG,EAAKsL,uBAAuB,aAAYlW,EAAAtF,EAAAuF,cAACoD,EAAA,EAAD,CAAiBC,KAAMqT,IAASnT,MAAM,WACzKuS,EAAMQ,SAAS,WAAavW,EAAAtF,EAAAuF,cAACkG,GAAA,EAAD,CAAQ3C,MAAM,OAAOtD,UAAU,kBAAkBwE,QAAS,kBAAMkG,EAAKsL,uBAAuB,cAAalW,EAAAtF,EAAAuF,cAACoD,EAAA,EAAD,CAAiBC,KAAMqT,IAASnT,MAAM,WAC3K,MAIPxD,EAAAtF,EAAAuF,cAAA,UACED,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,6BACbF,EAAAtF,EAAAuF,cAAA,QAAMC,UAAU,qCAAhB,YACAF,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,qCACbF,EAAAtF,EAAAuF,cAACkG,GAAA,EAAD,CAAQ3C,MAAM,OAAOkB,QAAS,kBAAMkG,EAAKsL,uBAAuB,cAC/DH,EAAMQ,SAAS,YAAcvW,EAAAtF,EAAAuF,cAACoD,EAAA,EAAD,CAAiBC,KAAMmT,IAAoBjT,MAAM,UAC9EuS,EAAMQ,SAAS,aAAevW,EAAAtF,EAAAuF,cAACoD,EAAA,EAAD,CAAiBsG,SAAU,IAAKrG,KAAMmT,IAAoBjT,MAAM,UAC9FxD,EAAAtF,EAAAuF,cAACoD,EAAA,EAAD,CAAiBsG,SAAU,GAAIrG,KAAMoT,IAAelT,MAAM,UAC1DuS,EAAMQ,SAAS,YAAcvW,EAAAtF,EAAAuF,cAACkG,GAAA,EAAD,CAAQ3C,MAAM,OAAOtD,UAAU,kBAAkBwE,QAAS,kBAAMkG,EAAKsL,uBAAuB,eAAclW,EAAAtF,EAAAuF,cAACoD,EAAA,EAAD,CAAiBC,KAAMqT,IAASnT,MAAM,WAC7KuS,EAAMQ,SAAS,aAAevW,EAAAtF,EAAAuF,cAACkG,GAAA,EAAD,CAAQ3C,MAAM,OAAOtD,UAAU,kBAAkBwE,QAAS,kBAAMkG,EAAKsL,uBAAuB,gBAAelW,EAAAtF,EAAAuF,cAACoD,EAAA,EAAD,CAAiBC,KAAMqT,IAASnT,MAAM,WAC/K,MAIPxD,EAAAtF,EAAAuF,cAAA,0BA9HdwV,EAAA,CAAyChT,aCC5BmU,GAAb,SAAAtV,GAAA,SAAAsV,IAAA,OAAA/d,OAAA0I,EAAA,EAAA1I,CAAA2I,KAAAoV,GAAA/d,OAAA4I,EAAA,EAAA5I,CAAA2I,KAAA3I,OAAA6I,EAAA,EAAA7I,CAAA+d,GAAAjV,MAAAH,KAAA3H,YAAA,OAAAhB,OAAA+I,EAAA,EAAA/I,CAAA+d,EAAAtV,GAAAzI,OAAAgJ,EAAA,EAAAhJ,CAAA+d,EAAA,EAAAhX,IAAA,SAAAkC,MAAA,WAEW,IAAA6B,EAAAnC,KAAAO,EACiBP,KAAKpB,MAArBoG,EADDzE,EACCyE,KAAMvL,EADP8G,EACO9G,MAEd,OACI+E,EAAAtF,EAAAuF,cAAA,SAAOL,IAAK3E,QACUlB,IAAnByM,EAAKxN,WAA2BwN,EAAKxN,UAAUc,OAAS,EAAI0M,EAAKxN,UAAUyB,IAAI,SAACgB,EAAMH,GACrF,OACI0E,EAAAtF,EAAAuF,cAAA,MAAIL,IAAKtE,GACL0E,EAAAtF,EAAAuF,cAAA,MAAI4W,MAAM,MAAM3W,UAAU,mBAAmB5E,EAAG,GAChD0E,EAAAtF,EAAAuF,cAAA,MAAIC,UAAU,wBAAwBzE,EAAKQ,aAAe+D,EAAAtF,EAAAuF,cAACoD,EAAA,EAAD,CAAiBC,KAAMwQ,IAAStQ,MAAM,UAAYxD,EAAAtF,EAAAuF,cAACoD,EAAA,EAAD,CAAiBC,KAAMuQ,IAAQrQ,MAAM,WACjJxD,EAAAtF,EAAAuF,cAAA,UACED,EAAAtF,EAAAuF,cAACoC,EAAA,EAAD,CAAMnC,UAAU,YAAYoC,GAAI,CAACC,SAAQ,cAAA1H,OAAeY,EAAKH,IACvD1B,MAAO,CAAC4I,eAAe,EAAOsU,SAAUle,OAAOme,SAASxU,YACpD9G,EAAKK,OAEjBkE,EAAAtF,EAAAuF,cAAA,UACED,EAAAtF,EAAAuF,cAACoC,EAAA,EAAD,CAAMnC,UAAU,YAAYoC,GAAI,CAACC,SAAQ,YAAA1H,OAAaY,EAAKiW,OACrD9X,MAAO,CAAC4I,eAAe,EAAOsU,SAAUle,OAAOme,SAASxU,YACpD9G,EAAKub,iBACjBhX,EAAAtF,EAAAuF,cAAA,MAAIC,UAAU,qBAAqBzE,EAAKM,OACxCiE,EAAAtF,EAAAuF,cAAA,UAAKxE,EAAKO,QACVgE,EAAAtF,EAAAuF,cAAA,UAAKxE,EAAKS,SAAW8D,EAAAtF,EAAAuF,cAACoD,EAAA,EAAD,CAAiBC,KAAM6Q,IAAe3Q,MAAM,UAAYxD,EAAAtF,EAAAuF,cAACoD,EAAA,EAAD,CAAiBC,KAAM4Q,IAAkB1Q,MAAM,WAC5HxD,EAAAtF,EAAAuF,cAAA,UACED,EAAAtF,EAAAuF,cAACkG,GAAA,EAAD,CAAQjG,UAAU,YAAYsD,MAAM,OAAO2J,MAAM,OAAOzI,QAAS,kBAAMf,EAAKvD,MAAM6W,gBAAgBhc,EAAOK,KAAK0E,EAAAtF,EAAAuF,cAACoD,EAAA,EAAD,CAAiBC,KAAM4T,OACrIlX,EAAAtF,EAAAuF,cAACkG,GAAA,EAAD,CAAQjG,UAAU,YAAYsD,MAAM,YAAYkB,QAAS,kBAAMf,EAAKvD,MAAM+W,oBAAoBlc,EAAOK,IAAK6R,MAAM,UAASnN,EAAAtF,EAAAuF,cAACoD,EAAA,EAAD,CAAiBC,KAAMmP,WAKxJ,UA/BdmE,EAAA,CAAuCnU,aCT1B2U,GAAmB,SAACC,GAE/B,IAAIra,EAAS,GA0Bb,GAvB6B,KAA1Bqa,EAAM,KAASC,OACfta,EAAM,KAAW,kBAEW,qBAAnBqa,EAAM,OACTA,EAAM,KAAS3P,MAAM,eAEd2P,EAAM,KAASvd,OAAS,KAChCkD,EAAM,KAAW,yBAFjBA,EAAM,KAAW,6BAQK,KAA3Bqa,EAAM,MAAUC,OAChBta,EAAM,MAAY,wBAEW,qBAApBqa,EAAM,QACVA,EAAM,MAAU3P,MAAM,wBACxB1K,EAAM,MAAY,qBAKM,KAA3Bqa,EAAM,MAAUC,OACjBta,EAAM,MAAY,uBAElB,GAA8B,qBAApBqa,EAAM,MAA0B,CACxC,IAAIE,EAAYF,EAAM,MAAUG,YAAY,KACxCC,EAAaJ,EAAM,MAAUG,YAAY,KACvCD,EAAYE,GAAcF,EAAY,IAAwC,IAAnCF,EAAM,MAAUf,QAAQ,OAAgBmB,EAAa,GAAMJ,EAAM,MAAUvd,OAAS2d,EAAc,IACjJza,EAAM,MAAY,sBAKxB,GAAyC,KAAtCqa,EAAM,iBAAqBC,OAC5Bta,EAAM,iBAAuB,uBAE7B,GAAyC,qBAA/Bqa,EAAM,iBAAqC,CAC5C,8HACCrQ,KAAKqQ,EAAM,oBACjBra,EAAM,iBAAuB,oBAKnC,GAAgC,KAA7Bqa,EAAM,QAAYC,aAEnB,GAAgC,qBAAtBD,EAAM,QAA4B,CACnC,8GACCrQ,KAAKqQ,EAAM,WACjBra,EAAM,QAAc,oBAK1B,OAAOA,GCtCH0a,eACJ,SAAAA,EAAYtX,GAAO,IAAAuD,EAAA,OAAA9K,OAAA0I,EAAA,EAAA1I,CAAA2I,KAAAkW,IACjB/T,EAAA9K,OAAA4I,EAAA,EAAA5I,CAAA2I,KAAA3I,OAAA6I,EAAA,EAAA7I,CAAA6e,GAAA9T,KAAApC,KAAMpB,KAgDRuX,UAAY,WACVhU,EAAKG,SAAS,CAAChI,KAAM,GAAIC,MAAO,GAAII,MAAM,GAAIa,OAAQ,GACpD+X,aAAc,KAAM/Y,OAAQ,YAAaC,cAAc,EACvDC,UAAU,EAAOE,iBAAkB,GAAIC,QAAS,GAChDC,eAAgB,MArDDqH,EAuDnBiU,OAAS,WACPjU,EAAKG,SAAS,CAAChI,KAAM,GAAIC,MAAO,GAAII,MAAM,GAAIa,OAAQ,GACpD+X,aAAc,KAAM/Y,OAAQ,YAAaC,cAAc,EACvDC,UAAU,EAAOE,iBAAkB,GAAIC,QAAS,GAChDwb,OAAO,EAAMvb,eAAgB,MA3DdqH,EA6DnBmU,YAAc,WACRnU,EAAK/J,MAAMme,YACXpU,EAAKvD,MAAM4X,YAAY,IACvBrU,EAAKG,SAAS,CACZkS,kBAAkB,EAClBD,MAAO,GACPgC,WAAW,KAGjBpU,EAAKG,SAAS,CAAEmS,WAAY,MAtEXtS,EAyEnBsU,cAAgB,SAAChd,EAAOK,GACtB,IAAIG,EAAOkI,EAAKvD,MAAM7F,MAAMU,GAAOjC,UAAUsC,GAC7CqI,EAAKG,SAAS,CAAChI,KAAML,EAAKK,KAAMC,MAAON,EAAKM,MAC1CC,OAAQP,EAAKO,OAAQE,SAAUT,EAAKS,SACpCD,aAAcR,EAAKQ,aAAcE,MAAOV,EAAKU,MAC7CC,iBAAkBX,EAAKW,iBACvBC,QAASZ,EAAKY,QAASC,eAAeb,EAAKa,eAC3CyY,aAAczZ,EAAI4c,gBAAiBjd,EAAO4c,OAAO,KAhFlClU,EAmFnBwU,gBAAkB,SAACld,EAAOK,GACxBqI,EAAKvD,MAAMgY,WAAWnd,EAAOK,GAC7BqI,EAAKG,SAAS,CACZkO,aAAa,KAtFErO,EAyHnBsO,OAAS,WACPtO,EAAKG,SAAS,SAAAuU,GAAS,MAAK,CAC1B/D,cAAe+D,EAAU/D,iBA3HV3Q,EA8HnB2U,YAAc,WACZ3U,EAAKG,SAAS,SAAAuU,GAAS,MAAK,CAC1BR,OAAQQ,EAAUR,UAhIHlU,EAmInB4U,kBAAoB,SAACtd,EAAOK,GAC1B,IAAIQ,EAAO,QACA/B,IAAPuB,IACFQ,EAAO6H,EAAKvD,MAAM7F,MAAMU,GAAOjC,UAAUsC,GAAIQ,MAE/C6H,EAAKG,SAAS,SAAAuU,GAAS,MAAK,CAC1BrG,aAAcqG,EAAUrG,YACxB/W,MAAOA,EACPK,GAAIA,EACJQ,KAAMA,MA5IS6H,EAgJnB6U,aAAe,SAACC,GAAM,IAAAC,EACpBD,EAAE5J,iBACF,IAAIjP,EAAM6Y,EAAE5H,OAAO/K,KACfhE,EAAQ2W,EAAE5H,OAAO/O,MAErB6B,EAAKG,UAAL4U,EAAA,GAAA7f,OAAAiY,GAAA,EAAAjY,CAAA6f,EACK9Y,EAAMkC,GADXjJ,OAAAiY,GAAA,EAAAjY,CAAA6f,EAAA,SAEY,IAFZA,KArJiB/U,EA4JnBgV,YAAc,SAACF,GACb9U,EAAKG,SAAS,CAAC9H,OAAQyc,EAAEG,cAAcC,eA7JtBlV,EA+JnB+J,cAAgB,WAAM,IACb/Q,EAAQgH,EAAKvD,MAAM7F,MAAMoJ,EAAKvD,MAAM7F,MAAMT,OAAS,GAAnD6C,KACPgH,EAAKG,SAAS,CACZvI,UAAU,IAGRoI,EAAK/J,MAAM8C,iBACbiH,EAAKvD,MAAM0R,WAAWnO,EAAK/J,MAAM8C,iBAEjCiH,EAAKG,SAAS,CAACpH,gBAAiB,MAEnB,OAATC,QAA0B5C,IAAT4C,GAGnBgH,EAAKvD,MAAM0R,WAAWnV,IA7KTgH,EAkLnBqU,YAAc,WAAM,IACT/B,EAActS,EAAK/J,MAAnBqc,WACY,OAAfA,QAAsClc,IAAfkc,IACvBtS,EAAKvD,MAAM4X,YAAY/B,GACvBtS,EAAKG,SAAS,CACZkS,kBAAkB,EAClBD,MAAO,GACPgC,WAAW,MAzLFpU,EA8LnBmV,yBAA2B,WACzBnV,EAAKG,SAAS,CACZ7H,cAAe0H,EAAK/J,MAAMqC,gBAhMX0H,EAmMnBoV,wBAA0B,WACxBpV,EAAKG,SAAS,CACZ5H,UAAWyH,EAAK/J,MAAMsC,YArMPyH,EAyMnB6S,aAAe,SAACwC,GAGd,GAAIA,GAAoBA,EAAiBjD,MAAMjc,OAAQ,CACrD,IAAImf,EAASD,EAAiBjD,MAAMtb,IAAI,SAACye,GAAD,OAASA,IAAOC,KAAK,KAC7DxV,EAAKG,SAALjL,OAAAqB,EAAA,EAAArB,CAAA,GAAkBmgB,IAClBrV,EAAKvD,MAAMgZ,WAAWH,QAEtBtV,EAAKG,SAAS,CAACiS,MAAO,KACtBpS,EAAKvD,MAAMgZ,WAAW,KAlNPzV,EAqNnB0V,WAAa,SAACZ,GACVA,EAAE5J,iBAEF,IAAMyK,EAAoBlC,GAAiBzT,EAAK/J,OAEF,IAA1Cf,OAAO6G,KAAK4Z,GAAmBxf,OAED,OAA5B6J,EAAK/J,MAAMmb,aACXpR,EAAKvD,MAAMmZ,QAAQ5V,EAAK/J,MAAMkC,KAAM6H,EAAK/J,MAAMmC,MAAO4H,EAAK/J,MAAMoC,OAC/D2H,EAAK/J,MAAMqC,aAAc0H,EAAK/J,MAAMsC,SAAUyH,EAAK/J,MAAMuC,MACzDwH,EAAK/J,MAAMwC,iBAAkBuH,EAAK/J,MAAMyC,QAASsH,EAAK/J,MAAM0C,gBAC3D6C,KAAKwE,EAAKgU,WACVxY,KAAKwE,EAAK2U,aACVhZ,MAAM,SAAUjC,GACdkC,QAAQC,IAAI,QAASnC,KAG1BsG,EAAKvD,MAAMoZ,WAAW7V,EAAK/J,MAAMse,gBAAiBvU,EAAK/J,MAAMmb,aAC3DpR,EAAK/J,MAAMkC,KAAM6H,EAAK/J,MAAMmC,MAAO4H,EAAK/J,MAAMoC,OAAQ2H,EAAK/J,MAAMqC,aACjE0H,EAAK/J,MAAMsC,SAAUyH,EAAK/J,MAAMuC,MAAOwH,EAAK/J,MAAMwC,iBAClDuH,EAAK/J,MAAMyC,QAASsH,EAAK/J,MAAM0C,gBAC9B6C,KAAKwE,EAAKgU,WACVxY,KAAKwE,EAAK2U,aACVhZ,MAAM,SAAUjC,GACdkC,QAAQC,IAAI,QAASnC,KAI9BsG,EAAKG,SAAS,CAAC9G,OAAQsc,KA/O3B3V,EAAK/J,MAAQ,CACXkC,KAAM,GACNC,MAAO,GACPC,OAAQ,YACRG,MAAO,GACPC,iBAAkB,GAClBC,QAAS,GACTC,eAAgB,GAChBL,cAAc,EACdC,UAAU,EACV+Z,WAAY,GACZlB,aAAc,KACdmD,gBAAiB,KACjB5D,cAAc,EACd0B,kBAAkB,EAClB6B,OAAO,EACP7F,aAAa,EACb3M,UAAU,EACVpM,SAAS,EACTsC,UAAU,EACVmB,gBAAiB,GACjBE,SAAS,EACTmZ,MAAO,GACP/Y,OAAQ,GACRzC,MAAO,CACH,CACEwT,MAAO,KACPpR,KAAM,KACNkR,SAAU,KACV7U,UAAW,MA/BF2K,mFAwCXkS,MAAM4D,QAAQjY,KAAKpB,MAAM7F,MAAM,GAAGvB,YAAcwI,KAAKpB,MAAM7F,MAAM,GAAGvB,UAAUc,OAIlF0H,KAAKpB,MAAMgZ,WAAW,IAFtB5X,KAAKpB,MAAM0R,wDA+CIhI,EAAWuO,GAC5B,GAAI7W,KAAKpB,MAAM7F,QAAUuP,EAAUvP,MAAO,CACxCiH,KAAKsC,SAAS,CACZ7K,QAASuI,KAAKpB,MAAM7F,MAAM,GAAGtB,QAC7BsC,SAAUiG,KAAKpB,MAAM7F,MAAM,GAAGgB,WAMhC,IAAIme,EAAgB,GACpB,GAAGlY,KAAKpB,MAAM7F,MAAM,GAAGqC,SAAW4E,KAAKpB,MAAM7F,MAAM,GAAGoC,KAAM,CAC1D+c,EAAgBlY,KAAKpB,MAAM7F,MAAM,GAAGoC,KAEpC,IAAIgd,EAAWC,SAASF,EAAc3e,OAAO,GAAI,IAC5C4e,EAAS,GAAM,IAClBD,EAAgBA,EAAc3e,MAAM,GAAI,IAAI4e,EAAS,IAKvDnY,KAAKsC,SAAS,CAACpH,gBAAiBgd,EAC9B9c,SAAS,4CAqIH,IAAAoN,EAMGxI,KAAK5H,MALVie,EADE7N,EACF6N,MACN/b,EAFQkO,EAERlO,KAAMC,EAFEiO,EAEFjO,MAAOI,EAFL6N,EAEK7N,MAAOC,EAFZ4N,EAEY5N,iBACpBC,EAHQ2N,EAGR3N,QAASC,EAHD0N,EAGC1N,eAAgBL,EAHjB+N,EAGiB/N,aACzBD,EAJQgO,EAIRhO,OAAQE,EAJA8N,EAIA9N,SAAUoY,EAJVtK,EAIUsK,aAClBS,EALQ/K,EAKR+K,aACA/X,EANQgN,EAMRhN,OACMqI,EAAa7D,KAAKpB,MAAlBiF,SAER,GAAI7D,KAAK5H,MAAMie,MACb,OACE7X,EAAAtF,EAAAuF,cAACiS,GAAA,EAAD,CAAOtN,OAAQiT,EAAO5F,OAAQzQ,KAAK8W,aACjCtY,EAAAtF,EAAAuF,cAAC4Z,GAAA,EAAD,CAAMjU,SAAUpE,KAAK6X,YAEnBrZ,EAAAtF,EAAAuF,cAACkS,GAAA,EAAD,CAAaF,OAAQzQ,KAAK8W,aAA+B,OAAjBvD,EAAwB,eAAiB,iBACjF/U,EAAAtF,EAAAuF,cAACmS,GAAA,EAAD,KACEpS,EAAAtF,EAAAuF,cAAC6Z,GAAD,CACEjH,cAAerR,KAAKgX,aACpBzE,6BAA8BvS,KAAKsX,yBACnC1E,4BAA6B5S,KAAKuX,wBAClCvE,SAAUhT,KAAKyQ,OACf4C,cAAerT,KAAKmX,YAEpB7c,KAAMA,EACNC,MAAOA,EACPI,MAAOA,EACPC,iBAAkBA,EAClBC,QAASA,EACTC,eAAgBA,EAChBL,aAAcA,EACdoJ,SAAUA,EACVrJ,OAAQA,EACRE,SAAUA,EACVoY,aAAcA,EACdS,aAAcA,EAEd/X,OAAQA,KAGZgD,EAAAtF,EAAAuF,cAACoS,GAAA,EAAD,KACErS,EAAAtF,EAAAuF,cAACqS,GAAA,EAAD,CAAWC,KAAG,GACdvS,EAAAtF,EAAAuF,cAACkG,GAAA,EAAD,CAAQjG,UAAU,YAAYsD,MAAM,OAAOvJ,KAAK,UAAS+F,EAAAtF,EAAAuF,cAACoD,EAAA,EAAD,CAAiBC,KAAMmF,IAAQjF,MAAM,WAC5E,OAAjBuR,EAAwB/U,EAAAtF,EAAAuF,cAACkG,GAAA,EAAD,CAAQjG,UAAU,YAAY8H,SAAO,EAACtD,QAASlD,KAAKmW,WAApD,SAAgF,KACzG3X,EAAAtF,EAAAuF,cAACkG,GAAA,EAAD,CAAQjG,UAAU,YAAYwE,QAASlD,KAAK8W,aAA5C,oDASC,IAAA1N,EAAApJ,KACLjH,EAAUiH,KAAKpB,MAAf7F,MADKwf,EAEiEvY,KAAK5H,MAA3EoD,EAFK+c,EAEL/c,OAAQ6a,EAFHkC,EAEGlC,MAAO5B,EAFV8D,EAEU9D,WAAYjE,EAFtB+H,EAEsB/H,YAAa/W,EAFnC8e,EAEmC9e,MAAOK,EAF1Cye,EAE0Cze,GAAIQ,EAF9Cie,EAE8Cje,KAAMP,EAFpDwe,EAEoDxe,SACzDoB,EAAS6E,KAAKpB,MAAM7F,MAAMiH,KAAKpB,MAAM7F,MAAMT,OAAS,GAApD6C,KAER,OADA4C,QAAQC,IAAI,WAAYjE,GAEtByE,EAAAtF,EAAAuF,cAAA,WACED,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,kBACbF,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,kBACbF,EAAAtF,EAAAuF,cAACoC,EAAA,EAAD,CAAMC,GAAI,kBAAkBtC,EAAAtF,EAAAuF,cAACkG,GAAA,EAAD,CAAQjG,UAAU,oBAAoBsD,MAAM,QAA5C,aAE9BxD,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,oBACd2X,EAAQrW,KAAKwY,cAAgB,KAC7BhI,EACChS,EAAAtF,EAAAuF,cAACga,GAAD,CACEjI,YAAaA,EAAa/W,MAAOA,EACjCK,GAAIA,EAAIQ,KAAMA,EACdmW,OAAQzQ,KAAK+W,kBACb/F,kBAAmBhR,KAAK2W,kBAE1B,KACAnY,EAAAtF,EAAAuF,cAACqS,GAAA,EAAD,CAAWC,KAAG,GACZvS,EAAAtF,EAAAuF,cAACkG,GAAA,EAAD,CAAQjG,UAAU,YAAYsD,MAAM,OAAOkB,QAASlD,KAAKoW,QAAQ5X,EAAAtF,EAAAuF,cAACoD,EAAA,EAAD,CAAiBC,KAAM4W,IAAc1W,MAAM,UAASxD,EAAAtF,EAAAuF,cAAA,QAAMC,UAAU,mBAAhB,eACrHF,EAAAtF,EAAAuF,cAACka,GAAA,EAAD,CAAaC,QAAM,EACjB9e,GAAG,aACHrB,KAAK,OACL6L,KAAK,aACLhE,MAAOmU,GAAc,GACrB7E,YAAY,oBACZvK,SAAUrF,KAAKgX,eAGdxb,EAAOiZ,WAAajW,EAAAtF,EAAAuF,cAAC6S,GAAA,EAAD,CAAUtP,MAAM,UAAUxG,EAAOiZ,YAAwB,GAChFjW,EAAAtF,EAAAuF,cAACkG,GAAA,EAAD,CAAQjG,UAAU,YAAYwE,QAASlD,KAAKwW,aAAahY,EAAAtF,EAAAuF,cAACoD,EAAA,EAAD,CAAiBC,KAAM+W,IAAU7W,MAAM,WAChF,KAAfyS,EACCjW,EAAAtF,EAAAuF,cAACkG,GAAA,EAAD,CAAQ6B,SAAO,EAAC9H,UAAU,4BAA4BwE,QAASlD,KAAKsW,aAClE9X,EAAAtF,EAAAuF,cAACoD,EAAA,EAAD,CAAiBsG,SAAU,GAAIrG,KAAMqT,OAEvC,OAGN3W,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,qBAGjBF,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,aACbF,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,mBACfF,EAAAtF,EAAAuF,cAAA,MAAIC,UAAU,oBAAd,SACAF,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,mDAGjBF,EAAAtF,EAAAuF,cAAC4I,GAAA,EAAD,CAAO3I,UAAU,oCAAoC4I,SAAO,GAC1D9I,EAAAtF,EAAAuF,cAACqa,GAAD,CACE9D,aAAchV,KAAKgV,oBAEVzc,IAAVQ,EAAsBA,EAAME,IAAI,SAAC+L,EAAMvL,GACtC,OACE+E,EAAAtF,EAAAuF,cAACsa,GAAD,CACI/T,KAAMA,EACN5G,IAAG,GAAA/E,OAAKI,GACRA,MAAOA,EAEPgc,gBAAiBrM,EAAKqN,cACtBd,oBAAqBvM,EAAK2N,sBAInC,MAES,OAAT5b,GAAkBpB,EAAqE,GAA1DyE,EAAAtF,EAAAuF,cAACkG,GAAA,EAAD,CAAQzB,QAASlD,KAAKkM,eAAtB,aAC7BnS,GAAYyE,EAAAtF,EAAAuF,cAACiD,EAAD,CAAY7C,YAAY,gDAIjC,IACApH,EAAYuI,KAAK5H,MAAjBX,QACR,OACE+G,EAAAtF,EAAAuF,cAAA,WACIhH,EAAU+G,EAAAtF,EAAAuF,cAACwJ,EAAD,MAAiBjI,KAAKgZ,sBAtXtB/X,aA2ZLqC,eA/BS,SAAAlL,GACpB,MAAO,CACLW,MAAOX,EAAMW,MACbqC,QAAShD,EAAMgD,UAIM,SAAAiC,GACvB,MAAO,CACHiT,WAAY,SAACnV,GACTkC,EAAStE,GAAiBoC,KAE9B4c,QAAS,SAACzd,EAAMC,EAAOC,EAAQC,EAAcC,EAAUC,EAAOC,EAAkBC,EAASC,GACrF,OAAOuC,EVhTI,SAAC/C,EAAMC,EAAOC,EAAQC,EAAcC,EAAUC,EAAOC,EAAkBC,EAASC,GACnG,OAAO,SAACuC,EAAUC,GACd,IAAIG,EAAU,CAACkL,eAAgB,oBAC1B/P,EAAS0E,IAAWnF,KAApBS,MAEDA,IACA6E,EAAO,cAAP,SAAApE,OAAoCT,IAGxC,IAAI8V,EAAOhP,KAAKC,UAAU,CAACrF,OAAMC,QAAOC,SAAQC,eAAcC,WAAUC,QAAOC,mBAAkBC,UAASC,mBAC1G,OAAO+N,MAAM,kBAAmB,CAACpL,UAASmP,OAAQ,OAAQ8B,SACrD/Q,KAAK,SAAAmL,GACF,GAAIA,EAAItO,OAAS,IACb,OAAOsO,EAAIC,OAAOpL,KAAK,SAAAE,GACnB,MAAO,CAACrD,OAAQsO,EAAItO,OAAQqD,UAKhC,MAFA+B,QAAM/D,MAAM,kCACZkC,QAAQC,IAAI,iBACN8K,IAGbnL,KAAK,SAAAmL,GACF,GAAmB,MAAfA,EAAItO,OAEJ,OADAoF,QAAMyG,KAAK,YAAYyC,EAAIjL,KAAKvD,KAAK,UAC9B+C,EAAS,CAAC5E,KAAM,WAAYwB,KAAM6O,EAAIjL,OAC1C,GAAmB,MAAfiL,EAAItO,QAAiC,MAAfsO,EAAItO,OAGjC,MAFAoF,QAAM/D,MAAM,0BACZwB,EAAS,CAAC5E,KAAM,uBAAwBoF,KAAMiL,EAAIjL,OAC5CiL,EAAIjL,QUmRF9E,CAAcuB,EAAMC,EAAOC,EAAQC,EAAcC,EAAUC,EAAOC,EAAkBC,EAASC,KAEjHkd,WAAY,SAACve,EAAOK,EAAIQ,EAAMC,EAAOC,EAAQC,EAAcC,EAAUC,EAAOC,EAAkBC,EAASC,GACnG,OAAOuC,EVhRO,SAAC5D,EAAOK,EAAIQ,EAAMC,EAAOC,EAAQC,EAAcC,EAAUC,EAAOC,EAAkBC,EAASC,GACjH,OAAO,SAACuC,EAAUC,GAEd,IAAIG,EAAU,CAACkL,eAAgB,oBAC1B/P,EAAS0E,IAAWnF,KAApBS,MAEDA,IACA6E,EAAO,cAAP,SAAApE,OAAoCT,IAGxC,IAAI8V,EAAOhP,KAAKC,UAAU,CAACrF,OAAMC,QAAOC,SAAQC,eAAcC,WAAUC,QAAOC,mBAAkBC,UAASC,mBAEtGme,EAAS3b,IAAWvE,MAAMU,GAAOjC,UAAUsC,GAAIA,GAEnD,OAAO+O,MAAK,kBAAAxP,OAAmB4f,EAAnB,KAA8B,CAACxb,UAASmP,OAAQ,MAAO8B,SAC9D/Q,KAAK,SAAAmL,GACF,GAAIA,EAAItO,OAAS,IACb,OAAOsO,EAAIC,OAAOpL,KAAK,SAAAE,GACnB,MAAO,CAACrD,OAAQsO,EAAItO,OAAQqD,UAKhC,MAFA+B,QAAM/D,MAAM,kCACZkC,QAAQC,IAAI,iBACN8K,IAGbnL,KAAK,SAAAmL,GACF,GAAmB,MAAfA,EAAItO,OAEJ,OADAoF,QAAMyG,KAAK,YAAYyC,EAAIjL,KAAKvD,KAAK,WAC9B+C,EAAS,CAAC5E,KAAM,cAAewB,KAAM6O,EAAIjL,KAAMpE,QAAOK,OAC1D,GAAmB,MAAfgP,EAAItO,QAAiC,MAAfsO,EAAItO,OAGjC,MAFAoF,QAAM/D,MAAM,0BACZwB,EAAS,CAAC5E,KAAM,uBAAwBoF,KAAMiL,EAAIjL,OAC5CiL,EAAIjL,QU+OF9E,CAAiBU,EAAOK,EAAIQ,EAAMC,EAAOC,EAAQC,EAAcC,EAAUC,EAAOC,EAAkBC,EAASC,KAE/H8b,WAAY,SAACnd,EAAOK,GAChBuD,EV5Oc,SAACvD,EAAIL,GAC3B,OAAO,SAAC4D,EAAUC,GAEd,IAAIG,EAAU,CAACkL,eAAgB,oBAC1B/P,EAAS0E,IAAWnF,KAApBS,MAEDA,IACA6E,EAAO,cAAP,SAAApE,OAAoCT,IAExC,IAAIqgB,EAAS3b,IAAWvE,MAAMe,GAAItC,UAAUiC,GAAOK,GAEnD,OAAO+O,MAAK,kBAAAxP,OAAmB4f,EAAnB,KAA8B,CAACxb,UAASmP,OAAQ,WACvDjP,KAAK,SAAAmL,GACF,GAAmB,MAAfA,EAAItO,OAEJ,OADAoF,QAAMyG,KAAK,oBACJ,CAAC7L,OAAQsO,EAAItO,OAAQqD,KAAM,IAC/B,GAAIiL,EAAItO,OAAS,IACpB,OAAOsO,EAAIC,OAAOpL,KAAK,SAAAE,GACnB,MAAO,CAACrD,OAAQsO,EAAItO,OAAQqD,UAIhC,MADAE,QAAQC,IAAI,iBACN8K,IAGbnL,KAAK,SAAAmL,GACF,GAAmB,MAAfA,EAAItO,OAEJ,OAAO6C,EAAS,CAAC5E,KAAM,cAAeqB,KAAIL,UACvC,GAAmB,MAAfqP,EAAItO,QAAiC,MAAfsO,EAAItO,OAGjC,MAFAoF,QAAM/D,MAAM,0BACZwB,EAAS,CAAC5E,KAAM,uBAAwBoF,KAAMiL,EAAIjL,OAC5CiL,EAAIjL,OAGjBF,KAAK,SAAAmL,GAAQzL,EAASiT,SUyMdvX,CAAiBU,EAAOK,KAErC0c,YAAa,SAAC/B,GACVpX,EVjYe,SAACoX,GACxB,OAAO,SAACpX,EAAUC,GACd,IAAIG,EAAU,CAACkL,eAAgB,oBAC1B/P,EAAS0E,IAAWnF,KAApBS,MACDgQ,EAAW,kBAOf,YANmBrQ,IAAfkc,GAA2C,OAAfA,IAC9B7L,EAAQ,0BAAAvP,OAA6Bob,IAEnC7b,IACA6E,EAAO,cAAP,SAAApE,OAAoCT,IAEjCiQ,MAAMD,EAAU,CAACnL,UAASmP,OAAQ,QACpCjP,KAAK,SAAAmL,GACF,GAAIA,EAAItO,OAAS,IACb,OAAOsO,EAAIC,OAAOpL,KAAK,SAAAE,GAEnB,MAAO,CAACrD,OAAQsO,EAAItO,OAAQqD,UAKhC,MAFA+B,QAAM/D,MAAM,kCACZkC,QAAQC,IAAI,iBACN8K,IAIbnL,KAAK,SAAAmL,GACF,GAAmB,MAAfA,EAAItO,OACJ,OAAO6C,EAAS,CAAC5E,KAAM,eAAgBM,MAAO+P,EAAIjL,OAC/C,GAAmB,MAAfiL,EAAItO,QAAiC,MAAfsO,EAAItO,OAGjC,MAFAoF,QAAM/D,MAAM,0BACZwB,EAAS,CAAC5E,KAAM,uBAAwBoF,KAAMiL,EAAIjL,OAC5CiL,EAAIjL,QUkWT9E,CAAkB0b,KAE/BmD,WAAY,SAACrD,GACTlX,EVhWc,SAACkX,GACvB,OAAO,SAAClX,EAAUC,GACd,IAAIG,EAAU,CAACkL,eAAgB,oBAC1B/P,EAAS0E,IAAWnF,KAApBS,MACDgQ,EAAW,kBAOf,YANcrQ,IAAVgc,GAAiC,OAAVA,IACzB3L,EAAQ,4BAAAvP,OAA+Bkb,IAErC3b,IACA6E,EAAO,cAAP,SAAApE,OAAoCT,IAEjCiQ,MAAMD,EAAU,CAACnL,UAASmP,OAAQ,QACpCjP,KAAK,SAAAmL,GACF,GAAIA,EAAItO,OAAS,IACb,OAAOsO,EAAIC,OAAOpL,KAAK,SAAAE,GAEnB,MAAO,CAACrD,OAAQsO,EAAItO,OAAQqD,UAKhC,MAFA+B,QAAM/D,MAAM,kCACZkC,QAAQC,IAAI,iBACN8K,IAIbnL,KAAK,SAAAmL,GACF,GAAmB,MAAfA,EAAItO,OACJ,OAAO6C,EAAS,CAAC5E,KAAM,cAAeM,MAAO+P,EAAIjL,OAC9C,GAAmB,MAAfiL,EAAItO,QAAiC,MAAfsO,EAAItO,OAGjC,MAFAoF,QAAM/D,MAAM,0BACZwB,EAAS,CAAC5E,KAAM,uBAAwBoF,KAAMiL,EAAIjL,OAC5CiL,EAAIjL,QUiUT9E,CAAiBwb,OAMvBjR,CAA6C4S,kCC1a/CgD,WAAb,SAAApZ,GACE,SAAAoZ,EAAYta,GAAM,IAAAuD,EAAA,OAAA9K,OAAA0I,EAAA,EAAA1I,CAAA2I,KAAAkZ,IAChB/W,EAAA9K,OAAA4I,EAAA,EAAA5I,CAAA2I,KAAA3I,OAAA6I,EAAA,EAAA7I,CAAA6hB,GAAA9W,KAAApC,KAAMpB,KAORua,iBAAmB,SAACC,GACdA,EACFjX,EAAKvD,MAAMua,iBAAiB9K,KAAO+K,EAAM/K,KAAOgL,eAAeC,UAE/DnX,EAAKvD,MAAMua,iBAAiB,OAT9BhX,EAAK/J,MAAQ,CACXmhB,UAAU,EACVC,UAAW,IALGrX,EADpB,OAAA9K,OAAA+I,EAAA,EAAA/I,CAAA6hB,EAAApZ,GAAAzI,OAAAgJ,EAAA,EAAAhJ,CAAA6hB,EAAA,EAAA9a,IAAA,SAAAkC,MAAA,WAkBW,IAECkZ,EAAcxZ,KAAKpB,MAAnB4a,UACFC,EAAgBpL,KAAOmL,GAAWE,UAExC,OACElb,EAAAtF,EAAAuF,cAAA,WACED,EAAAtF,EAAAuF,cAACqS,GAAA,EAAD,KACEtS,EAAAtF,EAAAuF,cAAC0S,GAAA,EAAD,kBAAkBsI,EAAgBjb,EAAAtF,EAAAuF,cAACkG,GAAA,EAAD,CAAQjG,UAAU,MAAMwE,QAASlD,KAAKpB,MAAM+a,sBAA5C,SAAkF,IACnHF,EACDjb,EAAAtF,EAAAuF,cAAA,WACED,EAAAtF,EAAAuF,cAACmb,GAAA,EAAD,CACEC,SAAUJ,EAAgBpL,KAAOmL,EAAWnL,KAAOgL,eAAeC,SAAWjL,KAAOrO,KAAK5H,MAAMohB,UAAWnL,KAAOgL,eAAeC,SAChIjU,SAAUrF,KAAKmZ,iBACfW,gBAAc,EACdC,WAAW,QACXC,cAAe,GACfC,WAAW,oBACXC,YAAY,UAId1b,EAAAtF,EAAAuF,cAACkG,GAAA,EAAD,CAAQjG,UAAU,gBAAgBwE,QAASlD,KAAKpB,MAAMub,oBAAtD,uBAxCZjB,EAAA,CAAsCjY,cCoDvBmZ,sNAlDdzQ,OAAS,SAAC0Q,EAAeC,GAExBnY,EAAKvD,MAAM2b,aAAaF,4EAEf,IAGL7Q,EACAC,EAJKlJ,EAEqBP,KAAKpB,MAA3B4b,EAFCja,EAEDia,UAAWnf,EAFVkF,EAEUlF,OAsBnB,OAlBImf,EACCnf,GACCmf,IAAcnf,GAChBmO,EAAa,yCACbC,EAAY,uBAMdD,EAAa,yCACbC,EAAY,qBAGbD,EAAa,yCACbC,EAAY,kBAIXjL,EAAAtF,EAAAuF,cAAA,wBACQD,EAAAtF,EAAAuF,cAAA,QAAMC,UAAU,kBAA6B,SAAXrD,EAAoB,KAAKA,EAAOof,MAAM,KAAKlhB,OAAO,GAAG,GAAG,IAAM,IACtGiF,EAAAtF,EAAAuF,cAACiL,GAAA,EAAD,CACOC,OAAQ3J,KAAK2J,OACbQ,UAAU,EACVN,QAtCQ,KAwCH,SAAA9K,GAAA,IAAE+K,EAAF/K,EAAE+K,aAAcC,EAAhBhL,EAAgBgL,cAAhB,OACGvL,EAAAtF,EAAAuF,cAAA,MAAApH,OAAAC,OAAA,GAASwS,IAAT,CAAyBpL,UAAS,GAAArF,OAAKmQ,KACnChL,EAAAtF,EAAAuF,cAAA,QAAWsL,KACXvL,EAAAtF,EAAAuF,cAAA,WACCD,EAAAtF,EAAAuF,cAACoD,EAAA,EAAD,CAAiBC,KAAM4Y,IAAc1Y,MAAM,UAC1CxD,EAAAtF,EAAAuF,cAAA,QAAMC,UAAU,wBAAhB,GAAArF,OAA2CoQ,QAZlE,iBA/BmBxI,cCCV0Z,GAAb,SAAA7a,GAAA,SAAA6a,IAAA,OAAAtjB,OAAA0I,EAAA,EAAA1I,CAAA2I,KAAA2a,GAAAtjB,OAAA4I,EAAA,EAAA5I,CAAA2I,KAAA3I,OAAA6I,EAAA,EAAA7I,CAAAsjB,GAAAxa,MAAAH,KAAA3H,YAAA,OAAAhB,OAAA+I,EAAA,EAAA/I,CAAAsjB,EAAA7a,GAAAzI,OAAAgJ,EAAA,EAAAhJ,CAAAsjB,EAAA,EAAAvc,IAAA,SAAAkC,MAAA,WACW,IAAAC,EAOOP,KAAKpB,MANXtE,EADDiG,EACCjG,KAAMC,EADPgG,EACOhG,MAAOI,EADd4F,EACc5F,MACnBC,EAFK2F,EAEL3F,iBAAkBC,EAFb0F,EAEa1F,QAClBC,EAHKyF,EAGLzF,eAAgBL,EAHX8F,EAGW9F,aAChBD,EAJK+F,EAIL/F,OAAQsY,EAJHvS,EAIGuS,aAAcpY,EAJjB6F,EAIiB7F,SACtBmJ,EALKtD,EAKLsD,SAAU0V,EALLhZ,EAKKgZ,SAAUC,EALfjZ,EAKeiZ,UACpBgB,EANKja,EAMLia,UAAWnf,EANNkF,EAMMlF,OACXG,EAPK+E,EAOL/E,OAEF,OACEgD,EAAAtF,EAAAuF,cAAA,WACED,EAAAtF,EAAAuF,cAAC+U,GAAD,CACEnC,cAAerR,KAAKpB,MAAMyS,cAC1B/W,KAAMA,EACNkB,OAAQA,IAEVgD,EAAAtF,EAAAuF,cAACgV,GAAD,CACEpC,cAAerR,KAAKpB,MAAMyS,cAC1B9W,MAAOA,EACPiB,OAAQA,IAEVgD,EAAAtF,EAAAuF,cAACiV,GAAD,CACErC,cAAerR,KAAKpB,MAAMyS,cAC1B1W,MAAOA,EACPa,OAAQA,IAEVgD,EAAAtF,EAAAuF,cAACkV,GAAD,CACEtC,cAAerR,KAAKpB,MAAMyS,cAC1BzW,iBAAkBA,EAClBY,OAAQA,IAEVgD,EAAAtF,EAAAuF,cAACmV,GAAD,CACEvC,cAAerR,KAAKpB,MAAMyS,cAC1BxW,QAASA,EACTW,OAAQA,IAEVgD,EAAAtF,EAAAuF,cAACoV,GAAD,CACExC,cAAerR,KAAKpB,MAAMyS,cAC1BvW,eAAgBA,EAChBU,OAAQA,IAGVgD,EAAAtF,EAAAuF,cAACqV,GAAD,CACEvB,6BAA8BvS,KAAKpB,MAAM2T,6BACzC9X,aAAcA,IAEhB+D,EAAAtF,EAAAuF,cAACuV,GAAD,CACEpB,4BAA6B5S,KAAKpB,MAAMgU,4BACxCpY,OAAQA,EACRqJ,SAAUA,EACVnJ,SAAUA,IAGZ8D,EAAAtF,EAAAuF,cAACsV,GAAD,CACEV,cAAerT,KAAKpB,MAAMyU,cAC1BL,SAAUhT,KAAKpB,MAAMoU,SACrBxY,OAAQA,EACRsY,aAAcA,IAEhBtU,EAAAtF,EAAAuF,cAACmc,GAAD,CACEzB,iBAAkBnZ,KAAKpB,MAAMua,iBAC7BQ,qBAAsB3Z,KAAKpB,MAAM+a,qBACjCQ,mBAAoBna,KAAKpB,MAAMub,mBAC/BZ,SAAUA,EACVC,UAAWA,IAEbhb,EAAAtF,EAAAuF,cAACoc,GAAD,CACEN,aAAcva,KAAKpB,MAAM2b,aACzBC,UAAWA,EACXnf,OAAQA,SAtElBsf,EAAA,CAAyC1Z,aCJ5B6Z,GAAb,SAAAhb,GAAA,SAAAgb,IAAA,OAAAzjB,OAAA0I,EAAA,EAAA1I,CAAA2I,KAAA8a,GAAAzjB,OAAA4I,EAAA,EAAA5I,CAAA2I,KAAA3I,OAAA6I,EAAA,EAAA7I,CAAAyjB,GAAA3a,MAAAH,KAAA3H,YAAA,OAAAhB,OAAA+I,EAAA,EAAA/I,CAAAyjB,EAAAhb,GAAAzI,OAAAgJ,EAAA,EAAAhJ,CAAAyjB,EAAA,EAAA1c,IAAA,SAAAkC,MAAA,WACW,IAAAC,EAMHP,KAAKpB,MALDtE,EADDiG,EACCjG,KAAMC,EADPgG,EACOhG,MAAOI,EADd4F,EACc5F,MACnBC,EAFK2F,EAEL3F,iBAAkBC,EAFb0F,EAEa1F,QAClBC,EAHKyF,EAGLzF,eAAgBL,EAHX8F,EAGW9F,aAChBD,EAJK+F,EAIL/F,OAAQE,EAJH6F,EAIG7F,SACR8e,EALKjZ,EAKLiZ,UAAWgB,EALNja,EAKMia,UAGb,OACQhc,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,iEACbF,EAAAtF,EAAAuF,cAAA,8BACED,EAAAtF,EAAAuF,cAAC4I,GAAA,EAAD,CAAOC,SAAO,GACZ9I,EAAAtF,EAAAuF,cAAA,aACED,EAAAtF,EAAAuF,cAAA,UACED,EAAAtF,EAAAuF,cAAA,sBACAD,EAAAtF,EAAAuF,cAAA,UAAKhE,EAAe,YAAc,eAEpC+D,EAAAtF,EAAAuF,cAAA,UACED,EAAAtF,EAAAuF,cAAA,kBACAD,EAAAtF,EAAAuF,cAAA,UAAKnE,IAEPkE,EAAAtF,EAAAuF,cAAA,UACED,EAAAtF,EAAAuF,cAAA,mBACAD,EAAAtF,EAAAuF,cAAA,UAAKlE,IAEPiE,EAAAtF,EAAAuF,cAAA,UACED,EAAAtF,EAAAuF,cAAA,oBACAD,EAAAtF,EAAAuF,cAAA,UAAKjE,IAEPgE,EAAAtF,EAAAuF,cAAA,UACED,EAAAtF,EAAAuF,cAAA,mBACAD,EAAAtF,EAAAuF,cAAA,MAAIC,UAAU,8BAA8B/D,IAE9C6D,EAAAtF,EAAAuF,cAAA,UACED,EAAAtF,EAAAuF,cAAA,sBACAD,EAAAtF,EAAAuF,cAAA,MAAIC,UAAU,8BAA6BF,EAAAtF,EAAAuF,cAAA,KAAGC,UAAU,4BAA4BmJ,KAAI,GAAAxO,OAAKuB,IAAsBA,KAErH4D,EAAAtF,EAAAuF,cAAA,UACED,EAAAtF,EAAAuF,cAAA,qBACAD,EAAAtF,EAAAuF,cAAA,MAAIC,UAAU,8BAA6BF,EAAAtF,EAAAuF,cAAA,KAAGC,UAAU,4BAA4BmJ,KAAI,GAAAxO,OAAKwB,IAAaA,KAE5G2D,EAAAtF,EAAAuF,cAAA,UACED,EAAAtF,EAAAuF,cAAA,4BACAD,EAAAtF,EAAAuF,cAAA,MAAIC,UAAU,8BAA8B5D,IAE9C0D,EAAAtF,EAAAuF,cAAA,UACED,EAAAtF,EAAAuF,cAAA,qBACAD,EAAAtF,EAAAuF,cAAA,UAAK/D,EAAW,QAAU,QAE5B8D,EAAAtF,EAAAuF,cAAA,UACED,EAAAtF,EAAAuF,cAAA,mBACAD,EAAAtF,EAAAuF,cAAA,UAAK+a,EAAYnL,KAAOmL,GAAWjL,OAAO,oBAAsB,KAElE/P,EAAAtF,EAAAuF,cAAA,UACED,EAAAtF,EAAAuF,cAAA,uBACAD,EAAAtF,EAAAuF,cAAA,UAAK+b,EAAYhc,EAAAtF,EAAAuF,cAAA,KAAGC,UAAU,4BAA4BmJ,KAAI,GAAAxO,OAAKmhB,IAAeA,EAAUC,MAAM,KAAKlhB,OAAO,GAAG,IAAU,YAxDjJuhB,EAAA,CAAwC7Z,aCUlC8Z,eAEF,SAAAA,EAAYnc,GAAM,IAAAuD,EAAA,OAAA9K,OAAA0I,EAAA,EAAA1I,CAAA2I,KAAA+a,IACd5Y,EAAA9K,OAAA4I,EAAA,EAAA5I,CAAA2I,KAAA3I,OAAA6I,EAAA,EAAA7I,CAAA0jB,GAAA3Y,KAAApC,KAAMpB,KAyDV6R,OAAS,WACPtO,EAAKG,SAAS,SAAAuU,GAAS,MAAK,CAC1B/D,cAAe+D,EAAU/D,iBA5DX3Q,EA+DlB6U,aAAe,SAACC,GAAM,IAAAC,EACpBD,EAAE5J,iBACF,IAAIjP,EAAM6Y,EAAE5H,OAAO/K,KACfhE,EAAQ2W,EAAE5H,OAAO/O,MACrB6B,EAAKG,UAAL4U,EAAA,GAAA7f,OAAAiY,GAAA,EAAAjY,CAAA6f,EACK9Y,EAAMkC,GADXjJ,OAAAiY,GAAA,EAAAjY,CAAA6f,EAAA,SAEY,IAFZA,KAnEgB/U,EAwElB6Y,WAAa,SAAC5B,GACZjX,EAAKG,SAAS,CAACkX,UAAWJ,KAzEVjX,EA4ElBgV,YAAc,SAACF,GACb9U,EAAKG,SAAS,CAAC9H,OAAQyc,EAAEG,cAAcC,eA7EvBlV,EAgFlB8Y,QAAU,SAACT,GAETrY,EAAKG,SAAS,CACZkY,UAAWA,EAAU,GACrBvR,UAAU,KApFI9G,EAwFlBmV,yBAA2B,WACzBnV,EAAKG,SAAS,CACZ7H,cAAe0H,EAAK/J,MAAMqC,gBA1FZ0H,EA6FlBoV,wBAA0B,WACxBpV,EAAKG,SAAS,CACZ5H,UAAWyH,EAAK/J,MAAMsC,YA/FRyH,EAkGlB+Y,eAAiB,WACf/Y,EAAKG,SAAS,CACZiX,UAAU,EACVC,UAAWnL,KAAO,IAAIC,KAAQD,KAAOgL,eAAeC,YArGtCnX,EAyGlBgZ,iBAAmB,WACjBhZ,EAAKG,SAAS,CACZiX,UAAU,EACVC,UAAW,MA5GGrX,EAgHlB0V,WAAa,SAACZ,GACZA,EAAE5J,iBAEF,IAAMyK,EAAoBlC,GAAiBzT,EAAK/J,OAEF,IAA1Cf,OAAO6G,KAAK4Z,GAAmBxf,OACjC6J,EAAKvD,MAAMwc,iBAAiBjZ,EAAK/J,MAAM0B,GAAIqI,EAAK/J,MAAMkC,KACpD6H,EAAK/J,MAAMmC,MAAO4H,EAAK/J,MAAMoC,OAAQ2H,EAAK/J,MAAMqC,aAChD0H,EAAK/J,MAAMsC,SAAUyH,EAAK/J,MAAMuC,MAAOwH,EAAK/J,MAAMwC,iBAClDuH,EAAK/J,MAAMyC,QAASsH,EAAK/J,MAAM0C,eAAgBqH,EAAK/J,MAAMohB,UAC1DrX,EAAK/J,MAAMoiB,UAAWrY,EAAK/J,MAAM6Q,UAEnC9G,EAAKG,SAAS,CAAC9G,OAAQsc,KAzHvB3V,EAAK/J,MAAQ,CACXkC,KAAM,GACNC,MAAO,GACPC,OAAQ,GACRG,MAAM,GACNC,iBAAkB,GAClBC,QAAS,GACTC,eAAgB,GAChBL,cAAc,EACdC,UAAU,EACVZ,GAAI,KACJrC,SAAS,EACT+D,OAAQ,GACRD,UAAU,EACVuX,cAAc,EACdzX,OAAQ,GACRke,UAAU,EACVC,UAAW,GACXgB,UAAW,KACXvR,UAAU,GAtBE9G,mFA2BhB,GAAInC,KAAKpB,MAAMsH,MAAM,KACZpM,EAAMkG,KAAKpB,MAAMsH,MAAMC,OAAvBrM,GACPkG,KAAKsC,SAAS,CACVxI,GAAIA,IAERkG,KAAKpB,MAAMyc,gBAAgBvhB,sDAIL6J,GACxB,IAAM2X,EAAW3X,EAAUtI,OAEvBhE,OAAO6G,KAAKod,GAAUhjB,QACxB0H,KAAKsC,SAAS,CACZhI,KAAMghB,EAAShhB,KACfC,MAAO+gB,EAAS/gB,MAChBC,OAAQ8gB,EAAS9gB,OACjBC,aAAc6gB,EAAS7gB,aACvBC,SAAU4gB,EAAS5gB,SACnBC,MAAO2gB,EAAS3gB,MAChBC,iBAAkB0gB,EAAS1gB,iBAC3BC,QAASygB,EAASzgB,QAClBC,eAAgBwgB,EAASxgB,eACzB0e,UAAWnL,KAAOiN,EAAS9B,UAAWnL,KAAOgL,eAAeC,SAC5DkB,UAAWc,EAASd,UACpBjf,SAAU+f,EAAS/f,SACnB9D,QAAS6jB,EAAS7jB,QAClB+D,OAAQ8f,EAAS9f,8CA0EV,IAAA+E,EACoBP,KAAKpB,MAA1BvD,EADCkF,EACDlF,OAAQwI,EADPtD,EACOsD,SADP2E,EAOcxI,KAAK5H,MALpBkC,EAFCkO,EAEDlO,KAAMC,EAFLiO,EAEKjO,MAAOI,EAFZ6N,EAEY7N,MACnBC,EAHO4N,EAGP5N,iBAAkBC,EAHX2N,EAGW3N,QAClBC,EAJO0N,EAIP1N,eAAgBL,EAJT+N,EAIS/N,aAChBD,EALOgO,EAKPhO,OAAQsY,EALDtK,EAKCsK,aAAcpY,EALf8N,EAKe9N,SACtB6e,EANO/Q,EAMP+Q,SAAUC,EANHhR,EAMGgR,UAAWgB,EANdhS,EAMcgS,UACrBhf,EAPOgN,EAOPhN,OAAQD,EAPDiN,EAOCjN,SAEV,OAAKF,EAAOA,QAAWE,EA+CjBiD,EAAAtF,EAAAuF,cAACgK,GAAD,CACIjN,OAAQA,GAAUA,EAAOC,OA9C3B+C,EAAAtF,EAAAuF,cAAC8c,GAAA,EAAD,CAAWC,OAAK,GACdhd,EAAAtF,EAAAuF,cAACgd,GAAA,EAAD,KACEjd,EAAAtF,EAAAuF,cAAC4Z,GAAA,EAAD,CAAMjU,SAAUpE,KAAK6X,WAAYnZ,UAAU,8DACzCF,EAAAtF,EAAAuF,cAACid,GAAD,CACErK,cAAerR,KAAKgX,aACpBzE,6BAA8BvS,KAAKsX,yBACnC1E,4BAA6B5S,KAAKuX,wBAClCvE,SAAUhT,KAAKyQ,OACf4C,cAAerT,KAAKmX,YACpBgC,iBAAkBnZ,KAAKgb,WACvBrB,qBAAsB3Z,KAAKmb,iBAC3BhB,mBAAoBna,KAAKkb,eACzBX,aAAcva,KAAKib,QAEnB3gB,KAAMA,EACNC,MAAOA,EACPI,MAAOA,EACPC,iBAAkBA,EAClBC,QAASA,EACTC,eAAgBA,EAChBL,aAAcA,EACdD,OAAQA,EACRqJ,SAAUA,EACVnJ,SAAUA,EACVoY,aAAcA,EACdyG,SAAUA,EACVC,UAAWA,EACXgB,UAAWA,EACXnf,OAAM,GAAAhC,OAAKgC,EAAOmf,WAElBhf,OAAQA,IAEZgD,EAAAtF,EAAAuF,cAACkd,GAAD,MACAnd,EAAAtF,EAAAuF,cAAC8I,GAAD,OAGF/I,EAAAtF,EAAAuF,cAACmd,GACKvgB,sCAcV,IACC5D,EAAWuI,KAAK5H,MAAhBX,QACP,OACI+G,EAAAtF,EAAAuF,cAAA,WACGhH,EAAS+G,EAAAtF,EAAAuF,cAACwJ,EAAD,MAAejI,KAAK0I,qBApMnBzH,aA2NVqC,eAjBS,SAAAlL,GACpB,MAAO,CACLiD,OAAQjD,EAAMiD,SAIO,SAAAgC,GACvB,MAAO,CACLge,gBAAiB,SAACvhB,GACduD,ECjOqB,SAACvD,GAC5B,OAAO,SAACuD,EAAUC,GACd,IAAIG,EAAU,CAACkL,eAAgB,oBAC1B/P,EAAS0E,IAAWnF,KAApBS,MACCgQ,EAAQ,kBAAAvP,OAAqBS,EAArB,KAKd,OAJIlB,IACA6E,EAAO,cAAP,SAAApE,OAAoCT,IAGjCiQ,MAAMD,EAAU,CAACnL,YACnBE,KAAK,SAAAmL,GACF,GAAIA,EAAItO,OAAS,IACb,OAAOsO,EAAIC,OAAOpL,KAAK,SAAAE,GACnB,MAAO,CAACrD,OAAQsO,EAAItO,OAAQqD,UAMhC,MAFA+B,QAAM/D,MAAM,mBACZkC,QAAQC,IAAI,iBACN8K,IAIbnL,KAAK,SAAAmL,GACF,GAAmB,MAAfA,EAAItO,OACJ,OAAO6C,EAAS,CAAC5E,KAAM,oBAAqB4C,OAAQyN,EAAIjL,OACrD,GAAmB,MAAfiL,EAAItO,QAAiC,MAAfsO,EAAItO,OAGjC,MAFAoF,QAAM/D,MAAM,2BACZwB,EAAS,CAAC5E,KAAM,uBAAwB4C,OAAQyN,EAAIjL,OAC9CiL,EAAIjL,KAEU,MAAfiL,EAAItO,SACToF,QAAM/D,MAAM,4BACZwB,EAAS,CAAC5E,KAAM,yBAIvBqF,MAAM,SAAAjC,GAGHkC,QAAQC,IAAI,QAASnC,MDyLlBR,CAAuBvB,KAEpCshB,iBAAkB,SAACthB,EAAIQ,EAAMC,EAAOC,EAAQC,EAAcC,EAAUC,EAAOC,EAAkBC,EAASC,EAAgB0e,EAAWgB,EAAWvR,GACxI5L,ECrLsB,SAACvD,EAAIQ,EAAMC,EAAOC,EAAQC,EAAcC,EAAUC,EAAOC,EAAkBC,EAASC,EAAgB0e,EAAWgB,EAAWvR,GACtJ,OAAO,SAAC5L,EAAUC,GAEd,IAAIG,EAAU,CAACoe,OAAU,oBAGpBjjB,EAAS0E,IAAWnF,KAApBS,MAEDA,IACA6E,EAAO,cAAP,SAAApE,OAAoCT,IAExC,IAAI0R,EAAW,IAAIC,SA6BnB,OA5BAD,EAASI,OAAO,OAAQpQ,GACxBgQ,EAASI,OAAO,QAASnQ,GACzB+P,EAASI,OAAO,SAAUlQ,GAC1B8P,EAASI,OAAO,eAAgBjQ,GAChC6P,EAASI,OAAO,WAAYhQ,GAC5B4P,EAASI,OAAO,QAAS/P,GACzB2P,EAASI,OAAO,mBAAoB9P,GACpC0P,EAASI,OAAO,UAAW7P,GAEvBC,GACAwP,EAASI,OAAO,iBAAkB5P,GAIlCmO,KACqB,kBAAduR,GAA0BA,aAAqBhQ,SACtDF,EAASI,OAAO,YAAa8P,GAI7BhB,EACyB,iBAArBhP,OAAOgP,IACPlP,EAASI,OAAO,YAAa8O,EAAUsC,eAG3CxR,EAASI,OAAO,YAAa,IAG1B7B,MAAK,kBAAAxP,OADCS,EACD,KAA8B,CAAC2D,UAASmP,OAAQ,MAAO8B,KAAMpE,IACpE3M,KAAK,SAAAmL,GACF,GAAIA,EAAItO,OAAS,IACb,OAAOsO,EAAIC,OAAOpL,KAAK,SAAAE,GACnB,MAAO,CAACrD,OAAQsO,EAAItO,OAAQqD,UAKhC,MAFA+B,QAAM/D,MAAM,mBACZkC,QAAQC,IAAI,iBACN8K,IAGbnL,KAAK,SAAAmL,GACF,GAAmB,MAAfA,EAAItO,OAEJ,OADAoF,QAAMyG,KAAK,YAAYyC,EAAIjL,KAAKvD,KAAK,WAC9B+C,EAAS,CAAC5E,KAAM,qBAAsB4C,OAAQyN,EAAIjL,KAAM/D,OAC5D,GAAmB,MAAfgP,EAAItO,QAAiC,MAAfsO,EAAItO,OAGjC,MAFAoF,QAAM/D,MAAM,2BACZwB,EAAS,CAAC5E,KAAM,uBAAwBoF,KAAMiL,EAAIjL,OAC5CiL,EAAIjL,QD0HXxC,CAAwBvB,EAAIQ,EAAMC,EAAOC,EAAQC,EAAcC,EAAUC,EAAOC,EAAkBC,EAASC,EAAgB0e,EAAWgB,EAAWvR,OAKrJ3F,CAA6CyX,mCErO/CgB,GAAb,SAAAjc,GAAA,SAAAic,IAAA,OAAA1kB,OAAA0I,EAAA,EAAA1I,CAAA2I,KAAA+b,GAAA1kB,OAAA4I,EAAA,EAAA5I,CAAA2I,KAAA3I,OAAA6I,EAAA,EAAA7I,CAAA0kB,GAAA5b,MAAAH,KAAA3H,YAAA,OAAAhB,OAAA+I,EAAA,EAAA/I,CAAA0kB,EAAAjc,GAAAzI,OAAAgJ,EAAA,EAAAhJ,CAAA0kB,EAAA,EAAA3d,IAAA,SAAAkC,MAAA,WACW,IAAAC,EAMHP,KAAKpB,MALDtE,EADDiG,EACCjG,KAAMC,EADPgG,EACOhG,MAAOI,EADd4F,EACc5F,MACnBC,EAFK2F,EAEL3F,iBAAkBC,EAFb0F,EAEa1F,QAClBC,EAHKyF,EAGLzF,eAAgBL,EAHX8F,EAGW9F,aAEhBe,EALK+E,EAKL/E,OAGF,OACEgD,EAAAtF,EAAAuF,cAAA,WACED,EAAAtF,EAAAuF,cAAC+U,GAAD,CACEnC,cAAerR,KAAKpB,MAAMyS,cAC1B/W,KAAMA,EACNkB,OAAQA,IAEVgD,EAAAtF,EAAAuF,cAACgV,GAAD,CACEpC,cAAerR,KAAKpB,MAAMyS,cAC1B9W,MAAOA,EACPiB,OAAQA,IAEVgD,EAAAtF,EAAAuF,cAACiV,GAAD,CACErC,cAAerR,KAAKpB,MAAMyS,cAC1B1W,MAAOA,EACPa,OAAQA,IAEVgD,EAAAtF,EAAAuF,cAACkV,GAAD,CACEtC,cAAerR,KAAKpB,MAAMyS,cAC1BzW,iBAAkBA,EAClBY,OAAQA,IAEVgD,EAAAtF,EAAAuF,cAACmV,GAAD,CACEvC,cAAerR,KAAKpB,MAAMyS,cAC1BxW,QAASA,EACTW,OAAQA,IAEVgD,EAAAtF,EAAAuF,cAACoV,GAAD,CACExC,cAAerR,KAAKpB,MAAMyS,cAC1BvW,eAAgBA,EAChBU,OAAQA,IAGVgD,EAAAtF,EAAAuF,cAACqV,GAAD,CACEvB,6BAA8BvS,KAAKpB,MAAM2T,6BACzC9X,aAAcA,SA5CxBshB,EAAA,CAAsC9a,aCQhC+a,eACF,SAAAA,EAAYpd,GAAM,IAAAuD,EAAA,OAAA9K,OAAA0I,EAAA,EAAA1I,CAAA2I,KAAAgc,IACd7Z,EAAA9K,OAAA4I,EAAA,EAAA5I,CAAA2I,KAAA3I,OAAA6I,EAAA,EAAA7I,CAAA2kB,GAAA5Z,KAAApC,KAAMpB,KAyBVuX,UAAY,WACVhU,EAAKG,SAAS,CAAChI,KAAM,GAAIC,MAAO,GAAII,MAAM,GAAIa,OAAQ,GAAIhB,OAAQ,YAChEC,cAAc,EAAOG,iBAAkB,GAAIC,QAAS,GACpDC,eAAgB,MA7BFqH,EAgClB6U,aAAe,SAACC,GAAM,IAAAC,EACpBD,EAAE5J,iBACF,IAAIjP,EAAM6Y,EAAE5H,OAAO/K,KACfhE,EAAQ2W,EAAE5H,OAAO/O,MACrB6B,EAAKG,UAAL4U,EAAA,GAAA7f,OAAAiY,GAAA,EAAAjY,CAAA6f,EACK9Y,EAAMkC,GADXjJ,OAAAiY,GAAA,EAAAjY,CAAA6f,EAAA,SAEY,IAFZA,KApCgB/U,EAyClBgV,YAAc,SAACF,GACb9U,EAAKG,SAAS,CAAC9H,OAAQyc,EAAEG,cAAcC,eA1CvBlV,EA6ClBmV,yBAA2B,WACzBnV,EAAKG,SAAS,CACZ7H,cAAe0H,EAAK/J,MAAMqC,gBA/CZ0H,EAmDlB0V,WAAa,SAACZ,GACZA,EAAE5J,iBAEF,IAAMyK,EAAoBlC,GAAiBzT,EAAK/J,OAEF,IAA1Cf,OAAO6G,KAAK4Z,GAAmBxf,OACjC6J,EAAKvD,MAAMqd,cAAc9Z,EAAK/J,MAAMkC,KAAM6H,EAAK/J,MAAMmC,MAAO4H,EAAK/J,MAAMoC,OACrE2H,EAAK/J,MAAMqC,aAAc0H,EAAK/J,MAAMuC,MAAOwH,EAAK/J,MAAMwC,iBACtDuH,EAAK/J,MAAMyC,QAASsH,EAAK/J,MAAM0C,gBAC9B6C,KAAKwE,EAAKG,SAAS,CAAE4Z,mBAAmB,KACxCpe,MAAM,SAAUjC,GACdkC,QAAQC,IAAI,QAASnC,KAG1BsG,EAAKG,SAAS,CAAC9G,OAAQsc,KA/DvB3V,EAAK/J,MAAQ,CACXkC,KAAM,GACNC,MAAO,GACPI,MAAO,GACPH,OAAQ,YACRI,iBAAkB,GAClBC,QAAS,GACTC,eAAgB,GAChBL,cAAc,EACdX,GAAI,KACJkW,aAAa,EACbxU,OAAQ,GACR0gB,mBAAmB,GAdP/Z,yFAkBQwB,GACpB3D,KAAK5H,MAAM8jB,mBACblc,KAAKsC,SAAS,CACZxI,GAAI6J,EAAUtI,OAAOvB,sCAgDjB,IAAA0O,EAIOxI,KAAK5H,MAHVkC,EADFkO,EACElO,KAAMC,EADRiO,EACQjO,MAAOI,EADf6N,EACe7N,MACnBC,EAFI4N,EAEJ5N,iBAAkBC,EAFd2N,EAEc3N,QAClBC,EAHI0N,EAGJ1N,eAAgBL,EAHZ+N,EAGY/N,aAChBe,EAJIgN,EAIJhN,OAEF,OAAIwE,KAAK5H,MAAM8jB,mBAAqBlc,KAAK5H,MAAM0B,GAE3C0E,EAAAtF,EAAAuF,cAAC0d,GAAA,EAAD,CAAUrb,GAAI,CAACC,SAAQ,cAAA1H,OAAe2G,KAAK5H,MAAM0B,OAIjD0E,EAAAtF,EAAAuF,cAAA,WACED,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,aACbF,EAAAtF,EAAAuF,cAAA,sBAEFD,EAAAtF,EAAAuF,cAAC2d,GAAAljB,EAAD,CAAMkL,SAAUpE,KAAK6X,WAAYnZ,UAAU,8BACzCF,EAAAtF,EAAAuF,cAAC4d,GAAD,CACEhL,cAAerR,KAAKgX,aACpBzE,6BAA8BvS,KAAKsX,yBAEnChd,KAAMA,EACNC,MAAOA,EACPI,MAAOA,EACPC,iBAAkBA,EAClBC,QAASA,EACTC,eAAgBA,EAChBL,aAAcA,EAEde,OAAQA,IAEVgD,EAAAtF,EAAAuF,cAAA,WACED,EAAAtF,EAAAuF,cAACkd,GAAD,MACAnd,EAAAtF,EAAAuF,cAAC6d,GAAD,CACEnV,QAASnH,KAAKmW,YAEhB3X,EAAAtF,EAAAuF,cAAC8I,GAAD,gBA1GItG,aAiIPqC,eAfS,SAAAlL,GACpB,MAAO,CACLiD,OAAQjD,EAAMiD,SAIO,SAAAgC,GACvB,MAAO,CACH4e,cAAe,SAAC3hB,EAAMC,EAAOC,EAAQC,EAAcE,EAAOC,EAAkBC,EAASC,GACjF,OAAOuC,EFvBU,SAAC/C,EAAMC,EAAOC,EAAQC,EAAcE,EAAOC,EAAkBC,EAASC,GAC/F,OAAO,SAACuC,EAAUC,GACd,IAAIG,EAAU,CAACkL,eAAgB,oBAC1B/P,EAAS0E,IAAWnF,KAApBS,MAEDA,IACA6E,EAAO,cAAP,SAAApE,OAAoCT,IAGxC,IAAI8V,EAAOhP,KAAKC,UAAU,CAACrF,OAAMC,QAAOC,SAAQC,eAAcE,QAAOC,mBAAkBC,UAASC,mBAChG,OAAO+N,MAAM,kBAAmB,CAACpL,UAASmP,OAAQ,OAAQ8B,SACrD/Q,KAAK,SAAAmL,GACF,GAAIA,EAAItO,OAAS,IACb,OAAOsO,EAAIC,OAAOpL,KAAK,SAAAE,GACnB,MAAO,CAACrD,OAAQsO,EAAItO,OAAQqD,UAIhC,MADAE,QAAQC,IAAI,iBACN8K,IAGbnL,KAAK,SAAAmL,GACF,GAAmB,MAAfA,EAAItO,OAEJ,OADAoF,QAAMyG,KAAK,YAAYyC,EAAIjL,KAAKvD,KAAK,UAC9B+C,EAAS,CAAC5E,KAAM,kBAAmB4C,OAAQyN,EAAIjL,OACnD,GAAmB,MAAfiL,EAAItO,QAAiC,MAAfsO,EAAItO,OAEjC,MADA6C,EAAS,CAAC5E,KAAM,uBAAwBoF,KAAMiL,EAAIjL,OAC5CiL,EAAIjL,QEJFxC,CAAqBf,EAAMC,EAAOC,EAAQC,EAAcE,EAAOC,EAAkBC,EAASC,OAMvGwI,CAA6C0Y,ICrItDO,eACF,SAAAA,EAAY3d,GAAO,IAAAuD,EAAA,OAAA9K,OAAA0I,EAAA,EAAA1I,CAAA2I,KAAAuc,IACjBpa,EAAA9K,OAAA4I,EAAA,EAAA5I,CAAA2I,KAAA3I,OAAA6I,EAAA,EAAA7I,CAAAklB,GAAAna,KAAApC,KAAMpB,KACDxG,MAAQ,CACXX,SAAS,EACT+D,OAAQ,GACRE,KAAM,IALSyG,mFAUbnC,KAAKpB,MAAMsH,OACblG,KAAKpB,MAAM4d,+DAIIlU,GACjB,GAAItI,KAAKpB,MAAMlD,OAAS4M,EAAU5M,MAC5BsE,KAAKpB,MAAMlD,KAAM,CACnB,IAAMC,EC5BY,SAACA,GAG3B,IAAI8gB,EAAW9gB,EAqCf,OAnCA8gB,EAAShS,QAAQ,SAAAiN,GAEf,IAAIgF,EAAiBhF,EAAKiF,UAAYjF,EAAKkF,UAAYlF,EAAKmF,SAExDC,EAAcpF,EAAKqF,MACnBC,EAAY,EACZC,EAAc,EAGlB,IAAI,IAAI7e,KAAOsZ,EAAKwF,OAAO,CACzB,IAAI5c,EAAQoX,EAAKwF,OAAO9e,GAEpBse,GAAiB,KACbA,GAAgBte,EAChB4e,GAAa,GAAG1c,EAEZ6c,KAAKC,KAAKV,EAAe,MAAQte,EAAI,KACrC4e,IAAcN,EAAe,GAAGte,GAAKkC,IAK7Cwc,GAAeJ,GAAiB,KAC5BI,GAAe1e,EACf6e,GAAe,GAAG3c,EAEd6c,KAAKC,KAAKN,EAAY,MAAQ1e,EAAI,KAClC6e,IAAgBH,EAAY,GAAG1e,GAAKkC,IAMlDoX,EAAK2F,MAAOL,EAAUC,IAEjBR,EDZea,CAAatd,KAAKpB,MAAMlD,KAAKC,OAC3CqE,KAAKsC,SAAS,CAAC3G,MAAOA,8CAIX,IACPD,EAASsE,KAAKpB,MAAdlD,KACN,GAAIA,EAAKC,MACP,OACE6C,EAAAtF,EAAAuF,cAAA,WACED,EAAAtF,EAAAuF,cAAA,wBACAD,EAAAtF,EAAAuF,cAAC4I,GAAA,EAAD,CAAO3I,UAAU,oBAAoB4I,SAAO,GAC1C9I,EAAAtF,EAAAuF,cAAA,aACED,EAAAtF,EAAAuF,cAAA,UACED,EAAAtF,EAAAuF,cAAA,MAAIC,UAAU,mCAAd,KACAF,EAAAtF,EAAAuF,cAAA,MAAIC,UAAU,kBAAd,aACAF,EAAAtF,EAAAuF,cAAA,MAAIC,UAAU,kBAAd,eACAF,EAAAtF,EAAAuF,cAAA,MAAIC,UAAU,kBAAd,aACAF,EAAAtF,EAAAuF,cAAA,MAAIC,UAAU,kBAAd,aACAF,EAAAtF,EAAAuF,cAAA,MAAIC,UAAU,kBAAd,YACAF,EAAAtF,EAAAuF,cAAA,MAAIC,UAAU,kBAAd,kBAGJF,EAAAtF,EAAAuF,cAAA,aACG/C,EAAKC,MAAMrD,OAAS,EAAIoD,EAAKC,MAAM1C,IAAI,SAACye,EAAK5d,GAAN,OACtC0E,EAAAtF,EAAAuF,cAAA,MAAIL,IAAKtE,GACL0E,EAAAtF,EAAAuF,cAAA,MAAI4W,MAAM,MAAM3W,UAAU,mBAAmB5E,EAAG,GAChD0E,EAAAtF,EAAAuF,cAAA,UACED,EAAAtF,EAAAuF,cAACoC,EAAA,EAAD,CAAMnC,UAAU,YAAYoC,GAAI,CAACC,SAAQ,YAAA1H,OAAaqe,EAAK5d,IACvD1B,MAAO,CAAC4I,eAAe,EAAOsU,SAAUle,OAAOme,SAASxU,YACpD2W,EAAKxH,QAEf1R,EAAAtF,EAAAuF,cAAA,UAAKiZ,EAAK6F,OACV/e,EAAAtF,EAAAuF,cAAA,UAAKiZ,EAAKkF,WACVpe,EAAAtF,EAAAuF,cAAA,UAAKiZ,EAAKiF,WACVne,EAAAtF,EAAAuF,cAAA,UAAKiZ,EAAKmF,UACVre,EAAAtF,EAAAuF,cAAA,UAAKiZ,EAAK2F,UAEX7e,EAAAtF,EAAAuF,cAAA,UAAID,EAAAtF,EAAAuF,cAAA,MAAI+e,QAAQ,KAAZ,2EAOb,IACA/lB,EAAYuI,KAAKpB,MAAjBnH,QACR,OACI+G,EAAAtF,EAAAuF,cAAA,WACIhH,EAAU+G,EAAAtF,EAAAuF,cAACwJ,EAAD,MAAiBjI,KAAKyd,yBApEvBxc,aAyFRqC,eAfS,SAAAlL,GACpB,MAAO,CACLsD,KAAMtD,EAAMsD,KACZjE,QAASW,EAAMsD,KAAKjE,UAIC,SAAA4F,GACvB,MAAO,CACLmf,kBAAmB,WACfnf,EE5FC,SAACA,EAAUC,GACd,IAAIG,EAAU,CAACkL,eAAgB,oBAC1B/P,EAAS0E,IAAWnF,KAApBS,MAML,OAJIA,IACA6E,EAAO,cAAP,SAAApE,OAAoCT,IAGjCiQ,MALO,iBAKS,CAACpL,YACnBE,KAAK,SAAAmL,GACF,GAAIA,EAAItO,OAAS,IACb,OAAOsO,EAAIC,OAAOpL,KAAK,SAAAE,GACnB,MAAO,CAACrD,OAAQsO,EAAItO,OAAQqD,UAOhC,MADAE,QAAQC,IAAI,iBACN8K,IAIbnL,KAAK,SAAAmL,GACF,GAAmB,MAAfA,EAAItO,OACJ,OAAO6C,EAAS,CAAC5E,KAAM,sBAAuBkD,MAAOmN,EAAIjL,OACtD,GAAmB,MAAfiL,EAAItO,QAAiC,MAAfsO,EAAItO,OAEjC,MADA6C,EAAS,CAAC5E,KAAM,uBAAwBoF,KAAMiL,EAAIjL,OAC5CiL,EAAIjL,KACP,GAAmB,MAAfiL,EAAItO,OAEX,MADA6C,EAAS,CAAC5E,KAAM,kBAAmBkD,MAAOmN,EAAIjL,OACxCiL,EAAIjL,YFkEfyF,CAA6CiZ,IG1C7CmB,GA9BK,kBAChBlf,EAAAtF,EAAAuF,cAAA,WACID,EAAAtF,EAAAuF,cAACkf,GAAA,EAAD,KACInf,EAAAtF,EAAAuF,cAACmf,GAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIvZ,UAAW,SAAA3F,GAAK,OAAIJ,EAAAtF,EAAAuF,cAACsf,GAAYnf,MACvDJ,EAAAtF,EAAAuF,cAACmf,GAAA,EAAD,CAAOE,KAAK,UAAUvZ,UAAW,KAAMnG,IAAI,WAC3CI,EAAAtF,EAAAuF,cAACmf,GAAA,EAAD,CAAOE,KAAK,SAASvZ,UAAW,SAAA3F,GAAK,OAAIJ,EAAAtF,EAAAuF,cAACuf,GAAUpf,MACpDJ,EAAAtF,EAAAuF,cAACmf,GAAA,EAAD,CAAOE,KAAK,UAAUvZ,UAAW,SAAA3F,GAAK,OAAIJ,EAAAtF,EAAAuF,cAACwf,GAAWrf,MACtDJ,EAAAtF,EAAAuF,cAACmf,GAAA,EAAD,CAAOE,KAAK,UAAUvZ,UAAW,SAAA3F,GAAK,OAAIJ,EAAAtF,EAAAuF,cAACyf,GAAWtf,MACtDJ,EAAAtF,EAAAuF,cAACmf,GAAA,EAAD,CAAOE,KAAK,iCAAiCvZ,UAAW,SAAA3F,GAAK,OAAIJ,EAAAtF,EAAAuF,cAAC0f,GAAsBvf,MACxFJ,EAAAtF,EAAAuF,cAACmf,GAAA,EAAD,CAAOE,KAAK,eAAevZ,UAAW,SAAA3F,GAAK,OAAIJ,EAAAtF,EAAAuF,cAAC2f,GAAexf,MAC/DJ,EAAAtF,EAAAuF,cAACmf,GAAA,EAAD,CAAOE,KAAK,kBAAkBvZ,UAAW,SAAA3F,GAAK,OAAIJ,EAAAtF,EAAAuF,cAAC4f,GAAkBzf,MACrEJ,EAAAtF,EAAAuF,cAACmf,GAAA,EAAD,CAAOE,KAAK,uBAAuBvZ,UAAW,SAAA3F,GAAK,OAAIJ,EAAAtF,EAAAuF,cAAC6f,GAAsB1f,MAC9EJ,EAAAtF,EAAAuF,cAACmf,GAAA,EAAD,CAAOE,KAAK,2BAA2BvZ,UAAW,SAAA3F,GAAK,OAAIJ,EAAAtF,EAAAuF,cAAC8f,GAAyB3f,MACrFJ,EAAAtF,EAAAuF,cAACmf,GAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,WAAWvZ,UAAWhB,GAAYwE,MACpDvJ,EAAAtF,EAAAuF,cAACmf,GAAA,EAAD,CAAOE,KAAK,eAAevZ,UAAWhB,GAAY8E,MAClD7J,EAAAtF,EAAAuF,cAACmf,GAAA,EAAD,CAAOE,KAAK,gBAAgBvZ,UAAWhB,GAAYib,MACnDhgB,EAAAtF,EAAAuF,cAACmf,GAAA,EAAD,CAAOE,KAAK,mBAAmBvZ,UAAWhB,GAAYqH,MACtDpM,EAAAtF,EAAAuF,cAACmf,GAAA,EAAD,CAAOE,KAAK,sBAAsBvZ,UAAWhB,GAAY8M,MACzD7R,EAAAtF,EAAAuF,cAACmf,GAAA,EAAD,CAAOE,KAAK,qBAAqBvZ,UAAWhB,GAAYuM,MACxDtR,EAAAtF,EAAAuF,cAACmf,GAAA,EAAD,CAAOE,KAAK,eAAevZ,UAAWhB,GAAYkb,MAClDjgB,EAAAtF,EAAAuF,cAACmf,GAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,aAAavZ,UAAWhB,GAAY2S,MACtD1X,EAAAtF,EAAAuF,cAACmf,GAAA,EAAD,CAAOE,KAAK,iBAAiBvZ,UAAWhB,GAAYyY,MACpDxd,EAAAtF,EAAAuF,cAACmf,GAAA,EAAD,CAAOE,KAAK,iBAAiBvZ,UAAWhB,GAAYwX,MACpDvc,EAAAtF,EAAAuF,cAACmf,GAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,YAAYvZ,UAAWhB,GAAYgZ,MAErD/d,EAAAtF,EAAAuF,cAACmf,GAAA,EAAD,CAAOrZ,UAAW,SAAA3F,GAAK,OAAIJ,EAAAtF,EAAAuF,cAACgK,GAAc7J,SC5CjC8f,oLAGb,OACIlgB,EAAAtF,EAAAuF,cAAA,WACID,EAAAtF,EAAAuF,cAACkgB,GAAD,MACAngB,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,aACXF,EAAAtF,EAAAuF,cAACmgB,EAAA,eAAD,CACEC,iBAAiB,EACjBC,SAAS,eACTC,UAAW,IACXC,mBAAmB,IAExBxgB,EAAAtF,EAAAuF,cAACwgB,GAAD,eAbgBhe,aCG3Bie,GAAcC,QACW,cAA7B/nB,OAAOme,SAAS6J,UAEe,UAA7BhoB,OAAOme,SAAS6J,UAEhBhoB,OAAOme,SAAS6J,SAASlZ,MACvB,2DAsCN,SAASmZ,GAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACT3hB,KAAK,SAAA+hB,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBxnB,QACfmnB,UAAUC,cAAcO,WAK1BhiB,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBF,MAAM,SAAAjC,GACLkC,QAAQlC,MAAM,4CAA6CA,MA3DlD,WACb,GAA6C,kBAAmB0jB,UAAW,CAGzE,GADkB,IAAIS,IAAIC,kBAAwB7oB,OAAOme,UAC3C2K,SAAW9oB,OAAOme,SAAS2K,OAIvC,OAGF9oB,OAAO+oB,iBAAiB,OAAQ,WAC9B,IAAMb,EAAK,GAAAjmB,OAAM4mB,kBAAN,sBAEPf,IAiDV,SAAiCI,GAE/BzW,MAAMyW,GACH3hB,KAAK,SAAAC,GAGkB,MAApBA,EAASpD,SACuD,IAAhEoD,EAASH,QAAQD,IAAI,gBAAgBsX,QAAQ,cAG7CyK,UAAUC,cAAcY,MAAMziB,KAAK,SAAA+hB,GACjCA,EAAaW,aAAa1iB,KAAK,WAC7BvG,OAAOme,SAAS+K,aAKpBjB,GAAgBC,KAGnBxhB,MAAM,WACLC,QAAQC,IACN,mEArEAuiB,CAAwBjB,GAIxBC,UAAUC,cAAcY,MAAMziB,KAAK,WACjCI,QAAQC,IACN,+GAMJqhB,GAAgBC,MC7BxBkB,GAEA,IAAM5nB,GAAQqM,aAAawb,QAAQ,SAE/B7nB,IACAmD,EAAMsB,SAASF,EAAUvE,KAG7B8nB,IAASC,OACLniB,EAAAtF,EAAAuF,cAACmiB,EAAA,EAAD,CAAU7kB,MAAOA,GACbyC,EAAAtF,EAAAuF,cAACoiB,EAAA,EAAD,KACIriB,EAAAtF,EAAAuF,cAACqiB,GAAD,QAGNC,SAASC,eAAe","file":"js/main.91fe4afc.chunk.js","sourcesContent":["'use strict';\n\nif (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where React gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes React's erratic future behavior.\n  require('promise/lib/rejection-tracking').enable();\n\n  window.Promise = require('promise/lib/es6-extensions.js');\n} // fetch() polyfill for making API calls.\n\n\nrequire('whatwg-fetch'); // Object.assign() is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\n\n\nObject.assign = require('object-assign'); // In tests, polyfill requestAnimationFrame since jsdom doesn't provide it yet.\n// We don't polyfill it in the browser--this is user's responsibility.\n\nif (process.env.NODE_ENV === 'test') {\n  require('raf').polyfill(global);\n}","const initialState = [{noteitems: [], \n                       loading: true\n                    }]\n\nexport default function notes(state=initialState, action) {\n    //собрать все массивы с ключами noteitems и объединить в один массив\n    let noteList = state.map(a => a.noteitems).reduce((a, b) => [...a, ...b], []).slice();\n\n    switch (action.type) {\n\n        case 'FETCH_NOTES':\n            //удаление дубликатов\n            noteList = noteList.filter((noteList, index, self) => self.findIndex(t => t.created_at === noteList.created_at && t.id === noteList.id) === index)\n            \n            return [                    \n                    {...state[state.length-1],\n                    noteitems: noteList,\n                    loading: false,\n                    fetching: false,\n                    // deleted: false\n                    // ...action.notes\n                    },\n                ];\n        case 'SEARCH_NOTES':\n        \n            return [                    \n\n                    {...state,\n                    ...action.notes,\n                    loading: false,},\n                ];\n\n        case 'ORDER_NOTES':\n       \n            return [                    \n\n                    {...state,\n                    ...action.notes,\n                    loading: false,},\n                ];\n\n\n        case 'ADD_NOTE':\n            // Добавляем заметку\n            noteList.unshift(action.note);\n            // Удаляем нижнюю\n            // if (noteList.length > 0) {\n            //     noteList.pop();\n            // }\n\n            return [\n                        //берем последний стейт и добавляем к нему общий массив\n                        {...state[state.length-1],\n                            noteitems: noteList,\n                            loading: false,},\n\n                    ];\n\n        case 'UPDATE_NOTE':\n\n            //Поиск в общем массиве элемента по id и index (2мерный массив)\n            let selectById = state[action.index].noteitems[action.id].id\n            let indexEdit = noteList.findIndex(p => p.id === selectById) \n\n            let noteToUpdate = noteList[indexEdit]\n            noteToUpdate.text = action.note.text;\n            noteToUpdate.phone = action.note.phone;\n            noteToUpdate.status = action.note.status;\n            noteToUpdate.is_corporate = action.note.is_corporate;\n            noteToUpdate.is_payed = action.note.is_payed;\n            noteToUpdate.email = action.note.email;\n            noteToUpdate.linkedin_profile = action.note.linkedin_profile;\n            noteToUpdate.website = action.note.website;\n            noteToUpdate.correspondence = action.note.correspondence;\n            noteList.splice(indexEdit, 1, noteToUpdate);\n            return [\n                    {...state[state.length-1],\n                        noteitems: noteList,\n                        loading: false,},\n                    ];\n\n        case 'DELETE_NOTE':\n            //Поиск в общем массиве элемента по id и index (2мерный массив)\n            let deleteById = state[action.id].noteitems[action.index].id\n            let indexDel = noteList.findIndex(p => p.id === deleteById)                      \n            noteList.splice(indexDel, 1);\n            return [\n                        {...state[state.length-1],\n                            noteitems: noteList,\n                            loading: false,\n                            nextafterdelete: state[0].next,\n                            deleted: true\n                        }\n                    ];\n\n        default:\n            \n    }\n    return state;\n}\n","export const AuthTypes = {\n    LOGIN: \"LOGIN\",\n    LOGOUT: \"LOGOUT\",\n    CHANGE_PASSWORD: \"CHANGE_PASSWORD\",\n    USER_PROFILE: \"USER_PROFILE\",\n    // WITH_ERROR: \"WITH_ERROR\"\n};","import {combineReducers} from \"redux\";\nimport { reducer as formReducer } from \"redux-form\";\n\nimport notesReducer from \"./notesReducer\";\nimport noteDetailReducer from \"./noteDetailReducer\";\nimport userDetailReducer from \"./userDetailReducer\";\nimport authReducer from \"./authReducer\";\nimport paymentsReducer from \"./paymentsReducer\";\n// import { routerReducer } from 'react-router-redux'\n\nconst rootReducer = combineReducers({\n    form: formReducer,\n    auth: authReducer,\n    notes: notesReducer,\n    detail: noteDetailReducer,\n    lead: paymentsReducer,\n    userdetail: userDetailReducer,\n    // routing: routerReducer\n});\n\nexport default rootReducer;\n\n\n","import { AuthTypes } from \"../constants/actionTypes\";\n\nexport default function(state = {loading: true}, action) {\n    switch(action.type) {\n        case AuthTypes.LOGIN:\n            return { ...state, authenticated: true, token: action.payload};\n        case AuthTypes.LOGOUT:\n            return { ...state, authenticated: false, token: null};\n        case AuthTypes.USER_PROFILE:\n            return { ...state, user: action.payload, loading: false};\n        // case AuthTypes.WITH_ERROR:\n        //     return { ...state, error: action.payload};\n        default:\n        \t// will NOT execute because of the line preceding the switch.\n    }\n    return state;\n}","export default function noteDetailReducer(state = {loading: true, updated: false, hasError: false, errors: {}}, action) {\n    switch(action.type) {\n\n        case 'FETCH_DETAIL_NOTE':\n            return { ...state, ...action.detail, loading: false, hasError: false, errors: {}};\n        case 'UPDATE_DETAIL_NOTE':\n            return { ...state, ...action.detail, loading: false, updated: true, hasError: false, errors: {}};\n        case 'ADD_DETAIL_NOTE':\n            return { ...state, ...action.detail, loading: false, hasError: false, errors: {}};\n\n        case 'MESSAGE_NOT_FOUND':\n            return {...state, \n                hasError: true,\n                errors: {page: \"Investor not found\"},\n                loading: false,\n            };\n\n        default:\n          // will NOT execute because of the line preceding the switch.\n    }\n    return state;\n}","export default function paymentsReducer(state = {leads: \"\", loading: true, loaded: false}, action) {\n    switch(action.type) {\n        case 'FETCH_PAYMENTS_LEAD':\n            return { ...state, leads: [...action.leads], loading: false, loaded: true }\n        case 'LEAD_NOT_FOUND':\n            return {...state, loading: false, error: \"Not found\"};\n        default:\n          // will NOT execute because of the line preceding the switch.\n    }\n    return state;\n}","export default function userDetailReducer(state = {loading: true}, action) {\n    switch(action.type) {\n\n        case 'FETCH_USER_DETAIL':\n            return { ...state, \n                ...action.userdetail, \n                hasError: false,\n                errors: {},\n                loading: false,\n            };\n        // case 'UPDATE_DETAIL_NOTE':\n        //     return { ...state, ...action.detail, loading: false, updated: true};\n        // case 'ADD_DETAIL_NOTE':\n        //     return { ...state, ...action.detail, loading: false};\n\n        case 'USER_NOT_FOUND':\n            return {...state, \n                hasError: true,\n                errors: {page: \"User not found\"},\n                loading: false,\n            };\n\n        default:\n          // will NOT execute because of the line preceding the switch.\n    }\n    return state;\n}","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from '../reducers';\n\nfunction configureStore(initialState) {\n    let createStoreWithMiddleware;\n\n    const logger = createLogger();\n    const middleware = applyMiddleware(thunk, logger);\n\n    createStoreWithMiddleware = compose(\n        middleware\n    );\n\n    return createStoreWithMiddleware(createStore)(rootReducer, initialState);\n}\n\nlet store = configureStore();\n\nexport default store;","export let ROOT_URL = \"http://localhost:8000/\";\n\n// FOR PRODUCTION URLS\nconst HOMEPAGE_URL = require('../../package.json').homepage;\n\nif (process.env.NODE_ENV === \"production\") {\n\tROOT_URL = HOMEPAGE_URL\n}\n\nexport const AuthUrls = {\n    LOGIN: `${ROOT_URL}rest-auth/login/`,\n    SIGNUP: `${ROOT_URL}rest-auth/registration/`,\n    CHANGE_PASSWORD: `${ROOT_URL}rest-auth/password/change/`,\n    RESET_PASSWORD: `${ROOT_URL}rest-auth/password/reset/`,\n    RESET_PASSWORD_CONFIRM: `${ROOT_URL}rest-auth/password/reset/confirm/`,\n    USER_ACTIVATION: `${ROOT_URL}rest-auth/registration/verify-email/`,\n    USER_PROFILE: `${ROOT_URL}rest-auth/user/`\n};","export function getUserToken(state) {\n    return state.auth.token;\n}","import axios from \"axios\";\nimport { SubmissionError } from 'redux-form';\n// import { actions as notifActions } from 'redux-notifications';\nimport { AuthTypes } from \"../constants/actionTypes\";\nimport { AuthUrls } from \"../constants/urls\";\nimport store from \"../store\";\nimport { getUserToken } from \"../utils/authUtils\";\nimport { toast } from 'react-toastify';\n\n// const { notifSend } = notifActions;\nexport function authLogin(token) {\n    return {\n        type: AuthTypes.LOGIN,\n        payload: token,\n    };\n}\n\nexport function loginUser(formValues, dispatch, props) {\n        const loginUrl = AuthUrls.LOGIN;\n\n        return axios.post(loginUrl, formValues).then((response) => {\n            // If request is good...\n            // Update state to indicate user is authenticated\n            const token = response.data.key; \n\n            dispatch(authLogin(token));\n            localStorage.setItem(\"token\", token);\n\n            // redirect to the route '/'\n            props.history.push(\"/investors\");\n            // to getUserProfile in Header\n            dispatch(getUserProfile())\n        }).catch(error => {            \n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n\nexport function logoutUser() {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"csrftoken\");\n    return {\n        type: AuthTypes.LOGOUT\n    };\n}\n\nexport function signupUser(formValues, dispatch, props) {\n    const signupUrl = AuthUrls.SIGNUP;\n\n    return axios.post(signupUrl, formValues)\n        .then((response) => {\n            // If request is good...\n            // you can login if email verification is turned off.\n            // const token = response.data.key;\n            // dispatch(authLogin(token));\n            // localStorage.setItem(\"token\", token);\n\n            // email need to be verified, so don't login and send user to signup_done page.\n            // redirect to signup done page.\n            props.history.push(\"/signup_done\");\n        })\n        .catch((error) => {\n            // If request is bad...\n            // Show an error to the user\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n\nfunction setUserProfile(payload) {\n    return {\n        type: AuthTypes.USER_PROFILE,\n        payload: payload\n    };\n}\n\nexport function getUserProfile() {\n    return function(dispatch) {\n        const token = getUserToken(store.getState());\n\n        if (token) {\n            axios.get(AuthUrls.USER_PROFILE, {\n                headers: {\n                    authorization: 'Token ' + token\n                }\n            }).then(response => {\n                dispatch(setUserProfile(response.data))\n            }).catch((error) => {\n                // If request is bad...\n                // Show an error to the user\n                console.log(error);\n                // TODO: send notification and redirect\n            });\n        }\n    };\n}\n\nexport function changePassword(formValues, dispatch, props) {\n    const changePasswordUrl = AuthUrls.CHANGE_PASSWORD;\n    const token = getUserToken(store.getState());\n\n    if (token) {\n        return axios.post(changePasswordUrl, formValues, {\n            headers: {\n                authorization: 'Token ' + token\n            }\n        })\n            .then((response) => {\n                toast.info('Password has been changed successfully')\n                // dispatch(notifSend({\n                //     message: \"Password has been changed successfully\",\n                //     kind: \"info\",\n                //     dismissAfter: 5000\n                // }));\n                // redirect to the route '/profile'\n                props.history.push(\"/profile\");\n            })\n            .catch((error) => {\n                // If request is bad...\n                // Show an error to the user\n                const processedError = processServerError(error.response.data);\n                throw new SubmissionError(processedError);\n            });\n    }\n}\n\nexport function resetPassword(formValues, dispatch, props) {\n    const resetPasswordUrl = AuthUrls.RESET_PASSWORD;\n\n    return axios.post(resetPasswordUrl, formValues)\n        .then(response => {\n            // redirect to reset done page\n            props.history.push(\"/reset_password_done\");\n        }).catch((error) => {\n            // If request is bad...\n            // Show an error to the user\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n\nexport function confirmPasswordChange(formValues, dispatch, props) {\n    const { uid, token } = props.match.params;\n    const resetPasswordConfirmUrl = AuthUrls.RESET_PASSWORD_CONFIRM;\n    const data = Object.assign(formValues, { uid, token });\n\n    return axios.post(resetPasswordConfirmUrl, data)\n        .then(response => {\n            toast.info('Password has been reset successfully, please log in')\n            props.history.push(\"/login\");\n        }).catch((error) => {\n            // If request is bad...\n            // Show an error to the user\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n\nexport function activateUserAccount(formValues, dispatch, props) {\n    const { key } = props.match.params;\n    const activateUserUrl = AuthUrls.USER_ACTIVATION;\n    const data = Object.assign(formValues, { key });\n\n    return axios.post(activateUserUrl, data)\n        .then(response => {\n            toast.info('Your account has been activated successfully, please log in')\n            props.history.push(\"/login\");\n        }).catch((error) => {\n            // If request is bad...\n            // Show an error to the user\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n\nexport function updateUserProfile(formValues, dispatch, props) {\n    const token = getUserToken(store.getState());\n\n    let object = formValues\n\n    // Fix problem with update profile without upload avatar\n    const formData = new FormData(); \n    if (typeof formValues.avatar === 'string' || \n        formValues.avatar instanceof String ||\n        formValues.avatar === null) {\n        Object.keys(object).forEach(key => \n            (key !== \"avatar\") && formData.append(key, object[key])      \n        );\n    } else {\n        Object.keys(object).forEach(key => \n            formData.append(key, object[key])      \n        );\n    }\n\n    // adding \"Content-Type\": \"multipart/form-data\", for images\n    return axios.patch(AuthUrls.USER_PROFILE, formData, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\",\n                authorization: 'Token ' + token\n            }\n        })\n        .then(response => {\n            toast.info('Your profile has been updated successfully')\n            props.history.push(\"/profile\");\n        }).catch((error) => {\n            // If request is bad...\n            // Show an error to the user\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n// util functions\nfunction processServerError(error) {\n\n    return  Object.keys(error).reduce(function(newDict, key) {\n        if (key === \"non_field_errors\") {\n            newDict[\"_error\"].push(error[key]);\n        } else if (key === \"token\") {\n            // token sent with request is invalid\n            newDict[\"_error\"].push(\"The link is not valid any more.\");\n        } else {\n            newDict[key] = error[key];\n        }\n        return newDict\n    }, {\"_error\": []});\n}","import React from \"react\";\nimport './styles.scss'\n\nexport const LoadScreen = () => (\n  <div className=\"loadscreen\">\n    <div className=\"load-9\">\n      <div className=\"spinner\">\n        <div className=\"bubble-1\"></div>\n        <div className=\"bubble-2\"></div>\n      </div>\n    </div>\n  </div>\n)\n\nexport const LoadObject = (props) => (\n  <div className={`${props.objectclass}`}>\n    <div className=\"load-3\">\n    <div className=\"line\"></div>\n    <div className=\"line\"></div>\n    <div className=\"line\"></div>\n    </div>\n  </div>\n)\n","import React from \"react\";\nimport { toast } from 'react-toastify';\n\nexport const renderUser = (user) => {\n  if (user) {\n      return (\n        <div className=\"user\">\n            {user.avatar ? <img src={`${user.avatar}`} className=\"user-avatar\" alt=\"Avatar\" /> : \"\"}            \n            <span className=\"user-username\">{user.username}</span>\n        </div>\n      );\n  }\n};\n\nexport const renderField = ({ input, label, type, meta: { touched, error } }) => (\n    <div>\n        <label>{label}</label>\n        <div>\n            <input className=\"form-control\" {...input} type={type}/>\n        </div>\n        {touched && ((error && <div className=\"alert alert-danger p-1\"><small>{error}</small></div>))}\n    </div>\n);\n\nexport const renderTextAreaField = ({ input, label, type, meta: { touched, error } }) => (\n    <div>\n        <label>{label}</label>\n        <div>\n            <textarea className=\"form-control\" {...input} type={type} />\n        </div>\n        {touched && ((error && <div className=\"alert alert-danger p-1\"><small>{error}</small></div>))}\n    </div>\n);\nexport const renderImageField = ({ input, label, type, meta: { touched, error } }) => (\n    <div>\n        <label>{label}</label>\n        <div>\n            <input className=\"form-control\" {...input} type={type}/>\n        </div>\n        {touched && ((error && <div className=\"alert alert-danger p-1\"><small>{error}</small></div>))}\n    </div>\n);\nexport const renderError = (errorMessages) => {\n    if ( errorMessages ) {\n        if (JSON.stringify(errorMessages)!==\"[]\") {\n            toast.error(errorMessages[0][0])          \n        } else {\n            toast.error(\"Error...\")\n        }  \n    } \n};\n","import React, { Component } from 'react'\nimport { Link } from \"react-router-dom\";\nimport NavItem from 'reactstrap/lib/NavItem';\nimport { LoadObject } from '../../Organisms/LoadScreen/LoadScreen'\nimport { renderUser } from \"../../../../utils/renderUtils\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\n\nexport class NavigationLink extends Component {\n\n  render() {\n  \tconst { urltext, customclass } = this.props;\n  \tconst url = urltext.toLowerCase()\n    return (               \n    \t\t<NavItem key={`/${url}`}>\n    \t\t\t<Link className={`nav-link ${customclass}`} \n    \t\t\t  to={{\n\t\t\t    \t  pathname: `/${url}`,\n      \t\t\t\t  state: {fromDashboard: false}\n      \t\t\t  }}>\n      \t\t\t  \t{ urltext }\n    \t\t\t</Link>\n    \t\t</NavItem>\n        )    \n  }\n}\n\nexport class NavigationUserLink extends Component {\n\n  render() {\n  \tconst { urltext, customclass, user } = this.props;\n  \tconst url = urltext.toLowerCase()\n\n    return (               \n    \t\t<NavItem key={`/${url}`}>\n    \t\t\t<Link className={`nav-link ${customclass}`} \n    \t\t\t  to={{\n\t\t\t    \t  pathname: `/${url}`,\n      \t\t\t\t  state: {fromDashboard: false}\n      \t\t\t  }}>\n      \t\t\t  \t{user ? renderUser(user) : <LoadObject objectclass=\"loaduser\"/>}\n    \t\t\t</Link>\n    \t\t</NavItem>\n        )    \n  }\n}\n\nexport const HomeButton = () => (\n\t<Link className=\"btn btn-outline-info rounded-0 button-icon\"\n\t\trole=\"button\" \n\t\tto={{\n\t\t  \tpathname: `/investors`,\n\t\t\tstate: {fromDashboard: false}\n\t\t  }}>\n\t\t  \t<FontAwesomeIcon icon={faHome} color=\"info\"/>\n\t</Link>\n);\n\nexport const BrandButton = () => (\n    <Link className=\"navbar-brand\"\n      to={{\n          pathname: `/`,\n          state: {fromDashboard: false}\n      }}>\n        Lead Platform\n    </Link>\n\n);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n// import { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  Nav,\n    } from 'reactstrap';\n\nimport { NavigationLink, NavigationUserLink, BrandButton } from './general/Atoms/Links/Links'\nimport { getUserProfile } from \"../actions/authActions\";\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            collapsed: true\n        };\n    }\n    toggleNavbar = () => {\n        this.setState({\n            collapsed: !this.state.collapsed\n        });\n    }\n\n    static propTypes = {\n        authenticated: PropTypes.bool,\n        getUserProfile: PropTypes.func.isRequired,\n        user: PropTypes.object\n    };\n    componentWillMount() {\n        this.props.getUserProfile();\n    } \n\n    renderLinks() {\n        if (this.props.authenticated) {\n            const { user } = this.props\n            return (\n                <>\n                    <Nav navbar className=\"navbar-links\">\n                        <NavigationLink\n                          urltext=\"Investors\"\n                          customclass=\"nav-links__link\"\n                        />\n                        <NavigationLink\n                          urltext=\"Payments\"\n                          customclass=\"nav-links__link\"\n                        />\n                    </Nav>\n                    <Nav navbar className=\"navbar-profile\">\n                        <NavigationUserLink\n                            urltext=\"profile\"\n                            user={user}\n                            customclass=\"nav-user\"\n                        />\n                        <NavigationLink\n                            urltext=\"Logout\"\n                            customclass=\"nav-logout\"\n                        />\n                    </Nav>  \n                </>              \n            );\n        } else {\n            return (\n                    <Nav className=\"ml-auto\" navbar>\n                        <NavigationLink\n                          urltext=\"Login\"\n                          customclass=\"nav-links__link\"\n                        />\n                       <NavigationLink\n                          urltext=\"SignUp\"\n                          customclass=\"nav-links__link\"\n                        />\n                    </Nav>\n            );\n        }\n    }\n\n    render() {\n        return (\n            <Navbar color=\"info\" dark expand=\"md\">\n                <BrandButton />\n                <NavbarToggler onClick={this.toggleNavbar} />\n                  <Collapse isOpen={!this.state.collapsed} navbar>                    \n                        {this.renderLinks()}\n                  </Collapse>\n            </Navbar>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        authenticated: state.auth.authenticated,\n        user: state.auth.user\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getUserProfile: () => {\n            return dispatch(getUserProfile());\n        }\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n// import {withRouter} from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nexport default function(ComposedComponent) {\n    class Authentication extends Component {\n\n        static propTypes = {\n            history: PropTypes.object\n        };\n\n        componentWillMount() {\n            this.checkAuthentication(this.props);\n\n        }\n\n        componentWillUpdate(nextProps) {\n            this.checkAuthentication(nextProps);\n        }\n\n        checkAuthentication(props) {\n            if (!props.authenticated) {\n                this.props.history.push(\"/login\");\n            }\n        }\n\n        render() {\n            return <ComposedComponent {...this.props} />\n        }\n    }\n\n    function mapStateToProps(state) {\n\n        // provide is_staff to props\n        let is_staff = false;\n        if (state.auth.user && (state.auth.user.is_staff || state.auth.user.is_superuser)) {\n            is_staff = true;\n        }\n        return { authenticated: state.auth.authenticated, \n                is_staff: is_staff, \n            }\n    }\n    // return withRouter(connect(mapStateToProps)(Authentication));\n    return connect(mapStateToProps)(Authentication);\n}\n","import React, { Component } from 'react'\n// import PostList from '../posts/PostList';\n// import { Link } from 'react-router-dom'\n\nclass Landing extends Component {\n  render () {\n    return (\n      \t<div className='text-center'>\t\n\t\t\t<h2>Lead Platform based on DRF+React+Redux. Login or Signup to test</h2>             \n\t\t</div>\n    )\n  }\n}\nexport default Landing\n","import React, { Component } from \"react\";\n// import T from \"prop-types\";\n\nimport { reduxForm, Field, clearSubmitErrors, propTypes } from \"redux-form\";\nimport { Link } from \"react-router-dom\";\nimport { required } from \"redux-form-validators\"\n\nimport { renderField, renderError} from \"../../utils/renderUtils\";\nimport { loginUser } from \"../../actions/authActions\";\n\nimport { Button, } from 'reactstrap';\n\nclass Login extends Component {\n    static propTypes = {\n        ...propTypes\n    };\n    // static propTypes = {\n    //     form: T.string.isRequired,\n    //     onSubmit: T.func.isRequired,\n    // }\n\n    render() {\n        const { handleSubmit, error, pristine, submitting } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Please Log In</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"email\" label=\"Email\" component={renderField}\n                               type=\"text\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"password\" label=\"Password\" component={renderField}\n                               type=\"password\"  validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        { renderError(error) }\n                        <div className=\"form-button\">\n                            <Link role=\"button\" to=\"/signup\" className=\"btn btn-outline-info rounded-0 form-button__part\">SignUp</Link>\n                            <Button action=\"submit\" color=\"info\" className=\"rounded-0 form-button__part\" disabled={pristine || submitting}>Login</Button>\n                        </div>\n                    </fieldset>\n\n                    <Link to=\"/reset_password\" className=\"text-center info-link\">forgot password?</Link>\n                </form>\n            </div>\n        )\n    }\n}\n// Sync field level validation for password match\nconst validateLoginForm = values => {\n    const errors = {};\n    const { email } = values;\n\n    if (!email) {\n        errors.email = 'This field is required.'\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\n        errors.email = 'Invalid email address'\n    }\n    \n    return errors;\n};\nexport default reduxForm({\n    form: \"login\",\n    onSubmit: loginUser,\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('login'));\n    },\n    validate: validateLoginForm\n})(Login);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\n\nclass Logout extends Component {\n\n    static propTypes = {\n        logoutUser: PropTypes.func.isRequired\n    };\n\n    componentWillMount() {\n        this.props.logoutUser();\n    }\n\n    render() {\n        return (\n            <h2>Welcome to Lead Platform. Please Login or Signup...</h2>\n        );\n    }\n}\n\nexport default connect(null, { logoutUser })(Logout);","import React, { Component } from \"react\";\n// import PropTypes from \"prop-types\";\nimport { reduxForm, Field, propTypes, clearSubmitErrors } from \"redux-form\";\nimport { required } from \"redux-form-validators\"\nimport { renderField, renderError } from \"../../utils/renderUtils\";\nimport { signupUser } from \"../../actions/authActions\";\nimport { Link } from \"react-router-dom\";\nimport { Button, } from 'reactstrap';\n\nclass Signup extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n\n    render() {\n        const { handleSubmit, error, pristine, submitting } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Sign Up</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"email\" label=\"Email\" component={renderField}\n                               type=\"text\"/>\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"username\" label=\"Username\" component={renderField}\n                               type=\"text\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"password1\" label=\"Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"password2\" label=\"Confirm Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    { renderError(error) }\n\n                    <fieldset className=\"form-group\">\n                        <div className=\"form-button\">\n                            <Link role=\"button\" to=\"/login\" className=\"btn btn-outline-info rounded-0 form-button__part\">Login</Link>\n                            <Button action=\"submit\" color=\"info\" className=\"rounded-0 form-button__part\" disabled={pristine || submitting}>Sign Up</Button>\n                        </div>\n                    </fieldset>\n                </form>\n            </div>\n        );\n    }\n}\n\n// Sync field level validation for password match\nconst validateForm = values => {\n    const errors = {};\n    const { email, username, password1, password2 } = values;\n\n    if (!username) {\n        errors.username = 'This field is required.'\n    } else if (username.length > 15) {\n        errors.username = 'Must be 15 characters or less'\n    }\n    if (!email) {\n        errors.email = 'This field is required.'\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\n        errors.email = 'Invalid email address'\n    }\n    \n    if (password1 !== password2) {\n        errors.password2 = \"Password does not match.\"\n    }\n    return errors;\n};\n\nexport default reduxForm({\n    form: \"signup\",\n    validate: validateForm,\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('signup'));\n    },\n    onSubmit: signupUser\n})(Signup);\n","import React, { Component } from \"react\";\n\nexport default class SignupDone extends Component {\n    render() {\n        return (\n            <h3 className=\"mx-5\">\n                Thanks for your registration, please follow the link sent to your provided email to activate\n                your account.\n            </h3>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { reduxForm, propTypes, clearSubmitErrors } from \"redux-form\";\nimport { activateUserAccount } from \"../../actions/authActions\";\nimport { renderError } from \"../../utils/renderUtils\";\n\nclass AccountActivation extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Please click the button below to activate your account</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group text-center\">\n                        {renderError(error)}\n                        <button action=\"submit\" className=\"btn btn-info rounded-0\">Activate</button>\n                    </fieldset>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default reduxForm({\n    form: \"user_account_activation\",\n    onSubmit: activateUserAccount,\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('user_account_activation'));\n    },\n})(AccountActivation);\n","import React, { Component } from 'react'\nimport PropTypes from \"prop-types\";\nimport Button from 'reactstrap/lib/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUndoAlt, faSave } from '@fortawesome/free-solid-svg-icons'\n\nexport class ReturnButton extends Component {\n  static contextTypes = {\n    router: PropTypes.object\n  }\n\n  render() {\n    return (               \n        <Button color=\"info\" outline className=\"rounded-0 button-icon\" role=\"button\"\n          onClick={this.context.router.history.goBack}>\n          <FontAwesomeIcon icon={faUndoAlt} color=\"secondary\"/>\n        </Button>   \n        )    \n  }\n}\n\nexport const SaveButton = () => (\n    <Button color=\"info\" className=\"rounded-0\" type=\"submit\">\n      <FontAwesomeIcon icon={faSave} color=\"secondary\"/>\n    </Button>\n);\n\nexport const ClearButton = props => (\n    <Button outline className=\"rounded-0\" type=\"button\"\n      onClick={props.onClear}\n    >\n      Clear\n    </Button>\n);\n\n","import React from 'react'\nimport { Table } from 'reactstrap';\n\nimport { ReturnButton } from '../../../general/Atoms/Buttons/Buttons'\nimport { HomeButton } from '../../../general/Atoms/Links/Links'\n\nexport const UserDetailTable = (userdetail) => {\n  if (userdetail) {\n    return (\n      <div className=\"mx-2 mt-2 text-center\">\n        <Table striped className=\"table-userprofile\">\n          <thead>\n            <tr>\n              <th>Profile {userdetail.username}</th>\n              <td>\n                <ReturnButton />\n                <HomeButton />\n              </td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <th>Avatar:</th>\n              <td>\n                <div className=\"avatar\"\n                    style={{ backgroundImage: `url(${userdetail.avatar})` }}>\n                </div>\n              </td>\n            </tr>\n            <tr>\n              <th>First Name:</th>\n              <td>{userdetail.first_name}</td>\n            </tr>                    \n            <tr>\n              <th>Last Name:</th>\n              <td>{userdetail.last_name}</td>\n            </tr>\n            <tr>\n              <th>Email:</th>\n              <td>{userdetail.email}</td>\n            </tr>\n            <tr>\n              <th>Website:</th>\n              <td><a className=\"table-correspondence__url\" href={`${userdetail.website}`} >{userdetail.website}</a></td>\n            </tr>                    \n            <tr>\n              <th>About:</th>\n              <td>{userdetail.about}</td>\n            </tr>\n          </tbody>\n        </Table>\n      </div>\n    )\n  } \n  return null\n\n\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getUserProfile } from \"../../../actions/authActions\";\n\nimport { LoadScreen } from '../../general/Organisms/LoadScreen/LoadScreen'\nimport { UserDetailTable } from '../Molecules/Tables/UserDetailTable'\n\nclass UserProfile extends Component {\n\n    static propTypes = {\n        getUserProfile: PropTypes.func.isRequired,\n        user: PropTypes.object,\n        loading: PropTypes.bool\n    };\n    static contextTypes = {\n        router: PropTypes.object\n    }\n    componentWillMount() {\n        this.props.getUserProfile();\n    }\n\n    renderUser() {\n        const { user } = this.props;\n\n        if (user) {\n            return (\n\n              <div className=\"mx-2 mt-2 text-center\">\n                <UserDetailTable \n                    {...user}\n                  />  \n              </div>\n            );\n        }\n        return null;\n    }\n\n    render() {\n        const {loading} = this.props\n\n        return(\n            <div>\n              {loading ?\n                <LoadScreen />\n              :\n                <div>\n                    {this.renderUser()}\n                    <hr />                \n                    <fieldset className=\"form-group\">\n                        <div className=\"form-button\">\n                            <Link to=\"/profile_edit\" className=\"btn btn-info rounded-0 form-button__part\">Update Profile</Link>\n                            <Link to=\"/change_password\" className=\"btn btn-outline-info rounded-0 form-button__part\">Change Password</Link>\n                        </div>\n                    </fieldset>\n                </div>\n              }\n          </div>               \n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        user: state.auth.user,\n        loading: state.auth.loading\n    }\n}\n\nexport default connect(mapStateToProps, { getUserProfile } )(UserProfile);","import React from 'react'\nimport { HomeButton } from '../../Atoms/Links/Links'\nimport './styles.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSpaceShuttle } from '@fortawesome/free-solid-svg-icons'\n\nexport const ErrorPage = ({errors}) => (\n    <div className=\"error-page\">\n      <div className=\"wrapper-error\"> \n        <h1>Error</h1>     \n        {errors ?  \n            <p>{errors}</p> \n          : \n            <p>Sorry, the page you are looking for doesn't exist.</p>\n        }\n        <h2>Return to <HomeButton /></h2>\n      </div>  \n      <div className=\"space\">\n        <div className=\"blackhole\"></div>\n        <FontAwesomeIcon rotation={180} className=\"ship\" icon={faSpaceShuttle} color=\"info\"/>\n      </div>\n    </div>\n)","import React, {Component} from 'react'\nimport {connect} from 'react-redux';\nimport { LoadScreen } from '../../general/Organisms/LoadScreen/LoadScreen'\nimport { ErrorPage } from '../../general/Organisms/ErrorPage/ErrorPage'\nimport * as userdetail from \"../../../actions/userDetailActions\";\nimport { UserDetailTable } from '../Molecules/Tables/UserDetailTable'\n\nclass UserProfileDetail extends Component {\n    constructor(props){\n        super(props);  \n        this.state = {\n        \tuserdetail: {},\n        \tloading: true,\n        \thasError: false      \n        }\n    }\n\n    componentDidUpdate(prevProps) {\n      if (this.props.userdetail !== prevProps.userdetail) {\n\t\tthis.setState({\n\t\t\t\tuserdetail : this.props.userdetail,\n\t\t\t\tloading: this.props.userdetail.loading,\n\t\t\t\thasError: this.props.userdetail.hasError,\n\t\t\t\terrors: this.props.userdetail.errors,\n\t\t\t\t});\n      }\n    } \n    componentDidMount(){\n      if (this.props.match){\n        const {id} = this.props.match.params\n        this.setState({\n            id: id,\n        })\n        this.props.fetchUserDetail(id)        \n      }      \n    }\n\n    renderNote() {\n        const { userdetail } = this.props;\n        const { hasError, errors } = this.state;\n\n        if (!hasError) {\n          return (\n                  <UserDetailTable \n                    {...userdetail}\n                  />             \n          );\n\n        } else {\n            return (\n                <ErrorPage \n                    errors={errors && errors.page}\n                  /> \n            );\n        }\n    }\n    render () {\n        const {loading} = this.state\n        return(\n            <div>\n              {loading ?<LoadScreen />:this.renderNote()}\n          </div>               \n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      userdetail: state.userdetail,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      fetchUserDetail: (id) => {\n          dispatch(userdetail.fetchUserDetail(id));\n      },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserProfileDetail);","import { toast } from 'react-toastify';\nexport const fetchUserDetail = (id) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        const endpoint = `/api/user/${id}/` \n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        \n        return fetch(endpoint, {headers, })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n               \n                } else {\n                    toast.error(\"Server Error...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'FETCH_USER_DETAIL', userdetail: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authentication Error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", userdetail: res.data});\n                    throw res.data;\n                } \n                else if (res.status === 404) {\n                    toast.error(\"User is not found...\")\n                    dispatch({type: \"USER_NOT_FOUND\"});\n\n                }\n            })\n            .catch(error => {                \n                //error.redirect('/404');\n                //Handle error\n                console.log(\"error\", error);\n                // return dispatch({type: \"MESSAGE_NOT_FOUND\", detail: error});\n                // dispatch({type: \"MESSAGE_NOT_FOUND\", detail: error});\n            });\n    }\n}\n","import React, {Component} from 'react';\nimport Dropzone from 'react-dropzone';\nimport PropTypes from \"prop-types\";\n// import { Form } from 'elements';\nimport { Field } from 'redux-form';\nimport './styles.scss'\n\nconst imageMaxSize = 1000000; //bytes\n\nclass ImageDrop extends Component {\n  static propTypes = {\n    dropzone_options: PropTypes.object,\n    meta: PropTypes.object,\n    label: PropTypes.string,\n    classNameLabel: PropTypes.string,\n    input: PropTypes.object,\n    className: PropTypes.string,\n    // children: PropTypes.node,\n\t//    children: PropTypes.oneOfType([\n\t//      PropTypes.node,\n\t//   PropTypes.object,\n\t//   PropTypes.func,\n\t// ]),\n    cbFunction: PropTypes.func,\n  };\n\n  static defaultProps = {\n    className: '',\n    cbFunction: () => {},\n  };\n  state = { attached: false };\n  handleDrop = (files) => {\n\tthis.setState({attached: true})\n  }\n  render() {\n    const { className, input: { onChange }, meta: { error, touched }, label, classNameLabel, name, cbFunction } = this.props;\n\n\tlet drop_class = \"dropimage-field dropimage-field__default avatar\"\n\tlet drop_text = \"\"\n\n\tif (this.props.input.value && this.state.attached) {\n\t\tdrop_class = \"dropimage-field dropimage-field__success\";\n\t\tdrop_text = \"Press Save to Add\";\n\t} else {\n\t\tdrop_class = \"dropimage-field dropimage-field__default avatar\";\n\t\t// drop_text = \"Add Document\"\n\t} \n    return (\n      <div className={`${className}` + (error && touched ? ' has-error ' : '')}>\n        {label && <p className={classNameLabel || ''}>{label}</p>}\n        <Dropzone\n          onDrop={(f) => {\n            cbFunction(f);\n            this.handleDrop(f);\n            return onChange(f[0]);\n          }}\n          name={name}\n          maxSize={imageMaxSize}\n        >\n            {({getRootProps, getInputProps}) => (\n                <div {...getRootProps()} className={`${drop_class}`} \n                  style={{ backgroundImage: `url(${this.props.input.value})`}}>\n                    <input {...getInputProps()} />\n                    <span className=\"dropimage-field__text\">{`${drop_text}`}</span>\n                </div>\n            )}\n        </Dropzone>\n        {error && touched ? <div className=\"alert alert-danger p-1\"><small>{error}</small></div> : ''}\n      </div>\n    );\n  }\n}\nexport default props => <Field {...props} component={ImageDrop} />;","import React, { Component } from \"react\";\nimport { reduxForm, Field, propTypes, clearSubmitErrors } from \"redux-form\";\nimport { connect } from 'react-redux'\nimport { Link } from \"react-router-dom\";\n\nimport { renderField, renderTextAreaField,\n    renderError} from \"../../utils/renderUtils\";\nimport { updateUserProfile } from \"../../actions/authActions\";\nimport ImageDrop from './Atoms/ImageDrop/ImageDrop'\n\nclass Login extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Edit Profile</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"username\" label=\"Username\" component={renderField}\n                               type=\"text\"\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"first_name\" label=\"First Name\" component={renderField}\n                               type=\"text\"\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"last_name\" label=\"Last Name\" component={renderField}\n                               type=\"text\"\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"website\" label=\"Website\" component={renderField}\n                               type=\"text\"\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"about\" label=\"About Yourself\" component={renderTextAreaField}\n                               type=\"text\"\n                        />\n                    </fieldset>\n                    <fieldset className=\"form-group\">\n                        <ImageDrop\n                         name=\"avatar\"\n                         label=\"Avatar:\"\n                          classNameLabel=\"file-input-label\"\n                          className=\"file-input\"\n                          dropzone_options={{\n                            multiple: false,\n                            accept: 'image/*'\n                          }}\n                        >\n                          <span>Add more</span>\n                        </ImageDrop>\n                    </fieldset>\n                    <fieldset className=\"form-group\">\n                        {renderError(error)}\n                        <div className=\"form-button\">\n                            <button action=\"submit\" className=\"btn btn-info rounded-0 form-button__part\">Save</button>\n                            <Link to=\"/profile\" className=\"btn btn-outline-info rounded-0 form-button__part\">Cancel</Link>\n                        </div>\n                    </fieldset>\n\n                </form>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        initialValues: state.auth.user\n    }\n}\n\nexport default connect(mapStateToProps)(reduxForm({\n    form: \"update_user_profile\",\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('update_user_profile'));\n    },\n    onSubmit: updateUserProfile\n})(Login));","import React, { Component } from \"react\";\n// import PropTypes from \"prop-types\";\nimport { reduxForm, Field, propTypes, clearSubmitErrors } from \"redux-form\";\nimport { required } from \"redux-form-validators\"\nimport { changePassword } from \"../../actions/authActions\";\nimport { renderField, renderError } from \"../../utils/renderUtils\";\nimport { Link } from \"react-router-dom\";\nimport { Button, } from 'reactstrap';\nclass PasswordChange extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error, pristine, submitting } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Change Password</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"old_password\" label=\"Old Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"new_password1\" label=\"New Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"new_password2\" label=\"Confirm New Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        {renderError(error)}\n                        <div className=\"form-button\">\n                            <Button action=\"submit\" color=\"info\" className=\"rounded-0 form-button__part\" disabled={pristine || submitting}>Submit</Button>\n                            <Link to=\"/profile\" className=\"btn btn-outline-info rounded-0 form-button__part\">Cancel</Link>\n                        </div>\n                    </fieldset>\n                </form>\n            </div>\n        );\n    }\n}\n\n// Sync field level validation for password match\nconst validateForm = values => {\n    const errors = {};\n    const { new_password1, new_password2 } = values;\n    if (new_password1 !== new_password2) {\n        errors.new_password2 = \"Password does not match.\"\n    }\n    return errors;\n};\n\nexport default reduxForm({\n    form: \"change_password\",\n    onSubmit: changePassword,\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('change_password'));\n    },\n    validate: validateForm\n})(PasswordChange);\n","import React, { Component } from \"react\";\nimport { reduxForm, Field, propTypes, clearSubmitErrors } from \"redux-form\";\nimport { required } from \"redux-form-validators\"\n\nimport { renderField, renderError} from \"../../utils/renderUtils\";\nimport { resetPassword } from \"../../actions/authActions\";\n\nclass PasswordReset extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Reset Your Password</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"email\" label=\"Please enter your email\" component={renderField}\n                               type=\"text\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n                    <fieldset className=\"form-group text-center\">\n                        {renderError(error)}\n                        <button action=\"submit\" className=\"btn btn-info rounded-0\">Submit</button>\n                    </fieldset>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default reduxForm({\n    form: \"password_reset\",\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('password_reset'));\n    },\n    onSubmit: resetPassword\n})(PasswordReset);\n","import React, { Component } from \"react\";\n\nexport default class PasswordResetDone extends Component {\n    render() {\n        return (\n            <h3 className=\"mx-5\">An password reset email has been sent to your email. Please follow the link to reset your password.</h3>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { reduxForm, Field, propTypes, clearSubmitErrors } from \"redux-form\";\nimport { required } from \"redux-form-validators\"\nimport { confirmPasswordChange } from \"../../actions/authActions\";\nimport { renderField, renderError } from \"../../utils/renderUtils\";\n\nclass PasswordResetConfirm extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Create New Password</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"new_password1\" label=\"New Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"new_password2\" label=\"Confirm New Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group text-center\">\n                        {renderError(error)}\n                        <button action=\"submit\" className=\"btn btn-info rounded-0\">Submit</button>\n                    </fieldset>\n                </form>\n            </div>\n        );\n    }\n}\n\n// Sync field level validation for password match\nconst validateForm = values => {\n    const errors = {};\n    const { new_password1, new_password2 } = values;\n    if (new_password1 !== new_password2) {\n        errors.new_password2 = \"Password does not match.\"\n    }\n    return errors;\n};\n\nexport default reduxForm({\n    form: \"password_reset_confirm\",\n    onSubmit: confirmPasswordChange,\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('password_reset_confirm'));\n    },\n    validate: validateForm\n})(PasswordResetConfirm);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\n\nclass PostInline extends Component {\n  // {post !== undefined ? <div className={elClass}>\n  //    <h1><Link maintainScrollPosition={false} to={{\n  //        pathname:`/react/posts/${post.slug}`,\n  //        state: {fromDashboard: false}\n  //    }}>{post.title}</Link></h1>\n\n  //   <p className={showContent}>{post.content}</p>\n  //   </div>\n  //   : \"\"}\n  render() {\n      const {post} = this.props\n      const {elClass} = this.props\n      const showContent = elClass === 'card' ? 'd-block' : 'd-none'\n    return (\n      <div>\n          {post !== undefined ? \n            <div className={elClass}>\n            <Link \n              to={{pathname:`/react/posts/${post.slug}`,\n              state: {fromDashboard: false}\n            }}>\n                <h1>{post.title}</h1>\n            </Link>\n                  <p className={showContent}>{post.content}</p>\n            </div>\n          : ''}\n      </div>\n    );\n  }\n}\n\nexport default PostInline;\n","import React, { Component } from 'react';\nimport 'whatwg-fetch'\nimport cookie from 'react-cookies'\nimport { Link } from 'react-router-dom'\nimport PostInline from './PostInline'\n// import PostCreate from './PostCreate'\n// import PostForm from './PostForm'\nimport { connect } from 'react-redux'\n\nimport store from \"../store\";\nimport { getUserToken } from \"../utils/authUtils\";\n\nclass Posts extends Component {\n\n  constructor(props){\n      super(props)\n      this.togglePostListClass = this.togglePostListClass.bind(this)\n      this.handleNewPost = this.handleNewPost.bind(this)\n      this.loadMorePosts =this.loadMorePosts.bind(this)\n      this.state = {\n          posts: [],\n          postsListClass: \"card\",\n          next: null,\n          previous: null,\n          author: false,\n          count: 0,\n          authenticated: false, //adding redux-props\n      }\n  }\n\n  loadMorePosts(){\n      const {next} = this.state \n      if (next !== null || next !== undefined) {\n           this.props.loadPosts(next)\n      }\n     \n  }\n    \n  loadPosts(nextEndpoint){\n      let endpoint = '/api/posts/' \n      if (nextEndpoint !== undefined) {\n          endpoint = nextEndpoint\n      }\n      let thisComp = this\n      let lookupOptions = {\n          method: \"GET\",\n          headers: {\n              'Content-Type': 'application/json'\n          }\n      }\n      const csrfToken = cookie.load('csrftoken')\n      const token = getUserToken(store.getState());\n      console.log('token', token);\n      console.log('csrftoken', csrfToken);\n\n      if (csrfToken !== undefined) {\n          lookupOptions['credentials'] = 'include'\n          lookupOptions['headers']['X-CSRFToken'] = csrfToken\n       } \n\n      fetch(endpoint, lookupOptions)\n      .then(function(response){\n          return response.json()\n      }).then(function(responseData){\n          console.log(responseData)\n          // let currentPosts = thisComp.state.posts\n          // let newPosts = currentPosts.concat(responseData.results)\n          // console.log(currentPosts)\n           thisComp.setState({\n                  posts: thisComp.state.posts.concat(responseData.results),\n                  next: responseData.next,\n                  previous: responseData.previous,\n                  author: responseData.author,\n                  count: responseData.count,\n                  authenticated: thisComp.props.state.auth.authenticated //adding redux-props\n              })\n      }).catch(function(error){\n          console.log(\"error\", error)\n      })\n  }\n\n  handleNewPost(postItemData){\n      // console.log(postItemData)\n      let currentPosts = this.state.posts\n      currentPosts.unshift(postItemData) // unshift\n      this.setState({\n          posts: currentPosts\n      })\n  }\n\n  \n\n  togglePostListClass(event){\n      event.preventDefault()\n      let currentListClass = this.state.postsListClass\n      if (currentListClass === \"\"){\n          this.setState({\n              postsListClass: \"card\",\n          })\n      } else {\n          this.setState({\n              postsListClass: \"\",\n          })\n      }\n      \n  }\n\n  componentDidMount(){\n      this.setState({\n          posts: [],\n          postsListClass: \"card\",\n          next: null,\n          previous: null,\n          author: false,\n          count: 0,\n          authenticated: false,\n      })\n      this.loadPosts()\n  }\n  // {author === true ? <Link className='mr-2' maintainScrollPosition={false} to={{\n  //           pathname: `/posts/create/`,\n  //           state: { fromDashboard: false }\n  //         }}>Create Post</Link> : \"\"}\n  \n  // <button onClick={this.togglePostListClass}>Toggle Class</button>\n  // {posts.length > 0 ? posts.map((postItem, index)=>{\n  //     return (\n  //             <PostInline post={postItem} elClass={postsListClass} />\n  //     )\n  // }) : <p>No Posts Found</p>}\n  // {next !== null ? <button onClick={this.loadMorePosts}>Load more</button> : ''}\n  render() {\n      const {posts} = this.state\n      const {postsListClass} = this.state\n      // const {author} = this.state\n      const {next} = this.state \n      // const {auth} = this.props.state.auth.authenticated\n      const {authenticated} = this.state //adding redux-props\n      // const csrfToken = cookie.load('csrftoken')\n    return (\n      <div>\n        {authenticated === true ?\n          <Link className='mr-2' to={{\n            pathname: `/react/posts/create/`,\n            state: { fromDashboard: false }\n          }}>Create Post</Link>\n        : ''}\n          <button onClick={this.togglePostListClass}>Toggle Class</button>\n          {posts.length > 0 ? posts.map((postItem, index)=>{\n            return (\n              <PostInline post={postItem} key={`post-list-key ${index}`} elClass={postsListClass} />\n            )\n          }) : <p>No Posts Found</p>}\n        {next !== null ? <button onClick={this.loadMorePosts}>Load more</button> : ''}\n\n      </div>\n    );\n  }\n}\n\n// export default Posts;\n\n\nconst mapStateToProps = (state) => {\n  return {\n    state: state\n  }\n}\n\nexport default connect(mapStateToProps)(Posts);\n// {(csrfToken !== 'undefined' && csrfToken !== null) ?\n// <div className='my-5'>\n//   <PostForm newPostItemCreated={this.handleNewPost} />\n// </div>\n// : ''}","import React, { Component } from 'react'\n\nimport { Link } from 'react-router-dom'\nimport Posts from '../reactify/Posts';\n\nclass ReacTifyComp extends Component {\n  componentDidMount () {\n\n  }\n\n  render () {\n    return (\n      <div>\n        <Link className='some-link' to='/about/'>Static Page</Link>\n        <Posts />\n      </div>\n      \n    )\n  }\n}\n\nexport default ReacTifyComp","import React, {Component} from 'react'\nimport 'whatwg-fetch'\nimport cookie from 'react-cookies'\nimport moment from 'moment'\n// import { Redirect } from 'react-router-dom'\n\nimport store from \"../store\";\nimport { getUserToken } from \"../utils/authUtils\";\n\n\nclass PostForm extends Component {\n    constructor(props){\n        super(props)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleInputChange = this.handleInputChange.bind(this)\n        this.handleDraftChange = this.handleDraftChange.bind(this)\n        this.clearForm = this.clearForm.bind(this)\n        this.postTitleRef = React.createRef()\n        this.postContentRef = React.createRef()\n        this.deletePost= this.deletePost.bind(this)\n        this.state = {\n            draft: false,\n            title: null,\n            slug: null,\n            content: null,\n            publish: moment(new Date()).format('YYYY-MM-DD'),\n            errors: {}\n        }\n    }\n\n    updatePost(data){\n      const {post} = this.props\n      const endpoint = `/api/posts/${post.slug}/` \n      const csrfToken = cookie.load('csrftoken')\n      const token = getUserToken(store.getState());\n      console.log('token', token);\n      console.log('csrftoken', csrfToken);\n      let thisComp = this\n      if (csrfToken !== undefined) {\n          let lookupOptions = {\n              method: \"PUT\",\n              headers: {\n                  'Content-Type': 'application/json',\n                  'X-CSRFToken': csrfToken,\n                  'Authorization': 'Token ' + token\n              },\n              body: JSON.stringify(data),\n              credentials: 'include'\n          }\n\n          fetch(endpoint, lookupOptions)\n          .then(function(response){\n              return response.json()\n          }).then(function(responseData){\n              console.log(responseData)\n              if (thisComp.props.newPostItemUpdated){\n                  thisComp.props.newPostItemUpdated(responseData)\n              }\n              thisComp.clearForm()\n          }).catch(function(error){\n              console.log(\"error\", error)\n              alert(\"An error occured, please try again later.\")\n          })\n      } \n      \n  \t} \n    createPost(data){\n      const endpoint = '/api/posts/' \n      const csrfToken = cookie.load('csrftoken')\n      let thisComp = this\n      console.log('csrf', csrfToken)\n      if (csrfToken !== undefined) {\n          let lookupOptions = {\n              method: \"POST\",\n              headers: {\n                  'Content-Type': 'application/json',\n                  'X-CSRFToken': csrfToken\n              },\n              body: JSON.stringify(data),\n              credentials: 'include'\n          }\n\n          fetch(endpoint, lookupOptions)\n          .then(function(response){              \n              return response.json()\n          }).then(function(responseData){\n              console.log(responseData)\n              if (thisComp.props.newPostItemCreated){\n                  thisComp.props.newPostItemCreated(responseData)\n              }\n              thisComp.clearForm()\n              thisComp.defaultState()\n          }).catch(function(error){\n              console.log(\"error\", error)\n              alert(\"An error occured, please try again later.\")\n          })\n      } \n      \n    }\n    deletePost(event) {\n      event.preventDefault();\n      const {post} = this.props\n      const endpoint = `/api/posts/${post.slug}/` \n      const csrfToken = cookie.load('csrftoken')\n      console.log(post)\n      return fetch(endpoint, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': csrfToken\n            },\n            credentials: 'include'\n        }).then(function(response){\n          return response\n        }).then(data => {\n          if(data.status === 204){\n            // this.UpdateRoute();\n            console.log('Successfully Delete');\n          }   \n        }).catch(function(error){\n            console.log(\"error\", error)\n            alert(\"An error occured, please try again later.\")\n        })\n    };\n\n  \tclearForm(event){\n      if (event){\n        event.preventDefault()\n      }\n      this.postCreateForm.reset()\n      \n    } \n    clearFormRefs(){\n      this.postTitleRef.current=''\n      this.postContentRef.current=''\n    }  \t\n\thandleSubmit(event){      \n\t    event.preventDefault()\n\t    let data = this.state\n      const {post} = this.props\n      if (post !== undefined) {\n        this.updatePost(data)\n      } else {\n        this.createPost(data)\n      }\n\t    \n      console.log({post})\n\t}\n\thandleInputChange(event){\n        event.preventDefault()\n        let key = event.target.name\n        let value = event.target.value\n\n        if (key === 'title'){\n            if (value.length > 120){\n                alert(\"This title is too long\")\n            }\n        }\n        this.setState({\n            [key]: value\n\n        })\n    }\n  //fix doubleclick checkbox\n  handleDraftChange(event){\n    this.setState({\n      draft: !this.state.draft\n    })\n  }\n  defaultState(){\n    this.setState({\n        draft: false,\n        title: null,\n        content: null,\n        slug: null,\n        publish: moment(new Date()).format('YYYY-MM-DD'),\n    })   \n  }\n  componentDidMount(){\n    const {post} = this.props\n    // this.loginCheck()\n    if (post !== undefined) {\n      this.setState({\n          draft: post.draft,\n          title: post.title,\n          content: post.content,\n          slug: post.slug,\n          publish: moment(post.publish).format('YYYY-MM-DD'),\n      })\n    } else {\n      this.defaultState()\n    }\n    // this.postTitleRef.current.focus()\n  }\n\trender(){\n\t\tconst {publish} = this.state\n    const {title} = this.state\n    const {content} = this.state\n    const {slug} = this.state\n    const cancelClass = this.props.post !== undefined ? \"d-none\" : \"\"\n    const deleteClass = this.props.post === undefined ? \"d-none\" : \"\"\n\t\treturn (\n\t\t  <div>\n\t\t    <form onSubmit={this.handleSubmit} ref={(el)=> this.postCreateForm = el}>\n\t\t        <div className=\"form-group\">\n\t\t\t\t\t<label htmlFor='blogTitle'>Title</label>\n\t\t\t\t\t<input \n\t\t\t\t\t  type='text' \n\t\t\t\t\t  id='blogTitle' \n\t\t\t\t\t  name='title' \n\t\t\t\t\t  className='form-control' \n\t\t\t\t\t  placeholder='Blog post title'\n            value={title || ''}            \n\t\t\t\t\t  ref={this.postTitleRef} \n\t\t\t\t\t  onChange={this.handleInputChange} \n\t\t\t\t\t  required='required' />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label htmlFor='content'>Content</label>\n\t\t\t\t\t<textarea \n\t\t\t\t\t  id='content' \n\t\t\t\t\t  name='content' \n\t\t\t\t\t  className='form-control' \n\t\t\t\t\t  placeholder='Post content'\n            value={content || ''}\n\t\t\t\t\t  ref={this.postContentRef} \n\t\t\t\t\t  onChange={this.handleInputChange} \n\t\t\t\t\t  required='required' />\n\t\t\t\t</div>\n\t\t\t\t<div className='form-group'>\n                    <label htmlFor='slug'>Slug</label>\n                    <input \n                      type='text' \n                      id='slug' \n                      name='slug' \n                      className='form-control'\n                      placeholder='Type Slug'\n                      value={slug || ''}  \n                      onChange={this.handleInputChange} \n                      required='required'/>\n                </div>\n\t\t        <div className=\"form-group\">\n\t\t\t\t\t<label htmlFor='draft'>\n\t\t\t\t\t\t<input \n\t\t\t\t\t\t  type='checkbox' \n\t\t\t\t\t\t  id='draft' \n\t\t\t\t\t\t  name='draft' \n\t\t\t\t\t\t  className='mr-2' \n\t\t\t\t\t\t  onChange={this.handleDraftChange} \n\t\t\t\t\t\t  checked={this.state.draft}\n\t\t\t\t\t\t  />\n\t\t\t\t\tDraft</label>\n                <button onClick={(event)=>{event.preventDefault();this.handleDraftChange()}}>Toggle Draft</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label htmlFor='publish'>Publish Date</label>\n\t\t\t\t\t<input \n\t\t\t\t\t  type='date' \n\t\t\t\t\t  id='publish' \n\t\t\t\t\t  name='publish' \n\t\t\t\t\t  className='form-control' \n\t\t\t\t\t  onChange={this.handleInputChange} \n\t\t\t\t\t  required='required'\n\t\t\t\t\t  value={publish}\n\t\t\t\t\t   />\n\t\t\t\t</div>\n\t\t\t\t<button type='submit' className='btn btn-primary '>Save</button>\n\t\t\t\t<button className={`btn btn-secondary ${cancelClass}`} onClick={this.clearForm}>Clear</button>\n        <button className={`btn btn-danger' ${deleteClass}`} onClick={this.deletePost}>Delete</button>\n\n\t\t    </form>\n\t\t  </div>\n\t\t)\n\t}\n\n}\n\nexport default PostForm\n","import React, {Component} from 'react'\nimport 'whatwg-fetch'\nimport cookie from 'react-cookies'\nimport { Link } from 'react-router-dom'\n\nimport PostForm from './PostForm'\n\nclass PostDetail extends Component {\n    constructor(props){\n        super(props)\n        this.handlePostItemUpdated= this.handlePostItemUpdated.bind(this)        \n        this.state = {\n             slug: null,\n             post: null,\n             doneLoading: false,\n        }\n    }\n\n    handlePostItemUpdated(postItemData){\n        this.setState({\n            post: postItemData\n        })\n    }\n    loadPost(slug){\n      const endpoint = `/api/posts/${slug}/` \n      let thisComp = this\n      let lookupOptions = {\n          method: \"GET\",\n          headers: {\n              'Content-Type': 'application/json'\n          }\n      }\n\n      const csrfToken = cookie.load('csrftoken')\n      if (csrfToken !== undefined) {\n          lookupOptions['credentials'] = 'include'\n          lookupOptions['headers']['X-CSRFToken'] = csrfToken\n       }\n\n      fetch(endpoint, lookupOptions)\n      .then(function(response){\n          if (response.status === 404){\n              console.log('Page not found')\n          }\n          return response.json()\n      }).then(function(responseData){\n          if (responseData.detail){\n              thisComp.setState({\n                  doneLoading: true,\n                  post: null\n              })\n          } else {\n           thisComp.setState({\n                  doneLoading: true,\n                  post: responseData\n              })\n          }\n      }).catch(function(error){\n          console.log(\"error\", error)\n      })\n  }\n\n    componentDidMount(){\n        this.setState({\n                slug: null,\n                post: null\n            })\n        if (this.props.match){\n            const {slug} = this.props.match.params\n            this.setState({\n                slug: slug,\n                doneLoading: false\n            })\n            this.loadPost(slug)\n        }\n    }\n    // const {doneLoading} = this.state\n    //     const {post} = this.state\n    //     return(\n    //         <p>{(doneLoading === true) ? <div>\n    //             {post === null ? \"Not Found\": \n    //             <div>\n    //             <h1>{post.title}</h1>\n    //             {post.slug}\n\n    //             <p className='lead'>\n    //             <Link maintainScrollPosition={false} to={{\n    //                 pathname: `/react/posts`,\n    //                 state: { fromDashboard: false }\n    //               }}>Posts</Link>\n\n    //               {post.owner === true ? <Link maintainScrollPosition={false} to={{\n    //                 pathname: `/react/posts/create/`,\n    //                 state: { fromDashboard: false }\n    //               }}>Create Post</Link> : \"\" }\n    //            </p>\n\n    //               {post.owner === true ? <PostForm post={post} postItemUpdated={this.handlePostItemUpdated} /> : \"\"}\n    //             </div>\n    //            }\n    //        </div> : \"Loading...\"}</p>\n    //     )\n    // }\n    render(){\n        const {doneLoading} = this.state\n        // const {slug} = this.state\n        const {post} = this.state\n        return(\n          <div>\n            {(doneLoading === true) ? <div>\n              {(post === null) ? \"Not Found\": \n                <div> \n                  <p className=\"lead\"><Link \n                      to={{pathname:`/react/posts/`,\n                      state: {fromDashboard: false}\n                    }}>\n                      BACK\n                    </Link>\n                    {post.owner === true ? <Link to={{\n                      pathname: `/react/posts/create/`,\n                      state: { fromDashboard: false }\n                    }}>Create Post</Link> : \"\"}\n                  </p>                 \n                  <h1>{post.slug}</h1>\n                  <h1>{post.title}</h1>\n                  {post.owner === true ? <PostForm post={post} postItemUpdated={this.handlePostItemUpdated} /> : \"\"}\n                </div>\n              }\n\n            </div> : \"Loading...\"}\n          </div>               \n        )\n    }\n}\n\nexport default PostDetail","import React, {Component} from 'react'\nimport { Link } from 'react-router-dom'\nimport PostForm from './PostForm'\n\nclass PostCreate extends Component {\n\n  render(){\n    return (\n      <div>\n      \t<Link \n          to={{pathname:`/react/posts/`,\n          state: {fromDashboard: false}\n        }}>\n          BACK\n        </Link>\n      \t<h1>Create Post</h1>\n        \t<PostForm />\n      </div>\n    )\n  }\n\n}\n\nexport default PostCreate\n// // left for reference\n\n\n\n\n// // import React, {Component} from 'react'\n// // import 'whatwg-fetch'\n// // import cookie from 'react-cookies'\n// // import moment from 'moment'\n\n// // class PostCreate extends Component {\n// //     constructor(props){\n// //         super(props)\n// //         this.handleSubmit = this.handleSubmit.bind(this)\n// //         this.handleInputChange = this.handleInputChange.bind(this)\n// //         this.handleDraftChange = this.handleDraftChange.bind(this)\n// //         this.clearForm = this.clearForm.bind(this)\n// //         this.postTitleRef = React.createRef()\n// //         this.postContentRef = React.createRef()\n// //         this.state = {\n// //             draft: false,\n// //             title: null,\n// //             content: null,\n// //             publish: null,\n// //             errors: {}\n// //         }\n// //     }\n// //     createPost(data){\n// //       const endpoint = '/api/posts/' \n// //       const csrfToken = cookie.load('csrftoken')\n// //       let thisComp = this\n// //       if (csrfToken !== undefined) {\n// //           let lookupOptions = {\n// //               method: \"POST\",\n// //               headers: {\n// //                   'Content-Type': 'application/json',\n// //                   'X-CSRFToken': csrfToken\n// //               },\n// //               body: JSON.stringify(data),\n// //               credentials: 'include'\n// //           }\n\n// //           fetch(endpoint, lookupOptions)\n// //           .then(function(response){\n// //               return response.json()\n// //           }).then(function(responseData){\n// //               console.log(responseData)\n// //               if (thisComp.props.newPostItemCreated){\n// //                   thisComp.props.newPostItemCreated(responseData)\n// //               }\n// //               thisComp.clearForm()\n// //           }).catch(function(error){\n// //               console.log(\"error\", error)\n// //               alert(\"An error occured, please try again later.\")\n// //           })\n// //       } \n      \n// //   }\n\n// //     handleSubmit(event){\n// //         event.preventDefault()\n// //         let data = this.state\n// //         this.createPost(data)\n// //     }\n\n// //     handleInputChange(event){\n// //         event.preventDefault()\n// //         let key = event.target.name\n// //         let value = event.target.value\n// //         if (key === 'title'){\n// //             if (value.length > 120){\n// //                 alert(\"This title is too long\")\n// //             }\n// //         }\n// //         this.setState({\n// //             [key]: value\n// //         })\n// //     }\n\n// //     handleDraftChange(event){\n// //       this.setState({\n// //         draft: !this.state.draft\n// //       })\n// //     }\n\n// //     clearForm(event){\n// //       if (event){\n// //         event.preventDefault()\n// //       }\n// //       this.postCreateForm.reset()\n// //     }\n\n\n// //     clearFormRefs(){\n// //       this.postTitleRef.current=''\n// //       this.postContentRef.current=''\n// //     }\n\n\n// //     componentDidMount(){\n// //         this.setState({\n// //             draft: false,\n// //             title: null,\n// //             content: null,\n// //             publish: moment(new Date()).format('YYYY-MM-DD'),\n// //         })\n// //         this.postTitleRef.current.focus()\n// //     }\n\n// //     render(){\n// //         const {publish} = this.state\n// //         let thisComp = this\n// //         return (\n// //             <form onSubmit={this.handleSubmit} ref={(el) => this.postCreateForm = el}>\n// //                 <div className='form-group'>\n// //                     <label for='title'>Post title</label>\n// //                     <input \n// //                       type='text' \n// //                       id='title' \n// //                       name='title' \n// //                       className='form-control'\n// //                       placeholder='Blog post title' \n// //                       ref = {this.postTitleRef}\n// //                       onChange={this.handleInputChange} \n// //                       required='required'/>\n// //                 </div>\n// //                  <div className='form-group'>\n// //                     <label for='content'>Content</label>\n// //                     <textarea id='content' ref = {this.postContentRef} name='content' className='form-control' placeholder='Post content' onChange={this.handleInputChange} required='required'/>\n                   \n// //                 </div>\n// //                 <div className='form-group'>\n// //                     <label for='draft'>\n// //                     <input type='checkbox' checked={this.state.draft} id='draft' name='draft' className='mr-2' onChange={this.handleDraftChange}/>\n// //                      Draft </label>\n// //                      <button onClick={(event)=>{event.preventDefault();this.handleDraftChange()}}>Toggle Draft</button>\n// //                 </div>\n// //                 <div className='form-group'>\n// //                     <label for='publish'>Publish Date</label>\n// //                     <input \n// //                     type='date' \n// //                     id='publish' \n// //                     name='publish' \n// //                     className='form-control' \n// //                     onChange={this.handleInputChange}\n// //                      value={publish}\n// //                      required='required'/>\n// //                 </div>\n// //                 <button type='submit' className='btn btn-primary'>Save</button>\n// //                 <button className='btn btn-secondary' onClick={this.clearForm}>Cancel</button>\n// //             </form>\n// //         )\n// //     }\n\n// // }\n\n// // export default PostCreate","import { toast } from 'react-toastify';\n\nexport const fetchNotes = (nextEndpoint) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        let endpoint = '/api/investors/' \n\n        if (nextEndpoint !== undefined && nextEndpoint !== null) {\n          endpoint = nextEndpoint\n        }\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        let {notes} = getState();\n        return fetch(endpoint, {headers, })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    toast.error(\"Error! Can't load investors...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            // getState().notes[0].concat(res.data)}\n            .then(res => {\n                if (res.status === 200) {               \n                    return dispatch({type: 'FETCH_NOTES', notes: notes.push(res.data), loading: false});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authetication error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\nexport const searchNotes = (searchtext) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        let endpoint = '/api/investors/' \n        if (searchtext !== undefined && searchtext !== null) {\n          endpoint = `/api/investors/?search=${searchtext}`\n        }\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        return fetch(endpoint, {headers, method: \"GET\", })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        // console.log(res)\n                        return {status: res.status, data};\n                    })\n                } else {\n                    toast.error(\"Error! Can't load investors...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'SEARCH_NOTES', notes: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authetication error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\nexport const orderNotes = (order) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        let endpoint = '/api/investors/' \n        if (order !== undefined && order !== null) {\n          endpoint = `/api/investors/?ordering=${order}`\n        }\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        return fetch(endpoint, {headers, method: \"GET\", })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        // console.log(res)\n                        return {status: res.status, data};\n                    })\n                } else {\n                    toast.error(\"Error! Can't load investors...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'ORDER_NOTES', notes: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authetication error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\nexport const addNote = (text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n\n        let body = JSON.stringify({text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence });\n        return fetch(\"/api/investors/\", {headers, method: \"POST\", body})\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    toast.error(\"Error! Can't load investors...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 201) {\n                    toast.info(\"Investor \"+res.data.text+\" added\")\n                    return dispatch({type: 'ADD_NOTE', note: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authetication error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\n\nexport const updateNote = (index, id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence) => {\n    return (dispatch, getState) => {\n\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n\n        let body = JSON.stringify({text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence });\n        // console.log(\"id\", id, \"index\", index)\n        let noteId = getState().notes[index].noteitems[id].id;\n\n        return fetch(`/api/investors/${noteId}/`, {headers, method: \"PUT\", body})\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    toast.error(\"Error! Can't load investors...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 200) {\n                    toast.info(\"Investor \"+res.data.text+\" edited\")\n                    return dispatch({type: 'UPDATE_NOTE', note: res.data, index, id});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authetication error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\n\nexport const deleteNote = (id, index) => {\n    return (dispatch, getState) => {\n\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        let noteId = getState().notes[id].noteitems[index].id;\n\n        return fetch(`/api/investors/${noteId}/`, {headers, method: \"DELETE\"})\n            .then(res => {\n                if (res.status === 204) {\n                    toast.info(\"Investor deleted\")\n                    return {status: res.status, data: {}};\n                } else if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 204) {\n                    // toast.info(\"Investor deleted\")\n                    return dispatch({type: 'DELETE_NOTE', id, index});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authetication error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n            .then(res => {dispatch(fetchNotes())})\n    }\n}\n","import React, { Component } from 'react'\nimport {   \n  FormGroup, Button, Modal, \n  ModalHeader, ModalBody, \n  ModalFooter, } from 'reactstrap';\nimport './styles.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\n\nexport class ModalDelete extends Component {\n  render() {\n    const { modaldelete, text, index, id, toggle} = this.props;\n\n    return (\n      <div>\n        <Modal isOpen={modaldelete} toggle={toggle}>\n            <ModalHeader color=\"info\">Are you sure?</ModalHeader>           \n            <ModalBody>Delete <b>{text}</b> Investor?</ModalBody>\n            <ModalFooter> \n              <FormGroup row>                   \n              <Button className=\"rounded-0\" color=\"info\" onClick={() => this.props.onSelectForDelete(index, id)}><FontAwesomeIcon icon={faTrash} color=\"white\"/></Button>              \n              <Button className=\"rounded-0\" onClick={toggle}>Cancel</Button>\n              </FormGroup>\n            </ModalFooter>\n        </Modal> \n      </div>\n    )\n    \n  }\n}\n","import React, { Component } from 'react'\nimport { FormText,  \n  FormGroup, Label, Input,  } from 'reactstrap';\n\n// REQUIRED FIELDS\nexport class InputName extends Component {\n  render() {\n    const { text, errors } = this.props;\n    return (\n      <div>\n        <FormGroup>\n          <Label>Name <span className=\"text-danger\">*</span></Label>\n          <Input\n            name=\"text\"\n            value={text || ''}\n            placeholder=\"Enter name...\"\n            onChange={this.props.onInputChange}\n            required />\n            {errors.text ? <FormText color=\"danger\">{errors.text}</FormText>: \"\"}\n        </FormGroup>\n      </div>\n    )\n    \n  }\n}\nexport class InputPhone extends Component {\n  render() {\n    const { phone, errors } = this.props;\n    return (\n      <div>\n        <FormGroup>\n          <Label>Phone <span className=\"text-danger\">*</span></Label>\n          <Input\n            name=\"phone\"\n            value={phone || ''}\n            placeholder=\"Enter phone...\"\n            onChange={this.props.onInputChange}\n            required />\n            {errors.phone ? <FormText color=\"danger\">{errors.phone}</FormText>: \"\"}\n        </FormGroup>\n      </div>\n    )\n    \n  }\n}\nexport class InputEmail extends Component {\n  render() {\n    const { email, errors } = this.props;\n    return (\n      <div>\n        <FormGroup>\n          <Label>Email <span className=\"text-danger\">*</span></Label>\n          <Input\n            name=\"email\"\n            value={email || ''}\n            placeholder=\"Enter email...\"\n            onChange={this.props.onInputChange}\n            required />\n            {errors.email ? <FormText color=\"danger\">{errors.email}</FormText>: \"\"}\n        </FormGroup>\n      </div>\n    )    \n  }\n}\nexport class InputLinkedin extends Component {\n  render() {\n    const { linkedin_profile, errors } = this.props;\n    return (\n      <div>\n        <FormGroup>\n          <Label>Linkedin <span className=\"text-danger\">*</span></Label>\n          <Input\n            name=\"linkedin_profile\"\n            value={linkedin_profile || ''}\n            placeholder=\"Enter linkedin url...\"\n            onChange={this.props.onInputChange}\n            required />\n            {errors.linkedin_profile ? <FormText color=\"danger\">{errors.linkedin_profile}</FormText>: \"\"}\n        </FormGroup>\n      </div>\n    )    \n  }\n}\n// NOT REQUIRED FIELDS\nexport class InputWebsite extends Component {\n  render() {\n    const { website, errors } = this.props;\n    return (\n      <div>\n        <FormGroup>\n          <Label>Website</Label>\n          <Input\n            name=\"website\"\n            value={website || ''}\n            placeholder=\"Enter website url...\"\n            onChange={this.props.onInputChange}\n            />\n            {errors.website ? <FormText color=\"danger\">{errors.website}</FormText>: \"\"}\n        </FormGroup>\n      </div>\n    )    \n  }\n}\nexport class InputCorrespondence extends Component {\n  render() {\n    const { correspondence, errors } = this.props;\n    return (\n      <div>\n        <FormGroup>\n          <Label>Correspondence</Label>\n          <Input\n            name=\"correspondence\"\n            value={correspondence || ''}\n            placeholder=\"Enter correspondence...\"\n            onChange={this.props.onInputChange}\n            type='textarea'\n            />\n            {errors.correspondence ? <FormText color=\"danger\">{errors.correspondence}</FormText>: \"\"}\n        </FormGroup>\n      </div>\n    )    \n  }\n}","import React, { Component } from 'react'\nimport { Button, \n  FormGroup, Label, } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMale, faUsers, \n       } from '@fortawesome/free-solid-svg-icons'\n\n// Checkbox is corporate\nexport class CheckboxIsCorp extends Component {\n  render() {\n    const { is_corporate } = this.props;\n    return (\n      <div>\n        <FormGroup>\n            <Label>Individual <FontAwesomeIcon icon={faMale} color={!is_corporate ? \"black\": \"grey\"}/> / Corporate <FontAwesomeIcon icon={faUsers} color={is_corporate ? \"black\": \"grey\"}/></Label>\n            <Button className=\"btn btn-block\" onClick={this.props.handleCheckboxIsCorpBtnClick} active={is_corporate}>{is_corporate ? 'Change to Individual' : 'Change to Corporate'}</Button>\n        </FormGroup>\n      </div>\n    )    \n  }\n}","import React, { Component } from 'react'\nimport { Button, \n  FormGroup, Label, } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHandHoldingUsd, faCheckCircle, \n       } from '@fortawesome/free-solid-svg-icons'\n\n// Checkbox is corporate\nexport class CheckboxIsPayed extends Component {\n  render() {\n    const { status, is_staff, is_payed } = this.props;\n    return (\n      <div>\n        {status !== \"Candidate\" && is_staff ?\n          <FormGroup>\n              <Label>New <FontAwesomeIcon icon={faHandHoldingUsd} color={!is_payed ? \"black\": \"grey\"}/> / Payed <FontAwesomeIcon icon={faCheckCircle} color={is_payed ? \"black\": \"grey\"}/></Label>\n              <Button className=\"btn btn-block\" onClick={this.props.handleCheckboxIsPayBtnClick} active={is_payed}>{is_payed ? 'Change to New' : 'Change to Payed'}</Button>\n          </FormGroup>\n          : null} \n      </div>\n    )    \n  }\n}","import React, { Component } from 'react'\nimport { \n  FormGroup, Label, Dropdown, \n  DropdownToggle, \n  DropdownMenu, DropdownItem, } from 'reactstrap';\n\n// Checkbox is corporate\nexport class CustomDropdown extends Component {\n  render() {\n    const { status, dropdownOpen } = this.props;\n    return (\n      <div>\n        <FormGroup>\n          <Label>Status</Label>\n          <Dropdown className=\"form-group\" isOpen={dropdownOpen} toggle={this.props.onToggle}>\n            <DropdownToggle className=\"btn-block\" caret>\n              {status || ''}\n            </DropdownToggle>\n            <DropdownMenu className=\"btn-block\">\n              <DropdownItem onClick={this.props.onChangeValue}>Candidate</DropdownItem>\n              <DropdownItem onClick={this.props.onChangeValue}>Processed</DropdownItem>\n              <DropdownItem onClick={this.props.onChangeValue}>Converted</DropdownItem>\n              <DropdownItem onClick={this.props.onChangeValue}>Rejected</DropdownItem>\n            </DropdownMenu>\n          </Dropdown>\n        </FormGroup>\n      </div>\n    )    \n  }\n}","import React, { Component } from 'react'\n\nimport * as Inputs from '../../Atoms/AddInputs/AddInputs'\nimport { CheckboxIsCorp } from '../../Atoms/Checkboxes/CheckboxIsCorp'\nimport { CheckboxIsPayed } from '../../Atoms/Checkboxes/CheckboxIsPayed'\nimport { CustomDropdown } from '../../Atoms/Dropdown/Dropdown'\n// import { DatePickLastCall } from '../../Atoms/DatePick/DatePickLastCall'\n// import FileDrop from '../../Atoms/FileDrop/FileDrop'\n\nexport class InputFormNoteQuickAdd extends Component {\n  render() {\n    const { text, phone, email,  \n      linkedin_profile, website, \n      correspondence, is_corporate,\n      is_staff, is_payed, dropdownOpen,\n      status, updateNoteId,\n      errors, \n    } = this.props;\n\n    return (\n      <div>\n        <Inputs.InputName \n          onInputChange={this.props.onInputChange} \n          text={text} \n          errors={errors} \n        />\n        <Inputs.InputPhone \n          onInputChange={this.props.onInputChange} \n          phone={phone} \n          errors={errors} \n        />\n        <Inputs.InputEmail \n          onInputChange={this.props.onInputChange} \n          email={email} \n          errors={errors} \n        />      \n        <Inputs.InputLinkedin \n          onInputChange={this.props.onInputChange} \n          linkedin_profile={linkedin_profile} \n          errors={errors} \n        />\n        <Inputs.InputWebsite \n          onInputChange={this.props.onInputChange} \n          website={website} \n          errors={errors} \n        />      \n        <Inputs.InputCorrespondence \n          onInputChange={this.props.onInputChange} \n          correspondence={correspondence} \n          errors={errors} \n        />      \n        \n        <CheckboxIsCorp \n          handleCheckboxIsCorpBtnClick={this.props.handleCheckboxIsCorpBtnClick} \n          is_corporate={is_corporate} \n        />\n        {updateNoteId !== null ?\n        <CustomDropdown \n          onChangeValue={this.props.onChangeValue} \n          onToggle={this.props.onToggle} \n          status={status} \n          dropdownOpen={dropdownOpen} \n        />:null}\n        {updateNoteId !== null && status!==\"Candidate\" && is_staff ?\n          <CheckboxIsPayed \n            handleCheckboxIsPayBtnClick={this.props.handleCheckboxIsPayBtnClick} \n            status={status} \n            is_staff={is_staff} \n            is_payed={is_payed}\n          />\n        : null}      \n         \n      </div>\n    )\n    \n  }\n}","import React, { Component } from 'react'\nimport { Button } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMale, \n  faUsers, faExchangeAlt, faLongArrowAltDown,\n  faTimes } from '@fortawesome/free-solid-svg-icons'\n\n\nexport class OrderingHeaderTable extends Component {\n\n  state = { order: [], is_ordering_name: false, searchtext: \"\" }\n\n  onBtnClickOrderingName = (ordername) => {\n    // Create a new array based on current state:\n    let order = [...this.state.order];\n    let newordername = \"-\"+ordername\n    let is_ordering_name = false\n\n    // if ordername starts from \"C\"-character - clear that order!\n    if (ordername.charAt(0) === \"C\"){\n      let index = order.indexOf(ordername.slice(1, ordername.length))\n      // Clear ordername (remove from array)\n      if (index !== -1) {\n        order.splice(index, 1);\n      }\n    } else {\n      // Add or remove item to it\n      if (order.includes(ordername)){\n        let index = order.indexOf(ordername)\n        if (index !== -1) {          \n          order.splice(index, 1);\n          order.splice(index, 0, newordername);         \n        }\n      } else if (order.includes(newordername)) {\n        let index = order.indexOf(newordername)\n        if (index !== -1) {\n          order.splice(index, 1);\n          order.splice(index, 0, ordername);\n        }\n      } else {\n        order.push(ordername);\n\n      }\n    }\n    if (order.length > 0) {\n      is_ordering_name = true\n    } \n\n    // FIX BUG with \"owner\" negative ordering\n    if (order.includes(\"-owner\")&&order.length===1) {\n      // adding \"-id\" field to multiply filter\n      // if has only \"-owner\" field\n      order.push(\"-id\");\n    } else {\n      // remove \"-id\" in all other variants\n      let index = order.indexOf(\"-id\")\n      if (index !== -1) {        \n        order.splice(index, 1);\n      }      \n    }\n\n    // Set state\n    this.setState({is_ordering_name: is_ordering_name, searchtext: \"\", order}, function () {\n        // console.log(this.state)\n        this.props.onOrderNotes(this.state);\n    });\n  }\n\n  render() {\n\n    const {order} = this.state;\n\n    return (\n          <thead>\n            <tr>\n              <th className=\"table-num__title\">#</th>\n              <th className=\"table-investor__title\"><FontAwesomeIcon icon={faMale} color=\"black\"/> / <FontAwesomeIcon icon={faUsers} color=\"black\"/></th>\n              <th>\n                <div className=\"table-investor__ordering\">\n                  <span>Name </span>\n                  <div className=\"table-investor__ordering--control\">\n                    <Button color=\"link\" onClick={() => this.onBtnClickOrderingName(\"text\")}>\n                    {order.includes(\"text\") ? <FontAwesomeIcon icon={faLongArrowAltDown} color=\"black\"/>\n                    :order.includes(\"-text\") ? <FontAwesomeIcon rotation={180} icon={faLongArrowAltDown} color=\"black\"/>\n                    :<FontAwesomeIcon rotation={90} icon={faExchangeAlt} color=\"grey\"/>}</Button>\n                    {order.includes(\"text\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"Ctext\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                    :order.includes(\"-text\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"C-text\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                    :\"\"}\n                  </div>\n                </div>\n              </th>\n              <th>\n                <div className=\"table-investor__ordering\">                  \n                  <span>Dev </span>\n                  <div className=\"table-investor__ordering--control\">\n                    <Button color=\"link\" onClick={() => this.onBtnClickOrderingName(\"owner\")}>\n                    {order.includes(\"owner\") ? <FontAwesomeIcon icon={faLongArrowAltDown} color=\"black\"/>\n                    :order.includes(\"-owner\") ? <FontAwesomeIcon rotation={180} icon={faLongArrowAltDown} color=\"black\"/>\n                    :<FontAwesomeIcon rotation={90} icon={faExchangeAlt} color=\"grey\"/>}</Button>\n                    {order.includes(\"owner\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"Cowner\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                    :order.includes(\"-owner\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"C-owner\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                    :\"\"}\n                  </div>\n                </div>\n              </th>\n              <th className=\"table-phone__title\">Phone</th>\n              <th>\n                <div className=\"table-investor__ordering\">                  \n                  <span>Status </span>\n                  <div className=\"table-investor__ordering--control\">\n                    <Button color=\"link\" onClick={() => this.onBtnClickOrderingName(\"status\")}>\n                    {order.includes(\"status\") ? <FontAwesomeIcon icon={faLongArrowAltDown} color=\"black\"/>\n                    :order.includes(\"-status\") ? <FontAwesomeIcon rotation={180} icon={faLongArrowAltDown} color=\"black\"/>\n                    :<FontAwesomeIcon rotation={90} icon={faExchangeAlt} color=\"grey\"/>}</Button>\n                    {order.includes(\"status\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"Cstatus\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                    :order.includes(\"-status\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"C-status\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                    :\"\"}\n                  </div>\n                </div>\n              </th>\n              <th>\n                <div className=\"table-investor__ordering \">                  \n                  <span className=\"table-investor__ordering--payment\">Payment </span>\n                  <div className=\"table-investor__ordering--control\">\n                    <Button color=\"link\" onClick={() => this.onBtnClickOrderingName(\"is_payed\")}>\n                    {order.includes(\"is_payed\") ? <FontAwesomeIcon icon={faLongArrowAltDown} color=\"black\"/>\n                    :order.includes(\"-is_payed\") ? <FontAwesomeIcon rotation={180} icon={faLongArrowAltDown} color=\"black\"/>\n                    :<FontAwesomeIcon rotation={90} icon={faExchangeAlt} color=\"grey\"/>}</Button>\n                    {order.includes(\"is_payed\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"Cis_payed\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                    :order.includes(\"-is_payed\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"C-is_payed\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                    :\"\"}\n                  </div>\n                </div>\n              </th>\n              <th>Manage</th>\n            </tr>\n          </thead>\n    )\n    \n  }\n}","import React, { Component } from 'react'\nimport { Button } from 'reactstrap';\nimport { Link } from 'react-router-dom'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMale, faUsers, faEdit, \n  faCheckCircle, faHandHoldingUsd, faTrash } from '@fortawesome/free-solid-svg-icons'\n\n\nexport class OrderingBodyTable extends Component {\n\n  render() { \n    const { post, index } = this.props\n\n    return (\n        <tbody key={index}>\n          {post.noteitems !== undefined && post.noteitems.length > 0 ? post.noteitems.map((note, id) => {\n            return (                                    \n                <tr key={id}>\n                    <th scope=\"row\" className=\"table-num__text\">{id+1}</th>\n                    <td className=\"table-investor__text\">{note.is_corporate ? <FontAwesomeIcon icon={faUsers} color=\"black\"/> : <FontAwesomeIcon icon={faMale} color=\"black\"/>}</td>\n                    <td>\n                      <Link className=\"info-link\" to={{pathname:`/investors/${note.id}`,\n                            state: {fromDashboard: false, prevLink: window.location.pathname}\n                            }}>{note.text}</Link>\n                    </td>\n                    <td>\n                      <Link className=\"info-link\" to={{pathname:`/profile/${note.owner}`,\n                            state: {fromDashboard: false, prevLink: window.location.pathname}\n                            }}>{note.owner_username}</Link></td>\n                    <td className=\"table-phone__text\">{note.phone}</td>\n                    <td>{note.status}</td>\n                    <td>{note.is_payed ? <FontAwesomeIcon icon={faCheckCircle} color=\"black\"/> : <FontAwesomeIcon icon={faHandHoldingUsd} color=\"black\"/>}</td>\n                    <td>\n                      <Button className=\"rounded-0\" color=\"info\" title=\"edit\" onClick={() => this.props.onSelectForEdit(index, id)}><FontAwesomeIcon icon={faEdit} /></Button>\n                      <Button className=\"rounded-0\" color=\"secondary\" onClick={() => this.props.onToggleModalDelete(index, id)} title=\"delete\"><FontAwesomeIcon icon={faTrash} /></Button>\n                    </td>\n                </tr>                                        \n              )\n            }\n          ) : null}\n        </tbody>\n      )    \n  }\n}\n","export const handleValidation = (fields) => {\n  // let fields = this.state;\n  let errors = {};\n\n  //Name\n  if(fields[\"text\"].trim() === \"\"){\n     errors[\"text\"] = \"Cannot be empty\";\n  } else {\n    if(typeof fields[\"text\"] !== \"undefined\"){\n       if(!fields[\"text\"].match(/^[a-zA-Z]+$/)){\n          errors[\"text\"] = \"Name must be only letters\";\n       } else if (fields[\"text\"].length > 15) {\n          errors[\"text\"] = \"Your name is too long\";\n       }        \n    }\n  }\n\n  //Phone\n  if(fields[\"phone\"].trim() === \"\"){\n     errors[\"phone\"] = \"Phone cannot be empty\";\n  } else {\n    if(typeof fields[\"phone\"] !== \"undefined\"){\n      if(!fields[\"phone\"].match(/^[0-9\\-\\\\+]{9,15}$/)){\n        errors[\"phone\"] = \"Not phone number\";\n      }      \n    }\n  }\n  // Email\n  if(fields[\"email\"].trim() === \"\"){\n    errors[\"email\"] = \"Cannot be empty\";\n  } else {\n    if(typeof fields[\"email\"] !== \"undefined\"){\n      let lastAtPos = fields[\"email\"].lastIndexOf('@');\n      let lastDotPos = fields[\"email\"].lastIndexOf('.');\n      if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"email\"].indexOf('@@') === -1 && lastDotPos > 2 && (fields[\"email\"].length - lastDotPos) > 2)) {\n        errors[\"email\"] = \"Email is not valid\";\n      }\n    }\n  }\n  // Linkedin profile\n  if(fields[\"linkedin_profile\"].trim() === \"\"){\n    errors[\"linkedin_profile\"] = \"Cannot be empty\";\n  } else {\n    if(typeof fields[\"linkedin_profile\"] !== \"undefined\"){\n      let re=/^((https?|ftp|smtp):\\/\\/)+(www.)?[a-z0-9]+(\\.[a-z]{2,}){1,3}(#?\\/?[a-zA-Z0-9-_#]+)*\\/?(\\?[a-zA-Z0-9-_]+=[a-zA-Z0-9-%]+&?)?$/;\n      if (!re.test(fields[\"linkedin_profile\"])) {\n        errors[\"linkedin_profile\"] = \"Not Linkedin URL\";\n      }\n    }\n  }\n  // Website\n  if(fields[\"website\"].trim() === \"\"){\n  } else {\n    if(typeof fields[\"website\"] !== \"undefined\"){\n      let re=/^((https?|ftp|smtp):\\/\\/)+(www.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_+.~#?&//=]*)?$/;\n      if (!re.test(fields[\"website\"])) {\n        errors[\"website\"] = \"URL is not valid\";\n      }\n    }\n  }\n\n  return errors;\n}","import React, { Component } from 'react'\n\nimport * as notes from \"../../../actions/notesActions\";\nimport {connect} from 'react-redux';\nimport { Link } from 'react-router-dom'\nimport { Form, FormText,  \n  FormGroup, Button,\n  Table, CustomInput,\n  Modal, ModalHeader, ModalBody, ModalFooter, } from 'reactstrap';\nimport { LoadScreen, LoadObject } from '../../general/Organisms/LoadScreen/LoadScreen'\nimport { ModalDelete } from '../Organisms/Modal/Modal'\n\nimport { InputFormNoteQuickAdd } from '../Molecules/Forms/InputFormNoteQuickAdd'\nimport { OrderingHeaderTable } from '../Molecules/Tables/OrderingHeaderTable'\nimport { OrderingBodyTable } from '../Molecules/Tables/OrderingBodyTable'\n\nimport { handleValidation } from '../../../utils/helpers'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlusSquare, \n  faSearch, faSave, faTimes,  } from '@fortawesome/free-solid-svg-icons'\n\n\nclass Notes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: \"\",\n      phone: \"\",\n      status: 'Candidate',\n      email: \"\",\n      linkedin_profile: \"\",\n      website: \"\",\n      correspondence: \"\",\n      is_corporate: false,\n      is_payed: false,\n      searchtext: \"\",\n      updateNoteId: null,\n      updateNoteIndex: null,\n      dropdownOpen: false,\n      is_ordering_name: false,\n      modal: false,\n      modaldelete: false,\n      is_staff: false,\n      loading: true,\n      fetching: true,\n      nextafterdelete: \"\",\n      deleted: false,\n      order: [],\n      errors: {},\n      notes: [\n          {\n            count: null,\n            next: null,\n            previous: null,\n            noteitems: []\n          },\n        ],\n      }\n  }\n\n  // // END FETCH DATA AFTER PROPS\n  componentDidMount () {\n    // Check if was ordering\n    if (!(Array.isArray(this.props.notes[0].noteitems) && this.props.notes[0].noteitems.length)) {\n      // array exists and is not empty\n      this.props.fetchNotes()\n    } else {\n      this.props.orderNotes(\"\")\n    }\n\n  }\n\n  resetForm = () => {\n    this.setState({text: \"\", phone: '', email:'', errors: {}, \n      updateNoteId: null, status: 'Candidate', is_corporate: false, \n      is_payed: false, linkedin_profile: \"\", website: \"\",\n      correspondence: \"\", });\n  }\n  addNew = () => {\n    this.setState({text: \"\", phone: '', email:'', errors: {}, \n      updateNoteId: null, status: 'Candidate', is_corporate: false, \n      is_payed: false, linkedin_profile: \"\", website: \"\", \n      modal: true, correspondence: \"\", });\n  }\n  resetSearch = () => {\n    if (this.state.searching) {\n        this.props.searchNotes(\"\") \n        this.setState({\n          is_ordering_name: false,\n          order: [],\n          searching: false\n        });             \n    }    \n    this.setState({ searchtext: \"\" });\n  }\n \n  selectForEdit = (index, id) => {\n    let note = this.props.notes[index].noteitems[id];\n    this.setState({text: note.text, phone: note.phone, \n      status: note.status, is_payed: note.is_payed, \n      is_corporate: note.is_corporate, email: note.email, \n      linkedin_profile: note.linkedin_profile, \n      website: note.website, correspondence:note.correspondence,\n      updateNoteId: id, updateNoteIndex: index, modal: true, });\n  }\n\n  selectForDelete = (index, id) => {\n    this.props.deleteNote(index, id)\n    this.setState({\n      modaldelete: false,\n    })     \n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.notes !== prevProps.notes) {\n      this.setState({\n        loading: this.props.notes[0].loading,\n        fetching: this.props.notes[0].fetching,\n      }) \n      // если длина массива меньше чем предыдущая длина (один элемент удален)\n      // то пересчитываем эндпоинт для фетча (вычитаем из последнего символа next\n      // число \"1\" чтобы получить текущий фетч), если в нексте на конце \"1\", то обрезаем\n      // до знака \"?\"\n      let nextForDelete = \"\";\n      if(this.props.notes[0].deleted && this.props.notes[0].next) {\n        nextForDelete = this.props.notes[0].next\n        // console.log(nextForDelete)\n        let lastChar = parseInt(nextForDelete.slice(-1), 10)\n        if ((lastChar-1) >= 2) {\n          nextForDelete = nextForDelete.slice(0, -1)+(lastChar-1);\n          // console.log(nextForDelete)\n        }\n        \n        //add flag nextafterdelete to correctly fetch\n        this.setState({nextafterdelete: nextForDelete,\n          deleted: false})\n      }\n      // if (this.props.lead) {\n      //   const leads = paymentsUtil(this.props.lead.leads)\n      //   this.setState({leads: leads}); \n      // }\n\n    }\n  }   \n    \n  toggle = () => {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  }\n  toggleModal = () => {\n    this.setState(prevState => ({\n      modal: !prevState.modal,\n    }));\n  }\n  toggleModalDelete = (index, id) => {\n    let text = \"\"\n    if (id !== undefined) {\n      text = this.props.notes[index].noteitems[id].text\n    }\n    this.setState(prevState => ({\n      modaldelete: !prevState.modaldelete,\n      index: index,\n      id: id,\n      text: text\n    }));\n  }\n\n  handleChange = (e) => {\n    e.preventDefault();\n    let key = e.target.name\n    let value = e.target.value\n\n    this.setState({\n        [key]: value,\n        errors: {}\n    })\n\n  }\n\n  changeValue = (e) => {\n    this.setState({status: e.currentTarget.textContent})\n  }\n  loadMorePosts = () => {\n    const {next} = this.props.notes[this.props.notes.length - 1]\n    this.setState({\n      fetching: true,\n    });\n    // Check if investor is after delete to correct fetch \n    if (this.state.nextafterdelete) {\n      this.props.fetchNotes(this.state.nextafterdelete)\n      //clear flag nextafterdelete\n      this.setState({nextafterdelete: \"\"})\n    } else {\n      if (next !== null || next !== undefined) {\n        // checking with timeout function\n        // setTimeout( () => {this.props.fetchNotes(next)}, 5000 )\n        this.props.fetchNotes(next)             \n      }\n    }\n     \n  }\n  searchNotes = () => {\n      const {searchtext} = this.state\n      if (searchtext !== null || searchtext !== undefined) {\n          this.props.searchNotes(searchtext) \n          this.setState({\n            is_ordering_name: false,\n            order: [],\n            searching: true,\n          });             \n      }  \n  }\n\n  onCheckboxIsCorpBtnClick = () => {\n    this.setState({\n      is_corporate: !this.state.is_corporate,\n    });\n  }\n  onCheckboxIsPayBtnClick = () => {\n    this.setState({\n      is_payed: !this.state.is_payed,\n    });\n  }\n\n  onOrderNotes = (dataFromCallback) => {\n    // Array to string with ','\n    \n    if (dataFromCallback && dataFromCallback.order.length) {\n      let mapped = dataFromCallback.order.map((item)=>(item)).join(\",\");\n      this.setState({...dataFromCallback});      \n      this.props.orderNotes(mapped)              \n    } else {\n      this.setState({order: []});\n      this.props.orderNotes(\"\")   \n    }    \n  }\n  submitNote = (e) => {\n      e.preventDefault();\n      // check validation from helper file\n      const validation_errors = handleValidation(this.state)\n      // check validation_errors dictionary is empty or has any errors\n      if (Object.keys(validation_errors).length === 0) {\n        // Check what do you want add or edit?\n        if (this.state.updateNoteId === null) {\n            this.props.addNote(this.state.text, this.state.phone, this.state.status, \n              this.state.is_corporate, this.state.is_payed, this.state.email, \n              this.state.linkedin_profile, this.state.website, this.state.correspondence,)\n              .then(this.resetForm)\n              .then(this.toggleModal)            \n              .catch(function (error) {\n                 console.log(\"error\", error);\n               });\n        } else {\n            this.props.updateNote(this.state.updateNoteIndex, this.state.updateNoteId, \n              this.state.text, this.state.phone, this.state.status, this.state.is_corporate, \n              this.state.is_payed, this.state.email, this.state.linkedin_profile, \n              this.state.website, this.state.correspondence)\n              .then(this.resetForm)\n              .then(this.toggleModal)              \n              .catch(function (error) {\n                 console.log(\"error\", error);\n               });\n        }\n      } else {\n        this.setState({errors: validation_errors}); \n      }\n  }\n  renderModal() {\n      const { modal, \n        text, phone, email, linkedin_profile,\n        website, correspondence, is_corporate,\n        status, is_payed, dropdownOpen,\n        updateNoteId,\n        errors } = this.state;\n      const { is_staff } = this.props;\n      \n      if (this.state.modal) {\n        return (\n          <Modal isOpen={modal} toggle={this.toggleModal}>\n            <Form onSubmit={this.submitNote}>            \n\n              <ModalHeader toggle={this.toggleModal}>{updateNoteId === null ? \"New Investor\" : \"Edit Investor\"}</ModalHeader>\n              <ModalBody>                    \n                <InputFormNoteQuickAdd\n                  onInputChange={this.handleChange}\n                  handleCheckboxIsCorpBtnClick={this.onCheckboxIsCorpBtnClick}\n                  handleCheckboxIsPayBtnClick={this.onCheckboxIsPayBtnClick} \n                  onToggle={this.toggle} \n                  onChangeValue={this.changeValue}\n\n                  text={text} \n                  phone={phone}\n                  email={email}\n                  linkedin_profile={linkedin_profile}\n                  website={website}\n                  correspondence={correspondence}\n                  is_corporate={is_corporate}\n                  is_staff={is_staff}\n                  status={status}\n                  is_payed={is_payed}\n                  dropdownOpen={dropdownOpen}\n                  updateNoteId={updateNoteId}\n\n                  errors={errors} \n                />                              \n              </ModalBody>\n              <ModalFooter> \n                <FormGroup row>                   \n                <Button className=\"rounded-0\" color=\"info\" type=\"submit\"><FontAwesomeIcon icon={faSave} color=\"white\"/></Button>              \n                {updateNoteId === null ? <Button className=\"rounded-0\" outline onClick={this.resetForm}>Clear</Button> : null}\n                <Button className=\"rounded-0\" onClick={this.toggleModal}>Cancel</Button>\n                </FormGroup>\n              </ModalFooter>\n            </Form>\n          </Modal>            \n        );\n      }\n    }\n\n  renderNotes () {\n    const { notes } = this.props\n    const { errors, modal, searchtext, modaldelete, index, id, text, fetching } = this.state;\n    const { next } = this.props.notes[this.props.notes.length - 1];\n    console.log(\"fetching\", fetching)\n    return (\n      <div>\n        <div className=\"centering mt-2\"> \n          <div className=\"centering-left\"> \n            <Link to={\"/investors/add\"}><Button className=\"rounded-0 btn-add\" color=\"info\">Add New</Button></Link>\n          </div>\n          <div className=\"centering-center\">\n          {modal ? this.renderModal() : null}\n          {modaldelete ? \n            <ModalDelete \n              modaldelete={modaldelete} index={index} \n              id={id} text={text}\n              toggle={this.toggleModalDelete}\n              onSelectForDelete={this.selectForDelete}\n            /> \n          : null}\n            <FormGroup row>\n              <Button className=\"rounded-0\" color=\"info\" onClick={this.addNew}><FontAwesomeIcon icon={faPlusSquare} color=\"white\"/><span className=\"btn-quick__text\"> Quick Add</span></Button>\n              <CustomInput inline\n                id=\"searchtext\"\n                type=\"text\" \n                name=\"searchtext\"\n                value={searchtext || ''}\n                placeholder=\"Search by Name...\"\n                onChange={this.handleChange}\n                \n                />\n                {errors.searchtext ? <FormText color=\"danger\">{errors.searchtext}</FormText>: \"\"}\n              <Button className=\"rounded-0\" onClick={this.searchNotes}><FontAwesomeIcon icon={faSearch} color=\"white\"/></Button>\n              {searchtext !== \"\" ? \n                <Button outline className=\"rounded-0 btn-sort__clear\" onClick={this.resetSearch}>\n                  <FontAwesomeIcon rotation={90} icon={faTimes}/>\n                </Button> \n              : null}          \n            </FormGroup>\n          </div>\n          <div className=\"centering-right\"> \n          </div>\n        </div>          \n        <div className=\"centering\"> \n          <div className=\"centering-left\"></div>\n          <h3 className=\"centering-center\">Leads</h3>\n          <div className=\"centering-right centering-right__tablepreffix\">\n          </div>\n        </div>\n        <Table className=\"table text-center table-investors\" striped>\n          <OrderingHeaderTable\n            onOrderNotes={this.onOrderNotes} \n          />\n          {notes !== undefined ? notes.map((post, index)=>{\n            return (\n              <OrderingBodyTable\n                  post={post}\n                  key={`${index}`}\n                  index={index}\n\n                  onSelectForEdit={this.selectForEdit}\n                  onToggleModalDelete={this.toggleModalDelete}\n                />\n              )\n          })\n        :null}   \n        </Table>\n        {next !== null && !fetching ? <Button onClick={this.loadMorePosts}>Load more</Button> : ''}\n        {fetching && <LoadObject objectclass=\"loadnotes\" />}\n      </div>\n    )\n  }\n  render () {\n    const { loading } = this.state\n    return(\n      <div>\n        { loading ? <LoadScreen /> : this.renderNotes() }\n      </div>      \n    )\n  }\n}\n\nconst mapStateToProps = state => {\n    return {\n      notes: state.notes,\n      deleted: state.deleted,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchNotes: (next) => {\n            dispatch(notes.fetchNotes(next));\n        },\n        addNote: (text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence) => {\n            return dispatch(notes.addNote(text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence));\n        },\n        updateNote: (index, id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence) => {\n            return dispatch(notes.updateNote(index, id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence));\n        },\n        deleteNote: (index, id) => {\n            dispatch(notes.deleteNote(index, id));\n        },\n        searchNotes: (searchtext) => {\n            dispatch(notes.searchNotes(searchtext));\n        },\n        orderNotes: (order) => {\n            dispatch(notes.orderNotes(order));\n        },\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notes);","import React, { Component } from 'react'\nimport { Button, \n  FormGroup, Label, } from 'reactstrap';\nimport DatePicker from \"react-datepicker\";\nimport moment from \"moment\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n// Checkbox is corporate\nexport class DatePickLastCall extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      add_call: false,\n      last_call: \"\",      \n    }\n  }\n  handleChangeDate = (date) => {\n    if (date) {\n      this.props.handleChangeDate(moment(date, moment.defaultFormat).toDate());\n    } else {\n      this.props.handleChangeDate(null);\n    }\n    \n  }\n\n  render() {\n    // const { last_call } = this.state;\n    const { last_call } = this.props;\n    const is_valid_date = moment(last_call).isValid()\n\n    return ( \n      <div>\n        <FormGroup>\n          <Label>Last Call {is_valid_date ? <Button className=\"btn\" onClick={this.props.handleResetCallClick}>Reset</Button>: \"\"}</Label>\n          {is_valid_date ?\n          <div>\n            <DatePicker     \n              selected={is_valid_date ? moment(last_call, moment.defaultFormat).toDate() : moment(this.state.last_call, moment.defaultFormat).toDate()}\n              onChange={this.handleChangeDate}\n              showTimeSelect\n              timeFormat=\"HH:mm\"\n              timeIntervals={15}\n              dateFormat=\"d MMMM yyyy HH:mm\"\n              timeCaption=\"time\"\n            />\n          </div>\n          :                     \n            <Button className=\"btn btn-block\" onClick={this.props.handleAddCallClick}>Add Last Call</Button>\n          }\n        </FormGroup>\n      </div>\n    )    \n  }\n}","import React, { Component } from 'react'\nimport Dropzone from 'react-dropzone'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFileUpload } from '@fortawesome/free-solid-svg-icons'\nimport './style.scss'\n\nconst imageMaxSize = 10000000; //bytes\n\nclass FileDrop extends Component {\n\n\tonDrop = (acceptedFiles, rejectedFiles) => {\n\t\t// console.log(acceptedFiles, rejectedFiles)\n\t\tthis.props.onSelectDrop(acceptedFiles);\n\t}\n\trender () {\n\t\t\n\t\tconst { documents, detail } = this.props;\n\t\tlet drop_class\n\t\tlet drop_text\n\n\t\tif (documents) {\n\t\t\tif (detail) {\n\t\t\t\tif (documents === detail) {\n\t\t\t\t  drop_class = \"dropzone-field dropzone-field__default\"\n\t\t\t\t  drop_text = \"  Replace Document\"\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t  drop_class = \"dropzone-field dropzone-field__success\";\n\t\t\t  \t  drop_text = \"  Save to Attach\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdrop_class = \"dropzone-field dropzone-field__success\";\n\t\t\t\tdrop_text = \"  Save to Attach\";\n\t\t\t}\n\t\t} else {\n\t\t\tdrop_class = \"dropzone-field dropzone-field__default\";\n\t\t\tdrop_text = \"  Add Document\"\n\t\t} \n\n\t\treturn (\n\t\t  <div>Documents:\n            <span className=\"document-title\">{detail !== \"null\" ? \" (\"+detail.split(\"/\").slice(-1)[0]+\")\" : \"\"}</span>\n\t\t    <Dropzone\n\t            onDrop={this.onDrop}\t\t            \n\t            multiple={false}\n\t            maxSize={imageMaxSize}\n\t            >\n\t                {({getRootProps, getInputProps}) => (\n\t                    <div {...getRootProps()} className={`${drop_class}`}>\n\t                        <input {...getInputProps()} />\n\t                       \t<div>\n\t                       \t\t<FontAwesomeIcon icon={faFileUpload} color=\"white\"/>\n\t                       \t\t\t<span className=\"dropzone-field__text\">{`${drop_text}`}</span>\n\t\t\t\t\t\t\t</div>\n\t                    </div>\n\t                )}\n\t\t\t</Dropzone>﻿\n\t\t  </div>\n\t\t  )\n\t}\n}\nexport default FileDrop","import React, { Component } from 'react'\n\nimport * as Inputs from '../../Atoms/AddInputs/AddInputs'\nimport { CheckboxIsCorp } from '../../Atoms/Checkboxes/CheckboxIsCorp'\nimport { CheckboxIsPayed } from '../../Atoms/Checkboxes/CheckboxIsPayed'\nimport { CustomDropdown } from '../../Atoms/Dropdown/Dropdown'\nimport { DatePickLastCall } from '../../Atoms/DatePick/DatePickLastCall'\nimport FileDrop from '../../Atoms/FileDrop/FileDrop'\n\nexport class InputFormNoteDetail extends Component {\n  render() {\n    const { text, phone, email,  \n      linkedin_profile, website, \n      correspondence, is_corporate,\n      status, dropdownOpen, is_payed,\n      is_staff, add_call, last_call,\n      documents, detail,\n      errors, } = this.props;\n      \n    return (\n      <div>\n        <Inputs.InputName \n          onInputChange={this.props.onInputChange} \n          text={text} \n          errors={errors} \n        />\n        <Inputs.InputPhone \n          onInputChange={this.props.onInputChange} \n          phone={phone} \n          errors={errors} \n        />\n        <Inputs.InputEmail \n          onInputChange={this.props.onInputChange} \n          email={email} \n          errors={errors} \n        />      \n        <Inputs.InputLinkedin \n          onInputChange={this.props.onInputChange} \n          linkedin_profile={linkedin_profile} \n          errors={errors} \n        />\n        <Inputs.InputWebsite \n          onInputChange={this.props.onInputChange} \n          website={website} \n          errors={errors} \n        />      \n        <Inputs.InputCorrespondence \n          onInputChange={this.props.onInputChange} \n          correspondence={correspondence} \n          errors={errors} \n        />      \n        \n        <CheckboxIsCorp \n          handleCheckboxIsCorpBtnClick={this.props.handleCheckboxIsCorpBtnClick} \n          is_corporate={is_corporate} \n        />\n        <CheckboxIsPayed \n          handleCheckboxIsPayBtnClick={this.props.handleCheckboxIsPayBtnClick} \n          status={status} \n          is_staff={is_staff} \n          is_payed={is_payed}\n        />      \n      \n        <CustomDropdown \n          onChangeValue={this.props.onChangeValue} \n          onToggle={this.props.onToggle} \n          status={status} \n          dropdownOpen={dropdownOpen} \n        />      \n        <DatePickLastCall \n          handleChangeDate={this.props.handleChangeDate} \n          handleResetCallClick={this.props.handleResetCallClick} \n          handleAddCallClick={this.props.handleAddCallClick} \n          add_call={add_call} \n          last_call={last_call} \n        />      \n        <FileDrop \n          onSelectDrop={this.props.onSelectDrop} \n          documents={documents}\n          detail={detail}\n        />\n      </div>\n    )\n    \n  }\n}","import React, { Component } from 'react'\nimport { Table } from 'reactstrap';\n\nimport moment from \"moment\";\n\nexport class DetailPreviewTable extends Component {\n  render() {\n    const { text, phone, email,  \n      linkedin_profile, website, \n      correspondence, is_corporate,\n      status, is_payed,\n      last_call, documents, \n    } = this.props;\n\n    return (\n            <div className=\"col col-12 col-xs-12 col-sm-12 col-md-8 col-lg-8 table-detail\">\n              <h3>Detailed Preview</h3>\n                <Table striped>\n                  <tbody>\n                    <tr>\n                      <th>Investor</th>\n                      <td>{is_corporate ? \"Corporate\" : \"Individual\" }</td>\n                    </tr>\n                    <tr>\n                      <th>Name</th>\n                      <td>{text}</td>\n                    </tr>\n                    <tr>\n                      <th>Phone</th>\n                      <td>{phone}</td>\n                    </tr>\n                    <tr>\n                      <th>Status</th>\n                      <td>{status}</td>\n                    </tr>\n                    <tr>\n                      <th>Email</th>\n                      <td className=\"table-correspondence__data\">{email}</td>\n                    </tr>\n                    <tr>\n                      <th>Linkedin</th>\n                      <td className=\"table-correspondence__data\"><a className=\"table-correspondence__url\" href={`${linkedin_profile}`} >{linkedin_profile}</a></td>\n                    </tr>\n                    <tr>\n                      <th>Website</th>\n                      <td className=\"table-correspondence__data\"><a className=\"table-correspondence__url\" href={`${website}`} >{website}</a></td>\n                    </tr>\n                    <tr>\n                      <th>Correspondence</th>\n                      <td className=\"table-correspondence__data\">{correspondence}</td>\n                    </tr>\n                    <tr>\n                      <th>Payment</th>\n                      <td>{is_payed ? \"Payed\" : \"New\" }</td>\n                    </tr>\n                    <tr>\n                      <th>Calls</th>\n                      <td>{last_call ? moment(last_call).format(\"D MMM YYYY HH:mm\") : \"\"}</td>\n                    </tr>\n                    <tr>\n                      <th>Documents</th>\n                      <td>{documents ? <a className=\"table-correspondence__url\" href={`${documents}`} >{documents.split(\"/\").slice(-1)[0]}</a> : \"\"}</td>\n                    </tr>\n                  </tbody>\n                </Table>\n            </div>\n    )\n    \n  }\n}","import React, {Component} from 'react'\n\nimport * as detail from \"../../../actions/noteDetailActions\";\nimport {connect} from 'react-redux';\nimport { Form, Container, Row,\n     } from 'reactstrap';\nimport moment from \"moment\";\n\nimport { ErrorPage } from '../../general/Organisms/ErrorPage/ErrorPage'\nimport { LoadScreen } from '../../general/Organisms/LoadScreen/LoadScreen'\nimport { ReturnButton, SaveButton } from '../../general/Atoms/Buttons/Buttons'\nimport { InputFormNoteDetail } from '../Molecules/Forms/InputFormNoteDetail'\nimport { DetailPreviewTable } from '../Molecules/Tables/DetailPreviewTable'\nimport { handleValidation } from '../../../utils/helpers'\n\nclass NoteDetail extends Component {\n\n    constructor(props){\n        super(props);\n  \n        this.state = {\n          text: \"\",\n          phone: \"\",\n          status: \"\",\n          email:\"\",\n          linkedin_profile: \"\",\n          website: \"\",\n          correspondence: \"\",\n          is_corporate: false,\n          is_payed: false,\n          id: null,\n          loading: true,\n          errors: {},\n          hasError: false,\n          dropdownOpen: false,\n          detail: {},\n          add_call: false,\n          last_call: \"\", \n          documents: null,\n          attached: false,      \n        }\n    }\n\n    componentDidMount(){\n      if (this.props.match){\n        const {id} = this.props.match.params\n        this.setState({\n            id: id,\n        })\n        this.props.fetchDetailNote(id)        \n      }      \n    }\n\n    componentWillReceiveProps(nextProps) {\n      const detailed = nextProps.detail\n\n      if (Object.keys(detailed).length) {\n        this.setState({\n          text: detailed.text,\n          phone: detailed.phone,\n          status: detailed.status,\n          is_corporate: detailed.is_corporate,\n          is_payed: detailed.is_payed,\n          email: detailed.email,\n          linkedin_profile: detailed.linkedin_profile,\n          website: detailed.website,\n          correspondence: detailed.correspondence,\n          last_call: moment(detailed.last_call, moment.defaultFormat).toDate(),\n          documents: detailed.documents,\n          hasError: detailed.hasError,\n          loading: detailed.loading,\n          errors: detailed.errors\n        }) \n      }        \n    }    \n    toggle = () => {\n      this.setState(prevState => ({\n        dropdownOpen: !prevState.dropdownOpen\n      }));\n    }\n    handleChange = (e) => {\n      e.preventDefault();\n      let key = e.target.name\n      let value = e.target.value\n      this.setState({\n          [key]: value,\n          errors: {}\n      })\n    }\n    changeDate = (date) => {      \n      this.setState({last_call: date})\n    }\n\n    changeValue = (e) => {\n      this.setState({status: e.currentTarget.textContent})\n    }\n\n    getData = (documents) => {\n      // console.log(\"getData!\")\n      this.setState({\n        documents: documents[0],\n        attached: true,\n      })\n    }\n\n    onCheckboxIsCorpBtnClick = () => {\n      this.setState({\n        is_corporate: !this.state.is_corporate,\n      });\n    }\n    onCheckboxIsPayBtnClick = () => {\n      this.setState({\n        is_payed: !this.state.is_payed,\n      });\n    }\n    onAddCallClick = () => {\n      this.setState({\n        add_call: true,\n        last_call: moment(new Date(), moment.defaultFormat).toDate(),\n      });\n    }\n\n    onResetCallClick = () => {\n      this.setState({\n        add_call: false,\n        last_call: \"\",\n      });\n    }\n\n    submitNote = (e) => {\n      e.preventDefault();\n      // check validation from helper file\n      const validation_errors = handleValidation(this.state)\n      // check validation_errors dictionary is empty or has any errors\n      if (Object.keys(validation_errors).length === 0) {\n        this.props.updateDetailNote(this.state.id, this.state.text, \n          this.state.phone, this.state.status, this.state.is_corporate, \n          this.state.is_payed, this.state.email, this.state.linkedin_profile, \n          this.state.website, this.state.correspondence, this.state.last_call,\n          this.state.documents, this.state.attached,)\n      } else {\n        this.setState({errors: validation_errors}); \n      }\n    }\n\n    renderNote() {\n        const { detail, is_staff } = this.props;\n        const { text, phone, email, \n          linkedin_profile, website,\n          correspondence, is_corporate,\n          status, dropdownOpen, is_payed,\n          add_call, last_call, documents,\n          errors, hasError } = this.state;\n\n        if (!detail.detail && !hasError) {\n          return (\n                <Container fluid>\n                  <Row>\n                    <Form onSubmit={this.submitNote} className=\"form col-12 col-xs-12 col-sm-12 col-md-4 col-lg-4 mt-2 p-2\">\n                      <InputFormNoteDetail \n                        onInputChange={this.handleChange}\n                        handleCheckboxIsCorpBtnClick={this.onCheckboxIsCorpBtnClick}\n                        handleCheckboxIsPayBtnClick={this.onCheckboxIsPayBtnClick} \n                        onToggle={this.toggle} \n                        onChangeValue={this.changeValue}\n                        handleChangeDate={this.changeDate}\n                        handleResetCallClick={this.onResetCallClick}\n                        handleAddCallClick={this.onAddCallClick}\n                        onSelectDrop={this.getData}\n\n                        text={text} \n                        phone={phone}\n                        email={email}\n                        linkedin_profile={linkedin_profile}\n                        website={website}\n                        correspondence={correspondence}\n                        is_corporate={is_corporate}\n                        status={status}\n                        is_staff={is_staff}\n                        is_payed={is_payed}\n                        dropdownOpen={dropdownOpen}\n                        add_call={add_call}\n                        last_call={last_call}\n                        documents={documents}\n                        detail={`${detail.documents}`}\n\n                        errors={errors} \n                      />                \n                    <SaveButton />\n                    <ReturnButton />\n                  </Form>\n\n                  <DetailPreviewTable \n                    {...detail}\n                  />\n              </Row>\n            </Container>              \n          );\n\n        } else {\n            return (\n              <ErrorPage \n                  errors={errors && errors.page}\n                /> \n            );\n        }\n    }\n    render () {\n        const {loading} = this.state\n        return(\n            <div>\n              {loading ?<LoadScreen />:this.renderNote()}\n          </div>               \n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      detail: state.detail,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      fetchDetailNote: (id) => {\n          dispatch(detail.fetchDetailNote(id));\n      },\n      updateDetailNote: (id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence, last_call, documents, attached) => {\n          dispatch(detail.updateDetailNote(id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence, last_call, documents, attached));\n      }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteDetail);","import { toast } from 'react-toastify';\nexport const fetchDetailNote = (id) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        const endpoint = `/api/investors/${id}/` \n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        \n        return fetch(endpoint, {headers, })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n               \n                } else {\n                    toast.error(\"Server Error...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'FETCH_DETAIL_NOTE', detail: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authentication Error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", detail: res.data});\n                    throw res.data;\n                } \n                else if (res.status === 404) {\n                    toast.error(\"Investor is not found...\")\n                    dispatch({type: \"MESSAGE_NOT_FOUND\"});\n\n                }\n            })\n            .catch(error => {                \n                //error.redirect('/404');\n                //Handle error\n                console.log(\"error\", error);\n                // return dispatch({type: \"MESSAGE_NOT_FOUND\", detail: error});\n                // dispatch({type: \"MESSAGE_NOT_FOUND\", detail: error});\n            });\n    }\n}\n\nexport const updateDetailNote = (id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence, last_call, documents, attached) => {\n    return (dispatch, getState) => {\n\n        let headers = {'Accept': 'application/json'};\n        // let headers = {\"Content-Type\": \"multipart/form-data\"};\n\n        let {token} = getState().auth;\n\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        let formData = new FormData();\n        formData.append('text', text);\n        formData.append('phone', phone);\n        formData.append('status', status);\n        formData.append('is_corporate', is_corporate);\n        formData.append('is_payed', is_payed);\n        formData.append('email', email);\n        formData.append('linkedin_profile', linkedin_profile);\n        formData.append('website', website);\n        // Not required fields\n        if (correspondence) {\n            formData.append('correspondence', correspondence);\n        }\n        //check if attached & if documents(file) is not string\n        //if documents is string don't append formData\n        if (attached && \n          !(typeof documents === 'string' || documents instanceof String)) {\n            formData.append('documents', documents);\n        }\n\n        // formData need to convert ISO format string\n        if (last_call){\n            if (String(last_call) !==\"Invalid Date\") {\n                formData.append('last_call', last_call.toISOString());\n            }            \n        } else {\n            formData.append('last_call', \"\");\n        }\n        let noteId = id;\n        return fetch(`/api/investors/${noteId}/`, {headers, method: \"PUT\", body: formData})\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    toast.error(\"Server error...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 200) {\n                    toast.info(\"Investor \"+res.data.text+\" edited\")\n                    return dispatch({type: 'UPDATE_DETAIL_NOTE', detail: res.data, id});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authentication Error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\n\nexport const addDetailNote = (text, phone, status, is_corporate, email, linkedin_profile, website, correspondence) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n\n        let body = JSON.stringify({text, phone, status, is_corporate, email, linkedin_profile, website, correspondence });\n        return fetch(\"/api/investors/\", {headers, method: \"POST\", body})\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 201) {\n                    toast.info(\"Investor \"+res.data.text+\" added\")\n                    return dispatch({type: 'ADD_DETAIL_NOTE', detail: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\n","import React, { Component } from 'react'\n\nimport * as Inputs from '../../Atoms/AddInputs/AddInputs'\nimport { CheckboxIsCorp } from '../../Atoms/Checkboxes/CheckboxIsCorp'\n\nexport class InputFormNoteAdd extends Component {\n  render() {\n    const { text, phone, email,  \n      linkedin_profile, website, \n      correspondence, is_corporate,\n\n      errors, \n    } = this.props;\n\n    return (\n      <div>\n        <Inputs.InputName \n          onInputChange={this.props.onInputChange} \n          text={text} \n          errors={errors} \n        />\n        <Inputs.InputPhone \n          onInputChange={this.props.onInputChange} \n          phone={phone} \n          errors={errors} \n        />\n        <Inputs.InputEmail \n          onInputChange={this.props.onInputChange} \n          email={email} \n          errors={errors} \n        />      \n        <Inputs.InputLinkedin \n          onInputChange={this.props.onInputChange} \n          linkedin_profile={linkedin_profile} \n          errors={errors} \n        />\n        <Inputs.InputWebsite \n          onInputChange={this.props.onInputChange} \n          website={website} \n          errors={errors} \n        />      \n        <Inputs.InputCorrespondence \n          onInputChange={this.props.onInputChange} \n          correspondence={correspondence} \n          errors={errors} \n        />      \n        \n        <CheckboxIsCorp \n          handleCheckboxIsCorpBtnClick={this.props.handleCheckboxIsCorpBtnClick} \n          is_corporate={is_corporate} \n        />\n\n      </div>\n    )\n    \n  }\n}","import React, {Component} from 'react'\n\nimport { Redirect } from 'react-router-dom'\nimport * as detail from \"../../../actions/noteDetailActions\";\nimport {connect} from 'react-redux';\n\nimport Form from 'reactstrap/lib/Form';\n\nimport { InputFormNoteAdd } from '../Molecules/Forms/InputFormNoteAdd'\n\nimport { ReturnButton, SaveButton, ClearButton } from '../../general/Atoms/Buttons/Buttons'\nimport { handleValidation } from '../../../utils/helpers'\n\nclass NoteNew extends Component {\n    constructor(props){\n        super(props)       \n        this.state = {\n          text: \"\",\n          phone: \"\",\n          email: \"\",\n          status: \"Candidate\",\n          linkedin_profile: \"\",\n          website: \"\",\n          correspondence: \"\",\n          is_corporate: false,\n          id: null,\n          doneLoading: false,\n          errors: {},        \n          redirectToNewPage: false          \n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n      if (this.state.redirectToNewPage) {  \n        this.setState({\n          id: nextProps.detail.id,\n        })\n      }\n    }    \n\n    resetForm = () => {\n      this.setState({text: \"\", phone: '', email:'', errors: {}, status: 'Candidate', \n        is_corporate: false, linkedin_profile: \"\", website: \"\",\n        correspondence: \"\",\n      });\n    }\n    handleChange = (e) => {\n      e.preventDefault();\n      let key = e.target.name\n      let value = e.target.value\n      this.setState({\n          [key]: value,\n          errors: {}\n      })\n    }\n    changeValue = (e) => {\n      this.setState({status: e.currentTarget.textContent})\n    }\n\n    onCheckboxIsCorpBtnClick = () => {\n      this.setState({\n        is_corporate: !this.state.is_corporate,\n      });\n    }\n\n    submitNote = (e) => {\n      e.preventDefault();\n      // check validation from helper file\n      const validation_errors = handleValidation(this.state)\n      // check validation_errors dictionary is empty or has any errors\n      if (Object.keys(validation_errors).length === 0) {\n        this.props.addDetailNote(this.state.text, this.state.phone, this.state.status, \n          this.state.is_corporate, this.state.email, this.state.linkedin_profile, \n          this.state.website, this.state.correspondence)\n          .then(this.setState({ redirectToNewPage: true }))            \n          .catch(function (error) {\n             console.log(\"error\", error);\n           });\n      } else {\n        this.setState({errors: validation_errors}); \n      }\n    }\n\n    render () {\n        const { text, phone, email, \n          linkedin_profile, website,\n          correspondence, is_corporate,\n          errors } = this.state;\n        // The part that makes the redirect happen\n        if (this.state.redirectToNewPage && this.state.id) {\n          return (\n            <Redirect to={{pathname:`/investors/${this.state.id}`}} />\n          )\n        }\n        return(\n            <div>\n              <div className=\"mt-2 mb-2\">\n                <h3>Add New</h3>\n              </div>\n              <Form onSubmit={this.submitNote} className=\"form col col-sm-4 mt-2 p-2\">\n                <InputFormNoteAdd\n                  onInputChange={this.handleChange}\n                  handleCheckboxIsCorpBtnClick={this.onCheckboxIsCorpBtnClick} \n\n                  text={text} \n                  phone={phone}\n                  email={email}\n                  linkedin_profile={linkedin_profile}\n                  website={website}\n                  correspondence={correspondence}\n                  is_corporate={is_corporate}\n\n                  errors={errors} \n                /> \n                <div>\n                  <SaveButton />\n                  <ClearButton\n                    onClear={this.resetForm} \n                  />\n                  <ReturnButton />\n                </div>\n            </Form>\n          </div>               \n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      detail: state.detail,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addDetailNote: (text, phone, status, is_corporate, email, linkedin_profile, website, correspondence) => {\n            return dispatch(detail.addDetailNote(text, phone, status, is_corporate, email, linkedin_profile, website, correspondence));\n        },\n    }\n}\n\n// export default NewNote;\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteNew);","import React, {Component} from 'react'\nimport {connect} from 'react-redux';\nimport { Link } from 'react-router-dom'\nimport { Table } from 'reactstrap';\n// import memoize from \"memoize-one\";\nimport * as lead from \"../../../actions/paymentsActions\";\nimport { LoadScreen } from '../../general/Organisms/LoadScreen/LoadScreen'\nimport { paymentsUtil } from '../../../utils/paymentsUtils'\n\nclass Payments extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {         \n        loading: true,\n        errors: {},\n        lead: {},\n      };\n    }\n\n    componentDidMount(){\n      if (this.props.match){\n        this.props.fetchPaymentsLead()\n      }\n    }\n\n    componentDidUpdate(prevProps) {\n      if (this.props.lead !== prevProps.lead) {\n        if (this.props.lead) {\n          const leads = paymentsUtil(this.props.lead.leads)\n          this.setState({leads: leads}); \n        }\n      }\n    }   \n    renderPayments() {\n      const { lead } = this.props;\n        if (lead.leads) {\n          return (\n            <div>\n              <h3>Leads View</h3>\n              <Table className=\"table text-center\" striped>\n                <thead>\n                  <tr>\n                    <th className=\"table-num__title table-payments\">#</th>\n                    <th className=\"table-payments\">Developer</th>\n                    <th className=\"table-payments\">Total Leads</th>\n                    <th className=\"table-payments\">Processed</th>\n                    <th className=\"table-payments\">Converted</th>\n                    <th className=\"table-payments\">Rejected</th>\n                    <th className=\"table-payments\">Next Payment</th>\n                  </tr>\n                </thead>  \n                <tbody>\n                  {lead.leads.length > 0 ? lead.leads.map((item,id) => (\n                    <tr key={id}>\n                        <th scope=\"row\" className=\"table-num__text\">{id+1}</th>\n                        <td>\n                          <Link className=\"info-link\" to={{pathname:`/profile/${item.id}`,\n                              state: {fromDashboard: false, prevLink: window.location.pathname}\n                              }}>{item.owner}</Link>\n                        </td>\n                        <td>{item.total}</td>\n                        <td>{item.processed}</td>\n                        <td>{item.converted}</td>\n                        <td>{item.rejected}</td>\n                        <td>{item.price}</td>\n                    </tr>\n                  )) : <tr><td colSpan=\"7\">Table is empty. Add your investors</td></tr>}\n                </tbody>                     \n              </Table>\n            </div>              \n          );\n        }\n    }\n    render () {\n      const { loading } = this.props\n      return(\n          <div>\n            { loading ? <LoadScreen /> : this.renderPayments() }\n        </div>               \n      )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      lead: state.lead,\n      loading: state.lead.loading\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      fetchPaymentsLead: () => {\n          dispatch(lead.fetchPaymentsLead());\n      },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Payments);","export const paymentsUtil = (leads) => {\n\n  // initialize newstate for reducer (to add calculated parameter lead.price)\n  let newstate = leads\n  // calculating next payment\n  newstate.forEach(item=>{\n    // get true_investors (without candidate status)\n    let true_investors = item.converted + item.processed + item.rejected\n    // get count of payed investors\n    let count_payed = item.payed\n    let price_all = 0;\n    let price_payed = 0;\n\n    // Calculating price\n    for(let key in item.prices){\n      let value = item.prices[key]\n      // Calculating price for investors without Candidate status\n      if (true_investors >=10){\n          if (true_investors>=key) {\n              price_all += 10*value\n          } else {\n              if (Math.ceil(true_investors/10) === key/10) {\n                  price_all += (true_investors+10-key)*value \n              }\n          }\n      }\n      // Get payed price\n      if (count_payed && true_investors >=10){\n          if (count_payed >= key) {\n              price_payed += 10*value\n          } else {\n              if (Math.ceil(count_payed/10) === key/10) {\n                  price_payed += (count_payed+10-key)*value \n              }\n          }\n      }\n    }\n    // output price without payed prices\n    item.price =price_all-price_payed;              \n  });\n  return newstate\n}","export const fetchPaymentsLead = () => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        const endpoint = `/api/payments/` \n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        \n        return fetch(endpoint, {headers, })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                // } else if (res.status === 404) {\n                //     dispatch({type: \"MESSAGE_NOT_FOUND\", data: res.data});\n                //     throw res.data;\n                } else {\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'FETCH_PAYMENTS_LEAD', leads: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                } else if (res.status === 404) {\n                    dispatch({type: \"ERROR_NOT_FOUND\", leads: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport RequireAuth from \"./auth/RequireAuth\";\nimport Landing from \"./Landing\";\nimport Login from \"./auth/Login\";\nimport Logout from \"./auth/Logout\";\nimport Signup from \"./auth/Signup\";\nimport SignupDone from \"./auth/SignupDone\";\nimport AccountActivation from \"./auth/AccountActivation\";\nimport UserProfile from \"./auth/Templates/UserProfile\";\nimport UserProfileDetail from \"./auth/Templates/UserProfileDetail\";\nimport UserProfileEdit from \"./auth/UserProfileEdit\";\nimport PasswordChange from \"./auth/PasswordChange\";\nimport PasswordReset from \"./auth/PasswordReset\";\nimport PasswordResetDone from \"./auth/PasswordResetDone\";\nimport PasswordResetConfirm from \"./auth/PasswordResetConfirm\";\nimport {ErrorPage} from \"./general/Organisms/ErrorPage/ErrorPage\";\n\nimport ReactifyComp from '../routingComps/ReactifyComp'\nimport PostDetail from '../reactify/PostDetail';\nimport PostCreate from '../reactify/PostCreate'\nimport Notes from './notes/Templates/Notes'\nimport NoteDetail from './notes/Templates/NoteDetail'\nimport NoteNew from './notes/Templates/NoteNew'\nimport Payments from './notes/Templates/Payments'\n\nconst MainContent = () => (\n    <div>\n        <Switch>\n            <Route exact path=\"/\" component={props => <Landing {...props} />} />\n            <Route path=\"/reload\" component={null} key=\"reload\" />\n            <Route path=\"/login\" component={props => <Login {...props} />} />\n            <Route path=\"/logout\" component={props => <Logout {...props} />}/>\n            <Route path=\"/signup\" component={props => <Signup {...props} />}/>\n            <Route path=\"/activation/confirm-email/:key\" component={props => <AccountActivation {...props} />}/>\n            <Route path=\"/signup_done\" component={props => <SignupDone {...props} />}/>\n            <Route path=\"/reset_password\" component={props => <PasswordReset {...props} />}/>\n            <Route path=\"/reset_password_done\" component={props => <PasswordResetDone {...props} />}/>\n            <Route path=\"/pass/reset/:uid/:token/\" component={props => <PasswordResetConfirm {...props} />}/>\n            <Route exact path=\"/profile\" component={RequireAuth(UserProfile)}/>\n            <Route path='/profile/:id' component={RequireAuth(UserProfileDetail)}/>\n            <Route path=\"/profile_edit\" component={RequireAuth(UserProfileEdit)}/>\n            <Route path=\"/change_password\" component={RequireAuth(PasswordChange)}/>\n            <Route path='/react/posts/create' component={RequireAuth(PostCreate)}/>\n            <Route path='/react/posts/:slug' component={RequireAuth(PostDetail)}/>\n            <Route path='/react/posts' component={RequireAuth(ReactifyComp)} />\n            <Route exact path='/investors' component={RequireAuth(Notes)} />\n            <Route path='/investors/add' component={RequireAuth(NoteNew)}/>\n            <Route path='/investors/:id' component={RequireAuth(NoteDetail)}/>\n            <Route exact path='/payments' component={RequireAuth(Payments)} />\n\n            <Route component={props => <ErrorPage {...props} />}/>\n        </Switch>\n    </div>\n);\n\nexport default MainContent;\n","import React, {Component} from \"react\";\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css'; \n\nimport Header from \"./Header\";\nimport MainContent from \"./MainContent\";\n\nexport default class App extends Component {\n\n    render() {\n        return (\n            <div>                \n                <Header />\n                <div className=\"container\">\n                    <ToastContainer \n                      hideProgressBar={true} \n                      position=\"bottom-right\"\n                      autoClose={3000}\n                      removeCloseButton={true}\n                    />\n                \t<MainContent />\n                </div>\n            </div>\n        );\n    }\n}","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"bootstrap/dist/css/bootstrap.css\";\n\nimport \"./styles/style.scss\"\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import { Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport store from \"./store\";\n// import history from \"./utils/historyUtils\";\nimport { authLogin } from \"./actions/authActions\";\nimport App from \"./components/App\";\nimport registerServiceWorker from './registerServiceWorker';\n\n// import { syncHistoryWithStore } from 'react-router-redux'\n\n\n// const browserhistory = syncHistoryWithStore(history, store)\n\nregisterServiceWorker();\n\nconst token = localStorage.getItem(\"token\");\n\nif (token) {\n    store.dispatch(authLogin(token));\n}\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <App />\n        </Router>\n    </Provider>\n    , document.getElementById(\"root\"));\n"],"sourceRoot":""}