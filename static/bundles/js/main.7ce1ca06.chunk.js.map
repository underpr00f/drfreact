{"version":3,"sources":["../config/polyfills.js","components/general/Atoms/BackgroundContainer/BackgroundContainer.js","reducers/notesReducer.js","constants/actionTypes.js","reducers/index.js","reducers/authReducer.js","reducers/noteDetailReducer.js","reducers/paymentsReducer.js","reducers/userDetailReducer.js","store/index.js","constants/urls.js","utils/authUtils.js","actions/authActions.js","components/general/Organisms/LoadScreen/LoadScreen.js","utils/renderUtils.js","components/general/Atoms/Links/Links.js","components/Header.js","utils/formValidators.js","components/auth/RequireAuth.js","components/Landing.js","components/auth/Atoms/Buttons/Buttons.js","components/auth/Templates/Login.js","components/auth/Templates/Logout.js","components/auth/Signup.js","components/auth/Templates/SignupDone.js","components/auth/AccountActivation.js","components/auth/Molecules/Tables/UserDetailTable.js","components/auth/Templates/UserProfile.js","components/general/Organisms/ErrorPage/ErrorPage.js","components/auth/Templates/UserProfileDetail.js","actions/userDetailActions.js","components/auth/Atoms/ImageDrop/ImageDrop.js","components/auth/UserProfileEdit.js","components/auth/PasswordChange.js","components/auth/PasswordReset.js","components/auth/Templates/PasswordResetDone.js","components/auth/PasswordResetConfirm.js","actions/notesActions.js","components/notes/Organisms/Modal/Modal.js","components/notes/Atoms/AddInputs/AddInputs.js","components/notes/Atoms/Checkboxes/CheckboxIsCorp.js","components/notes/Atoms/Checkboxes/CheckboxIsPayed.js","components/notes/Atoms/Dropdown/Dropdown.js","components/notes/Molecules/Forms/InputFormNoteQuickAdd.js","components/notes/Molecules/Tables/OrderingHeaderTable/OrderingHeaderTable.js","components/notes/Molecules/Tables/OrderingBodyTable/OrderingBodyTable.js","utils/helpers.js","components/notes/Templates/Notes/Notes.js","components/general/Atoms/Buttons/Buttons.js","components/notes/Atoms/DatePick/DatePickLastCall.js","components/notes/Atoms/FileDrop/FileDrop.js","components/notes/Molecules/Forms/InputFormNoteDetail.js","components/notes/Molecules/Tables/DetailPreviewTable/DetailPreviewTable.js","components/notes/Templates/NoteDetail/NoteDetail.js","actions/noteDetailActions.js","components/notes/Molecules/Forms/InputFormNoteAdd.js","components/notes/Templates/NoteNew/NoteNew.js","components/notes/Templates/Payments/Payments.js","utils/paymentsUtils.js","actions/paymentsActions.js","components/MainContent.js","components/App.js","registerServiceWorker.js","index.js"],"names":["Promise","__webpack_require__","enable","window","Object","assign","process","d","__webpack_exports__","BackgroundContainer","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_ref","header","console","log","a","createElement","className","src","alt","initialState","noteitems","loading","AuthTypes","LOGIN","LOGOUT","CHANGE_PASSWORD","USER_PROFILE","rootReducer","combineReducers","form","formReducer","auth","state","arguments","length","undefined","action","type","objectSpread","authenticated","token","payload","user","notes","noteList","map","reduce","b","concat","toConsumableArray","slice","filter","index","self","findIndex","t","created_at","id","fetching","unshift","note","selectById","indexEdit","p","noteToUpdate","text","phone","status","is_corporate","is_payed","email","linkedin_profile","website","correspondence","splice","deleteById","indexDel","nextafterdelete","next","deleted","detail","updated","hasError","errors","page","lead","leads","loaded","error","userdetail","store","logger","createLogger","middleware","applyMiddleware","thunk","compose","createStoreWithMiddleware","createStore","configureStore","ROOT_URL","HOMEPAGE_URL","require","homepage","AuthUrls","SIGNUP","RESET_PASSWORD","RESET_PASSWORD_CONFIRM","USER_ACTIVATION","getUserToken","authLogin","getUserProfile","dispatch","getState","axios","get","headers","authorization","then","response","data","catch","processedError","processServerError","SubmissionError","keys","newDict","key","push","_error","LoadScreen","react_default","LoadObject","objectclass","renderField","input","label","_ref$meta","meta","touched","renderTextAreaField","_ref2","_ref2$meta","renderError","errorMessages","JSON","stringify","toast","NavigationLink","urltext","customclass","url","toLowerCase","NavItem_default","react_router_dom","to","pathname","fromDashboard","NavigationUserLink","avatar","username","renderUser","LoadScreen_LoadObject","HomeButton","role","index_es","icon","faHome","color","BrandButton","Header","collapsed","toggleNavbar","_this","setState","this","props","Fragment","Nav","navbar","Links_NavigationLink","Links_NavigationUserLink","Navbar","dark","expand","Links_BrandButton","NavbarToggler","onClick","Collapse","isOpen","renderLinks","Component","max","min","connect","RequireAuth","ComposedComponent","Authentication","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","value","checkAuthentication","nextProps","history","is_staff","is_superuser","Landing","required","maxLength15","minLength5","letters","test","isurl","minValue","ShowPass","choice","showHide","faEyeSlash","faEye","Login","e","preventDefault","_this$props","handleSubmit","invalid","pristine","submitting","onSubmit","Field","name","component","validate","Buttons_ShowPass","Button","disabled","reduxForm","formValues","loginUrl","post","localStorage","setItem","onChange","values","clearSubmitErrors","logoutUser","removeItem","useEffect","Signup","password1","password2","signupUrl","SignupDone","AccountActivation","match","params","activateUserUrl","info","UserDetailTable","Table","first_name","last_name","Links_HomeButton","colSpan","style","backgroundImage","href","about","UserProfile","UserDetailTable_UserDetailTable","LoadScreen_LoadScreen","contextTypes","router","PropTypes","object","ErrorPage","rotation","faSpaceShuttle","UserProfileDetail","call","prevProps","fetchUserDetail","_this$state","ErrorPage_ErrorPage","renderNote","Content-Type","endpoint","fetch","res","json","ImageDrop","attached","handleDrop","files","_this2","_this$props$meta","classNameLabel","cbFunction","drop_class","drop_text","dist_es","onDrop","f","maxSize","getRootProps","getInputProps","defaultProps","Atoms_ImageDrop_ImageDrop","dropzone_options","multiple","accept","initialValues","formData","FormData","String","forEach","append","patch","PasswordChange","changePasswordUrl","new_password1","new_password2","PasswordReset","resetPasswordUrl","PasswordResetDone","PasswordResetConfirm","_props$match$params","uid","resetPasswordConfirmUrl","fetchNotes","nextEndpoint","ModalDelete","onSelectForDelete","modaldelete","toggle","Modal","ModalHeader","ModalBody","ModalFooter","FormGroup","row","faTrash","InputName","onInputChange","Label","Input","placeholder","FormText","InputPhone","InputEmail","_ref3","InputLinkedin","_ref4","InputWebsite","_ref5","InputCorrespondence","_ref6","CheckboxIsCorp","handleCheckboxIsCorpBtnClick","faMale","faUsers","active","CheckboxIsPayed","handleCheckboxIsPayBtnClick","faHandHoldingUsd","faCheckCircle","CustomDropdown","onToggle","onChangeValue","dropdownOpen","Dropdown","DropdownToggle","caret","DropdownMenu","DropdownItem","InputFormNoteQuickAdd","updateNoteId","AddInputs_InputName","AddInputs_InputPhone","AddInputs_InputEmail","AddInputs_InputLinkedin","AddInputs_InputWebsite","AddInputs_InputCorrespondence","CheckboxIsCorp_CheckboxIsCorp","Dropdown_CustomDropdown","CheckboxIsPayed_CheckboxIsPayed","OrderingHeaderTable","onOrderNotes","searchingProp","mountedProp","_useState","useState","_useState2","slicedToArray","stateOrder","setStateOrder","_useState3","_useState4","isOrderingName","setIsOrderingName","_useState5","_useState6","searching","setSearching","_useState7","_useState8","mounted","setMounted","onBtnClickOrderingName","ordername","order","newordername","is_ordering_name","charAt","indexOf","includes","searchtext","faLongArrowAltDown","faExchangeAlt","faTimes","OrderingBodyTable","onSelectForEdit","onToggleModalDelete","scope","prevLink","location","owner","owner_username","title","faEdit","handleValidation","fields","trim","lastAtPos","lastIndexOf","lastDotPos","Notes","updateNoteIndex","modal","count","previous","resetForm","addNew","resetSearch","searchNotes","selectForEdit","selectForDelete","deleteNote","prevState","toggleModal","toggleModalDelete","handleChange","_this$setState","target","defineProperty","changeValue","currentTarget","textContent","loadMorePosts","onCheckboxIsCorpBtnClick","onCheckboxIsPayBtnClick","dataFromCallback","mapped","item","join","orderNotes","submitNote","validation_errors","addNote","updateNote","Array","isArray","nextForDelete","lastChar","parseInt","Form","InputFormNoteQuickAdd_InputFormNoteQuickAdd","faSave","outline","_this3","_this$state2","faPlusSquare","renderModal","Modal_ModalDelete","CustomInput","inline","faSearch","striped","OrderingHeaderTable_OrderingHeaderTable","OrderingBodyTable_OrderingBodyTable","renderNotes","body","method","noteId","SaveButton","Button_default","ClearButton","onClear","EditButton","onEdit","DatePickLastCall","handleChangeDate","handleAddCallClick","handleResetCallClick","last_call","is_valid_date","moment","isValid","react_datepicker_es","selected","defaultFormat","toDate","date","showTimeSelect","timeFormat","timeIntervals","dateFormat","timeCaption","FileDrop","acceptedFiles","rejectedFiles","onSelectDrop","dropProperties","documents","drop_properties","split","faFileUpload","InputFormNoteDetail","add_call","DatePickLastCall_DatePickLastCall","Atoms_FileDrop_FileDrop","DetailPreviewTable","Buttons_EditButton","format","NoteDetail","changeDate","getData","onAddCallClick","Date","onResetCallClick","updateDetailNote","fetchDetailNote","detailed","InputFormNoteDetail_InputFormNoteDetail","Buttons_SaveButton","Container","fluid","Row","DetailPreviewTable_DetailPreviewTable","Accept","toISOString","InputFormNoteAdd","NoteNew","doneLoading","redirectToNewPage","addDetailNote","react_router","Form_default","InputFormNoteAdd_InputFormNoteAdd","Buttons_ClearButton","Payments","fetchPaymentsLead","newstate","true_investors","converted","processed","rejected","count_payed","payed","price_all","price_payed","prices","Math","ceil","price","paymentsUtil","total","renderPayments","MainContent","exact","path","Landing_Landing","Templates_Login","Templates_Logout","auth_Signup","auth_AccountActivation","SignupDone_SignupDone","auth_PasswordReset","PasswordResetDone_PasswordResetDone","auth_PasswordResetConfirm","UserProfileEdit","App","components_Header","react_toastify","hideProgressBar","position","autoClose","removeCloseButton","components_MainContent","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","URL","origin","addEventListener","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","getItem","ReactDOM","render","es","App_App","document","getElementById"],"mappings":"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","file":"js/main.7ce1ca06.chunk.js","sourcesContent":["'use strict';\n\nif (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where React gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes React's erratic future behavior.\n  require('promise/lib/rejection-tracking').enable();\n\n  window.Promise = require('promise/lib/es6-extensions.js');\n} // fetch() polyfill for making API calls.\n\n\nrequire('whatwg-fetch'); // Object.assign() is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\n\n\nObject.assign = require('object-assign'); // In tests, polyfill requestAnimationFrame since jsdom doesn't provide it yet.\n// We don't polyfill it in the browser--this is user's responsibility.\n\nif (process.env.NODE_ENV === 'test') {\n  require('raf').polyfill(global);\n}","import React from 'react'\nimport './styles.scss'\n\nexport const BackgroundContainer = ({header}) => {\n\n\tconsole.log(process)\n\treturn (\n\t<div className=\"main-wrapper\">\n\t  <h2 className=\"main-wrapper__text\">{header}</h2>\n\t  <img className=\"main-wrapper__image\" src='/static/bundles/building.jpeg' alt=\"logo\" />  \n\t</div>\n\t)\n};","const initialState = [{noteitems: [], \n                       loading: true\n                    }]\n\nexport default function notes(state=initialState, action) {\n    //собрать все массивы с ключами noteitems и объединить в один массив\n    let noteList = state.map(a => a.noteitems).reduce((a, b) => [...a, ...b], []).slice();\n\n    switch (action.type) {\n\n        case 'FETCH_NOTES':\n            //удаление дубликатов\n            noteList = noteList.filter((noteList, index, self) => self.findIndex(t => t.created_at === noteList.created_at && t.id === noteList.id) === index)\n            \n            return [                    \n                    {...state[state.length-1],\n                    noteitems: noteList,\n                    loading: false,\n                    fetching: false,\n                    // deleted: false\n                    // ...action.notes\n                    },\n                ];\n        case 'SEARCH_NOTES':\n        \n            return [                    \n\n                    {...state,\n                    ...action.notes,\n                    loading: false,},\n                ];\n\n        case 'ORDER_NOTES':\n       \n            return [                    \n\n                    {...state,\n                    ...action.notes,\n                    loading: false,},\n                ];\n\n\n        case 'ADD_NOTE':\n            // Добавляем заметку\n            noteList.unshift(action.note);\n            // Удаляем нижнюю\n            // if (noteList.length > 0) {\n            //     noteList.pop();\n            // }\n\n            return [\n                        //берем последний стейт и добавляем к нему общий массив\n                        {...state[state.length-1],\n                            noteitems: noteList,\n                            loading: false,},\n\n                    ];\n\n        case 'UPDATE_NOTE':\n\n            //Поиск в общем массиве элемента по id и index (2мерный массив)\n            let selectById = state[action.index].noteitems[action.id].id\n            let indexEdit = noteList.findIndex(p => p.id === selectById) \n\n            let noteToUpdate = noteList[indexEdit]\n            noteToUpdate.text = action.note.text;\n            noteToUpdate.phone = action.note.phone;\n            noteToUpdate.status = action.note.status;\n            noteToUpdate.is_corporate = action.note.is_corporate;\n            noteToUpdate.is_payed = action.note.is_payed;\n            noteToUpdate.email = action.note.email;\n            noteToUpdate.linkedin_profile = action.note.linkedin_profile;\n            noteToUpdate.website = action.note.website;\n            noteToUpdate.correspondence = action.note.correspondence;\n            noteList.splice(indexEdit, 1, noteToUpdate);\n            return [\n                    {...state[state.length-1],\n                        noteitems: noteList,\n                        loading: false,},\n                    ];\n\n        case 'DELETE_NOTE':\n            //Поиск в общем массиве элемента по id и index (2мерный массив)\n            let deleteById = state[action.id].noteitems[action.index].id\n            let indexDel = noteList.findIndex(p => p.id === deleteById)                      \n            noteList.splice(indexDel, 1);\n            return [\n                        {...state[state.length-1],\n                            noteitems: noteList,\n                            loading: false,\n                            nextafterdelete: state[0].next,\n                            deleted: true\n                        }\n                    ];\n\n        default:\n            \n    }\n    return state;\n}\n","export const AuthTypes = {\n    LOGIN: \"LOGIN\",\n    LOGOUT: \"LOGOUT\",\n    CHANGE_PASSWORD: \"CHANGE_PASSWORD\",\n    USER_PROFILE: \"USER_PROFILE\",\n    // WITH_ERROR: \"WITH_ERROR\"\n};","import {combineReducers} from \"redux\";\nimport { reducer as formReducer } from \"redux-form\";\n\nimport notesReducer from \"./notesReducer\";\nimport noteDetailReducer from \"./noteDetailReducer\";\nimport userDetailReducer from \"./userDetailReducer\";\nimport authReducer from \"./authReducer\";\nimport paymentsReducer from \"./paymentsReducer\";\n// import { routerReducer } from 'react-router-redux'\n\nconst rootReducer = combineReducers({\n    form: formReducer,\n    auth: authReducer,\n    notes: notesReducer,\n    detail: noteDetailReducer,\n    lead: paymentsReducer,\n    userdetail: userDetailReducer,\n    // routing: routerReducer\n});\n\nexport default rootReducer;\n\n\n","import { AuthTypes } from \"../constants/actionTypes\";\n\nexport default function(state = {loading: true}, action) {\n    switch(action.type) {\n        case AuthTypes.LOGIN:\n            return { ...state, authenticated: true, token: action.payload};\n        case AuthTypes.LOGOUT:\n            return { ...state, authenticated: false, token: null};\n        case AuthTypes.USER_PROFILE:\n            return { ...state, user: action.payload, loading: false};\n        // case AuthTypes.WITH_ERROR:\n        //     return { ...state, error: action.payload};\n        default:\n        \t// will NOT execute because of the line preceding the switch.\n    }\n    return state;\n}","export default function noteDetailReducer(state = {loading: true, updated: false, hasError: false, errors: {}}, action) {\n    switch(action.type) {\n\n        case 'FETCH_DETAIL_NOTE':\n            return { ...state, ...action.detail, loading: false, hasError: false, errors: {}};\n        case 'UPDATE_DETAIL_NOTE':\n            return { ...state, ...action.detail, loading: false, updated: true, hasError: false, errors: {}};\n        case 'ADD_DETAIL_NOTE':\n            return { ...state, ...action.detail, loading: false, hasError: false, errors: {}};\n\n        case 'INVESTOR_NOT_FOUND':\n            return {...state, \n                hasError: true,\n                errors: {page: \"Investor not found\"},\n                loading: false,\n            };\n        case 'AUTHENTICATION_ERROR':\n            return {...state, \n                hasError: true,\n                errors: {page: \"Authentication Error\"},\n                loading: false,\n            };\n        default:\n          // will NOT execute because of the line preceding the switch.\n    }\n    return state;\n}","export default function paymentsReducer(state = {leads: \"\", loading: true, loaded: false}, action) {\n    switch(action.type) {\n        case 'FETCH_PAYMENTS_LEAD':\n            return { ...state, leads: [...action.leads], loading: false, loaded: true }\n        case 'LEAD_NOT_FOUND':\n            return {...state, loading: false, error: \"Not found\"};\n        default:\n          // will NOT execute because of the line preceding the switch.\n    }\n    return state;\n}","export default function userDetailReducer(state = {loading: true}, action) {\n    switch(action.type) {\n\n        case 'FETCH_USER_DETAIL':\n            return { ...state, \n                ...action.userdetail, \n                hasError: false,\n                errors: {},\n                loading: false,\n            };\n        // case 'UPDATE_DETAIL_NOTE':\n        //     return { ...state, ...action.detail, loading: false, updated: true};\n        // case 'ADD_DETAIL_NOTE':\n        //     return { ...state, ...action.detail, loading: false};\n\n        case 'USER_NOT_FOUND':\n            return {...state, \n                hasError: true,\n                errors: {page: \"User not found\"},\n                loading: false,\n            };\n\n        default:\n          // will NOT execute because of the line preceding the switch.\n    }\n    return state;\n}","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from '../reducers';\n\nfunction configureStore(initialState) {\n    let createStoreWithMiddleware;\n\n    const logger = createLogger();\n    const middleware = applyMiddleware(thunk, logger);\n\n    createStoreWithMiddleware = compose(\n        middleware\n    );\n\n    return createStoreWithMiddleware(createStore)(rootReducer, initialState);\n}\n\nlet store = configureStore();\n\nexport default store;","export let ROOT_URL = \"http://localhost:8000/\";\n\n// FOR PRODUCTION URLS\nconst HOMEPAGE_URL = require('../../package.json').homepage;\n\nif (process.env.NODE_ENV === \"production\") {\n\tROOT_URL = HOMEPAGE_URL\n}\n\nexport const AuthUrls = {\n    LOGIN: `${ROOT_URL}rest-auth/login/`,\n    SIGNUP: `${ROOT_URL}rest-auth/registration/`,\n    CHANGE_PASSWORD: `${ROOT_URL}rest-auth/password/change/`,\n    RESET_PASSWORD: `${ROOT_URL}rest-auth/password/reset/`,\n    RESET_PASSWORD_CONFIRM: `${ROOT_URL}rest-auth/password/reset/confirm/`,\n    USER_ACTIVATION: `${ROOT_URL}rest-auth/registration/verify-email/`,\n    USER_PROFILE: `${ROOT_URL}rest-auth/user/`\n};","export function getUserToken(state) {\n    return state.auth.token;\n}","import axios from \"axios\";\nimport { SubmissionError } from 'redux-form';\n// import { actions as notifActions } from 'redux-notifications';\nimport { AuthTypes } from \"../constants/actionTypes\";\nimport { AuthUrls } from \"../constants/urls\";\nimport store from \"../store\";\nimport { getUserToken } from \"../utils/authUtils\";\nimport { toast } from 'react-toastify';\n\n// const { notifSend } = notifActions;\nexport function authLogin(token) {\n    return {\n        type: AuthTypes.LOGIN,\n        payload: token,\n    };\n}\n\nexport function loginUser(formValues, dispatch, props) {\n        const loginUrl = AuthUrls.LOGIN;\n\n        return axios.post(loginUrl, formValues).then((response) => {\n            // If request is good...\n            // Update state to indicate user is authenticated\n            const token = response.data.key; \n\n            dispatch(authLogin(token));\n            localStorage.setItem(\"token\", token);\n\n            // redirect to the route '/'\n            props.history.push(\"/investors\");\n            // to getUserProfile in Header\n            dispatch(getUserProfile())\n        }).catch(error => {            \n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n\nexport function logoutUser() {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"csrftoken\");\n    return {\n        type: AuthTypes.LOGOUT\n    };\n}\n\nexport function signupUser(formValues, dispatch, props) {\n    const signupUrl = AuthUrls.SIGNUP;\n\n    return axios.post(signupUrl, formValues)\n        .then((response) => {\n            // If request is good...\n            // you can login if email verification is turned off.\n            // const token = response.data.key;\n            // dispatch(authLogin(token));\n            // localStorage.setItem(\"token\", token);\n\n            // email need to be verified, so don't login and send user to signup_done page.\n            // redirect to signup done page.\n            props.history.push(\"/signup_done\");\n        })\n        .catch((error) => {\n            // If request is bad...\n            // Show an error to the user\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n\nfunction setUserProfile(payload) {\n    return {\n        type: AuthTypes.USER_PROFILE,\n        payload: payload\n    };\n}\n\nexport function getUserProfile() {\n    return function(dispatch) {\n        const token = getUserToken(store.getState());\n\n        if (token) {\n            axios.get(AuthUrls.USER_PROFILE, {\n                headers: {\n                    authorization: 'Token ' + token\n                }\n            }).then(response => {\n                dispatch(setUserProfile(response.data))\n            }).catch((error) => {\n                // If request is bad...\n                // Show an error to the user\n                console.log(error);\n                // TODO: send notification and redirect\n                const processedError = processServerError(error.response.data);\n                throw new SubmissionError(processedError);\n            });\n        }\n    };\n}\n\nexport function changePassword(formValues, dispatch, props) {\n    const changePasswordUrl = AuthUrls.CHANGE_PASSWORD;\n    const token = getUserToken(store.getState());\n\n    if (token) {\n        return axios.post(changePasswordUrl, formValues, {\n            headers: {\n                authorization: 'Token ' + token\n            }\n        })\n            .then((response) => {\n                toast.info('Password has been changed successfully')\n                // dispatch(notifSend({\n                //     message: \"Password has been changed successfully\",\n                //     kind: \"info\",\n                //     dismissAfter: 5000\n                // }));\n                // redirect to the route '/profile'\n                props.history.push(\"/profile\");\n            })\n            .catch((error) => {\n                // If request is bad...\n                // Show an error to the user\n                const processedError = processServerError(error.response.data);\n                throw new SubmissionError(processedError);\n            });\n    }\n}\n\nexport function resetPassword(formValues, dispatch, props) {\n    const resetPasswordUrl = AuthUrls.RESET_PASSWORD;\n\n    return axios.post(resetPasswordUrl, formValues)\n        .then(response => {\n            // redirect to reset done page\n            props.history.push(\"/reset_password_done\");\n        }).catch((error) => {\n            // If request is bad...\n            // Show an error to the user\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n\nexport function confirmPasswordChange(formValues, dispatch, props) {\n    const { uid, token } = props.match.params;\n    const resetPasswordConfirmUrl = AuthUrls.RESET_PASSWORD_CONFIRM;\n    const data = Object.assign(formValues, { uid, token });\n\n    return axios.post(resetPasswordConfirmUrl, data)\n        .then(response => {\n            toast.info('Password has been reset successfully, please log in')\n            props.history.push(\"/login\");\n        }).catch((error) => {\n            // If request is bad...\n            // Show an error to the user\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n\nexport function activateUserAccount(formValues, dispatch, props) {\n    const { key } = props.match.params;\n    const activateUserUrl = AuthUrls.USER_ACTIVATION;\n    const data = Object.assign(formValues, { key });\n\n    return axios.post(activateUserUrl, data)\n        .then(response => {\n            toast.info('Your account has been activated successfully, please log in')\n            props.history.push(\"/login\");\n        }).catch((error) => {\n            // If request is bad...\n            // Show an error to the user\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n\nexport function updateUserProfile(formValues, dispatch, props) {\n    const token = getUserToken(store.getState());\n\n    let object = formValues\n\n    // Fix problem with update profile without upload avatar\n    const formData = new FormData(); \n    if (typeof formValues.avatar === 'string' || \n        formValues.avatar instanceof String ||\n        formValues.avatar === null) {\n        Object.keys(object).forEach(key => \n            (key !== \"avatar\") && formData.append(key, object[key])      \n        );\n    } else {\n        Object.keys(object).forEach(key => \n            formData.append(key, object[key])      \n        );\n    }\n\n    // adding \"Content-Type\": \"multipart/form-data\", for images\n    return axios.patch(AuthUrls.USER_PROFILE, formData, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\",\n                authorization: 'Token ' + token\n            }\n        })\n        .then(response => {\n            toast.info('Your profile has been updated successfully')\n            props.history.push(\"/profile\");\n        }).catch((error) => {\n            // If request is bad...\n            // Show an error to the user\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n// util functions\nfunction processServerError(error) {\n\n    return  Object.keys(error).reduce(function(newDict, key) {\n        if (key === \"non_field_errors\") {\n            newDict[\"_error\"].push(error[key]);\n        } else if (key === \"token\") {\n            // token sent with request is invalid\n            newDict[\"_error\"].push(\"The link is not valid any more.\");\n        } else {\n            newDict[key] = error[key];\n        }\n        return newDict\n    }, {\"_error\": []});\n}","import React from \"react\";\nimport './styles.scss'\n\nexport const LoadScreen = () => (\n  <div className=\"loadscreen\">\n    <div className=\"load-9\">\n      <div className=\"spinner\">\n        <div className=\"bubble-1\"></div>\n        <div className=\"bubble-2\"></div>\n      </div>\n    </div>\n  </div>\n)\n\nexport const LoadObject = ({objectclass}) => (\n  <div className={`${objectclass}`}>\n    <div className=\"load-3\">\n    <div className=\"line\"></div>\n    <div className=\"line\"></div>\n    <div className=\"line\"></div>\n    </div>\n  </div>\n)\n","import React from \"react\";\nimport { toast } from 'react-toastify';\n\nexport const renderUser = (user) => {\n  if (user) {\n      return (\n        <div className=\"user\">\n            {user.avatar ? <img src={`${user.avatar}`} className=\"user-avatar\" alt=\"Avatar\" /> : \"\"}            \n            <span className=\"user-username\">{user.username}</span>\n        </div>\n      );\n  }\n};\n\nexport const renderField = ({ input, label, type, meta: { touched, error } }) => (\n    <div>\n        <label>{label}</label>\n        <div>\n            <input className=\"form-control\" {...input} type={type}/>\n        </div>\n        {touched && ((error && <div className=\"alert alert-danger p-1\"><small>{error}</small></div>))}\n    </div>\n);\n\nexport const renderTextAreaField = ({ input, label, type, meta: { touched, error } }) => (\n    <div>\n        <label>{label}</label>\n        <div>\n            <textarea className=\"form-control\" {...input} type={type} />\n        </div>\n        {touched && ((error && <div className=\"alert alert-danger p-1\"><small>{error}</small></div>))}\n    </div>\n);\nexport const renderImageField = ({ input, label, type, meta: { touched, error } }) => (\n    <div>\n        <label>{label}</label>\n        <div>\n            <input className=\"form-control\" {...input} type={type}/>\n        </div>\n        {touched && ((error && <div className=\"alert alert-danger p-1\"><small>{error}</small></div>))}\n    </div>\n);\nexport const renderError = (errorMessages) => {\n    if ( errorMessages ) {\n        if (JSON.stringify(errorMessages)!==\"[]\") {\n            toast.error(errorMessages[0][0])          \n        } else {\n            toast.error(\"Error...\")\n        }  \n    } \n};\n","import React from 'react'\nimport { Link } from \"react-router-dom\";\nimport NavItem from 'reactstrap/lib/NavItem';\nimport { LoadObject } from '../../Organisms/LoadScreen/LoadScreen'\nimport { renderUser } from \"../../../../utils/renderUtils\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\n\nexport const NavigationLink = ({ \n\turltext, customclass\n  }) => {\n\n  \tconst url = urltext.toLowerCase()\n    return (               \n    \t\t<NavItem key={`/${url}`}>\n    \t\t\t<Link className={`nav-link ${customclass}`} \n    \t\t\t  to={{\n\t\t\t    \t  pathname: `/${url}`,\n      \t\t\t\t  state: {fromDashboard: false}\n      \t\t\t  }}>\n      \t\t\t  \t{ urltext }\n    \t\t\t</Link>\n    \t\t</NavItem>\n        )    \n}\n\nexport const NavigationUserLink = ({ \n\turltext, customclass, user\n  }) => {\n\n  \tconst url = urltext.toLowerCase()\n\n    return (               \n    \t\t<NavItem key={`/${url}`}>\n    \t\t\t<Link className={`nav-link ${customclass}`} \n    \t\t\t  to={{\n\t\t\t    \t  pathname: `/${url}`,\n      \t\t\t\t  state: {fromDashboard: false}\n      \t\t\t  }}>\n      \t\t\t  \t{user ? renderUser(user) : <LoadObject objectclass=\"loaduser\"/>}\n    \t\t\t</Link>\n    \t\t</NavItem>\n        )    \n}\n\nexport const HomeButton = () => (\n\t<Link className=\"btn btn-outline-info rounded-0 button-icon\"\n\t\trole=\"button\" \n\t\tto={{\n\t\t  \tpathname: `/investors`,\n\t\t\tstate: {fromDashboard: false}\n\t\t  }}>\n\t\t  \t<FontAwesomeIcon icon={faHome} color=\"info\"/>\n\t</Link>\n);\n\nexport const BrandButton = () => (\n    <Link className=\"navbar-brand\"\n      to={{\n          pathname: `/`,\n          state: {fromDashboard: false}\n      }}>\n        Lead Platform\n    </Link>\n\n);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  Nav,\n    } from 'reactstrap';\n\nimport { NavigationLink, NavigationUserLink, BrandButton } from './general/Atoms/Links/Links'\nimport { getUserProfile } from \"../actions/authActions\";\n\nclass Header extends Component {\n    state = {\n        collapsed: true\n    }\n\n    toggleNavbar = () => {\n        this.setState({\n            collapsed: !this.state.collapsed\n        });\n    }\n\n    static propTypes = {\n        authenticated: PropTypes.bool,\n        getUserProfile: PropTypes.func.isRequired,\n        user: PropTypes.object\n    };\n    componentWillMount() {\n        this.props.getUserProfile();\n    } \n\n    renderLinks() {\n        if (this.props.authenticated) {\n            const { user } = this.props\n            return (\n                <>\n                    <Nav navbar className=\"navbar-links\">\n                        <NavigationLink\n                          urltext=\"Investors\"\n                          customclass=\"nav-links__link\"\n                        />\n                        <NavigationLink\n                          urltext=\"Payments\"\n                          customclass=\"nav-links__link\"\n                        />\n                    </Nav>\n                    <Nav navbar className=\"navbar-profile\">\n                        <NavigationUserLink\n                            urltext=\"profile\"\n                            user={user}\n                            customclass=\"nav-user\"\n                        />\n                        <NavigationLink\n                            urltext=\"Logout\"\n                            customclass=\"nav-logout\"\n                        />\n                    </Nav>  \n                </>              \n            );\n        } else {\n            return (\n                    <Nav className=\"ml-auto\" navbar>\n                        <NavigationLink\n                          urltext=\"Login\"\n                          customclass=\"nav-links__link\"\n                        />\n                       <NavigationLink\n                          urltext=\"SignUp\"\n                          customclass=\"nav-links__link\"\n                        />\n                    </Nav>\n            );\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"content-navbar\">\n                <Navbar color=\"secondary\" dark expand=\"md\">\n                    <BrandButton />\n                    <NavbarToggler onClick={this.toggleNavbar} />\n                      <Collapse isOpen={!this.state.collapsed} navbar>                    \n                            {this.renderLinks()}\n                      </Collapse>\n                </Navbar>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        authenticated: state.auth.authenticated,\n        user: state.auth.user\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getUserProfile: () => {\n            return dispatch(getUserProfile());\n        }\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","export const multipleValidations = (value, validations) => {\n  const checks = validations.map(validation => validation(value))\n  const failedChecks = checks.filter(check => !!check)\n\n  return failedChecks.length === 0 ? undefined : failedChecks.join(\", \")\n}\nexport const required = value => !value || value === \"\" ? 'This field is required.' : undefined\nexport const matchPasswords = (value, allValues, props, name) => {\n  if (allValues['password']) {\n    return value !== allValues['password'] ? \"Passwords Don't Match\" : undefined\n  } else {\n    return undefined\n  }\n}\nexport const maxLength = max => value =>\n  value && value.length > max ? `Must be ${max} characters or less` : undefined\nexport const maxLength15 = maxLength(15)\nexport const minLength = min => value =>\n  value && value.length < min ? `Must be ${min} characters or more` : undefined\nexport const minLength5 = minLength(5)\nexport const letters = value =>\n  value && !/^[a-zA-Z]+$/i.test(value)\n    ? 'Must consists only letters'\n    : undefined\nexport const isurl = value =>\n  value && !/^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w.-]+)+[\\w\\-._~:/?#[\\]@!$&'()*+,;=.]+$/.test(value)\n    ? 'URL is not valid, your URL must be like \"https://example.com/\"'\n    : undefined\nexport const number = value =>\n  value && isNaN(Number(value)) ? 'Must be a number' : undefined\nexport const minValue = min => value =>\n  value && value < min ? `Must be at least ${min}` : undefined\nexport const minValue18 = minValue(18)\nexport const email = value =>\n  value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)\n    ? 'Invalid email address'\n    : undefined\nexport const tooOld = value =>\n  value && value > 65 ? 'You might be too old for this' : undefined\nexport const aol = value =>\n  value && /.+@aol\\.com/.test(value)\n    ? 'Really? You still use AOL for your email?'\n    : undefined\nexport const alphaNumeric = value =>\n  value && /[^a-zA-Z0-9 ]/i.test(value)\n    ? 'Only alphanumeric characters'\n    : undefined\nexport const phoneNumber = value =>\n  value && !/^(0|[1-9][0-9]{9})$/i.test(value)\n    ? 'Invalid phone number, must be 10 digits'\n    : undefined","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n// import {withRouter} from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nexport default function(ComposedComponent) {\n    class Authentication extends Component {\n\n        static propTypes = {\n            history: PropTypes.object\n        };\n\n        componentWillMount() {\n            this.checkAuthentication(this.props);\n\n        }\n\n        componentWillUpdate(nextProps) {\n            this.checkAuthentication(nextProps);\n        }\n\n        checkAuthentication(props) {\n            if (!props.authenticated) {\n                this.props.history.push(\"/login\");\n            }\n        }\n\n        render() {\n            return <ComposedComponent {...this.props} />\n        }\n    }\n\n    function mapStateToProps(state) {\n\n        // provide is_staff to props\n        let is_staff = false;\n        if (state.auth.user && (state.auth.user.is_staff || state.auth.user.is_superuser)) {\n            is_staff = true;\n        }\n        return { authenticated: state.auth.authenticated, \n                is_staff: is_staff, \n            }\n    }\n    // return withRouter(connect(mapStateToProps)(Authentication));\n    return connect(mapStateToProps)(Authentication);\n}\n","import React from 'react'\nimport { BackgroundContainer } from './general/Atoms/BackgroundContainer/BackgroundContainer'\n\nexport const Landing = () => (\n    <BackgroundContainer header=\"Lead Platform based on DRF+React+Redux\"/>\n)\n\n","import React from 'react'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons'\n\nimport './styles.scss'\n\nexport const ShowPass = ({ choice, showHide }) => (\n    <span\n      onClick={showHide} className=\"password-show\">  \n      {choice === 'input' ?      \t\n      \t<FontAwesomeIcon \n      \t  icon={faEyeSlash} \n      \t  color=\"secondary\"\n      \t/>\n      :\n        <FontAwesomeIcon \n      \t  icon={faEye} \n      \t  color=\"secondary\"\n      \t/>\n      }\n    </span>\n);","import React, { Component } from \"react\";\n\nimport { reduxForm, Field, clearSubmitErrors, propTypes } from \"redux-form\";\nimport { Link } from \"react-router-dom\";\nimport { Button, } from 'reactstrap';\n\nimport { renderField, renderError} from \"../../../utils/renderUtils\";\nimport { loginUser } from \"../../../actions/authActions\";\nimport { BackgroundContainer } from '../../general/Atoms/BackgroundContainer/BackgroundContainer'\nimport { email, required } from '../../../utils/formValidators'\nimport { ShowPass } from '../Atoms/Buttons/Buttons'\n\nclass Login extends Component {\n    static propTypes = {\n        ...propTypes\n    };\n    state = { type: \"password\"}\n\n    showHide = (e) => {\n        e.preventDefault();\n\n        this.setState({\n          type: this.state.type === 'password' ? 'input' : 'password'\n        })  \n    }\n    render() {\n        const { handleSubmit, error, invalid, pristine, submitting } = this.props;\n        const { type } = this.state;\n\n        return (\n            <>\n            <BackgroundContainer header=\"\" />\n            <div className=\"row justify-content-center\">\n\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Please Log In</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"email\" label=\"Email\" component={renderField}\n                               type=\"text\" validate={[email, required]}\n                        />\n                    </fieldset>\n\n\n                    <fieldset className=\"form-group\">\n                        <ShowPass \n                            showHide={this.showHide}\n                            choice={type}\n                        />\n                        <Field name=\"password\" label=\"Password\" component={renderField}\n                               type={type} validate={[required]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        { renderError(error) }\n                        <div className=\"form-button\">\n                            <Link role=\"button\" to=\"/signup\" className=\"btn btn-outline-secondary rounded-0 form-button__part\">SignUp</Link>\n                            <Button action=\"submit\" color=\"secondary\" className=\"rounded-0 form-button__part\" disabled={invalid || pristine || submitting}>Login</Button>\n                        </div>\n                    </fieldset>\n\n                    <Link to=\"/reset_password\" className=\"text-center info-link\">forgot password?</Link>\n                </form>\n            </div>\n            </>\n        )\n    }\n}\n\nexport default reduxForm({\n    form: \"login\",\n    onSubmit: loginUser,\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('login'));\n    },\n})(Login);\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../../actions/authActions\";\nimport { BackgroundContainer } from '../../general/Atoms/BackgroundContainer/BackgroundContainer'\n\nconst Logout = ({ logoutUser }) => {\n    useEffect(() => {\n        logoutUser()\n    }, [logoutUser]); \n\n    return (\n        <BackgroundContainer header=\"Welcome to Lead Platform. Please Login or Signup...\" />\n    );\n\n}\n\nLogout.propTypes = {\n  logoutUser: PropTypes.func.isRequired\n};\n\nexport default connect(null, { logoutUser })(Logout);","import React, { Component } from \"react\";\n// import PropTypes from \"prop-types\";\nimport { reduxForm, Field, propTypes, clearSubmitErrors } from \"redux-form\";\n// import { required } from \"redux-form-validators\"\nimport { renderField, renderError } from \"../../utils/renderUtils\";\nimport { signupUser } from \"../../actions/authActions\";\nimport { Link } from \"react-router-dom\";\nimport { Button, } from 'reactstrap';\nimport { BackgroundContainer } from '../general/Atoms/BackgroundContainer/BackgroundContainer'\nimport { email, maxLength15, minLength5, required } from '../../utils/formValidators'\n\nclass Signup extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n\n    render() {\n        const { handleSubmit, error, invalid, pristine, submitting } = this.props;\n\n        return (\n            <>\n            <BackgroundContainer header=\"\" />\n            <div className=\"row justify-content-center\">\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Sign Up</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"email\" label=\"Email\" component={renderField}\n                               type=\"text\" validate={[email, required]} />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"username\" label=\"Username\" component={renderField}\n                               type=\"text\" validate={[maxLength15, minLength5, required]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"password1\" label=\"Password\" component={renderField}\n                               type=\"password\" validate={[required,]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"password2\" label=\"Confirm Password\" component={renderField}\n                               type=\"password\" validate={[required,]}\n                        />\n                    </fieldset>\n\n                    { renderError(error) }\n\n                    <fieldset className=\"form-group\">\n                        <div className=\"form-button\">\n                            <Link role=\"button\" to=\"/login\" className=\"btn btn-outline-secondary rounded-0 form-button__part\">Login</Link>\n                            <Button action=\"submit\" color=\"secondary\" className=\"rounded-0 form-button__part\" disabled={invalid || pristine || submitting}>Sign Up</Button>\n                        </div>\n                    </fieldset>\n                </form>\n            </div>\n            </>\n        );\n    }\n}\n\n// Sync field level validation for password match\nconst validateForm = values => {\n    const errors = {};\n    const { password1, password2 } = values;\n    \n    if (password1 !== password2) {\n        errors.password2 = \"Password does not match.\"\n    }\n    return errors;\n};\n\nexport default reduxForm({\n    form: \"signup\",\n    validate: validateForm,\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('signup'));\n    },\n    onSubmit: signupUser\n})(Signup);\n","import React from \"react\";\nimport { BackgroundContainer } from '../../general/Atoms/BackgroundContainer/BackgroundContainer'\n\nexport const SignupDone = () => (\n    <BackgroundContainer header=\"Thanks for your registration, please follow the link sent to your provided email to activate your account.\" />\n)\n","import React, { Component } from \"react\";\nimport { reduxForm, propTypes, clearSubmitErrors } from \"redux-form\";\nimport { activateUserAccount } from \"../../actions/authActions\";\nimport { renderError } from \"../../utils/renderUtils\";\n\nclass AccountActivation extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Please click the button below to activate your account</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group text-center\">\n                        {renderError(error)}\n                        <button action=\"submit\" className=\"btn btn-info rounded-0\">Activate</button>\n                    </fieldset>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default reduxForm({\n    form: \"user_account_activation\",\n    onSubmit: activateUserAccount,\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('user_account_activation'));\n    },\n})(AccountActivation);\n","import React from 'react'\nimport { Table } from 'reactstrap';\n\n// import { ReturnButton } from '../../../general/Atoms/Buttons/Buttons'\nimport { HomeButton } from '../../../general/Atoms/Links/Links'\nimport './styles.scss'\n\nexport const UserDetailTable = (userdetail) => {\n  if (userdetail) {\n    return (\n      <div className=\"mx-2 mt-2\">\n        <Table className=\"userprofile-header\">\n          <tbody>\n            <tr>\n              <th>\n                <h2>{userdetail.first_name}{\" \"}{userdetail.last_name}</h2>\n              </th>\n              <td>\n                <HomeButton />\n              </td>\n            </tr>\n          </tbody>\n        </Table>\n        <Table className=\"table-userprofile\">\n          <thead>\n            <tr>\n              <td colSpan=\"2\">\n                <div className=\"avatar\"\n                    style={{ backgroundImage: `url(${userdetail.avatar})` }}>\n                </div>\n              </td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <th>Profile:</th>\n              <td>\n                {userdetail.username}\n              </td>\n            </tr>\n\n            <tr>\n              <th>Email:</th>\n              <td>{userdetail.email}</td>\n            </tr>\n            <tr>\n              <th>Website:</th>\n              <td><a className=\"table-correspondence__url\" href={`${userdetail.website}`} >{userdetail.website}</a></td>\n            </tr>                    \n            <tr>\n              <th>About:</th>\n              <td>{userdetail.about}</td>\n            </tr>\n          </tbody>\n        </Table>\n      </div>\n    )\n  } \n  return null\n\n\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getUserProfile } from \"../../../actions/authActions\";\n\nimport { LoadScreen } from '../../general/Organisms/LoadScreen/LoadScreen'\nimport { UserDetailTable } from '../Molecules/Tables/UserDetailTable'\n\nclass UserProfile extends Component {\n\n    static propTypes = {\n        getUserProfile: PropTypes.func.isRequired,\n        user: PropTypes.object,\n        loading: PropTypes.bool\n    };\n    static contextTypes = {\n        router: PropTypes.object\n    }\n    componentWillMount() {\n        this.props.getUserProfile();\n    }\n\n    renderUser() {\n        const { user } = this.props;\n\n        if (user) {\n            return (\n                <UserDetailTable \n                    {...user}\n                  />  \n            );\n        }\n        return null;\n    }\n\n    render() {\n        const {loading} = this.props\n\n        return(\n            <div>\n              {loading ?\n                <LoadScreen />\n              :\n                <div>\n                    {this.renderUser()}\n                    <hr />                \n                    <fieldset className=\"form-group\">\n                        <div className=\"form-button\">\n                            <Link to=\"/profile_edit\" className=\"btn btn-info rounded-0 form-button__part\">Update Profile</Link>\n                            <Link to=\"/change_password\" className=\"btn btn-outline-info rounded-0 form-button__part\">Change Password</Link>\n                        </div>\n                    </fieldset>\n                </div>\n              }\n          </div>               \n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        user: state.auth.user,\n        loading: state.auth.loading\n    }\n}\n\nexport default connect(mapStateToProps, { getUserProfile } )(UserProfile);","import React from 'react'\nimport { HomeButton } from '../../Atoms/Links/Links'\nimport './styles.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSpaceShuttle } from '@fortawesome/free-solid-svg-icons'\n\nexport const ErrorPage = ({errors}) => (\n    <div className=\"error-page\">\n      <div className=\"wrapper-error\"> \n        <h1>Error</h1>     \n        {errors ?  \n            <p>{errors}</p> \n          : \n            <p>Sorry, the page you are looking for doesn't exist.</p>\n        }\n        <h2>Return to <HomeButton /></h2>\n      </div>  \n      <div className=\"space\">\n        <div className=\"blackhole\"></div>\n        <FontAwesomeIcon rotation={180} className=\"ship\" icon={faSpaceShuttle} color=\"info\"/>\n      </div>\n    </div>\n)","import React, {Component} from 'react'\nimport {connect} from 'react-redux';\nimport { LoadScreen } from '../../general/Organisms/LoadScreen/LoadScreen'\nimport { ErrorPage } from '../../general/Organisms/ErrorPage/ErrorPage'\nimport * as userdetail from \"../../../actions/userDetailActions\";\nimport { UserDetailTable } from '../Molecules/Tables/UserDetailTable'\n\nclass UserProfileDetail extends Component {\n    constructor(props){\n        super(props);  \n        this.state = {\n        \tuserdetail: {},\n        \tloading: true,\n        \thasError: false      \n        }\n    }\n\n    componentDidUpdate(prevProps) {\n      if (this.props.userdetail !== prevProps.userdetail) {\n\t\tthis.setState({\n\t\t\t\tuserdetail : this.props.userdetail,\n\t\t\t\tloading: this.props.userdetail.loading,\n\t\t\t\thasError: this.props.userdetail.hasError,\n\t\t\t\terrors: this.props.userdetail.errors,\n\t\t\t\t});\n      }\n    } \n    componentDidMount(){\n      if (this.props.match){\n        const {id} = this.props.match.params\n        this.setState({\n            id: id,\n        })\n        this.props.fetchUserDetail(id)        \n      }      \n    }\n\n    renderNote() {\n        const { userdetail } = this.props;\n        const { hasError, errors } = this.state;\n\n        if (!hasError) {\n          return (\n                  <UserDetailTable \n                    {...userdetail}\n                  />             \n          );\n\n        } else {\n            return (\n                <ErrorPage \n                    errors={errors && errors.page}\n                  /> \n            );\n        }\n    }\n    render () {\n        const {loading} = this.state\n        return(\n            <div>\n              {loading ?<LoadScreen />:this.renderNote()}\n          </div>               \n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      userdetail: state.userdetail,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      fetchUserDetail: (id) => {\n          dispatch(userdetail.fetchUserDetail(id));\n      },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserProfileDetail);","import { toast } from 'react-toastify';\nexport const fetchUserDetail = (id) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        const endpoint = `/api/user/${id}/` \n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        \n        return fetch(endpoint, {headers, })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n               \n                } else {\n                    toast.error(\"Server Error...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'FETCH_USER_DETAIL', userdetail: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authentication Error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", userdetail: res.data});\n                    throw res.data;\n                } \n                else if (res.status === 404) {\n                    toast.error(\"User is not found...\")\n                    dispatch({type: \"USER_NOT_FOUND\"});\n                } else {\n                    throw res.data\n                }\n            })\n            .catch(error => {                \n                //error.redirect('/404');\n                //Handle error\n                console.log(\"error\", error);\n                // return dispatch({type: \"MESSAGE_NOT_FOUND\", detail: error});\n                // dispatch({type: \"MESSAGE_NOT_FOUND\", detail: error});\n            });\n    }\n}\n","import React, {Component} from 'react';\nimport Dropzone from 'react-dropzone';\nimport PropTypes from \"prop-types\";\n// import { Form } from 'elements';\nimport { Field } from 'redux-form';\nimport './styles.scss'\n\nconst imageMaxSize = 1000000; //bytes\n\nclass ImageDrop extends Component {\n  static propTypes = {\n    dropzone_options: PropTypes.object,\n    meta: PropTypes.object,\n    label: PropTypes.string,\n    classNameLabel: PropTypes.string,\n    input: PropTypes.object,\n    className: PropTypes.string,\n    cbFunction: PropTypes.func,\n  };\n\n  static defaultProps = {\n    className: '',\n    cbFunction: () => {},\n  };\n  state = { attached: false };\n  handleDrop = (files) => {\n\tthis.setState({attached: true})\n  }\n  render() {\n    const { className, input: { onChange }, meta: { error, touched }, label, classNameLabel, name, cbFunction } = this.props;\n\n\tlet drop_class = \"dropimage-field dropimage-field__default avatar\"\n\tlet drop_text = \"\"\n\n\tif (this.props.input.value && this.state.attached) {\n\t\tdrop_class = \"dropimage-field dropimage-field__success\";\n\t\tdrop_text = \"Press Save to Add\";\n\t} else {\n\t\tdrop_class = \"dropimage-field dropimage-field__default avatar\";\n\t\t// drop_text = \"Add Document\"\n\t} \n    return (\n      <div className={`${className}` + (error && touched ? ' has-error ' : '')}>\n        {label && <p className={classNameLabel || ''}>{label}</p>}\n        <Dropzone\n          onDrop={(f) => {\n            cbFunction(f);\n            this.handleDrop(f);\n            return onChange(f[0]);\n          }}\n          name={name}\n          maxSize={imageMaxSize}\n        >\n            {({getRootProps, getInputProps}) => (\n                <div {...getRootProps()} className={`${drop_class}`} \n                  style={{ backgroundImage: `url(${this.props.input.value})`}}>\n                    <input {...getInputProps()} />\n                    <span className=\"dropimage-field__text\">{`${drop_text}`}</span>\n                </div>\n            )}\n        </Dropzone>\n        {error && touched ? <div className=\"alert alert-danger p-1\"><small>{error}</small></div> : ''}\n      </div>\n    );\n  }\n}\nexport default props => <Field {...props} component={ImageDrop} />;","import React, { Component } from \"react\";\nimport { reduxForm, Field, propTypes, clearSubmitErrors } from \"redux-form\";\nimport { connect } from 'react-redux'\nimport { Link } from \"react-router-dom\";\n\nimport { renderField, renderTextAreaField,\n    renderError} from \"../../utils/renderUtils\";\nimport { updateUserProfile } from \"../../actions/authActions\";\nimport ImageDrop from './Atoms/ImageDrop/ImageDrop'\nimport { maxLength15, minLength5, required, letters, isurl } from '../../utils/formValidators'\n\nclass Login extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error, invalid, pristine, submitting } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Edit Profile</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"username\" label=\"Username\" component={renderField}\n                               type=\"text\" validate={[maxLength15, minLength5, required]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"first_name\" label=\"First Name\" component={renderField}\n                               type=\"text\" validate={[maxLength15, letters]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"last_name\" label=\"Last Name\" component={renderField}\n                               type=\"text\" validate={[maxLength15, letters]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"website\" label=\"Website\" component={renderField}\n                               type=\"text\" validate={[isurl]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"about\" label=\"About Yourself\" component={renderTextAreaField}\n                               type=\"text\"\n                        />\n                    </fieldset>\n                    <fieldset className=\"form-group\">\n                        <ImageDrop\n                         name=\"avatar\"\n                         label=\"Avatar:\"\n                          classNameLabel=\"file-input-label\"\n                          className=\"file-input\"\n                          dropzone_options={{\n                            multiple: false,\n                            accept: 'image/*'\n                          }}\n                        >\n                          <span>Add more</span>\n                        </ImageDrop>\n                    </fieldset>\n                    <fieldset className=\"form-group\">\n                        {renderError(error)}\n                        <div className=\"form-button\">\n                            <Link to=\"/profile\" className=\"btn btn-outline-info rounded-0 form-button__part\">Cancel</Link>\n                            <button action=\"submit\" className=\"btn btn-info rounded-0 form-button__part\" disabled={invalid || pristine || submitting}>Save</button>\n                        </div>\n                    </fieldset>\n\n                </form>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        initialValues: state.auth.user\n    }\n}\n\nexport default connect(mapStateToProps)(reduxForm({\n    form: \"update_user_profile\",\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('update_user_profile'));\n    },\n    onSubmit: updateUserProfile\n})(Login));","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, } from 'reactstrap';\nimport { reduxForm, Field, propTypes, clearSubmitErrors } from \"redux-form\";\n\nimport { changePassword } from \"../../actions/authActions\";\nimport { renderField, renderError } from \"../../utils/renderUtils\";\nimport { BackgroundContainer } from '../general/Atoms/BackgroundContainer/BackgroundContainer'\nimport { required } from '../../utils/formValidators'\n\nclass PasswordChange extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error, pristine, invalid, submitting } = this.props;\n\n        return (\n            <>\n            <BackgroundContainer header=\"\" />\n            <div className=\"row justify-content-center\">\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Change Password</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"old_password\" label=\"Old Password\" component={renderField}\n                               type=\"password\" validate={[required]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"new_password1\" label=\"New Password\" component={renderField}\n                               type=\"password\" validate={[required]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"new_password2\" label=\"Confirm New Password\" component={renderField}\n                               type=\"password\" validate={[required]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        {renderError(error)}\n                        <div className=\"form-button\">\n                            <Link to=\"/profile\" className=\"btn btn-outline-secondary rounded-0 form-button__part\">Cancel</Link>\n                            <Button action=\"submit\" color=\"secondary\" className=\"rounded-0 form-button__part\" disabled={invalid || pristine || submitting}>Submit</Button>\n                        </div>\n                    </fieldset>\n                </form>\n            </div>\n            </>\n        );\n    }\n}\n\n// Sync field level validation for password match\nconst validateForm = values => {\n    const errors = {};\n    const { new_password1, new_password2 } = values;\n    if (new_password1 !== new_password2) {\n        errors.new_password2 = \"Password does not match.\"\n    }\n    return errors;\n};\n\nexport default reduxForm({\n    form: \"change_password\",\n    onSubmit: changePassword,\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('change_password'));\n    },\n    validate: validateForm\n})(PasswordChange);\n","import React, { Component } from \"react\";\nimport { reduxForm, Field, propTypes, clearSubmitErrors } from \"redux-form\";\n\nimport { renderField, renderError} from \"../../utils/renderUtils\";\nimport { resetPassword } from \"../../actions/authActions\";\nimport { BackgroundContainer } from '../general/Atoms/BackgroundContainer/BackgroundContainer'\n\nimport { email, required } from '../../utils/formValidators'\nclass PasswordReset extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error, pristine, invalid, submitting } = this.props;\n\n        return (\n            <>\n            <BackgroundContainer header=\"\" />\n            <div className=\"row justify-content-center\">\n\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Reset Your Password</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"email\" label=\"Please enter your email\" component={renderField}\n                               type=\"text\" validate={[email, required]}\n                        />\n                    </fieldset>\n                    <fieldset className=\"form-group text-center\">\n                        {renderError(error)}\n                        <button action=\"submit\" className=\"btn btn-secondary rounded-0\" disabled={invalid || pristine || submitting}>Submit</button>\n                    </fieldset>\n                </form>\n            </div>\n            </>\n        )\n    }\n}\n\nexport default reduxForm({\n    form: \"password_reset\",\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('password_reset'));\n    },\n    onSubmit: resetPassword,\n})(PasswordReset);\n","import React from \"react\";\nimport { BackgroundContainer } from '../../general/Atoms/BackgroundContainer/BackgroundContainer'\n\nexport const PasswordResetDone = () => (\n    <BackgroundContainer header=\"An password reset email has been sent to your email. Please follow the link to reset your password.\" />\n)","import React, { Component } from \"react\";\nimport { reduxForm, Field, propTypes, clearSubmitErrors } from \"redux-form\";\n\nimport { confirmPasswordChange } from \"../../actions/authActions\";\nimport { renderField, renderError } from \"../../utils/renderUtils\";\nimport { BackgroundContainer } from '../general/Atoms/BackgroundContainer/BackgroundContainer';\nimport { required } from '../../utils/formValidators'\n\nclass PasswordResetConfirm extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error, invalid, pristine, submitting } = this.props;\n\n        return (\n            <>\n            <BackgroundContainer header=\"\" />\n            <div className=\"row justify-content-center\">\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Create New Password</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"new_password1\" label=\"New Password\" component={renderField}\n                               type=\"password\" validate={[required]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"new_password2\" label=\"Confirm New Password\" component={renderField}\n                               type=\"password\" validate={[required]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group text-center\">\n                        {renderError(error)}\n                        <button action=\"submit\" className=\"btn btn-info rounded-0\" disabled={invalid || pristine || submitting}>Submit</button>\n                    </fieldset>\n                </form>\n            </div>\n            </>\n        );\n    }\n}\n\n// Sync field level validation for password match\nconst validateForm = values => {\n    const errors = {};\n    const { new_password1, new_password2 } = values;\n    if (new_password1 !== new_password2) {\n        errors.new_password2 = \"Password does not match.\"\n    }\n    return errors;\n};\n\nexport default reduxForm({\n    form: \"password_reset_confirm\",\n    onSubmit: confirmPasswordChange,\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('password_reset_confirm'));\n    },\n    validate: validateForm\n})(PasswordResetConfirm);\n","import { toast } from 'react-toastify';\n\nexport const fetchNotes = (nextEndpoint) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        let endpoint = '/api/investors/' \n\n        if (nextEndpoint !== undefined && nextEndpoint !== null) {\n          endpoint = nextEndpoint\n        }\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        let {notes} = getState();\n        return fetch(endpoint, {headers, })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    toast.error(\"Error! Can't load investors...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            // getState().notes[0].concat(res.data)}\n            .then(res => {\n                if (res.status === 200) {               \n                    return dispatch({type: 'FETCH_NOTES', notes: notes.push(res.data), loading: false});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authetication error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\nexport const searchNotes = (searchtext) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        let endpoint = '/api/investors/' \n        if (searchtext !== undefined && searchtext !== null) {\n          endpoint = `/api/investors/?search=${searchtext}`\n        }\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        return fetch(endpoint, {headers, method: \"GET\", })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        // console.log(res)\n                        return {status: res.status, data};\n                    })\n                } else {\n                    toast.error(\"Error! Can't load investors...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'SEARCH_NOTES', notes: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authetication error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\nexport const orderNotes = (order) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        let endpoint = '/api/investors/' \n        if (order !== undefined && order !== null) {\n          endpoint = `/api/investors/?ordering=${order}`\n        }\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        return fetch(endpoint, {headers, method: \"GET\", })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        // console.log(res)\n                        return {status: res.status, data};\n                    })\n                } else {\n                    toast.error(\"Error! Can't load investors...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'ORDER_NOTES', notes: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authetication error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\nexport const addNote = (text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n\n        let body = JSON.stringify({text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence });\n        return fetch(\"/api/investors/\", {headers, method: \"POST\", body})\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    toast.error(\"Error! Can't load investors...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 201) {\n                    toast.info(\"Investor \"+res.data.text+\" added\")\n                    return dispatch({type: 'ADD_NOTE', note: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authetication error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\n\nexport const updateNote = (index, id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence) => {\n    return (dispatch, getState) => {\n\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n\n        let body = JSON.stringify({text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence });\n        // console.log(\"id\", id, \"index\", index)\n        let noteId = getState().notes[index].noteitems[id].id;\n\n        return fetch(`/api/investors/${noteId}/`, {headers, method: \"PUT\", body})\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    toast.error(\"Error! Can't load investors...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 200) {\n                    toast.info(\"Investor \"+res.data.text+\" edited\")\n                    return dispatch({type: 'UPDATE_NOTE', note: res.data, index, id});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authetication error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\n\nexport const deleteNote = (id, index) => {\n    return (dispatch, getState) => {\n\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        let noteId = getState().notes[id].noteitems[index].id;\n\n        return fetch(`/api/investors/${noteId}/`, {headers, method: \"DELETE\"})\n            .then(res => {\n                if (res.status === 204) {\n                    toast.info(\"Investor deleted\")\n                    return {status: res.status, data: {}};\n                } else if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 204) {\n                    // toast.info(\"Investor deleted\")\n                    return dispatch({type: 'DELETE_NOTE', id, index});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authetication error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n            .then(res => {dispatch(fetchNotes())})\n    }\n}\n","import React from 'react'\nimport {   \n  FormGroup, Button, Modal, \n  ModalHeader, ModalBody, \n  ModalFooter, } from 'reactstrap';\nimport './styles.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\n\nexport const ModalDelete = ({ \n      onSelectForDelete,\n      modaldelete, text, index, id, toggle   }) => {\n    return (\n      <div>\n        <Modal isOpen={modaldelete} toggle={toggle}>\n            <ModalHeader color=\"info\">Are you sure?</ModalHeader>           \n            <ModalBody>Delete <b>{text}</b> Investor?</ModalBody>\n            <ModalFooter> \n              <FormGroup row>                   \n              <Button className=\"rounded-0\" color=\"info\" onClick={() => onSelectForDelete(index, id)}><FontAwesomeIcon icon={faTrash} color=\"white\"/></Button>              \n              <Button className=\"rounded-0\" onClick={toggle}>Cancel</Button>\n              </FormGroup>\n            </ModalFooter>\n        </Modal> \n      </div>\n    )\n}\n","import React from 'react'\nimport { FormText,  \n  FormGroup, Label, Input,  } from 'reactstrap';\n\n// REQUIRED FIELDS\nexport const InputName = ({ \n  onInputChange,\n  text, errors\n  }) => {\n\n    return (\n      <div>\n        <FormGroup>\n          <Label>Name <span className=\"text-danger\">*</span></Label>\n          <Input\n            name=\"text\"\n            value={text || ''}\n            placeholder=\"Enter name...\"\n            onChange={onInputChange}\n            required />\n            {errors.text ? <FormText color=\"danger\">{errors.text}</FormText>: \"\"}\n        </FormGroup>\n      </div>\n    )\n}\nexport const InputPhone = ({ \n  onInputChange,\n  phone, errors\n  }) => {\n    return (\n      <div>\n        <FormGroup>\n          <Label>Phone <span className=\"text-danger\">*</span></Label>\n          <Input\n            name=\"phone\"\n            value={phone || ''}\n            placeholder=\"Enter phone...\"\n            onChange={onInputChange}\n            required />\n            {errors.phone ? <FormText color=\"danger\">{errors.phone}</FormText>: \"\"}\n        </FormGroup>\n      </div>\n    )\n}\nexport const InputEmail = ({ \n  onInputChange,\n  email, errors\n  }) => {\n\n    return (\n      <div>\n        <FormGroup>\n          <Label>Email <span className=\"text-danger\">*</span></Label>\n          <Input\n            name=\"email\"\n            value={email || ''}\n            placeholder=\"Enter email...\"\n            onChange={onInputChange}\n            required />\n            {errors.email ? <FormText color=\"danger\">{errors.email}</FormText>: \"\"}\n        </FormGroup>\n      </div>\n    )    \n}\nexport const InputLinkedin = ({ \n  onInputChange,\n  linkedin_profile, errors\n  }) => {\n\n    return (\n      <div>\n        <FormGroup>\n          <Label>Linkedin <span className=\"text-danger\">*</span></Label>\n          <Input\n            name=\"linkedin_profile\"\n            value={linkedin_profile || ''}\n            placeholder=\"Enter linkedin url...\"\n            onChange={onInputChange}\n            required />\n            {errors.linkedin_profile ? <FormText color=\"danger\">{errors.linkedin_profile}</FormText>: \"\"}\n        </FormGroup>\n      </div>\n    )    \n}\n// NOT REQUIRED FIELDS\nexport const InputWebsite = ({ \n  onInputChange,\n  website, errors\n  }) => {\n    return (\n      <div>\n        <FormGroup>\n          <Label>Website</Label>\n          <Input\n            name=\"website\"\n            value={website || ''}\n            placeholder=\"Enter website url...\"\n            onChange={onInputChange}\n            />\n            {errors.website ? <FormText color=\"danger\">{errors.website}</FormText>: \"\"}\n        </FormGroup>\n      </div>\n    )    \n}\nexport const InputCorrespondence = ({ \n  onInputChange,\n  correspondence, errors\n  }) => {\n    return (\n      <div>\n        <FormGroup>\n          <Label>Correspondence</Label>\n          <Input\n            name=\"correspondence\"\n            value={correspondence || ''}\n            placeholder=\"Enter correspondence...\"\n            onChange={onInputChange}\n            type='textarea'\n            />\n            {errors.correspondence ? <FormText color=\"danger\">{errors.correspondence}</FormText>: \"\"}\n        </FormGroup>\n      </div>\n    )    \n}","import React from 'react'\nimport { Button, \n  FormGroup, Label, } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMale, faUsers, \n       } from '@fortawesome/free-solid-svg-icons'\n\n// Checkbox is corporate\nexport const CheckboxIsCorp = ({ \n  handleCheckboxIsCorpBtnClick,\n  is_corporate\n  }) => {\n    return (\n      <div>\n        <FormGroup>\n            <Label>Individual <FontAwesomeIcon icon={faMale} color={!is_corporate ? \"black\": \"grey\"}/> / Corporate <FontAwesomeIcon icon={faUsers} color={is_corporate ? \"black\": \"grey\"}/></Label>\n            <Button className=\"btn btn-block\" onClick={handleCheckboxIsCorpBtnClick} active={is_corporate}>{is_corporate ? 'Change to Individual' : 'Change to Corporate'}</Button>\n        </FormGroup>\n      </div>\n    )    \n}","import React from 'react'\nimport { Button, \n  FormGroup, Label, } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHandHoldingUsd, faCheckCircle, \n       } from '@fortawesome/free-solid-svg-icons'\n\n// Checkbox is corporate\nexport const CheckboxIsPayed = ({ \n  handleCheckboxIsPayBtnClick,\n  status, is_staff, is_payed\n  }) => {\n    return (\n      <div>\n        {status !== \"Candidate\" && is_staff ?\n          <FormGroup>\n              <Label>New <FontAwesomeIcon icon={faHandHoldingUsd} color={!is_payed ? \"black\": \"grey\"}/> / Payed <FontAwesomeIcon icon={faCheckCircle} color={is_payed ? \"black\": \"grey\"}/></Label>\n              <Button className=\"btn btn-block\" onClick={handleCheckboxIsPayBtnClick} active={is_payed}>{is_payed ? 'Change to New' : 'Change to Payed'}</Button>\n          </FormGroup>\n          : null} \n      </div>\n    )    \n}","import React from 'react'\nimport { \n  FormGroup, Label, Dropdown, \n  DropdownToggle, \n  DropdownMenu, DropdownItem, } from 'reactstrap';\n\n// Checkbox is corporate\nexport const CustomDropdown = ({ \n  onToggle, onChangeValue,\n  status, dropdownOpen\n  }) => {\n\n    return (\n      <div>\n        <FormGroup>\n          <Label>Status</Label>\n          <Dropdown className=\"form-group\" isOpen={dropdownOpen} toggle={onToggle}>\n            <DropdownToggle className=\"btn-block\" caret>\n              {status || ''}\n            </DropdownToggle>\n            <DropdownMenu className=\"btn-block\">\n              <DropdownItem onClick={onChangeValue}>Candidate</DropdownItem>\n              <DropdownItem onClick={onChangeValue}>Processed</DropdownItem>\n              <DropdownItem onClick={onChangeValue}>Converted</DropdownItem>\n              <DropdownItem onClick={onChangeValue}>Rejected</DropdownItem>\n            </DropdownMenu>\n          </Dropdown>\n        </FormGroup>\n      </div>\n    )    \n}","import React from 'react'\n\nimport * as Inputs from '../../Atoms/AddInputs/AddInputs'\nimport { CheckboxIsCorp } from '../../Atoms/Checkboxes/CheckboxIsCorp'\nimport { CheckboxIsPayed } from '../../Atoms/Checkboxes/CheckboxIsPayed'\nimport { CustomDropdown } from '../../Atoms/Dropdown/Dropdown'\n\nexport const InputFormNoteQuickAdd = ({ \n      onInputChange, handleCheckboxIsCorpBtnClick,\n      onChangeValue, onToggle, handleCheckboxIsPayBtnClick,\n      text, phone, email,  \n      linkedin_profile, website, \n      correspondence, is_corporate,\n      is_staff, is_payed, dropdownOpen,\n      status, updateNoteId,\n      errors,  }) => {\n\n    return (\n      <div>\n        <Inputs.InputName \n          onInputChange={onInputChange} \n          text={text} \n          errors={errors} \n        />\n        <Inputs.InputPhone \n          onInputChange={onInputChange} \n          phone={phone} \n          errors={errors} \n        />\n        <Inputs.InputEmail \n          onInputChange={onInputChange} \n          email={email} \n          errors={errors} \n        />      \n        <Inputs.InputLinkedin \n          onInputChange={onInputChange} \n          linkedin_profile={linkedin_profile} \n          errors={errors} \n        />\n        <Inputs.InputWebsite \n          onInputChange={onInputChange} \n          website={website} \n          errors={errors} \n        />      \n        <Inputs.InputCorrespondence \n          onInputChange={onInputChange} \n          correspondence={correspondence} \n          errors={errors} \n        />      \n        \n        <CheckboxIsCorp \n          handleCheckboxIsCorpBtnClick={handleCheckboxIsCorpBtnClick} \n          is_corporate={is_corporate} \n        />\n        {updateNoteId !== null ?\n        <CustomDropdown \n          onChangeValue={onChangeValue} \n          onToggle={onToggle} \n          status={status} \n          dropdownOpen={dropdownOpen} \n        />:null}\n        {updateNoteId !== null && status!==\"Candidate\" && is_staff ?\n          <CheckboxIsPayed \n            handleCheckboxIsPayBtnClick={handleCheckboxIsPayBtnClick} \n            status={status} \n            is_staff={is_staff} \n            is_payed={is_payed}\n          />\n        : null}      \n         \n      </div>\n    )\n}","import React, { useState, useEffect } from 'react'\nimport { Button } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMale, \n  faUsers, faExchangeAlt, faLongArrowAltDown,\n  faTimes } from '@fortawesome/free-solid-svg-icons'\nimport './styles.scss'\n\nexport const OrderingHeaderTable = ({ \n    onOrderNotes, searchingProp, mountedProp\n  }) => {\n\n  const [stateOrder, setStateOrder] = useState([]);\n  const [isOrderingName, setIsOrderingName] = useState(false);\n  const [searching, setSearching] = useState(false);\n  const [mounted, setMounted] = useState(mountedProp);\n\n  const onBtnClickOrderingName = (ordername) => {\n    // Create a new array based on current state:\n    let order = [...stateOrder];\n    let newordername = \"-\"+ordername\n    let is_ordering_name = false\n\n    // if ordername starts from \"C\"-character - clear that order!\n    if (ordername.charAt(0) === \"C\"){\n      let index = order.indexOf(ordername.slice(1, ordername.length))\n      // Clear ordername (remove from array)\n      if (index !== -1) {\n        order.splice(index, 1);\n      }\n    } else {\n      // Add or remove item to it\n      if (order.includes(ordername)){\n        let index = order.indexOf(ordername)\n        if (index !== -1) {          \n          order.splice(index, 1);\n          order.splice(index, 0, newordername);         \n        }\n      } else if (order.includes(newordername)) {\n        let index = order.indexOf(newordername)\n        if (index !== -1) {\n          order.splice(index, 1);\n          order.splice(index, 0, ordername);\n        }\n      } else {\n        order.push(ordername);\n\n      }\n    }\n    if (order.length > 0) {\n      is_ordering_name = true\n    } \n\n    // FIX BUG with \"owner\" negative ordering\n    if (order.includes(\"-owner\")&&order.length===1) {\n      // adding \"-id\" field to multiply filter\n      // if has only \"-owner\" field\n      order.push(\"-id\");\n    } else {\n      // remove \"-id\" in all other variants\n      let index = order.indexOf(\"-id\")\n      if (index !== -1) {        \n        order.splice(index, 1);\n      }      \n    }\n\n    // Set state\n    setStateOrder(order);\n    setIsOrderingName(is_ordering_name);\n    setSearching(false)\n    setMounted(false)\n  }\n\n  //search prop cancel ordering\n  useEffect(() => {\n    if (searchingProp) {\n      setSearching(searchingProp)\n      setStateOrder([]);\n      setIsOrderingName(false); \n    }\n  }, [searchingProp]);\n  \n  //fix bug with doubling ordering after props.orderNotes(\"\") \n  // in componentDidMount in Notes.js\n  useEffect(() => {\n    if (mountedProp) {\n      setMounted(mountedProp)\n    }\n  }, [mountedProp]); \n\n  //ordering move to parent, with clear parent`s search state\n  useEffect(() => {\n    if (!searching && !mounted) {\n      onOrderNotes({order: stateOrder, \n        is_ordering_name: isOrderingName, \n        searchtext: \"\",\n        searching: false,\n        mounted: false,\n      })\n    } \n  }, [stateOrder, isOrderingName, searching, mounted, onOrderNotes]);\n  return (\n        <thead>\n          <tr>\n            <th className=\"table-num__title\">#</th>\n            <th className=\"table-investor__title\"><FontAwesomeIcon icon={faMale} color=\"black\"/> / <FontAwesomeIcon icon={faUsers} color=\"black\"/></th>\n            <th>\n              <div className=\"table-investor__ordering\">\n                <span>Name </span>\n                <div className=\"table-investor__ordering--control\">\n                  <Button color=\"link\" onClick={() => onBtnClickOrderingName(\"text\")}>\n                    {stateOrder.includes(\"text\") && !searching ? <FontAwesomeIcon icon={faLongArrowAltDown} color=\"black\"/>\n                    :stateOrder.includes(\"-text\") && !searching ? <FontAwesomeIcon rotation={180} icon={faLongArrowAltDown} color=\"black\"/>\n                    :<FontAwesomeIcon rotation={90} icon={faExchangeAlt} color=\"grey\"/>}\n                  </Button>\n                  {stateOrder.includes(\"text\") && !searching ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => onBtnClickOrderingName(\"Ctext\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                  :stateOrder.includes(\"-text\") && !searching ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => onBtnClickOrderingName(\"C-text\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                  :\"\"}\n                </div>\n              </div>\n            </th>\n            <th>\n              <div className=\"table-investor__ordering\">                  \n                <span>Dev </span>\n                <div className=\"table-investor__ordering--control\">\n                  <Button color=\"link\" onClick={() => onBtnClickOrderingName(\"owner\")}>\n                  {stateOrder.includes(\"owner\") && !searching ? <FontAwesomeIcon icon={faLongArrowAltDown} color=\"black\"/>\n                  :stateOrder.includes(\"-owner\") && !searching ? <FontAwesomeIcon rotation={180} icon={faLongArrowAltDown} color=\"black\"/>\n                  :<FontAwesomeIcon rotation={90} icon={faExchangeAlt} color=\"grey\"/>}</Button>\n                  {stateOrder.includes(\"owner\") && !searching ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => onBtnClickOrderingName(\"Cowner\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                  :stateOrder.includes(\"-owner\") && !searching ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => onBtnClickOrderingName(\"C-owner\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                  :\"\"}\n                </div>\n              </div>\n            </th>\n            <th className=\"table-phone__title\">Phone</th>\n            <th>\n              <div className=\"table-investor__ordering\">                  \n                <span>Status </span>\n                <div className=\"table-investor__ordering--control\">\n                  <Button color=\"link\" onClick={() => onBtnClickOrderingName(\"status\")}>\n                  {stateOrder.includes(\"status\") && !searching ? <FontAwesomeIcon icon={faLongArrowAltDown} color=\"black\"/>\n                  :stateOrder.includes(\"-status\") && !searching ? <FontAwesomeIcon rotation={180} icon={faLongArrowAltDown} color=\"black\"/>\n                  :<FontAwesomeIcon rotation={90} icon={faExchangeAlt} color=\"grey\"/>}</Button>\n                  {stateOrder.includes(\"status\") && !searching ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => onBtnClickOrderingName(\"Cstatus\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                  :stateOrder.includes(\"-status\") && !searching ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => onBtnClickOrderingName(\"C-status\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                  :\"\"}\n                </div>\n              </div>\n            </th>\n            <th>\n              <div className=\"table-investor__ordering \">                  \n                <span className=\"table-investor__ordering--payment\">Payment </span>\n                <div className=\"table-investor__ordering--control\">\n                  <Button color=\"link\" onClick={() => onBtnClickOrderingName(\"is_payed\")}>\n                  {stateOrder.includes(\"is_payed\") && !searching ? <FontAwesomeIcon icon={faLongArrowAltDown} color=\"black\"/>\n                  :stateOrder.includes(\"-is_payed\") && !searching ? <FontAwesomeIcon rotation={180} icon={faLongArrowAltDown} color=\"black\"/>\n                  :<FontAwesomeIcon rotation={90} icon={faExchangeAlt} color=\"grey\"/>}</Button>\n                  {stateOrder.includes(\"is_payed\") && !searching ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => onBtnClickOrderingName(\"Cis_payed\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                  :stateOrder.includes(\"-is_payed\") && !searching ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => onBtnClickOrderingName(\"C-is_payed\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                  :\"\"}\n                </div>\n              </div>\n            </th>\n            <th>Manage</th>\n          </tr>\n        </thead>\n  )\n}","import React from 'react'\nimport { Button } from 'reactstrap';\nimport { Link } from 'react-router-dom'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMale, faUsers, faEdit, \n  faCheckCircle, faHandHoldingUsd, faTrash } from '@fortawesome/free-solid-svg-icons'\nimport './styles.scss'\n\nexport const OrderingBodyTable = ({ \n      onSelectForEdit, onToggleModalDelete,\n      post, index   }) => {\n\n\n    return (\n        <tbody key={index}>\n          {post.noteitems !== undefined && post.noteitems.length > 0 ? post.noteitems.map((note, id) => {\n            return (                                    \n                <tr key={id}>\n                    <th scope=\"row\" className=\"table-num__text\">{id+1}</th>\n                    <td className=\"table-investor__text\">{note.is_corporate ? <FontAwesomeIcon icon={faUsers} color=\"black\"/> : <FontAwesomeIcon icon={faMale} color=\"black\"/>}</td>\n                    <td>\n                      <Link className=\"info-link\" to={{pathname:`/investors/${note.id}`,\n                            state: {fromDashboard: false, prevLink: window.location.pathname}\n                            }}>{note.text}</Link>\n                    </td>\n                    <td>\n                      <Link className=\"info-link\" to={{pathname:`/profile/${note.owner}`,\n                            state: {fromDashboard: false, prevLink: window.location.pathname}\n                            }}>{note.owner_username}</Link></td>\n                    <td className=\"table-phone__text\">{note.phone}</td>\n                    <td>{note.status}</td>\n                    <td>{note.is_payed ? <FontAwesomeIcon icon={faCheckCircle} color=\"black\"/> : <FontAwesomeIcon icon={faHandHoldingUsd} color=\"black\"/>}</td>\n                    <td>\n                      <Button className=\"rounded-0\" color=\"info\" title=\"edit\" onClick={() => onSelectForEdit(index, id)}><FontAwesomeIcon icon={faEdit} /></Button>\n                      <Button className=\"rounded-0\" color=\"secondary\" onClick={() => onToggleModalDelete(index, id)} title=\"delete\"><FontAwesomeIcon icon={faTrash} /></Button>\n                    </td>\n                </tr>                                        \n              )\n            }\n          ) : null}\n        </tbody>\n      )    \n}\n","export const handleValidation = (fields) => {\n  // let fields = this.state;\n  let errors = {};\n\n  //Name\n  if(fields[\"text\"].trim() === \"\"){\n     errors[\"text\"] = \"Cannot be empty\";\n  } else {\n    if(typeof fields[\"text\"] !== \"undefined\"){\n       if(!fields[\"text\"].match(/^[a-zA-Z]+$/)){\n          errors[\"text\"] = \"Name must be only letters\";\n       } else if (fields[\"text\"].length > 15) {\n          errors[\"text\"] = \"Your name is too long\";\n       }        \n    }\n  }\n\n  //Phone\n  if(fields[\"phone\"].trim() === \"\"){\n     errors[\"phone\"] = \"Phone cannot be empty\";\n  } else {\n    if(typeof fields[\"phone\"] !== \"undefined\"){\n      if(!fields[\"phone\"].match(/^[0-9\\-\\\\+]{9,15}$/)){\n        errors[\"phone\"] = \"Not phone number\";\n      }      \n    }\n  }\n  // Email\n  if(fields[\"email\"].trim() === \"\"){\n    errors[\"email\"] = \"Cannot be empty\";\n  } else {\n    if(typeof fields[\"email\"] !== \"undefined\"){\n      let lastAtPos = fields[\"email\"].lastIndexOf('@');\n      let lastDotPos = fields[\"email\"].lastIndexOf('.');\n      if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"email\"].indexOf('@@') === -1 && lastDotPos > 2 && (fields[\"email\"].length - lastDotPos) > 2)) {\n        errors[\"email\"] = \"Email is not valid\";\n      }\n    }\n  }\n  // Linkedin profile\n  if(fields[\"linkedin_profile\"].trim() === \"\"){\n    errors[\"linkedin_profile\"] = \"Cannot be empty\";\n  } else {\n    if(typeof fields[\"linkedin_profile\"] !== \"undefined\"){\n      let re=/^((https?|ftp|smtp):\\/\\/)+(www.)?[a-z0-9]+(\\.[a-z]{2,}){1,3}(#?\\/?[a-zA-Z0-9-_#]+)*\\/?(\\?[a-zA-Z0-9-_]+=[a-zA-Z0-9-%]+&?)?$/;\n      if (!re.test(fields[\"linkedin_profile\"])) {\n        errors[\"linkedin_profile\"] = \"Not Linkedin URL\";\n      }\n    }\n  }\n  // Website\n  if(fields[\"website\"].trim() === \"\"){\n  } else {\n    if(typeof fields[\"website\"] !== \"undefined\"){\n      let re=/^((https?|ftp|smtp):\\/\\/)+(www.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_+.~#?&//=]*)?$/;\n      if (!re.test(fields[\"website\"])) {\n        errors[\"website\"] = \"URL is not valid\";\n      }\n    }\n  }\n\n  return errors;\n}\n\n// export const validateEmailForm = (values) => {\n//   const errors = {};\n//   const { email } = values;\n//   if (!email) {\n//       errors.email = 'This field is required.'\n//   } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\n//       errors.email = 'Invalid email address'\n//   }  \n//   return errors;\n// }","import React, { Component } from 'react'\n\nimport {connect} from 'react-redux';\nimport { Link } from 'react-router-dom'\nimport { Form, FormText,  \n  FormGroup, Button,\n  Table, CustomInput,\n  Modal, ModalHeader, ModalBody, ModalFooter, } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlusSquare, \n  faSearch, faSave, faTimes,  } from '@fortawesome/free-solid-svg-icons'\n\nimport * as notes from \"../../../../actions/notesActions\";\nimport { LoadScreen, LoadObject } from '../../../general/Organisms/LoadScreen/LoadScreen'\nimport { ModalDelete } from '../../Organisms/Modal/Modal'\nimport { InputFormNoteQuickAdd } from '../../Molecules/Forms/InputFormNoteQuickAdd'\nimport { OrderingHeaderTable } from '../../Molecules/Tables/OrderingHeaderTable/OrderingHeaderTable'\nimport { OrderingBodyTable } from '../../Molecules/Tables/OrderingBodyTable/OrderingBodyTable'\nimport { handleValidation } from '../../../../utils/helpers'\nimport './styles.scss'\n\nclass Notes extends Component {\n  state = {\n    text: \"\",\n    phone: \"\",\n    status: 'Candidate',\n    email: \"\",\n    linkedin_profile: \"\",\n    website: \"\",\n    correspondence: \"\",\n    is_corporate: false,\n    is_payed: false,\n    searchtext: \"\",\n    updateNoteId: null,\n    updateNoteIndex: null,\n    dropdownOpen: false,\n    is_ordering_name: false,\n    modal: false,\n    modaldelete: false,\n    mounted: false,\n    is_staff: false,\n    loading: true,\n    fetching: true,\n    nextafterdelete: \"\",\n    deleted: false,\n    order: [],\n    errors: {},\n    notes: [\n        {\n          count: null,\n          next: null,\n          previous: null,\n          noteitems: []\n        },\n      ],\n  }\n\n  // // END FETCH DATA AFTER PROPS\n  componentDidMount () {\n    // Check if was ordering\n    if (!(Array.isArray(this.props.notes[0].noteitems) && this.props.notes[0].noteitems.length)) {\n      // array exists and is not empty\n      this.props.fetchNotes()\n    } else {\n      // fix bug with doubling requests \n      // (add flag \"mounted\" in child OrderingHeaderTable.js)\n      this.setState({\n        mounted: true\n      }, () => {this.props.orderNotes(\"\")});\n    }\n\n  }\n\n  resetForm = () => {\n    this.setState({text: \"\", phone: '', email:'', errors: {}, \n      updateNoteId: null, status: 'Candidate', is_corporate: false, \n      is_payed: false, linkedin_profile: \"\", website: \"\",\n      correspondence: \"\", });\n  }\n  addNew = () => {\n    this.setState({text: \"\", phone: '', email:'', errors: {}, \n      updateNoteId: null, status: 'Candidate', is_corporate: false, \n      is_payed: false, linkedin_profile: \"\", website: \"\", \n      modal: true, correspondence: \"\", });\n  }\n  resetSearch = () => {\n    if (this.state.searching) {\n        this.props.searchNotes(\"\") \n        this.setState({\n          is_ordering_name: false,\n          order: [],\n          searching: false\n        });             \n    }    \n    this.setState({ searchtext: \"\" });\n  }\n \n  selectForEdit = (index, id) => {\n    let note = this.props.notes[index].noteitems[id];\n    this.setState({text: note.text, phone: note.phone, \n      status: note.status, is_payed: note.is_payed, \n      is_corporate: note.is_corporate, email: note.email, \n      linkedin_profile: note.linkedin_profile, \n      website: note.website, correspondence:note.correspondence,\n      updateNoteId: id, updateNoteIndex: index, modal: true, });\n  }\n\n  selectForDelete = (index, id) => {\n    this.props.deleteNote(index, id)\n    this.setState({\n      modaldelete: false,\n    })     \n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.notes !== prevProps.notes) {\n      this.setState({\n        loading: this.props.notes[0].loading,\n        fetching: this.props.notes[0].fetching,\n      }) \n      // если длина массива меньше чем предыдущая длина (один элемент удален)\n      // то пересчитываем эндпоинт для фетча (вычитаем из последнего символа next\n      // число \"1\" чтобы получить текущий фетч), если в нексте на конце \"1\", то обрезаем\n      // до знака \"?\"\n      let nextForDelete = \"\";\n      if(this.props.notes[0].deleted && this.props.notes[0].next) {\n        nextForDelete = this.props.notes[0].next\n        // console.log(nextForDelete)\n        let lastChar = parseInt(nextForDelete.slice(-1), 10)\n        if ((lastChar-1) >= 2) {\n          nextForDelete = nextForDelete.slice(0, -1)+(lastChar-1);\n          // console.log(nextForDelete)\n        }\n        \n        //add flag nextafterdelete to correctly fetch\n        this.setState({nextafterdelete: nextForDelete,\n          deleted: false})\n      }\n\n    }\n  }   \n    \n  toggle = () => {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  }\n  toggleModal = () => {\n    this.setState(prevState => ({\n      modal: !prevState.modal,\n    }));\n  }\n  toggleModalDelete = (index, id) => {\n    let text = \"\"\n    if (id !== undefined) {\n      text = this.props.notes[index].noteitems[id].text\n    }\n    this.setState(prevState => ({\n      modaldelete: !prevState.modaldelete,\n      index: index,\n      id: id,\n      text: text\n    }));\n  }\n\n  handleChange = (e) => {\n    e.preventDefault();\n    let key = e.target.name\n    let value = e.target.value\n\n    this.setState({\n        [key]: value,\n        errors: {}\n    })\n\n  }\n\n  changeValue = (e) => {\n    this.setState({status: e.currentTarget.textContent})\n  }\n  loadMorePosts = () => {\n    const {next} = this.props.notes[this.props.notes.length - 1]\n    this.setState({\n      fetching: true,\n    });\n    // Check if investor is after delete to correct fetch \n    if (this.state.nextafterdelete) {\n      this.props.fetchNotes(this.state.nextafterdelete)\n      //clear flag nextafterdelete\n      this.setState({nextafterdelete: \"\"})\n    } else {\n      if (next !== null || next !== undefined) {\n        // checking with timeout function\n        // setTimeout( () => {this.props.fetchNotes(next)}, 5000 )\n        this.props.fetchNotes(next)             \n      }\n    }\n     \n  }\n  searchNotes = () => {\n      const {searchtext} = this.state\n      if (searchtext !== null || searchtext !== undefined) {\n          this.props.searchNotes(searchtext) \n          this.setState({\n            is_ordering_name: false,\n            order: [],\n            searching: true,\n          });             \n      }  \n  }\n\n  onCheckboxIsCorpBtnClick = () => {\n    this.setState({\n      is_corporate: !this.state.is_corporate,\n    });\n  }\n  onCheckboxIsPayBtnClick = () => {\n    this.setState({\n      is_payed: !this.state.is_payed,\n    });\n  }\n\n  onOrderNotes = (dataFromCallback) => {\n    // Array to string with ','\n    if (dataFromCallback && dataFromCallback.order.length) {\n      let mapped = dataFromCallback.order.map((item)=>(item)).join(\",\");\n      this.setState({...dataFromCallback});      \n      this.props.orderNotes(mapped)              \n    } else {\n      this.props.orderNotes(\"\");\n    }    \n  }\n  submitNote = (e) => {\n      e.preventDefault();\n      // check validation from helper file\n      const validation_errors = handleValidation(this.state)\n      // check validation_errors dictionary is empty or has any errors\n      if (Object.keys(validation_errors).length === 0) {\n        // Check what do you want add or edit?\n        if (this.state.updateNoteId === null) {\n            this.props.addNote(this.state.text, this.state.phone, this.state.status, \n              this.state.is_corporate, this.state.is_payed, this.state.email, \n              this.state.linkedin_profile, this.state.website, this.state.correspondence,)\n              .then(this.resetForm)\n              .then(this.toggleModal)            \n              .catch(function (error) {\n                 console.log(\"error\", error);\n               });\n        } else {\n            this.props.updateNote(this.state.updateNoteIndex, this.state.updateNoteId, \n              this.state.text, this.state.phone, this.state.status, this.state.is_corporate, \n              this.state.is_payed, this.state.email, this.state.linkedin_profile, \n              this.state.website, this.state.correspondence)\n              .then(this.resetForm)\n              .then(this.toggleModal)              \n              .catch(function (error) {\n                 console.log(\"error\", error);\n               });\n        }\n      } else {\n        this.setState({errors: validation_errors}); \n      }\n  }\n  renderModal() {\n      const { modal, \n        text, phone, email, linkedin_profile,\n        website, correspondence, is_corporate,\n        status, is_payed, dropdownOpen,\n        updateNoteId,\n        errors } = this.state;\n      const { is_staff } = this.props;\n      \n      if (this.state.modal) {\n        return (\n          <Modal isOpen={modal} toggle={this.toggleModal}>\n            <Form onSubmit={this.submitNote}>            \n\n              <ModalHeader toggle={this.toggleModal}>{updateNoteId === null ? \"New Investor\" : \"Edit Investor\"}</ModalHeader>\n              <ModalBody>                    \n                <InputFormNoteQuickAdd\n                  onInputChange={this.handleChange}\n                  handleCheckboxIsCorpBtnClick={this.onCheckboxIsCorpBtnClick}\n                  handleCheckboxIsPayBtnClick={this.onCheckboxIsPayBtnClick} \n                  onToggle={this.toggle} \n                  onChangeValue={this.changeValue}\n\n                  text={text} \n                  phone={phone}\n                  email={email}\n                  linkedin_profile={linkedin_profile}\n                  website={website}\n                  correspondence={correspondence}\n                  is_corporate={is_corporate}\n                  is_staff={is_staff}\n                  status={status}\n                  is_payed={is_payed}\n                  dropdownOpen={dropdownOpen}\n                  updateNoteId={updateNoteId}\n\n                  errors={errors} \n                />                              \n              </ModalBody>\n              <ModalFooter> \n                <FormGroup row>                   \n                <Button className=\"rounded-0\" color=\"info\" type=\"submit\"><FontAwesomeIcon icon={faSave} color=\"white\"/></Button>              \n                {updateNoteId === null ? <Button className=\"rounded-0\" outline onClick={this.resetForm}>Clear</Button> : null}\n                <Button className=\"rounded-0\" onClick={this.toggleModal}>Cancel</Button>\n                </FormGroup>\n              </ModalFooter>\n            </Form>\n          </Modal>            \n        );\n      }\n    }\n\n  renderNotes () {\n    const { notes } = this.props\n    const { errors, modal, searchtext, \n      modaldelete, index, id, mounted, \n      text, fetching, searching } = this.state;\n    const { next } = this.props.notes[this.props.notes.length - 1];\n\n    return (\n      <div>\n        <div className=\"centering notes-header mt-2\"> \n          <div className=\"centering-left\"> \n            <Button className=\"rounded-0\" color=\"info\" onClick={this.addNew}><FontAwesomeIcon icon={faPlusSquare} color=\"white\"/><span className=\"btn-quick__text\"> Quick Add</span></Button>\n          </div>\n          <div className=\"centering-center\">\n          {modal ? this.renderModal() : null}\n          {modaldelete ? \n            <ModalDelete \n              modaldelete={modaldelete} \n              index={index} \n              id={id} \n              text={text}\n              toggle={this.toggleModalDelete}\n              onSelectForDelete={this.selectForDelete}\n            /> \n          : null}\n            <FormGroup row>\n              <CustomInput inline\n                id=\"searchtext\"\n                type=\"text\" \n                name=\"searchtext\"\n                value={searchtext || ''}\n                placeholder=\"Search by Name...\"\n                onChange={this.handleChange}\n                \n                />\n                {errors.searchtext ? <FormText color=\"danger\">{errors.searchtext}</FormText>: \"\"}\n              <Button className=\"rounded-0\" onClick={this.searchNotes}><FontAwesomeIcon icon={faSearch} color=\"white\"/></Button>\n              {searchtext !== \"\" ? \n                <Button outline className=\"rounded-0 btn-sort__clear\" onClick={this.resetSearch}>\n                  <FontAwesomeIcon rotation={90} icon={faTimes}/>\n                </Button> \n              : null}          \n            </FormGroup>\n          </div>\n          <div className=\"centering-right\"> \n            <Link to={\"/investors/add\"}><Button className=\"rounded-0 btn-add\" color=\"info\">Add New</Button></Link>\n          </div>\n        </div>          \n        <div className=\"centering\"> \n          <div className=\"centering-left\"></div>\n          <h3 className=\"centering-center\">Leads</h3>\n          <div className=\"centering-right centering-right__tablepreffix\">\n          </div>\n        </div>\n        <Table className=\"table text-center table-investors\" striped>\n          <OrderingHeaderTable\n            onOrderNotes={this.onOrderNotes}\n            searchingProp={searching}\n            mountedProp={mounted} \n          />\n          {notes !== undefined ? notes.map((post, index)=>{\n            return (\n              <OrderingBodyTable\n                  post={post}\n                  key={`${index}`}\n                  index={index}\n\n                  onSelectForEdit={this.selectForEdit}\n                  onToggleModalDelete={this.toggleModalDelete}\n                />\n              )\n          })\n        :null}   \n        </Table>\n        <div className=\"text-center\">\n          {next !== null && !fetching ? \n            <Button className=\"rounded-0\" onClick={this.loadMorePosts}>Load more</Button> \n          : ''}\n          {fetching && <LoadObject objectclass=\"loadnotes\" />}\n        </div>\n      </div>\n    )\n  }\n  render () {\n    const { loading } = this.state\n    return(\n      <div>\n        { loading ? <LoadScreen /> : this.renderNotes() }\n      </div>      \n    )\n  }\n}\n\nconst mapStateToProps = state => {\n    return {\n      notes: state.notes,\n      deleted: state.deleted,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchNotes: (next) => {\n            dispatch(notes.fetchNotes(next));\n        },\n        addNote: (text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence) => {\n            return dispatch(notes.addNote(text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence));\n        },\n        updateNote: (index, id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence) => {\n            return dispatch(notes.updateNote(index, id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence));\n        },\n        deleteNote: (index, id) => {\n            dispatch(notes.deleteNote(index, id));\n        },\n        searchNotes: (searchtext) => {\n            dispatch(notes.searchNotes(searchtext));\n        },\n        orderNotes: (order) => {\n            dispatch(notes.orderNotes(order));\n        },\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notes);","import React, {Component} from 'react'\n// import PropTypes from \"prop-types\";\nimport Button from 'reactstrap/lib/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowLeft, faSave, faEdit } from '@fortawesome/free-solid-svg-icons'\n\nexport class ReturnButton extends Component {\n  // static contextTypes = {\n  //   router: PropTypes.object\n  // }\n\n  // onClick={this.context.router.history.goBack}\n  render() {\n    return (               \n        <Button color=\"info\" outline className=\"rounded-0 button-icon\" role=\"button\"\n          >\n          <FontAwesomeIcon icon={faArrowLeft} color=\"secondary\"/>\n        </Button>   \n        )    \n  }\n}\n// export const ReturnButton = (props) => {\n//   return (               \n//       <Button color=\"info\" outline className=\"rounded-0 button-icon\" role=\"button\"\n//         >\n//         <FontAwesomeIcon icon={faArrowLeft} color=\"secondary\"/>\n//       </Button>   \n//       )    \n// };\n\nexport const SaveButton = () => (\n    <Button color=\"info\" className=\"rounded-0\" type=\"submit\">\n      <FontAwesomeIcon icon={faSave} color=\"secondary\"/>\n    </Button>\n);\n\nexport const ClearButton = ({onClear}) => (\n    <Button outline className=\"rounded-0\" type=\"button\"\n      onClick={onClear}\n    >\n      Clear\n    </Button>\n);\n\nexport const EditButton = ({onEdit}) => (\n    <Button color=\"info\" outline className=\"rounded-0 button-icon\" type=\"button\"\n      onClick={onEdit}\n    >\n      <FontAwesomeIcon icon={faEdit} color=\"secondary\"/>\n    </Button>\n);","import React from 'react'\nimport { Button, \n  FormGroup, Label, } from 'reactstrap';\nimport DatePicker from \"react-datepicker\";\nimport moment from \"moment\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './styles.scss'\n\n// Checkbox is corporate\nexport const DatePickLastCall = ({ \n  handleChangeDate, handleAddCallClick,\n  handleResetCallClick,\n  last_call\n  }) => {\n\n\n  const onChangeDate = (date) => {\n    if (date) {\n      handleChangeDate(moment(date, moment.defaultFormat).toDate());\n    } else {\n      handleChangeDate(null);\n    }\n    \n  }\n\n    const is_valid_date = moment(last_call).isValid()\n\n    return ( \n      <div>\n        <FormGroup>\n          <Label>Last Call {is_valid_date ? <Button className=\"btn\" onClick={handleResetCallClick}>Reset</Button>: \"\"}</Label>\n          {is_valid_date ?\n          <div>\n            <DatePicker     \n              selected={is_valid_date && moment(last_call, moment.defaultFormat).toDate()}\n              onChange={onChangeDate}\n              showTimeSelect\n              timeFormat=\"HH:mm\"\n              timeIntervals={15}\n              dateFormat=\"d MMMM yyyy HH:mm\"\n              timeCaption=\"time\"\n            />\n          </div>\n          :                     \n            <Button className=\"btn btn-block\" onClick={handleAddCallClick}>Add Last Call</Button>\n          }\n        </FormGroup>\n      </div>\n    )    \n}","import React, { Component } from 'react'\nimport Dropzone from 'react-dropzone'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFileUpload } from '@fortawesome/free-solid-svg-icons'\nimport './styles.scss'\n\nconst imageMaxSize = 10000000; //bytes\n\nclass FileDrop extends Component {\n\n\tonDrop = (acceptedFiles, rejectedFiles) => {\n\t\t// console.log(acceptedFiles, rejectedFiles)\n\t\tthis.props.onSelectDrop(acceptedFiles);\n\t}\n\tdropProperties = (documents, detail) => {\n\t\tlet drop_class, drop_text\n\t\tif (documents) {\n\t\t\tif (detail) {\n\t\t\t\tif (documents === detail) {\n\t\t\t\t  drop_class = \"dropzone-field dropzone-field__default\"\n\t\t\t\t  drop_text = \"  Replace Document\"\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t  drop_class = \"dropzone-field dropzone-field__success\";\n\t\t\t  \t  drop_text = \"  Save to Attach\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdrop_class = \"dropzone-field dropzone-field__success\";\n\t\t\t\tdrop_text = \"  Save to Attach\";\n\t\t\t}\n\t\t} else {\n\t\t\tdrop_class = \"dropzone-field dropzone-field__default\";\n\t\t\tdrop_text = \"  Add Document\"\n\t\t} \n\t\treturn {drop_class: drop_class, drop_text: drop_text}\n\t}\n\trender () {\n\t\t\n\t\tconst { documents, detail } = this.props;\n\t\tconst drop_properties = this.dropProperties(documents, detail)\n\n\t\treturn (\n\t\t  <div>Documents:\n            <span className=\"document-title\">{detail !== \"null\" ? \" (\"+detail.split(\"/\").slice(-1)[0]+\")\" : \"\"}</span>\n\t\t    <Dropzone\n\t            onDrop={this.onDrop}\t\t            \n\t            multiple={false}\n\t            maxSize={imageMaxSize}\n\t            >\n\t                {({getRootProps, getInputProps}) => (\n\t                    <div {...getRootProps()} className={`${drop_properties.drop_class}`}>\n\t                        <input {...getInputProps()} />\n\t                       \t<div>\n\t                       \t\t<FontAwesomeIcon icon={faFileUpload} color=\"white\"/>\n\t                       \t\t\t<span className=\"dropzone-field__text\">{`${drop_properties.drop_text}`}</span>\n\t\t\t\t\t\t\t</div>\n\t                    </div>\n\t                )}\n\t\t\t</Dropzone>﻿\n\t\t  </div>\n\t\t  )\n\t}\n}\nexport default FileDrop","import React from 'react'\n\nimport * as Inputs from '../../Atoms/AddInputs/AddInputs'\nimport { CheckboxIsCorp } from '../../Atoms/Checkboxes/CheckboxIsCorp'\nimport { CheckboxIsPayed } from '../../Atoms/Checkboxes/CheckboxIsPayed'\nimport { CustomDropdown } from '../../Atoms/Dropdown/Dropdown'\nimport { DatePickLastCall } from '../../Atoms/DatePick/DatePickLastCall'\nimport FileDrop from '../../Atoms/FileDrop/FileDrop'\n\nexport const InputFormNoteDetail = ({ \n      onInputChange, \n      handleCheckboxIsPayBtnClick,\n      handleCheckboxIsCorpBtnClick,\n      onChangeValue, onToggle,\n      handleChangeDate, handleResetCallClick,\n      handleAddCallClick, onSelectDrop,\n      text, phone, email,  \n      linkedin_profile, website, \n      correspondence, is_corporate,\n      status, dropdownOpen, is_payed,\n      is_staff, add_call, last_call,\n      documents, detail,\n      errors,  }) => {\n      \n    return (\n      <div>        \n        <Inputs.InputName \n          onInputChange={onInputChange} \n          text={text} \n          errors={errors} \n        />\n        <Inputs.InputPhone \n          onInputChange={onInputChange} \n          phone={phone} \n          errors={errors} \n        />\n        <Inputs.InputEmail \n          onInputChange={onInputChange} \n          email={email} \n          errors={errors} \n        />      \n        <Inputs.InputLinkedin \n          onInputChange={onInputChange} \n          linkedin_profile={linkedin_profile} \n          errors={errors} \n        />\n        <Inputs.InputWebsite \n          onInputChange={onInputChange} \n          website={website} \n          errors={errors} \n        />      \n        <Inputs.InputCorrespondence \n          onInputChange={onInputChange} \n          correspondence={correspondence} \n          errors={errors} \n        />        \n        <CheckboxIsPayed \n          handleCheckboxIsPayBtnClick={handleCheckboxIsPayBtnClick} \n          status={status} \n          is_staff={is_staff} \n          is_payed={is_payed}\n        />                \n        <CheckboxIsCorp \n          handleCheckboxIsCorpBtnClick={handleCheckboxIsCorpBtnClick} \n          is_corporate={is_corporate} \n        />          \n        <CustomDropdown \n          onChangeValue={onChangeValue} \n          onToggle={onToggle} \n          status={status} \n          dropdownOpen={dropdownOpen} \n        />      \n        <DatePickLastCall \n          handleChangeDate={handleChangeDate} \n          handleResetCallClick={handleResetCallClick} \n          handleAddCallClick={handleAddCallClick} \n          add_call={add_call} \n          last_call={last_call} \n        />      \n        <FileDrop \n          onSelectDrop={onSelectDrop} \n          documents={documents}\n          detail={detail}\n        />\n      </div>\n    )\n}","import React from 'react'\nimport { Table } from 'reactstrap';\n\nimport { EditButton } from '../../../../general/Atoms/Buttons/Buttons'\nimport { HomeButton } from '../../../../general/Atoms/Links/Links'\n\nimport moment from \"moment\";\nimport './styles.scss'\n\nexport const DetailPreviewTable = ({ \n      onEdit, handleCheckboxIsCorpBtnClick,\n      text, phone, email,  \n      linkedin_profile, website, \n      correspondence, is_corporate,\n      status, is_payed,\n      last_call, documents,   }) => {\n\n    return (\n            <div className=\"mt-2 table-detail\"> \n                <Table className=\"userprofile-header\">\n                  <tbody>\n                    <tr>\n                      <th>\n                        <h2>Investor <b>{text}</b></h2>\n                      </th>\n                      <td>\n                        <HomeButton />\n                        <EditButton\n                          onEdit={onEdit} \n                        />\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>             \n                <Table striped>\n                  <tbody>\n                    <tr>\n                      <th>Phone</th>\n                      <td>{phone}</td>\n                    </tr>\n                    <tr>\n                      <th>Email</th>\n                      <td className=\"table-correspondence__data\">{email}</td>\n                    </tr>\n                    <tr>\n                      <th>Linkedin</th>\n                      <td className=\"table-correspondence__data\"><a className=\"table-correspondence__url\" href={`${linkedin_profile}`} >{linkedin_profile}</a></td>\n                    </tr>\n                    <tr>\n                      <th>Website</th>\n                      <td className=\"table-correspondence__data\"><a className=\"table-correspondence__url\" href={`${website}`} >{website}</a></td>\n                    </tr>\n                    <tr>\n                      <th>Correspondence</th>\n                      <td className=\"table-correspondence__data\">{correspondence}</td>\n                    </tr>\n                    <tr>\n                      <th>Investor</th>\n                      <td>{is_corporate ? \"Corporate\" : \"Individual\" }</td>\n                    </tr>\n                    <tr>\n                      <th>Status</th>\n                      <td>{status}</td>\n                    </tr>\n                    <tr>\n                      <th>Payment</th>\n                      <td>{is_payed ? \"Payed\" : \"New\" }</td>\n                    </tr>\n                    <tr>\n                      <th>Calls</th>\n                      <td>{last_call ? moment(last_call).format(\"D MMM YYYY HH:mm\") : \"\"}</td>\n                    </tr>\n                    <tr>\n                      <th>Documents</th>\n                      <td>{documents ? <a className=\"table-correspondence__url\" href={`${documents}`} >{documents.split(\"/\").slice(-1)[0]}</a> : \"\"}</td>\n                    </tr>\n                  </tbody>\n                </Table>\n            </div>\n    )\n}","import React, {Component} from 'react'\n\nimport * as detail from \"../../../../actions/noteDetailActions\";\nimport {connect} from 'react-redux';\nimport { Form, Container, Row, FormGroup, Button,\n    Modal, ModalHeader, ModalBody, ModalFooter, } from 'reactstrap';\nimport moment from \"moment\";\n\nimport { ErrorPage } from '../../../general/Organisms/ErrorPage/ErrorPage'\nimport { LoadScreen } from '../../../general/Organisms/LoadScreen/LoadScreen'\nimport { SaveButton } from '../../../general/Atoms/Buttons/Buttons'\nimport { InputFormNoteDetail } from '../../Molecules/Forms/InputFormNoteDetail'\nimport { DetailPreviewTable } from '../../Molecules/Tables/DetailPreviewTable/DetailPreviewTable'\nimport { handleValidation } from '../../../../utils/helpers'\n\nimport './styles.scss'\n\nclass NoteDetail extends Component {\n    state = {\n      text: \"\",\n      phone: \"\",\n      status: \"\",\n      email:\"\",\n      linkedin_profile: \"\",\n      website: \"\",\n      correspondence: \"\",\n      is_corporate: false,\n      is_payed: false,\n      id: null,\n      loading: true,\n      errors: {},\n      hasError: false,\n      dropdownOpen: false,\n      detail: {},\n      add_call: false,\n      last_call: \"\", \n      documents: null,\n      attached: false, \n      modal: false,     \n    }\n\n    componentDidMount(){\n      if (this.props.match){\n        const {id} = this.props.match.params\n        this.setState({\n            id: id,\n        })\n        this.props.fetchDetailNote(id)        \n      }      \n    }\n\n    componentWillReceiveProps(nextProps) {\n      const detailed = nextProps.detail\n\n      if (Object.keys(detailed).length) {\n        this.setState({\n          text: detailed.text,\n          phone: detailed.phone,\n          status: detailed.status,\n          is_corporate: detailed.is_corporate,\n          is_payed: detailed.is_payed,\n          email: detailed.email,\n          linkedin_profile: detailed.linkedin_profile,\n          website: detailed.website,\n          correspondence: detailed.correspondence,\n          last_call: moment(detailed.last_call, moment.defaultFormat).toDate(),\n          documents: detailed.documents,\n          hasError: detailed.hasError,\n          loading: detailed.loading,\n          errors: detailed.errors\n        }) \n      }        \n    }    \n    toggle = () => {\n      this.setState(prevState => ({\n        dropdownOpen: !prevState.dropdownOpen\n      }));\n    }\n    toggleModal = () => {\n      this.setState(prevState => ({\n        modal: !prevState.modal,\n      }));\n    }\n    handleChange = (e) => {\n      e.preventDefault();\n      let key = e.target.name\n      let value = e.target.value\n      this.setState({\n          [key]: value,\n          errors: {}\n      })\n    }\n    changeDate = (date) => {      \n      this.setState({last_call: date})\n    }\n\n    changeValue = (e) => {\n      this.setState({status: e.currentTarget.textContent})\n    }\n\n    getData = (documents) => {\n      // console.log(\"getData!\")\n      this.setState({\n        documents: documents[0],\n        attached: true,\n      })\n    }\n\n    onCheckboxIsCorpBtnClick = () => {\n      this.setState({\n        is_corporate: !this.state.is_corporate,\n      });\n    }\n    onCheckboxIsPayBtnClick = () => {\n      this.setState({\n        is_payed: !this.state.is_payed,\n      });\n    }\n    onAddCallClick = () => {\n      this.setState({\n        add_call: true,\n        last_call: moment(new Date(), moment.defaultFormat).toDate(),\n      });\n    }\n\n    onResetCallClick = () => {\n      this.setState({\n        add_call: false,\n        last_call: \"\",\n      });\n    }\n\n    submitNote = (e) => {\n      e.preventDefault();\n      // check validation from helper file\n      const validation_errors = handleValidation(this.state)\n      // check validation_errors dictionary is empty or has any errors\n      if (Object.keys(validation_errors).length === 0) {\n        this.props.updateDetailNote(this.state.id, this.state.text, \n          this.state.phone, this.state.status, this.state.is_corporate, \n          this.state.is_payed, this.state.email, this.state.linkedin_profile, \n          this.state.website, this.state.correspondence, this.state.last_call,\n          this.state.documents, this.state.attached,)              \n        this.toggleModal()            \n\n      } else {\n        this.setState({errors: validation_errors}); \n      }\n    }\n  renderModal() {\n      const { detail, is_staff } = this.props;\n      const { modal, \n        text, phone, email, \n        linkedin_profile, website,\n        correspondence, is_corporate,\n        status, dropdownOpen, is_payed,\n        add_call, last_call, documents,\n        errors } = this.state;\n      \n      if (this.state.modal) {\n        return (\n          <Modal isOpen={modal} toggle={this.toggleModal}>\n            <Form onSubmit={this.submitNote}>            \n\n              <ModalHeader toggle={this.toggleModal}>Edit Investor</ModalHeader>\n              <ModalBody>                    \n                <InputFormNoteDetail \n                  onInputChange={this.handleChange}\n                  handleCheckboxIsCorpBtnClick={this.onCheckboxIsCorpBtnClick}\n                  handleCheckboxIsPayBtnClick={this.onCheckboxIsPayBtnClick} \n                  onToggle={this.toggle} \n                  onChangeValue={this.changeValue}\n                  handleChangeDate={this.changeDate}\n                  handleResetCallClick={this.onResetCallClick}\n                  handleAddCallClick={this.onAddCallClick}\n                  onSelectDrop={this.getData}\n\n                  text={text} \n                  phone={phone}\n                  email={email}\n                  linkedin_profile={linkedin_profile}\n                  website={website}\n                  correspondence={correspondence}\n                  is_corporate={is_corporate}\n                  status={status}\n                  is_staff={is_staff}\n                  is_payed={is_payed}\n                  dropdownOpen={dropdownOpen}\n                  add_call={add_call}\n                  last_call={last_call}\n                  documents={documents}\n                  detail={`${detail.documents}`}\n\n                  errors={errors} \n                />                              \n              </ModalBody>\n              <ModalFooter> \n                <FormGroup row>                   \n                <SaveButton />                              \n                <Button className=\"rounded-0\" onClick={this.toggleModal}>Cancel</Button>\n                </FormGroup>\n              </ModalFooter>\n            </Form>\n          </Modal>            \n        );\n      }\n    }\n    renderNote() {\n        const { detail } = this.props;\n        const { modal, hasError, errors } = this.state;\n\n        if (!detail.detail && !hasError) {\n          return (\n                <Container fluid>\n                  <Row>\n                    {modal ? this.renderModal() : null}\n                    <DetailPreviewTable \n                      {...detail}\n                      onEdit={this.toggleModal}\n                    />\n              </Row>\n            </Container>              \n          );\n\n        } else {\n            return (\n              <ErrorPage \n                  errors={errors && errors.page}\n                /> \n            );\n        }\n    }\n    render () {\n        const {loading} = this.state\n        return(\n            <div>\n              {loading ?<LoadScreen />:this.renderNote()}\n          </div>               \n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      detail: state.detail,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      fetchDetailNote: (id) => {\n          dispatch(detail.fetchDetailNote(id));\n      },\n      updateDetailNote: (id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence, last_call, documents, attached) => {\n          dispatch(detail.updateDetailNote(id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence, last_call, documents, attached));\n      }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteDetail);","import { toast } from 'react-toastify';\nexport const fetchDetailNote = (id) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        const endpoint = `/api/investors/${id}/` \n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        \n        return fetch(endpoint, {headers, })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n               \n                } else {\n                    toast.error(\"Server Error...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'FETCH_DETAIL_NOTE', detail: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authentication Error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", detail: res.data});\n                    throw res.data;\n                } \n                else if (res.status === 404) {\n                    toast.error(\"Investor is not found...\")\n                    dispatch({type: \"INVESTOR_NOT_FOUND\", detail: res.data});\n                    throw res.data;\n                }\n            })\n            .catch(error => {                \n                console.log(\"error\", error);\n            });\n    }\n}\n\nexport const updateDetailNote = (id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence, last_call, documents, attached) => {\n    return (dispatch, getState) => {\n\n        let headers = {'Accept': 'application/json'};\n        // let headers = {\"Content-Type\": \"multipart/form-data\"};\n\n        let {token} = getState().auth;\n\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        let formData = new FormData();\n        formData.append('text', text);\n        formData.append('phone', phone);\n        formData.append('status', status);\n        formData.append('is_corporate', is_corporate);\n        formData.append('is_payed', is_payed);\n        formData.append('email', email);\n        formData.append('linkedin_profile', linkedin_profile);\n        formData.append('website', website);\n        // Not required fields\n        if (correspondence) {\n            formData.append('correspondence', correspondence);\n        }\n        //check if attached & if documents(file) is not string\n        //if documents is string don't append formData\n        if (attached && \n          !(typeof documents === 'string' || documents instanceof String)) {\n            formData.append('documents', documents);\n        }\n\n        // formData need to convert ISO format string\n        if (last_call){\n            if (String(last_call) !==\"Invalid Date\") {\n                formData.append('last_call', last_call.toISOString());\n            }            \n        } else {\n            formData.append('last_call', \"\");\n        }\n        let noteId = id;\n        return fetch(`/api/investors/${noteId}/`, {headers, method: \"PUT\", body: formData})\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    toast.error(\"Server error...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 200) {\n                    toast.info(\"Investor \"+res.data.text+\" edited\")\n                    return dispatch({type: 'UPDATE_DETAIL_NOTE', detail: res.data, id});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authentication Error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n            .catch(error => {                \n                console.log(\"error\", error);\n            });\n    }\n}\n\nexport const addDetailNote = (text, phone, status, is_corporate, email, linkedin_profile, website, correspondence) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n\n        let body = JSON.stringify({text, phone, status, is_corporate, email, linkedin_profile, website, correspondence });\n        return fetch(\"/api/investors/\", {headers, method: \"POST\", body})\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 201) {\n                    toast.info(\"Investor \"+res.data.text+\" added\")\n                    return dispatch({type: 'ADD_DETAIL_NOTE', detail: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n           .catch(error => {                \n                console.log(\"error\", error);\n            });\n    }\n}\n","import React from 'react'\n\nimport * as Inputs from '../../Atoms/AddInputs/AddInputs'\nimport { CheckboxIsCorp } from '../../Atoms/Checkboxes/CheckboxIsCorp'\n\nexport const InputFormNoteAdd = ({ onInputChange, handleCheckboxIsCorpBtnClick,\n      text, phone, email,  \n      linkedin_profile, website, \n      correspondence, is_corporate,\n      errors,  }) => {\n    return (\n      <div>\n        <Inputs.InputName \n          onInputChange={onInputChange} \n          text={text} \n          errors={errors} \n        />\n        <Inputs.InputPhone \n          onInputChange={onInputChange} \n          phone={phone} \n          errors={errors} \n        />\n        <Inputs.InputEmail \n          onInputChange={onInputChange} \n          email={email} \n          errors={errors} \n        />      \n        <Inputs.InputLinkedin \n          onInputChange={onInputChange} \n          linkedin_profile={linkedin_profile} \n          errors={errors} \n        />\n        <Inputs.InputWebsite \n          onInputChange={onInputChange} \n          website={website} \n          errors={errors} \n        />      \n        <Inputs.InputCorrespondence \n          onInputChange={onInputChange} \n          correspondence={correspondence} \n          errors={errors} \n        />      \n        \n        <CheckboxIsCorp \n          handleCheckboxIsCorpBtnClick={handleCheckboxIsCorpBtnClick} \n          is_corporate={is_corporate} \n        />\n\n      </div>\n    )\n}","import React, {Component} from 'react'\nimport { Redirect } from 'react-router-dom'\nimport {connect} from 'react-redux';\n\nimport Form from 'reactstrap/lib/Form';\n\nimport * as detail from \"../../../../actions/noteDetailActions\";\nimport { InputFormNoteAdd } from '../../Molecules/Forms/InputFormNoteAdd'\nimport { SaveButton, ClearButton } from '../../../general/Atoms/Buttons/Buttons'\nimport { HomeButton } from '../../../general/Atoms/Links/Links'\n\nimport { handleValidation } from '../../../../utils/helpers'\n\nclass NoteNew extends Component {\n    state = {\n      text: \"\",\n      phone: \"\",\n      email: \"\",\n      status: \"Candidate\",\n      linkedin_profile: \"\",\n      website: \"\",\n      correspondence: \"\",\n      is_corporate: false,\n      id: null,\n      doneLoading: false,\n      errors: {},        \n      redirectToNewPage: false          \n    }\n\n    componentWillReceiveProps(nextProps) {\n      if (this.state.redirectToNewPage) {  \n        this.setState({\n          id: nextProps.detail.id,\n        })\n      }\n    }    \n\n    resetForm = () => {\n      this.setState({text: \"\", phone: '', email:'', errors: {}, status: 'Candidate', \n        is_corporate: false, linkedin_profile: \"\", website: \"\",\n        correspondence: \"\",\n      });\n    }\n    handleChange = (e) => {\n      e.preventDefault();\n      let key = e.target.name\n      let value = e.target.value\n      this.setState({\n          [key]: value,\n          errors: {}\n      })\n    }\n    changeValue = (e) => {\n      this.setState({status: e.currentTarget.textContent})\n    }\n\n    onCheckboxIsCorpBtnClick = () => {\n      this.setState({\n        is_corporate: !this.state.is_corporate,\n      });\n    }\n\n    submitNote = (e) => {\n      e.preventDefault();\n      // check validation from helper file\n      const validation_errors = handleValidation(this.state)\n      // check validation_errors dictionary is empty or has any errors\n      if (Object.keys(validation_errors).length === 0) {\n        this.props.addDetailNote(this.state.text, this.state.phone, this.state.status, \n          this.state.is_corporate, this.state.email, this.state.linkedin_profile, \n          this.state.website, this.state.correspondence)\n          .then(this.setState({ redirectToNewPage: true }))            \n          .catch(function (error) {\n             console.log(\"error\", error);\n           });\n      } else {\n        this.setState({errors: validation_errors}); \n      }\n    }\n\n    render () {\n        const { text, phone, email, \n          linkedin_profile, website,\n          correspondence, is_corporate,\n          errors } = this.state;\n        // The part that makes the redirect happen\n        if (this.state.redirectToNewPage && this.state.id) {\n          return (\n            <Redirect to={{pathname:`/investors/${this.state.id}`}} />\n          )\n        }\n        return(\n            <div>\n              <div className=\"mt-2 mb-2\">\n                <h3>Add New</h3>\n              </div>\n              <Form onSubmit={this.submitNote} className=\"form col col-sm-4 mt-2 p-2\">\n                <InputFormNoteAdd\n                  onInputChange={this.handleChange}\n                  handleCheckboxIsCorpBtnClick={this.onCheckboxIsCorpBtnClick} \n\n                  text={text} \n                  phone={phone}\n                  email={email}\n                  linkedin_profile={linkedin_profile}\n                  website={website}\n                  correspondence={correspondence}\n                  is_corporate={is_corporate}\n\n                  errors={errors} \n                /> \n                <div>\n                  <SaveButton />\n                  <ClearButton\n                    onClear={this.resetForm} \n                  />\n                  <HomeButton />\n                </div>\n            </Form>\n          </div>               \n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      detail: state.detail,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addDetailNote: (text, phone, status, is_corporate, email, linkedin_profile, website, correspondence) => {\n            return dispatch(detail.addDetailNote(text, phone, status, is_corporate, email, linkedin_profile, website, correspondence));\n        },\n    }\n}\n\n// export default NewNote;\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteNew);","import React, {Component} from 'react'\nimport {connect} from 'react-redux';\nimport { Link } from 'react-router-dom'\nimport { Table } from 'reactstrap';\n\nimport * as lead from \"../../../../actions/paymentsActions\";\nimport { LoadScreen } from '../../../general/Organisms/LoadScreen/LoadScreen'\nimport { paymentsUtil } from '../../../../utils/paymentsUtils'\nimport './styles.scss'\n\nclass Payments extends Component {\n    state = {         \n        loading: true,\n        errors: {},\n        lead: {},\n      };\n\n    componentDidMount(){\n      if (this.props.match){\n        this.props.fetchPaymentsLead()\n      }\n    }\n\n    componentDidUpdate(prevProps) {\n      if (this.props.lead !== prevProps.lead) {\n        if (this.props.lead) {\n          const leads = paymentsUtil(this.props.lead.leads)\n          this.setState({leads: leads}); \n        }\n      }\n    }   \n    renderPayments() {\n      const { lead } = this.props;\n        if (lead.leads) {\n          return (\n            <div>\n              <h3>Leads View</h3>\n              <Table className=\"table text-center\" striped>\n                <thead>\n                  <tr>\n                    <th className=\"table-num__title table-payments\">#</th>\n                    <th className=\"table-payments\">Developer</th>\n                    <th className=\"table-payments\">Total Leads</th>\n                    <th className=\"table-payments\">Processed</th>\n                    <th className=\"table-payments\">Converted</th>\n                    <th className=\"table-payments\">Rejected</th>\n                    <th className=\"table-payments\">Next Payment</th>\n                  </tr>\n                </thead>  \n                <tbody>\n                  {lead.leads.length > 0 ? lead.leads.map((item,id) => (\n                    <tr key={id}>\n                        <th scope=\"row\" className=\"table-num__text\">{id+1}</th>\n                        <td>\n                          <Link className=\"info-link\" to={{pathname:`/profile/${item.id}`,\n                              state: {fromDashboard: false, prevLink: window.location.pathname}\n                              }}>{item.owner}</Link>\n                        </td>\n                        <td>{item.total}</td>\n                        <td>{item.processed}</td>\n                        <td>{item.converted}</td>\n                        <td>{item.rejected}</td>\n                        <td>{item.price}</td>\n                    </tr>\n                  )) : <tr><td colSpan=\"7\">Table is empty. Add your investors</td></tr>}\n                </tbody>                     \n              </Table>\n            </div>              \n          );\n        }\n    }\n    render () {\n      const { loading } = this.props\n      return(\n          <div>\n            { loading ? <LoadScreen /> : this.renderPayments() }\n        </div>               \n      )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      lead: state.lead,\n      loading: state.lead.loading\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      fetchPaymentsLead: () => {\n          dispatch(lead.fetchPaymentsLead());\n      },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Payments);","export const paymentsUtil = (leads) => {\n\n  // initialize newstate for reducer (to add calculated parameter lead.price)\n  let newstate = leads\n  // calculating next payment\n  newstate.forEach(item=>{\n    // get true_investors (without candidate status)\n    let true_investors = item.converted + item.processed + item.rejected\n    // get count of payed investors\n    let count_payed = item.payed\n    let price_all = 0;\n    let price_payed = 0;\n\n    // Calculating price\n    for(let key in item.prices){\n      let value = item.prices[key]\n      // Calculating price for investors without Candidate status\n      if (true_investors >=10){\n          if (true_investors>=key) {\n              price_all += 10*value\n          } else {\n              if (Math.ceil(true_investors/10) === key/10) {\n                  price_all += (true_investors+10-key)*value \n              }\n          }\n      }\n      // Get payed price\n      if (count_payed && true_investors >=10){\n          if (count_payed >= key) {\n              price_payed += 10*value\n          } else {\n              if (Math.ceil(count_payed/10) === key/10) {\n                  price_payed += (count_payed+10-key)*value \n              }\n          }\n      }\n    }\n    // output price without payed prices\n    item.price =price_all-price_payed;              \n  });\n  return newstate\n}","export const fetchPaymentsLead = () => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        const endpoint = `/api/payments/` \n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        \n        return fetch(endpoint, {headers, })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                // } else if (res.status === 404) {\n                //     dispatch({type: \"MESSAGE_NOT_FOUND\", data: res.data});\n                //     throw res.data;\n                } else {\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'FETCH_PAYMENTS_LEAD', leads: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                } else if (res.status === 404) {\n                    dispatch({type: \"ERROR_NOT_FOUND\", leads: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport RequireAuth from \"./auth/RequireAuth\";\nimport { Landing } from \"./Landing\";\nimport Login from \"./auth/Templates/Login\";\nimport Logout from \"./auth/Templates/Logout\";\nimport Signup from \"./auth/Signup\";\nimport { SignupDone } from \"./auth/Templates/SignupDone\";\nimport AccountActivation from \"./auth/AccountActivation\";\nimport UserProfile from \"./auth/Templates/UserProfile\";\nimport UserProfileDetail from \"./auth/Templates/UserProfileDetail\";\nimport UserProfileEdit from \"./auth/UserProfileEdit\";\nimport PasswordChange from \"./auth/PasswordChange\";\nimport PasswordReset from \"./auth/PasswordReset\";\nimport { PasswordResetDone } from \"./auth/Templates/PasswordResetDone\";\nimport PasswordResetConfirm from \"./auth/PasswordResetConfirm\";\nimport {ErrorPage} from \"./general/Organisms/ErrorPage/ErrorPage\";\n\nimport Notes from './notes/Templates/Notes/Notes'\nimport NoteDetail from './notes/Templates/NoteDetail/NoteDetail'\nimport NoteNew from './notes/Templates/NoteNew/NoteNew'\nimport Payments from './notes/Templates/Payments/Payments'\n\nconst MainContent = () => (\n\n    <Switch>\n        <Route exact path=\"/\" component={props => <Landing {...props} />} />\n        <Route path=\"/reload\" component={null} key=\"reload\" />\n        <Route path=\"/login\" component={props => <Login {...props} />} />\n        <Route path=\"/logout\" component={props => <Logout {...props} />}/>\n        <Route path=\"/signup\" component={props => <Signup {...props} />}/>\n        <Route path=\"/activation/confirm-email/:key\" component={props => <AccountActivation {...props} />}/>\n        <Route path=\"/signup_done\" component={props => <SignupDone {...props} />}/>\n        <Route path=\"/reset_password\" component={props => <PasswordReset {...props} />}/>\n        <Route path=\"/reset_password_done\" component={props => <PasswordResetDone {...props} />}/>\n        <Route path=\"/pass/reset/:uid/:token/\" component={props => <PasswordResetConfirm {...props} />}/>\n        <Route exact path=\"/profile\" component={RequireAuth(UserProfile)}/>\n        <Route path='/profile/:id' component={RequireAuth(UserProfileDetail)}/>\n        <Route path=\"/profile_edit\" component={RequireAuth(UserProfileEdit)}/>\n        <Route path=\"/change_password\" component={RequireAuth(PasswordChange)}/>\n        <Route exact path='/investors' component={RequireAuth(Notes)} />\n        <Route path='/investors/add' component={RequireAuth(NoteNew)}/>\n        <Route path='/investors/:id' component={RequireAuth(NoteDetail)}/>\n        <Route exact path='/payments' component={RequireAuth(Payments)} />\n\n        <Route component={props => <ErrorPage {...props} />}/>\n    </Switch>\n\n);\n\nexport default MainContent;\n","import React, {Component} from \"react\";\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css'; \n\nimport Header from \"./Header\";\nimport MainContent from \"./MainContent\";\n\nexport default class App extends Component {\n    render() {\n        return (\n            <>                \n              <Header />\n              <div className=\"container\">\n                  <ToastContainer \n                    hideProgressBar={true} \n                    position=\"bottom-right\"\n                    autoClose={3000}\n                    removeCloseButton={true}\n                  />\n              </div>\n              <div className=\"container\">\n                <MainContent />\n              </div>              \n            </>\n        );\n    }\n}","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"bootstrap/dist/css/bootstrap.css\";\n\nimport \"./styles/style.scss\"\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import { Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport store from \"./store\";\n// import history from \"./utils/historyUtils\";\nimport { authLogin } from \"./actions/authActions\";\nimport App from \"./components/App\";\nimport registerServiceWorker from './registerServiceWorker';\n\n// import { syncHistoryWithStore } from 'react-router-redux'\n\n\n// const browserhistory = syncHistoryWithStore(history, store)\n\nregisterServiceWorker();\n\nconst token = localStorage.getItem(\"token\");\n\nif (token) {\n    store.dispatch(authLogin(token));\n}\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <App />\n        </Router>\n    </Provider>\n    , document.getElementById(\"root\"));\n"],"sourceRoot":""}