{"version":3,"sources":["../config/polyfills.js","reducers/notesReducer.js","constants/actionTypes.js","reducers/index.js","reducers/authReducer.js","reducers/noteDetailReducer.js","reducers/paymentsReducer.js","reducers/userDetailReducer.js","store/index.js","constants/urls.js","utils/authUtils.js","actions/authActions.js","components/general/Organisms/LoadScreen/LoadScreen.js","utils/renderUtils.js","components/general/Atoms/Links/Links.js","components/Header.js","utils/formValidators.js","components/auth/RequireAuth.js","components/general/Atoms/BackgroundContainer/BackgroundContainer.js","components/Landing.js","components/auth/Atoms/Buttons/Buttons.js","components/auth/Templates/Login.js","components/auth/Logout.js","components/auth/Signup.js","components/auth/SignupDone.js","components/auth/AccountActivation.js","components/general/Atoms/Buttons/Buttons.js","components/auth/Molecules/Tables/UserDetailTable.js","components/auth/Templates/UserProfile.js","components/general/Organisms/ErrorPage/ErrorPage.js","components/auth/Templates/UserProfileDetail.js","actions/userDetailActions.js","components/auth/Atoms/ImageDrop/ImageDrop.js","components/auth/UserProfileEdit.js","components/auth/PasswordChange.js","components/auth/PasswordReset.js","components/auth/PasswordResetDone.js","components/auth/PasswordResetConfirm.js","actions/notesActions.js","components/notes/Organisms/Modal/Modal.js","components/notes/Atoms/AddInputs/AddInputs.js","components/notes/Atoms/Checkboxes/CheckboxIsCorp.js","components/notes/Atoms/Checkboxes/CheckboxIsPayed.js","components/notes/Atoms/Dropdown/Dropdown.js","components/notes/Molecules/Forms/InputFormNoteQuickAdd.js","components/notes/Molecules/Tables/OrderingHeaderTable/OrderingHeaderTable.js","components/notes/Molecules/Tables/OrderingBodyTable/OrderingBodyTable.js","utils/helpers.js","components/notes/Templates/Notes/Notes.js","components/notes/Atoms/DatePick/DatePickLastCall.js","components/notes/Atoms/FileDrop/FileDrop.js","components/notes/Molecules/Forms/InputFormNoteDetail.js","components/notes/Molecules/Tables/DetailPreviewTable/DetailPreviewTable.js","components/notes/Templates/NoteDetail/NoteDetail.js","actions/noteDetailActions.js","components/notes/Molecules/Forms/InputFormNoteAdd.js","components/notes/Templates/NoteNew/NoteNew.js","components/notes/Templates/Payments/Payments.js","utils/paymentsUtils.js","actions/paymentsActions.js","components/MainContent.js","components/App.js","registerServiceWorker.js","index.js"],"names":["Promise","__webpack_require__","enable","window","Object","assign","initialState","noteitems","loading","AuthTypes","LOGIN","LOGOUT","CHANGE_PASSWORD","USER_PROFILE","rootReducer","combineReducers","form","formReducer","auth","state","arguments","length","undefined","action","type","objectSpread","authenticated","token","payload","user","notes","noteList","map","a","reduce","b","concat","toConsumableArray","slice","filter","index","self","findIndex","t","created_at","id","fetching","unshift","note","selectById","indexEdit","p","noteToUpdate","text","phone","status","is_corporate","is_payed","email","linkedin_profile","website","correspondence","splice","deleteById","indexDel","nextafterdelete","next","deleted","detail","updated","hasError","errors","page","lead","leads","loaded","error","userdetail","store","logger","createLogger","middleware","applyMiddleware","thunk","compose","createStoreWithMiddleware","createStore","configureStore","ROOT_URL","HOMEPAGE_URL","require","homepage","AuthUrls","SIGNUP","RESET_PASSWORD","RESET_PASSWORD_CONFIRM","USER_ACTIVATION","getUserToken","authLogin","getUserProfile","dispatch","getState","axios","get","headers","authorization","then","response","data","catch","console","log","processedError","processServerError","SubmissionError","keys","newDict","key","push","_error","LoadScreen","react_default","createElement","className","LoadObject","_ref","objectclass","renderField","input","label","_ref$meta","meta","touched","renderTextAreaField","_ref2","_ref2$meta","renderError","errorMessages","JSON","stringify","toast","NavigationLink","urltext","customclass","url","toLowerCase","NavItem_default","Link","to","pathname","fromDashboard","NavigationUserLink","avatar","src","alt","username","renderUser","LoadScreen_LoadObject","HomeButton","role","index_es","icon","faHome","color","BrandButton","Header","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleNavbar","setState","collapsed","Fragment","Nav","navbar","Links_NavigationLink","Links_NavigationUserLink","Navbar","dark","expand","Links_BrandButton","NavbarToggler","onClick","Collapse","isOpen","renderLinks","Component","max","min","connect","RequireAuth","ComposedComponent","Authentication","_Component","apply","inherits","createClass","value","checkAuthentication","nextProps","history","is_staff","is_superuser","BackgroundContainer","header","Landing","BackgroundContainer_BackgroundContainer","required","maxLength15","minLength5","letters","test","isurl","minValue","ShowPass","choice","showHide","faEyeSlash","faEye","Login","e","preventDefault","_this$props","handleSubmit","invalid","pristine","submitting","onSubmit","Field","name","component","validate","Buttons_ShowPass","Button","disabled","reduxForm","formValues","loginUrl","post","localStorage","setItem","onChange","values","clearSubmitErrors","Logout","logoutUser","removeItem","Signup","password1","password2","signupUrl","SignupDone","AccountActivation","match","params","activateUserUrl","info","ReturnButton","Button_default","outline","context","router","goBack","faArrowLeft","contextTypes","PropTypes","object","SaveButton","faSave","ClearButton","onClear","EditButton","onEdit","faEdit","UserDetailTable","Table","first_name","last_name","Buttons_ReturnButton","Links_HomeButton","colSpan","style","backgroundImage","href","about","UserProfile","UserDetailTable_UserDetailTable","LoadScreen_LoadScreen","ErrorPage","rotation","faSpaceShuttle","UserProfileDetail","prevProps","fetchUserDetail","_this$state","ErrorPage_ErrorPage","renderNote","Content-Type","endpoint","fetch","res","json","ImageDrop","attached","handleDrop","files","_this2","_this$props$meta","classNameLabel","cbFunction","drop_class","drop_text","dist_es","onDrop","f","maxSize","getRootProps","getInputProps","defaultProps","Atoms_ImageDrop_ImageDrop","dropzone_options","multiple","accept","initialValues","formData","FormData","String","forEach","append","patch","PasswordChange","changePasswordUrl","new_password1","new_password2","PasswordReset","resetPasswordUrl","PasswordResetDone","PasswordResetConfirm","_props$match$params","uid","resetPasswordConfirmUrl","fetchNotes","nextEndpoint","ModalDelete","onSelectForDelete","modaldelete","toggle","Modal","ModalHeader","ModalBody","ModalFooter","FormGroup","row","faTrash","InputName","onInputChange","Label","Input","placeholder","FormText","InputPhone","InputEmail","_ref3","InputLinkedin","_ref4","InputWebsite","_ref5","InputCorrespondence","_ref6","CheckboxIsCorp","handleCheckboxIsCorpBtnClick","faMale","faUsers","active","CheckboxIsPayed","handleCheckboxIsPayBtnClick","faHandHoldingUsd","faCheckCircle","CustomDropdown","onToggle","onChangeValue","dropdownOpen","Dropdown","DropdownToggle","caret","DropdownMenu","DropdownItem","InputFormNoteQuickAdd","updateNoteId","AddInputs_InputName","AddInputs_InputPhone","AddInputs_InputEmail","AddInputs_InputLinkedin","AddInputs_InputWebsite","AddInputs_InputCorrespondence","CheckboxIsCorp_CheckboxIsCorp","Dropdown_CustomDropdown","CheckboxIsPayed_CheckboxIsPayed","OrderingHeaderTable","onOrderNotes","searchingProp","_useState","useState","_useState2","slicedToArray","stateOrder","setStateOrder","_useState3","_useState4","isOrderingName","setIsOrderingName","_useState5","_useState6","searching","setSearching","onBtnClickOrderingName","ordername","order","newordername","is_ordering_name","charAt","indexOf","includes","useEffect","searchtext","faLongArrowAltDown","faExchangeAlt","faTimes","OrderingBodyTable","onSelectForEdit","onToggleModalDelete","scope","prevLink","location","owner","owner_username","title","handleValidation","fields","trim","lastAtPos","lastIndexOf","lastDotPos","Notes","resetForm","addNew","modal","resetSearch","searchNotes","selectForEdit","updateNoteIndex","selectForDelete","deleteNote","prevState","toggleModal","toggleModalDelete","handleChange","_this$setState","target","defineProperty","changeValue","currentTarget","textContent","loadMorePosts","onCheckboxIsCorpBtnClick","onCheckboxIsPayBtnClick","dataFromCallback","mapped","item","join","orderNotes","submitNote","validation_errors","addNote","updateNote","count","previous","Array","isArray","nextForDelete","lastChar","parseInt","Form","InputFormNoteQuickAdd_InputFormNoteQuickAdd","_this$state2","faPlusSquare","renderModal","Modal_ModalDelete","CustomInput","inline","faSearch","striped","OrderingHeaderTable_OrderingHeaderTable","OrderingBodyTable_OrderingBodyTable","renderNotes","body","method","noteId","DatePickLastCall","handleChangeDate","handleAddCallClick","handleResetCallClick","last_call","is_valid_date","moment","isValid","react_datepicker_es","selected","defaultFormat","toDate","date","showTimeSelect","timeFormat","timeIntervals","dateFormat","timeCaption","FileDrop","acceptedFiles","rejectedFiles","onSelectDrop","dropProperties","documents","drop_properties","split","faFileUpload","InputFormNoteDetail","add_call","DatePickLastCall_DatePickLastCall","Atoms_FileDrop_FileDrop","DetailPreviewTable","Buttons_EditButton","format","NoteDetail","changeDate","getData","onAddCallClick","Date","onResetCallClick","updateDetailNote","fetchDetailNote","detailed","InputFormNoteDetail_InputFormNoteDetail","Buttons_SaveButton","Container","fluid","Row","DetailPreviewTable_DetailPreviewTable","Accept","toISOString","InputFormNoteAdd","NoteNew","addDetailNote","redirectToNewPage","doneLoading","Redirect","Form_default","InputFormNoteAdd_InputFormNoteAdd","Buttons_ClearButton","Payments","fetchPaymentsLead","newstate","true_investors","converted","processed","rejected","count_payed","payed","price_all","price_payed","prices","Math","ceil","price","paymentsUtil","total","renderPayments","MainContent","Switch","Route","exact","path","Landing_Landing","Templates_Login","auth_Logout","auth_Signup","auth_AccountActivation","SignupDone_SignupDone","auth_PasswordReset","PasswordResetDone_PasswordResetDone","auth_PasswordResetConfirm","UserProfileEdit","App","components_Header","lib","hideProgressBar","position","autoClose","removeCloseButton","components_MainContent","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","URL","process","origin","addEventListener","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","getItem","ReactDOM","render","es","BrowserRouter","App_App","document","getElementById"],"mappings":"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","file":"js/main.a31129d3.chunk.js","sourcesContent":["'use strict';\n\nif (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where React gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes React's erratic future behavior.\n  require('promise/lib/rejection-tracking').enable();\n\n  window.Promise = require('promise/lib/es6-extensions.js');\n} // fetch() polyfill for making API calls.\n\n\nrequire('whatwg-fetch'); // Object.assign() is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\n\n\nObject.assign = require('object-assign'); // In tests, polyfill requestAnimationFrame since jsdom doesn't provide it yet.\n// We don't polyfill it in the browser--this is user's responsibility.\n\nif (process.env.NODE_ENV === 'test') {\n  require('raf').polyfill(global);\n}","const initialState = [{noteitems: [], \n                       loading: true\n                    }]\n\nexport default function notes(state=initialState, action) {\n    //собрать все массивы с ключами noteitems и объединить в один массив\n    let noteList = state.map(a => a.noteitems).reduce((a, b) => [...a, ...b], []).slice();\n\n    switch (action.type) {\n\n        case 'FETCH_NOTES':\n            //удаление дубликатов\n            noteList = noteList.filter((noteList, index, self) => self.findIndex(t => t.created_at === noteList.created_at && t.id === noteList.id) === index)\n            \n            return [                    \n                    {...state[state.length-1],\n                    noteitems: noteList,\n                    loading: false,\n                    fetching: false,\n                    // deleted: false\n                    // ...action.notes\n                    },\n                ];\n        case 'SEARCH_NOTES':\n        \n            return [                    \n\n                    {...state,\n                    ...action.notes,\n                    loading: false,},\n                ];\n\n        case 'ORDER_NOTES':\n       \n            return [                    \n\n                    {...state,\n                    ...action.notes,\n                    loading: false,},\n                ];\n\n\n        case 'ADD_NOTE':\n            // Добавляем заметку\n            noteList.unshift(action.note);\n            // Удаляем нижнюю\n            // if (noteList.length > 0) {\n            //     noteList.pop();\n            // }\n\n            return [\n                        //берем последний стейт и добавляем к нему общий массив\n                        {...state[state.length-1],\n                            noteitems: noteList,\n                            loading: false,},\n\n                    ];\n\n        case 'UPDATE_NOTE':\n\n            //Поиск в общем массиве элемента по id и index (2мерный массив)\n            let selectById = state[action.index].noteitems[action.id].id\n            let indexEdit = noteList.findIndex(p => p.id === selectById) \n\n            let noteToUpdate = noteList[indexEdit]\n            noteToUpdate.text = action.note.text;\n            noteToUpdate.phone = action.note.phone;\n            noteToUpdate.status = action.note.status;\n            noteToUpdate.is_corporate = action.note.is_corporate;\n            noteToUpdate.is_payed = action.note.is_payed;\n            noteToUpdate.email = action.note.email;\n            noteToUpdate.linkedin_profile = action.note.linkedin_profile;\n            noteToUpdate.website = action.note.website;\n            noteToUpdate.correspondence = action.note.correspondence;\n            noteList.splice(indexEdit, 1, noteToUpdate);\n            return [\n                    {...state[state.length-1],\n                        noteitems: noteList,\n                        loading: false,},\n                    ];\n\n        case 'DELETE_NOTE':\n            //Поиск в общем массиве элемента по id и index (2мерный массив)\n            let deleteById = state[action.id].noteitems[action.index].id\n            let indexDel = noteList.findIndex(p => p.id === deleteById)                      \n            noteList.splice(indexDel, 1);\n            return [\n                        {...state[state.length-1],\n                            noteitems: noteList,\n                            loading: false,\n                            nextafterdelete: state[0].next,\n                            deleted: true\n                        }\n                    ];\n\n        default:\n            \n    }\n    return state;\n}\n","export const AuthTypes = {\n    LOGIN: \"LOGIN\",\n    LOGOUT: \"LOGOUT\",\n    CHANGE_PASSWORD: \"CHANGE_PASSWORD\",\n    USER_PROFILE: \"USER_PROFILE\",\n    // WITH_ERROR: \"WITH_ERROR\"\n};","import {combineReducers} from \"redux\";\nimport { reducer as formReducer } from \"redux-form\";\n\nimport notesReducer from \"./notesReducer\";\nimport noteDetailReducer from \"./noteDetailReducer\";\nimport userDetailReducer from \"./userDetailReducer\";\nimport authReducer from \"./authReducer\";\nimport paymentsReducer from \"./paymentsReducer\";\n// import { routerReducer } from 'react-router-redux'\n\nconst rootReducer = combineReducers({\n    form: formReducer,\n    auth: authReducer,\n    notes: notesReducer,\n    detail: noteDetailReducer,\n    lead: paymentsReducer,\n    userdetail: userDetailReducer,\n    // routing: routerReducer\n});\n\nexport default rootReducer;\n\n\n","import { AuthTypes } from \"../constants/actionTypes\";\n\nexport default function(state = {loading: true}, action) {\n    switch(action.type) {\n        case AuthTypes.LOGIN:\n            return { ...state, authenticated: true, token: action.payload};\n        case AuthTypes.LOGOUT:\n            return { ...state, authenticated: false, token: null};\n        case AuthTypes.USER_PROFILE:\n            return { ...state, user: action.payload, loading: false};\n        // case AuthTypes.WITH_ERROR:\n        //     return { ...state, error: action.payload};\n        default:\n        \t// will NOT execute because of the line preceding the switch.\n    }\n    return state;\n}","export default function noteDetailReducer(state = {loading: true, updated: false, hasError: false, errors: {}}, action) {\n    switch(action.type) {\n\n        case 'FETCH_DETAIL_NOTE':\n            return { ...state, ...action.detail, loading: false, hasError: false, errors: {}};\n        case 'UPDATE_DETAIL_NOTE':\n            return { ...state, ...action.detail, loading: false, updated: true, hasError: false, errors: {}};\n        case 'ADD_DETAIL_NOTE':\n            return { ...state, ...action.detail, loading: false, hasError: false, errors: {}};\n\n        case 'INVESTOR_NOT_FOUND':\n            return {...state, \n                hasError: true,\n                errors: {page: \"Investor not found\"},\n                loading: false,\n            };\n        case 'AUTHENTICATION_ERROR':\n            return {...state, \n                hasError: true,\n                errors: {page: \"Authentication Error\"},\n                loading: false,\n            };\n        default:\n          // will NOT execute because of the line preceding the switch.\n    }\n    return state;\n}","export default function paymentsReducer(state = {leads: \"\", loading: true, loaded: false}, action) {\n    switch(action.type) {\n        case 'FETCH_PAYMENTS_LEAD':\n            return { ...state, leads: [...action.leads], loading: false, loaded: true }\n        case 'LEAD_NOT_FOUND':\n            return {...state, loading: false, error: \"Not found\"};\n        default:\n          // will NOT execute because of the line preceding the switch.\n    }\n    return state;\n}","export default function userDetailReducer(state = {loading: true}, action) {\n    switch(action.type) {\n\n        case 'FETCH_USER_DETAIL':\n            return { ...state, \n                ...action.userdetail, \n                hasError: false,\n                errors: {},\n                loading: false,\n            };\n        // case 'UPDATE_DETAIL_NOTE':\n        //     return { ...state, ...action.detail, loading: false, updated: true};\n        // case 'ADD_DETAIL_NOTE':\n        //     return { ...state, ...action.detail, loading: false};\n\n        case 'USER_NOT_FOUND':\n            return {...state, \n                hasError: true,\n                errors: {page: \"User not found\"},\n                loading: false,\n            };\n\n        default:\n          // will NOT execute because of the line preceding the switch.\n    }\n    return state;\n}","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from '../reducers';\n\nfunction configureStore(initialState) {\n    let createStoreWithMiddleware;\n\n    const logger = createLogger();\n    const middleware = applyMiddleware(thunk, logger);\n\n    createStoreWithMiddleware = compose(\n        middleware\n    );\n\n    return createStoreWithMiddleware(createStore)(rootReducer, initialState);\n}\n\nlet store = configureStore();\n\nexport default store;","export let ROOT_URL = \"http://localhost:8000/\";\n\n// FOR PRODUCTION URLS\nconst HOMEPAGE_URL = require('../../package.json').homepage;\n\nif (process.env.NODE_ENV === \"production\") {\n\tROOT_URL = HOMEPAGE_URL\n}\n\nexport const AuthUrls = {\n    LOGIN: `${ROOT_URL}rest-auth/login/`,\n    SIGNUP: `${ROOT_URL}rest-auth/registration/`,\n    CHANGE_PASSWORD: `${ROOT_URL}rest-auth/password/change/`,\n    RESET_PASSWORD: `${ROOT_URL}rest-auth/password/reset/`,\n    RESET_PASSWORD_CONFIRM: `${ROOT_URL}rest-auth/password/reset/confirm/`,\n    USER_ACTIVATION: `${ROOT_URL}rest-auth/registration/verify-email/`,\n    USER_PROFILE: `${ROOT_URL}rest-auth/user/`\n};","export function getUserToken(state) {\n    return state.auth.token;\n}","import axios from \"axios\";\nimport { SubmissionError } from 'redux-form';\n// import { actions as notifActions } from 'redux-notifications';\nimport { AuthTypes } from \"../constants/actionTypes\";\nimport { AuthUrls } from \"../constants/urls\";\nimport store from \"../store\";\nimport { getUserToken } from \"../utils/authUtils\";\nimport { toast } from 'react-toastify';\n\n// const { notifSend } = notifActions;\nexport function authLogin(token) {\n    return {\n        type: AuthTypes.LOGIN,\n        payload: token,\n    };\n}\n\nexport function loginUser(formValues, dispatch, props) {\n        const loginUrl = AuthUrls.LOGIN;\n\n        return axios.post(loginUrl, formValues).then((response) => {\n            // If request is good...\n            // Update state to indicate user is authenticated\n            const token = response.data.key; \n\n            dispatch(authLogin(token));\n            localStorage.setItem(\"token\", token);\n\n            // redirect to the route '/'\n            props.history.push(\"/investors\");\n            // to getUserProfile in Header\n            dispatch(getUserProfile())\n        }).catch(error => {            \n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n\nexport function logoutUser() {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"csrftoken\");\n    return {\n        type: AuthTypes.LOGOUT\n    };\n}\n\nexport function signupUser(formValues, dispatch, props) {\n    const signupUrl = AuthUrls.SIGNUP;\n\n    return axios.post(signupUrl, formValues)\n        .then((response) => {\n            // If request is good...\n            // you can login if email verification is turned off.\n            // const token = response.data.key;\n            // dispatch(authLogin(token));\n            // localStorage.setItem(\"token\", token);\n\n            // email need to be verified, so don't login and send user to signup_done page.\n            // redirect to signup done page.\n            props.history.push(\"/signup_done\");\n        })\n        .catch((error) => {\n            // If request is bad...\n            // Show an error to the user\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n\nfunction setUserProfile(payload) {\n    return {\n        type: AuthTypes.USER_PROFILE,\n        payload: payload\n    };\n}\n\nexport function getUserProfile() {\n    return function(dispatch) {\n        const token = getUserToken(store.getState());\n\n        if (token) {\n            axios.get(AuthUrls.USER_PROFILE, {\n                headers: {\n                    authorization: 'Token ' + token\n                }\n            }).then(response => {\n                dispatch(setUserProfile(response.data))\n            }).catch((error) => {\n                // If request is bad...\n                // Show an error to the user\n                console.log(error);\n                // TODO: send notification and redirect\n                const processedError = processServerError(error.response.data);\n                throw new SubmissionError(processedError);\n            });\n        }\n    };\n}\n\nexport function changePassword(formValues, dispatch, props) {\n    const changePasswordUrl = AuthUrls.CHANGE_PASSWORD;\n    const token = getUserToken(store.getState());\n\n    if (token) {\n        return axios.post(changePasswordUrl, formValues, {\n            headers: {\n                authorization: 'Token ' + token\n            }\n        })\n            .then((response) => {\n                toast.info('Password has been changed successfully')\n                // dispatch(notifSend({\n                //     message: \"Password has been changed successfully\",\n                //     kind: \"info\",\n                //     dismissAfter: 5000\n                // }));\n                // redirect to the route '/profile'\n                props.history.push(\"/profile\");\n            })\n            .catch((error) => {\n                // If request is bad...\n                // Show an error to the user\n                const processedError = processServerError(error.response.data);\n                throw new SubmissionError(processedError);\n            });\n    }\n}\n\nexport function resetPassword(formValues, dispatch, props) {\n    const resetPasswordUrl = AuthUrls.RESET_PASSWORD;\n\n    return axios.post(resetPasswordUrl, formValues)\n        .then(response => {\n            // redirect to reset done page\n            props.history.push(\"/reset_password_done\");\n        }).catch((error) => {\n            // If request is bad...\n            // Show an error to the user\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n\nexport function confirmPasswordChange(formValues, dispatch, props) {\n    const { uid, token } = props.match.params;\n    const resetPasswordConfirmUrl = AuthUrls.RESET_PASSWORD_CONFIRM;\n    const data = Object.assign(formValues, { uid, token });\n\n    return axios.post(resetPasswordConfirmUrl, data)\n        .then(response => {\n            toast.info('Password has been reset successfully, please log in')\n            props.history.push(\"/login\");\n        }).catch((error) => {\n            // If request is bad...\n            // Show an error to the user\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n\nexport function activateUserAccount(formValues, dispatch, props) {\n    const { key } = props.match.params;\n    const activateUserUrl = AuthUrls.USER_ACTIVATION;\n    const data = Object.assign(formValues, { key });\n\n    return axios.post(activateUserUrl, data)\n        .then(response => {\n            toast.info('Your account has been activated successfully, please log in')\n            props.history.push(\"/login\");\n        }).catch((error) => {\n            // If request is bad...\n            // Show an error to the user\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n\nexport function updateUserProfile(formValues, dispatch, props) {\n    const token = getUserToken(store.getState());\n\n    let object = formValues\n\n    // Fix problem with update profile without upload avatar\n    const formData = new FormData(); \n    if (typeof formValues.avatar === 'string' || \n        formValues.avatar instanceof String ||\n        formValues.avatar === null) {\n        Object.keys(object).forEach(key => \n            (key !== \"avatar\") && formData.append(key, object[key])      \n        );\n    } else {\n        Object.keys(object).forEach(key => \n            formData.append(key, object[key])      \n        );\n    }\n\n    // adding \"Content-Type\": \"multipart/form-data\", for images\n    return axios.patch(AuthUrls.USER_PROFILE, formData, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\",\n                authorization: 'Token ' + token\n            }\n        })\n        .then(response => {\n            toast.info('Your profile has been updated successfully')\n            props.history.push(\"/profile\");\n        }).catch((error) => {\n            // If request is bad...\n            // Show an error to the user\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n// util functions\nfunction processServerError(error) {\n\n    return  Object.keys(error).reduce(function(newDict, key) {\n        if (key === \"non_field_errors\") {\n            newDict[\"_error\"].push(error[key]);\n        } else if (key === \"token\") {\n            // token sent with request is invalid\n            newDict[\"_error\"].push(\"The link is not valid any more.\");\n        } else {\n            newDict[key] = error[key];\n        }\n        return newDict\n    }, {\"_error\": []});\n}","import React from \"react\";\nimport './styles.scss'\n\nexport const LoadScreen = () => (\n  <div className=\"loadscreen\">\n    <div className=\"load-9\">\n      <div className=\"spinner\">\n        <div className=\"bubble-1\"></div>\n        <div className=\"bubble-2\"></div>\n      </div>\n    </div>\n  </div>\n)\n\nexport const LoadObject = ({objectclass}) => (\n  <div className={`${objectclass}`}>\n    <div className=\"load-3\">\n    <div className=\"line\"></div>\n    <div className=\"line\"></div>\n    <div className=\"line\"></div>\n    </div>\n  </div>\n)\n","import React from \"react\";\nimport { toast } from 'react-toastify';\n\nexport const renderUser = (user) => {\n  if (user) {\n      return (\n        <div className=\"user\">\n            {user.avatar ? <img src={`${user.avatar}`} className=\"user-avatar\" alt=\"Avatar\" /> : \"\"}            \n            <span className=\"user-username\">{user.username}</span>\n        </div>\n      );\n  }\n};\n\nexport const renderField = ({ input, label, type, meta: { touched, error } }) => (\n    <div>\n        <label>{label}</label>\n        <div>\n            <input className=\"form-control\" {...input} type={type}/>\n        </div>\n        {touched && ((error && <div className=\"alert alert-danger p-1\"><small>{error}</small></div>))}\n    </div>\n);\n\nexport const renderTextAreaField = ({ input, label, type, meta: { touched, error } }) => (\n    <div>\n        <label>{label}</label>\n        <div>\n            <textarea className=\"form-control\" {...input} type={type} />\n        </div>\n        {touched && ((error && <div className=\"alert alert-danger p-1\"><small>{error}</small></div>))}\n    </div>\n);\nexport const renderImageField = ({ input, label, type, meta: { touched, error } }) => (\n    <div>\n        <label>{label}</label>\n        <div>\n            <input className=\"form-control\" {...input} type={type}/>\n        </div>\n        {touched && ((error && <div className=\"alert alert-danger p-1\"><small>{error}</small></div>))}\n    </div>\n);\nexport const renderError = (errorMessages) => {\n    if ( errorMessages ) {\n        if (JSON.stringify(errorMessages)!==\"[]\") {\n            toast.error(errorMessages[0][0])          \n        } else {\n            toast.error(\"Error...\")\n        }  \n    } \n};\n","import React from 'react'\nimport { Link } from \"react-router-dom\";\nimport NavItem from 'reactstrap/lib/NavItem';\nimport { LoadObject } from '../../Organisms/LoadScreen/LoadScreen'\nimport { renderUser } from \"../../../../utils/renderUtils\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\n\nexport const NavigationLink = ({ \n\turltext, customclass\n  }) => {\n\n  \tconst url = urltext.toLowerCase()\n    return (               \n    \t\t<NavItem key={`/${url}`}>\n    \t\t\t<Link className={`nav-link ${customclass}`} \n    \t\t\t  to={{\n\t\t\t    \t  pathname: `/${url}`,\n      \t\t\t\t  state: {fromDashboard: false}\n      \t\t\t  }}>\n      \t\t\t  \t{ urltext }\n    \t\t\t</Link>\n    \t\t</NavItem>\n        )    \n}\n\nexport const NavigationUserLink = ({ \n\turltext, customclass, user\n  }) => {\n\n  \tconst url = urltext.toLowerCase()\n\n    return (               \n    \t\t<NavItem key={`/${url}`}>\n    \t\t\t<Link className={`nav-link ${customclass}`} \n    \t\t\t  to={{\n\t\t\t    \t  pathname: `/${url}`,\n      \t\t\t\t  state: {fromDashboard: false}\n      \t\t\t  }}>\n      \t\t\t  \t{user ? renderUser(user) : <LoadObject objectclass=\"loaduser\"/>}\n    \t\t\t</Link>\n    \t\t</NavItem>\n        )    \n}\n\nexport const HomeButton = () => (\n\t<Link className=\"btn btn-outline-info rounded-0 button-icon\"\n\t\trole=\"button\" \n\t\tto={{\n\t\t  \tpathname: `/investors`,\n\t\t\tstate: {fromDashboard: false}\n\t\t  }}>\n\t\t  \t<FontAwesomeIcon icon={faHome} color=\"info\"/>\n\t</Link>\n);\n\nexport const BrandButton = () => (\n    <Link className=\"navbar-brand\"\n      to={{\n          pathname: `/`,\n          state: {fromDashboard: false}\n      }}>\n        Lead Platform\n    </Link>\n\n);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n// import { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  Nav,\n    } from 'reactstrap';\n\nimport { NavigationLink, NavigationUserLink, BrandButton } from './general/Atoms/Links/Links'\nimport { getUserProfile } from \"../actions/authActions\";\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            collapsed: true\n        };\n    }\n    toggleNavbar = () => {\n        this.setState({\n            collapsed: !this.state.collapsed\n        });\n    }\n\n    static propTypes = {\n        authenticated: PropTypes.bool,\n        getUserProfile: PropTypes.func.isRequired,\n        user: PropTypes.object\n    };\n    componentWillMount() {\n        this.props.getUserProfile();\n    } \n\n    renderLinks() {\n        if (this.props.authenticated) {\n            const { user } = this.props\n            return (\n                <>\n                    <Nav navbar className=\"navbar-links\">\n                        <NavigationLink\n                          urltext=\"Investors\"\n                          customclass=\"nav-links__link\"\n                        />\n                        <NavigationLink\n                          urltext=\"Payments\"\n                          customclass=\"nav-links__link\"\n                        />\n                    </Nav>\n                    <Nav navbar className=\"navbar-profile\">\n                        <NavigationUserLink\n                            urltext=\"profile\"\n                            user={user}\n                            customclass=\"nav-user\"\n                        />\n                        <NavigationLink\n                            urltext=\"Logout\"\n                            customclass=\"nav-logout\"\n                        />\n                    </Nav>  \n                </>              \n            );\n        } else {\n            return (\n                    <Nav className=\"ml-auto\" navbar>\n                        <NavigationLink\n                          urltext=\"Login\"\n                          customclass=\"nav-links__link\"\n                        />\n                       <NavigationLink\n                          urltext=\"SignUp\"\n                          customclass=\"nav-links__link\"\n                        />\n                    </Nav>\n            );\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"content-navbar\">\n                <Navbar color=\"secondary\" dark expand=\"md\">\n                    <BrandButton />\n                    <NavbarToggler onClick={this.toggleNavbar} />\n                      <Collapse isOpen={!this.state.collapsed} navbar>                    \n                            {this.renderLinks()}\n                      </Collapse>\n                </Navbar>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        authenticated: state.auth.authenticated,\n        user: state.auth.user\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getUserProfile: () => {\n            return dispatch(getUserProfile());\n        }\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","export const multipleValidations = (value, validations) => {\n  const checks = validations.map(validation => validation(value))\n  const failedChecks = checks.filter(check => !!check)\n\n  return failedChecks.length === 0 ? undefined : failedChecks.join(\", \")\n}\nexport const required = value => !value || value === \"\" ? 'This field is required.' : undefined\nexport const matchPasswords = (value, allValues, props, name) => {\n  if (allValues['password']) {\n    return value !== allValues['password'] ? \"Passwords Don't Match\" : undefined\n  } else {\n    return undefined\n  }\n}\nexport const maxLength = max => value =>\n  value && value.length > max ? `Must be ${max} characters or less` : undefined\nexport const maxLength15 = maxLength(15)\nexport const minLength = min => value =>\n  value && value.length < min ? `Must be ${min} characters or more` : undefined\nexport const minLength5 = minLength(5)\nexport const letters = value =>\n  value && !/^[a-zA-Z]+$/i.test(value)\n    ? 'Must consists only letters'\n    : undefined\nexport const isurl = value =>\n  value && !/^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w.-]+)+[\\w\\-._~:/?#[\\]@!$&'()*+,;=.]+$/.test(value)\n    ? 'URL is not valid, your URL must be like \"https://example.com/\"'\n    : undefined\nexport const number = value =>\n  value && isNaN(Number(value)) ? 'Must be a number' : undefined\nexport const minValue = min => value =>\n  value && value < min ? `Must be at least ${min}` : undefined\nexport const minValue18 = minValue(18)\nexport const email = value =>\n  value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)\n    ? 'Invalid email address'\n    : undefined\nexport const tooOld = value =>\n  value && value > 65 ? 'You might be too old for this' : undefined\nexport const aol = value =>\n  value && /.+@aol\\.com/.test(value)\n    ? 'Really? You still use AOL for your email?'\n    : undefined\nexport const alphaNumeric = value =>\n  value && /[^a-zA-Z0-9 ]/i.test(value)\n    ? 'Only alphanumeric characters'\n    : undefined\nexport const phoneNumber = value =>\n  value && !/^(0|[1-9][0-9]{9})$/i.test(value)\n    ? 'Invalid phone number, must be 10 digits'\n    : undefined","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n// import {withRouter} from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nexport default function(ComposedComponent) {\n    class Authentication extends Component {\n\n        static propTypes = {\n            history: PropTypes.object\n        };\n\n        componentWillMount() {\n            this.checkAuthentication(this.props);\n\n        }\n\n        componentWillUpdate(nextProps) {\n            this.checkAuthentication(nextProps);\n        }\n\n        checkAuthentication(props) {\n            if (!props.authenticated) {\n                this.props.history.push(\"/login\");\n            }\n        }\n\n        render() {\n            return <ComposedComponent {...this.props} />\n        }\n    }\n\n    function mapStateToProps(state) {\n\n        // provide is_staff to props\n        let is_staff = false;\n        if (state.auth.user && (state.auth.user.is_staff || state.auth.user.is_superuser)) {\n            is_staff = true;\n        }\n        return { authenticated: state.auth.authenticated, \n                is_staff: is_staff, \n            }\n    }\n    // return withRouter(connect(mapStateToProps)(Authentication));\n    return connect(mapStateToProps)(Authentication);\n}\n","import React from 'react'\nimport './styles.scss'\n\nexport const BackgroundContainer = ({header}) => (\n\t<div className=\"main-wrapper\">\n\t  <h2 className=\"main-wrapper__text\">{header}</h2>\n\t  <img className=\"main-wrapper__image\" src='/static/bundles/building.jpeg' alt=\"logo\" />  \n\t</div>\n);","import React from 'react'\nimport { BackgroundContainer } from './general/Atoms/BackgroundContainer/BackgroundContainer'\n\nexport const Landing = () => (\n    <BackgroundContainer header=\"Lead Platform based on DRF+React+Redux\"/>\n)\n\n","import React from 'react'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons'\n\nimport './styles.scss'\n\nexport const ShowPass = ({ choice, showHide }) => (\n    <span\n      onClick={showHide} className=\"password-show\">  \n      {choice === 'input' ?      \t\n      \t<FontAwesomeIcon \n      \t  icon={faEyeSlash} \n      \t  color=\"secondary\"\n      \t/>\n      :\n        <FontAwesomeIcon \n      \t  icon={faEye} \n      \t  color=\"secondary\"\n      \t/>\n      }\n    </span>\n);","import React, { Component } from \"react\";\n\nimport { reduxForm, Field, clearSubmitErrors, propTypes } from \"redux-form\";\nimport { Link } from \"react-router-dom\";\nimport { Button, } from 'reactstrap';\n\nimport { renderField, renderError} from \"../../../utils/renderUtils\";\nimport { loginUser } from \"../../../actions/authActions\";\nimport { BackgroundContainer } from '../../general/Atoms/BackgroundContainer/BackgroundContainer'\nimport { email, required } from '../../../utils/formValidators'\nimport { ShowPass } from '../Atoms/Buttons/Buttons'\n\nclass Login extends Component {\n    static propTypes = {\n        ...propTypes\n    };\n    state = { type: \"password\"}\n\n    showHide = (e) => {\n        e.preventDefault();\n\n        this.setState({\n          type: this.state.type === 'password' ? 'input' : 'password'\n        })  \n    }\n    render() {\n        const { handleSubmit, error, invalid, pristine, submitting } = this.props;\n        const { type } = this.state;\n\n        return (\n            <>\n            <BackgroundContainer header=\"\" />\n            <div className=\"row justify-content-center\">\n\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Please Log In</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"email\" label=\"Email\" component={renderField}\n                               type=\"text\" validate={[email, required]}\n                        />\n                    </fieldset>\n\n\n                    <fieldset className=\"form-group\">\n                        <ShowPass \n                            showHide={this.showHide}\n                            choice={type}\n                        />\n                        <Field name=\"password\" label=\"Password\" component={renderField}\n                               type={type} validate={[required]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        { renderError(error) }\n                        <div className=\"form-button\">\n                            <Link role=\"button\" to=\"/signup\" className=\"btn btn-outline-secondary rounded-0 form-button__part\">SignUp</Link>\n                            <Button action=\"submit\" color=\"secondary\" className=\"rounded-0 form-button__part\" disabled={invalid || pristine || submitting}>Login</Button>\n                        </div>\n                    </fieldset>\n\n                    <Link to=\"/reset_password\" className=\"text-center info-link\">forgot password?</Link>\n                </form>\n            </div>\n            </>\n        )\n    }\n}\n\nexport default reduxForm({\n    form: \"login\",\n    onSubmit: loginUser,\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('login'));\n    },\n})(Login);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport { BackgroundContainer } from '../general/Atoms/BackgroundContainer/BackgroundContainer'\n\nclass Logout extends Component {\n\n    static propTypes = {\n        logoutUser: PropTypes.func.isRequired\n    };\n\n    componentWillMount() {\n        this.props.logoutUser();\n    }\n\n    render() {\n        return (\n            <BackgroundContainer header=\"Welcome to Lead Platform. Please Login or Signup...\" />\n        );\n    }\n}\n\nexport default connect(null, { logoutUser })(Logout);","import React, { Component } from \"react\";\n// import PropTypes from \"prop-types\";\nimport { reduxForm, Field, propTypes, clearSubmitErrors } from \"redux-form\";\n// import { required } from \"redux-form-validators\"\nimport { renderField, renderError } from \"../../utils/renderUtils\";\nimport { signupUser } from \"../../actions/authActions\";\nimport { Link } from \"react-router-dom\";\nimport { Button, } from 'reactstrap';\nimport { BackgroundContainer } from '../general/Atoms/BackgroundContainer/BackgroundContainer'\nimport { email, maxLength15, minLength5, required } from '../../utils/formValidators'\n\nclass Signup extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n\n    render() {\n        const { handleSubmit, error, invalid, pristine, submitting } = this.props;\n\n        return (\n            <>\n            <BackgroundContainer header=\"\" />\n            <div className=\"row justify-content-center\">\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Sign Up</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"email\" label=\"Email\" component={renderField}\n                               type=\"text\" validate={[email, required]} />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"username\" label=\"Username\" component={renderField}\n                               type=\"text\" validate={[maxLength15, minLength5, required]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"password1\" label=\"Password\" component={renderField}\n                               type=\"password\" validate={[required,]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"password2\" label=\"Confirm Password\" component={renderField}\n                               type=\"password\" validate={[required,]}\n                        />\n                    </fieldset>\n\n                    { renderError(error) }\n\n                    <fieldset className=\"form-group\">\n                        <div className=\"form-button\">\n                            <Link role=\"button\" to=\"/login\" className=\"btn btn-outline-secondary rounded-0 form-button__part\">Login</Link>\n                            <Button action=\"submit\" color=\"secondary\" className=\"rounded-0 form-button__part\" disabled={invalid || pristine || submitting}>Sign Up</Button>\n                        </div>\n                    </fieldset>\n                </form>\n            </div>\n            </>\n        );\n    }\n}\n\n// Sync field level validation for password match\nconst validateForm = values => {\n    const errors = {};\n    const { password1, password2 } = values;\n    \n    if (password1 !== password2) {\n        errors.password2 = \"Password does not match.\"\n    }\n    return errors;\n};\n\nexport default reduxForm({\n    form: \"signup\",\n    validate: validateForm,\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('signup'));\n    },\n    onSubmit: signupUser\n})(Signup);\n","import React, { Component } from \"react\";\nimport { BackgroundContainer } from '../general/Atoms/BackgroundContainer/BackgroundContainer'\n\nexport default class SignupDone extends Component {\n    render() {\n        return (\n            <BackgroundContainer header=\"Thanks for your registration, please follow the link sent to your provided email to activate your account.\" />\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { reduxForm, propTypes, clearSubmitErrors } from \"redux-form\";\nimport { activateUserAccount } from \"../../actions/authActions\";\nimport { renderError } from \"../../utils/renderUtils\";\n\nclass AccountActivation extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Please click the button below to activate your account</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group text-center\">\n                        {renderError(error)}\n                        <button action=\"submit\" className=\"btn btn-info rounded-0\">Activate</button>\n                    </fieldset>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default reduxForm({\n    form: \"user_account_activation\",\n    onSubmit: activateUserAccount,\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('user_account_activation'));\n    },\n})(AccountActivation);\n","import React, { Component } from 'react'\nimport PropTypes from \"prop-types\";\nimport Button from 'reactstrap/lib/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowLeft, faSave, faEdit } from '@fortawesome/free-solid-svg-icons'\n\nexport class ReturnButton extends Component {\n  static contextTypes = {\n    router: PropTypes.object\n  }\n\n  render() {\n    return (               \n        <Button color=\"info\" outline className=\"rounded-0 button-icon\" role=\"button\"\n          onClick={this.context.router.history.goBack}>\n          <FontAwesomeIcon icon={faArrowLeft} color=\"secondary\"/>\n        </Button>   \n        )    \n  }\n}\n\nexport const SaveButton = () => (\n    <Button color=\"info\" className=\"rounded-0\" type=\"submit\">\n      <FontAwesomeIcon icon={faSave} color=\"secondary\"/>\n    </Button>\n);\n\nexport const ClearButton = ({onClear}) => (\n    <Button outline className=\"rounded-0\" type=\"button\"\n      onClick={onClear}\n    >\n      Clear\n    </Button>\n);\n\nexport const EditButton = ({onEdit}) => (\n    <Button color=\"info\" outline className=\"rounded-0 button-icon\" type=\"button\"\n      onClick={onEdit}\n    >\n      <FontAwesomeIcon icon={faEdit} color=\"secondary\"/>\n    </Button>\n);","import React from 'react'\nimport { Table } from 'reactstrap';\n\nimport { ReturnButton } from '../../../general/Atoms/Buttons/Buttons'\nimport { HomeButton } from '../../../general/Atoms/Links/Links'\nimport './styles.scss'\n\nexport const UserDetailTable = (userdetail) => {\n  if (userdetail) {\n    return (\n      <div className=\"mx-2 mt-2\">\n        <Table className=\"userprofile-header\">\n          <tbody>\n            <tr>\n              <th>\n                <h2>{userdetail.first_name}{\" \"}{userdetail.last_name}</h2>\n              </th>\n              <td>\n                <ReturnButton />\n                <HomeButton />\n              </td>\n            </tr>\n          </tbody>\n        </Table>\n        <Table className=\"table-userprofile\">\n          <thead>\n            <tr>\n              <td colSpan=\"2\">\n                <div className=\"avatar\"\n                    style={{ backgroundImage: `url(${userdetail.avatar})` }}>\n                </div>\n              </td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <th>Profile:</th>\n              <td>\n                {userdetail.username}\n              </td>\n            </tr>\n\n            <tr>\n              <th>Email:</th>\n              <td>{userdetail.email}</td>\n            </tr>\n            <tr>\n              <th>Website:</th>\n              <td><a className=\"table-correspondence__url\" href={`${userdetail.website}`} >{userdetail.website}</a></td>\n            </tr>                    \n            <tr>\n              <th>About:</th>\n              <td>{userdetail.about}</td>\n            </tr>\n          </tbody>\n        </Table>\n      </div>\n    )\n  } \n  return null\n\n\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getUserProfile } from \"../../../actions/authActions\";\n\nimport { LoadScreen } from '../../general/Organisms/LoadScreen/LoadScreen'\nimport { UserDetailTable } from '../Molecules/Tables/UserDetailTable'\n\nclass UserProfile extends Component {\n\n    static propTypes = {\n        getUserProfile: PropTypes.func.isRequired,\n        user: PropTypes.object,\n        loading: PropTypes.bool\n    };\n    static contextTypes = {\n        router: PropTypes.object\n    }\n    componentWillMount() {\n        this.props.getUserProfile();\n    }\n\n    renderUser() {\n        const { user } = this.props;\n\n        if (user) {\n            return (\n                <UserDetailTable \n                    {...user}\n                  />  \n            );\n        }\n        return null;\n    }\n\n    render() {\n        const {loading} = this.props\n\n        return(\n            <div>\n              {loading ?\n                <LoadScreen />\n              :\n                <div>\n                    {this.renderUser()}\n                    <hr />                \n                    <fieldset className=\"form-group\">\n                        <div className=\"form-button\">\n                            <Link to=\"/profile_edit\" className=\"btn btn-info rounded-0 form-button__part\">Update Profile</Link>\n                            <Link to=\"/change_password\" className=\"btn btn-outline-info rounded-0 form-button__part\">Change Password</Link>\n                        </div>\n                    </fieldset>\n                </div>\n              }\n          </div>               \n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        user: state.auth.user,\n        loading: state.auth.loading\n    }\n}\n\nexport default connect(mapStateToProps, { getUserProfile } )(UserProfile);","import React from 'react'\nimport { HomeButton } from '../../Atoms/Links/Links'\nimport './styles.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSpaceShuttle } from '@fortawesome/free-solid-svg-icons'\n\nexport const ErrorPage = ({errors}) => (\n    <div className=\"error-page\">\n      <div className=\"wrapper-error\"> \n        <h1>Error</h1>     \n        {errors ?  \n            <p>{errors}</p> \n          : \n            <p>Sorry, the page you are looking for doesn't exist.</p>\n        }\n        <h2>Return to <HomeButton /></h2>\n      </div>  \n      <div className=\"space\">\n        <div className=\"blackhole\"></div>\n        <FontAwesomeIcon rotation={180} className=\"ship\" icon={faSpaceShuttle} color=\"info\"/>\n      </div>\n    </div>\n)","import React, {Component} from 'react'\nimport {connect} from 'react-redux';\nimport { LoadScreen } from '../../general/Organisms/LoadScreen/LoadScreen'\nimport { ErrorPage } from '../../general/Organisms/ErrorPage/ErrorPage'\nimport * as userdetail from \"../../../actions/userDetailActions\";\nimport { UserDetailTable } from '../Molecules/Tables/UserDetailTable'\n\nclass UserProfileDetail extends Component {\n    constructor(props){\n        super(props);  \n        this.state = {\n        \tuserdetail: {},\n        \tloading: true,\n        \thasError: false      \n        }\n    }\n\n    componentDidUpdate(prevProps) {\n      if (this.props.userdetail !== prevProps.userdetail) {\n\t\tthis.setState({\n\t\t\t\tuserdetail : this.props.userdetail,\n\t\t\t\tloading: this.props.userdetail.loading,\n\t\t\t\thasError: this.props.userdetail.hasError,\n\t\t\t\terrors: this.props.userdetail.errors,\n\t\t\t\t});\n      }\n    } \n    componentDidMount(){\n      if (this.props.match){\n        const {id} = this.props.match.params\n        this.setState({\n            id: id,\n        })\n        this.props.fetchUserDetail(id)        \n      }      \n    }\n\n    renderNote() {\n        const { userdetail } = this.props;\n        const { hasError, errors } = this.state;\n\n        if (!hasError) {\n          return (\n                  <UserDetailTable \n                    {...userdetail}\n                  />             \n          );\n\n        } else {\n            return (\n                <ErrorPage \n                    errors={errors && errors.page}\n                  /> \n            );\n        }\n    }\n    render () {\n        const {loading} = this.state\n        return(\n            <div>\n              {loading ?<LoadScreen />:this.renderNote()}\n          </div>               \n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      userdetail: state.userdetail,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      fetchUserDetail: (id) => {\n          dispatch(userdetail.fetchUserDetail(id));\n      },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserProfileDetail);","import { toast } from 'react-toastify';\nexport const fetchUserDetail = (id) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        const endpoint = `/api/user/${id}/` \n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        \n        return fetch(endpoint, {headers, })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n               \n                } else {\n                    toast.error(\"Server Error...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'FETCH_USER_DETAIL', userdetail: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authentication Error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", userdetail: res.data});\n                    throw res.data;\n                } \n                else if (res.status === 404) {\n                    toast.error(\"User is not found...\")\n                    dispatch({type: \"USER_NOT_FOUND\"});\n                } else {\n                    throw res.data\n                }\n            })\n            .catch(error => {                \n                //error.redirect('/404');\n                //Handle error\n                console.log(\"error\", error);\n                // return dispatch({type: \"MESSAGE_NOT_FOUND\", detail: error});\n                // dispatch({type: \"MESSAGE_NOT_FOUND\", detail: error});\n            });\n    }\n}\n","import React, {Component} from 'react';\nimport Dropzone from 'react-dropzone';\nimport PropTypes from \"prop-types\";\n// import { Form } from 'elements';\nimport { Field } from 'redux-form';\nimport './styles.scss'\n\nconst imageMaxSize = 1000000; //bytes\n\nclass ImageDrop extends Component {\n  static propTypes = {\n    dropzone_options: PropTypes.object,\n    meta: PropTypes.object,\n    label: PropTypes.string,\n    classNameLabel: PropTypes.string,\n    input: PropTypes.object,\n    className: PropTypes.string,\n    cbFunction: PropTypes.func,\n  };\n\n  static defaultProps = {\n    className: '',\n    cbFunction: () => {},\n  };\n  state = { attached: false };\n  handleDrop = (files) => {\n\tthis.setState({attached: true})\n  }\n  render() {\n    const { className, input: { onChange }, meta: { error, touched }, label, classNameLabel, name, cbFunction } = this.props;\n\n\tlet drop_class = \"dropimage-field dropimage-field__default avatar\"\n\tlet drop_text = \"\"\n\n\tif (this.props.input.value && this.state.attached) {\n\t\tdrop_class = \"dropimage-field dropimage-field__success\";\n\t\tdrop_text = \"Press Save to Add\";\n\t} else {\n\t\tdrop_class = \"dropimage-field dropimage-field__default avatar\";\n\t\t// drop_text = \"Add Document\"\n\t} \n    return (\n      <div className={`${className}` + (error && touched ? ' has-error ' : '')}>\n        {label && <p className={classNameLabel || ''}>{label}</p>}\n        <Dropzone\n          onDrop={(f) => {\n            cbFunction(f);\n            this.handleDrop(f);\n            return onChange(f[0]);\n          }}\n          name={name}\n          maxSize={imageMaxSize}\n        >\n            {({getRootProps, getInputProps}) => (\n                <div {...getRootProps()} className={`${drop_class}`} \n                  style={{ backgroundImage: `url(${this.props.input.value})`}}>\n                    <input {...getInputProps()} />\n                    <span className=\"dropimage-field__text\">{`${drop_text}`}</span>\n                </div>\n            )}\n        </Dropzone>\n        {error && touched ? <div className=\"alert alert-danger p-1\"><small>{error}</small></div> : ''}\n      </div>\n    );\n  }\n}\nexport default props => <Field {...props} component={ImageDrop} />;","import React, { Component } from \"react\";\nimport { reduxForm, Field, propTypes, clearSubmitErrors } from \"redux-form\";\nimport { connect } from 'react-redux'\nimport { Link } from \"react-router-dom\";\n\nimport { renderField, renderTextAreaField,\n    renderError} from \"../../utils/renderUtils\";\nimport { updateUserProfile } from \"../../actions/authActions\";\nimport ImageDrop from './Atoms/ImageDrop/ImageDrop'\nimport { maxLength15, minLength5, required, letters, isurl } from '../../utils/formValidators'\n\nclass Login extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error, invalid, pristine, submitting } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Edit Profile</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"username\" label=\"Username\" component={renderField}\n                               type=\"text\" validate={[maxLength15, minLength5, required]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"first_name\" label=\"First Name\" component={renderField}\n                               type=\"text\" validate={[maxLength15, letters]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"last_name\" label=\"Last Name\" component={renderField}\n                               type=\"text\" validate={[maxLength15, letters]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"website\" label=\"Website\" component={renderField}\n                               type=\"text\" validate={[isurl]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"about\" label=\"About Yourself\" component={renderTextAreaField}\n                               type=\"text\"\n                        />\n                    </fieldset>\n                    <fieldset className=\"form-group\">\n                        <ImageDrop\n                         name=\"avatar\"\n                         label=\"Avatar:\"\n                          classNameLabel=\"file-input-label\"\n                          className=\"file-input\"\n                          dropzone_options={{\n                            multiple: false,\n                            accept: 'image/*'\n                          }}\n                        >\n                          <span>Add more</span>\n                        </ImageDrop>\n                    </fieldset>\n                    <fieldset className=\"form-group\">\n                        {renderError(error)}\n                        <div className=\"form-button\">\n                            <Link to=\"/profile\" className=\"btn btn-outline-info rounded-0 form-button__part\">Cancel</Link>\n                            <button action=\"submit\" className=\"btn btn-info rounded-0 form-button__part\" disabled={invalid || pristine || submitting}>Save</button>\n                        </div>\n                    </fieldset>\n\n                </form>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        initialValues: state.auth.user\n    }\n}\n\nexport default connect(mapStateToProps)(reduxForm({\n    form: \"update_user_profile\",\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('update_user_profile'));\n    },\n    onSubmit: updateUserProfile\n})(Login));","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, } from 'reactstrap';\nimport { reduxForm, Field, propTypes, clearSubmitErrors } from \"redux-form\";\n\nimport { changePassword } from \"../../actions/authActions\";\nimport { renderField, renderError } from \"../../utils/renderUtils\";\nimport { BackgroundContainer } from '../general/Atoms/BackgroundContainer/BackgroundContainer'\nimport { required } from '../../utils/formValidators'\n\nclass PasswordChange extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error, pristine, invalid, submitting } = this.props;\n\n        return (\n            <>\n            <BackgroundContainer header=\"\" />\n            <div className=\"row justify-content-center\">\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Change Password</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"old_password\" label=\"Old Password\" component={renderField}\n                               type=\"password\" validate={[required]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"new_password1\" label=\"New Password\" component={renderField}\n                               type=\"password\" validate={[required]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"new_password2\" label=\"Confirm New Password\" component={renderField}\n                               type=\"password\" validate={[required]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        {renderError(error)}\n                        <div className=\"form-button\">\n                            <Link to=\"/profile\" className=\"btn btn-outline-secondary rounded-0 form-button__part\">Cancel</Link>\n                            <Button action=\"submit\" color=\"secondary\" className=\"rounded-0 form-button__part\" disabled={invalid || pristine || submitting}>Submit</Button>\n                        </div>\n                    </fieldset>\n                </form>\n            </div>\n            </>\n        );\n    }\n}\n\n// Sync field level validation for password match\nconst validateForm = values => {\n    const errors = {};\n    const { new_password1, new_password2 } = values;\n    if (new_password1 !== new_password2) {\n        errors.new_password2 = \"Password does not match.\"\n    }\n    return errors;\n};\n\nexport default reduxForm({\n    form: \"change_password\",\n    onSubmit: changePassword,\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('change_password'));\n    },\n    validate: validateForm\n})(PasswordChange);\n","import React, { Component } from \"react\";\nimport { reduxForm, Field, propTypes, clearSubmitErrors } from \"redux-form\";\n\nimport { renderField, renderError} from \"../../utils/renderUtils\";\nimport { resetPassword } from \"../../actions/authActions\";\nimport { BackgroundContainer } from '../general/Atoms/BackgroundContainer/BackgroundContainer'\n\nimport { email, required } from '../../utils/formValidators'\nclass PasswordReset extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error, pristine, invalid, submitting } = this.props;\n\n        return (\n            <>\n            <BackgroundContainer header=\"\" />\n            <div className=\"row justify-content-center\">\n\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Reset Your Password</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"email\" label=\"Please enter your email\" component={renderField}\n                               type=\"text\" validate={[email, required]}\n                        />\n                    </fieldset>\n                    <fieldset className=\"form-group text-center\">\n                        {renderError(error)}\n                        <button action=\"submit\" className=\"btn btn-secondary rounded-0\" disabled={invalid || pristine || submitting}>Submit</button>\n                    </fieldset>\n                </form>\n            </div>\n            </>\n        )\n    }\n}\n\nexport default reduxForm({\n    form: \"password_reset\",\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('password_reset'));\n    },\n    onSubmit: resetPassword,\n})(PasswordReset);\n","import React, { Component } from \"react\";\nimport { BackgroundContainer } from '../general/Atoms/BackgroundContainer/BackgroundContainer'\n\nexport default class PasswordResetDone extends Component {\n    render() {\n        return (\n            <BackgroundContainer header=\"An password reset email has been sent to your email. Please follow the link to reset your password.\" />\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { reduxForm, Field, propTypes, clearSubmitErrors } from \"redux-form\";\n\nimport { confirmPasswordChange } from \"../../actions/authActions\";\nimport { renderField, renderError } from \"../../utils/renderUtils\";\nimport { BackgroundContainer } from '../general/Atoms/BackgroundContainer/BackgroundContainer';\nimport { required } from '../../utils/formValidators'\n\nclass PasswordResetConfirm extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error, invalid, pristine, submitting } = this.props;\n\n        return (\n            <>\n            <BackgroundContainer header=\"\" />\n            <div className=\"row justify-content-center\">\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Create New Password</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"new_password1\" label=\"New Password\" component={renderField}\n                               type=\"password\" validate={[required]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"new_password2\" label=\"Confirm New Password\" component={renderField}\n                               type=\"password\" validate={[required]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group text-center\">\n                        {renderError(error)}\n                        <button action=\"submit\" className=\"btn btn-info rounded-0\" disabled={invalid || pristine || submitting}>Submit</button>\n                    </fieldset>\n                </form>\n            </div>\n            </>\n        );\n    }\n}\n\n// Sync field level validation for password match\nconst validateForm = values => {\n    const errors = {};\n    const { new_password1, new_password2 } = values;\n    if (new_password1 !== new_password2) {\n        errors.new_password2 = \"Password does not match.\"\n    }\n    return errors;\n};\n\nexport default reduxForm({\n    form: \"password_reset_confirm\",\n    onSubmit: confirmPasswordChange,\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('password_reset_confirm'));\n    },\n    validate: validateForm\n})(PasswordResetConfirm);\n","import { toast } from 'react-toastify';\n\nexport const fetchNotes = (nextEndpoint) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        let endpoint = '/api/investors/' \n\n        if (nextEndpoint !== undefined && nextEndpoint !== null) {\n          endpoint = nextEndpoint\n        }\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        let {notes} = getState();\n        return fetch(endpoint, {headers, })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    toast.error(\"Error! Can't load investors...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            // getState().notes[0].concat(res.data)}\n            .then(res => {\n                if (res.status === 200) {               \n                    return dispatch({type: 'FETCH_NOTES', notes: notes.push(res.data), loading: false});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authetication error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\nexport const searchNotes = (searchtext) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        let endpoint = '/api/investors/' \n        if (searchtext !== undefined && searchtext !== null) {\n          endpoint = `/api/investors/?search=${searchtext}`\n        }\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        return fetch(endpoint, {headers, method: \"GET\", })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        // console.log(res)\n                        return {status: res.status, data};\n                    })\n                } else {\n                    toast.error(\"Error! Can't load investors...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'SEARCH_NOTES', notes: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authetication error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\nexport const orderNotes = (order) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        let endpoint = '/api/investors/' \n        if (order !== undefined && order !== null) {\n          endpoint = `/api/investors/?ordering=${order}`\n        }\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        return fetch(endpoint, {headers, method: \"GET\", })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        // console.log(res)\n                        return {status: res.status, data};\n                    })\n                } else {\n                    toast.error(\"Error! Can't load investors...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'ORDER_NOTES', notes: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authetication error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\nexport const addNote = (text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n\n        let body = JSON.stringify({text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence });\n        return fetch(\"/api/investors/\", {headers, method: \"POST\", body})\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    toast.error(\"Error! Can't load investors...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 201) {\n                    toast.info(\"Investor \"+res.data.text+\" added\")\n                    return dispatch({type: 'ADD_NOTE', note: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authetication error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\n\nexport const updateNote = (index, id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence) => {\n    return (dispatch, getState) => {\n\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n\n        let body = JSON.stringify({text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence });\n        // console.log(\"id\", id, \"index\", index)\n        let noteId = getState().notes[index].noteitems[id].id;\n\n        return fetch(`/api/investors/${noteId}/`, {headers, method: \"PUT\", body})\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    toast.error(\"Error! Can't load investors...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 200) {\n                    toast.info(\"Investor \"+res.data.text+\" edited\")\n                    return dispatch({type: 'UPDATE_NOTE', note: res.data, index, id});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authetication error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\n\nexport const deleteNote = (id, index) => {\n    return (dispatch, getState) => {\n\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        let noteId = getState().notes[id].noteitems[index].id;\n\n        return fetch(`/api/investors/${noteId}/`, {headers, method: \"DELETE\"})\n            .then(res => {\n                if (res.status === 204) {\n                    toast.info(\"Investor deleted\")\n                    return {status: res.status, data: {}};\n                } else if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 204) {\n                    // toast.info(\"Investor deleted\")\n                    return dispatch({type: 'DELETE_NOTE', id, index});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authetication error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n            .then(res => {dispatch(fetchNotes())})\n    }\n}\n","import React from 'react'\nimport {   \n  FormGroup, Button, Modal, \n  ModalHeader, ModalBody, \n  ModalFooter, } from 'reactstrap';\nimport './styles.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\n\nexport const ModalDelete = ({ \n      onSelectForDelete,\n      modaldelete, text, index, id, toggle   }) => {\n    return (\n      <div>\n        <Modal isOpen={modaldelete} toggle={toggle}>\n            <ModalHeader color=\"info\">Are you sure?</ModalHeader>           \n            <ModalBody>Delete <b>{text}</b> Investor?</ModalBody>\n            <ModalFooter> \n              <FormGroup row>                   \n              <Button className=\"rounded-0\" color=\"info\" onClick={() => onSelectForDelete(index, id)}><FontAwesomeIcon icon={faTrash} color=\"white\"/></Button>              \n              <Button className=\"rounded-0\" onClick={toggle}>Cancel</Button>\n              </FormGroup>\n            </ModalFooter>\n        </Modal> \n      </div>\n    )\n}\n","import React from 'react'\nimport { FormText,  \n  FormGroup, Label, Input,  } from 'reactstrap';\n\n// REQUIRED FIELDS\nexport const InputName = ({ \n  onInputChange,\n  text, errors\n  }) => {\n\n    return (\n      <div>\n        <FormGroup>\n          <Label>Name <span className=\"text-danger\">*</span></Label>\n          <Input\n            name=\"text\"\n            value={text || ''}\n            placeholder=\"Enter name...\"\n            onChange={onInputChange}\n            required />\n            {errors.text ? <FormText color=\"danger\">{errors.text}</FormText>: \"\"}\n        </FormGroup>\n      </div>\n    )\n}\nexport const InputPhone = ({ \n  onInputChange,\n  phone, errors\n  }) => {\n    return (\n      <div>\n        <FormGroup>\n          <Label>Phone <span className=\"text-danger\">*</span></Label>\n          <Input\n            name=\"phone\"\n            value={phone || ''}\n            placeholder=\"Enter phone...\"\n            onChange={onInputChange}\n            required />\n            {errors.phone ? <FormText color=\"danger\">{errors.phone}</FormText>: \"\"}\n        </FormGroup>\n      </div>\n    )\n}\nexport const InputEmail = ({ \n  onInputChange,\n  email, errors\n  }) => {\n\n    return (\n      <div>\n        <FormGroup>\n          <Label>Email <span className=\"text-danger\">*</span></Label>\n          <Input\n            name=\"email\"\n            value={email || ''}\n            placeholder=\"Enter email...\"\n            onChange={onInputChange}\n            required />\n            {errors.email ? <FormText color=\"danger\">{errors.email}</FormText>: \"\"}\n        </FormGroup>\n      </div>\n    )    \n}\nexport const InputLinkedin = ({ \n  onInputChange,\n  linkedin_profile, errors\n  }) => {\n\n    return (\n      <div>\n        <FormGroup>\n          <Label>Linkedin <span className=\"text-danger\">*</span></Label>\n          <Input\n            name=\"linkedin_profile\"\n            value={linkedin_profile || ''}\n            placeholder=\"Enter linkedin url...\"\n            onChange={onInputChange}\n            required />\n            {errors.linkedin_profile ? <FormText color=\"danger\">{errors.linkedin_profile}</FormText>: \"\"}\n        </FormGroup>\n      </div>\n    )    \n}\n// NOT REQUIRED FIELDS\nexport const InputWebsite = ({ \n  onInputChange,\n  website, errors\n  }) => {\n    return (\n      <div>\n        <FormGroup>\n          <Label>Website</Label>\n          <Input\n            name=\"website\"\n            value={website || ''}\n            placeholder=\"Enter website url...\"\n            onChange={onInputChange}\n            />\n            {errors.website ? <FormText color=\"danger\">{errors.website}</FormText>: \"\"}\n        </FormGroup>\n      </div>\n    )    \n}\nexport const InputCorrespondence = ({ \n  onInputChange,\n  correspondence, errors\n  }) => {\n    return (\n      <div>\n        <FormGroup>\n          <Label>Correspondence</Label>\n          <Input\n            name=\"correspondence\"\n            value={correspondence || ''}\n            placeholder=\"Enter correspondence...\"\n            onChange={onInputChange}\n            type='textarea'\n            />\n            {errors.correspondence ? <FormText color=\"danger\">{errors.correspondence}</FormText>: \"\"}\n        </FormGroup>\n      </div>\n    )    \n}","import React from 'react'\nimport { Button, \n  FormGroup, Label, } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMale, faUsers, \n       } from '@fortawesome/free-solid-svg-icons'\n\n// Checkbox is corporate\nexport const CheckboxIsCorp = ({ \n  handleCheckboxIsCorpBtnClick,\n  is_corporate\n  }) => {\n    return (\n      <div>\n        <FormGroup>\n            <Label>Individual <FontAwesomeIcon icon={faMale} color={!is_corporate ? \"black\": \"grey\"}/> / Corporate <FontAwesomeIcon icon={faUsers} color={is_corporate ? \"black\": \"grey\"}/></Label>\n            <Button className=\"btn btn-block\" onClick={handleCheckboxIsCorpBtnClick} active={is_corporate}>{is_corporate ? 'Change to Individual' : 'Change to Corporate'}</Button>\n        </FormGroup>\n      </div>\n    )    \n}","import React from 'react'\nimport { Button, \n  FormGroup, Label, } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHandHoldingUsd, faCheckCircle, \n       } from '@fortawesome/free-solid-svg-icons'\n\n// Checkbox is corporate\nexport const CheckboxIsPayed = ({ \n  handleCheckboxIsPayBtnClick,\n  status, is_staff, is_payed\n  }) => {\n    return (\n      <div>\n        {status !== \"Candidate\" && is_staff ?\n          <FormGroup>\n              <Label>New <FontAwesomeIcon icon={faHandHoldingUsd} color={!is_payed ? \"black\": \"grey\"}/> / Payed <FontAwesomeIcon icon={faCheckCircle} color={is_payed ? \"black\": \"grey\"}/></Label>\n              <Button className=\"btn btn-block\" onClick={handleCheckboxIsPayBtnClick} active={is_payed}>{is_payed ? 'Change to New' : 'Change to Payed'}</Button>\n          </FormGroup>\n          : null} \n      </div>\n    )    \n}","import React from 'react'\nimport { \n  FormGroup, Label, Dropdown, \n  DropdownToggle, \n  DropdownMenu, DropdownItem, } from 'reactstrap';\n\n// Checkbox is corporate\nexport const CustomDropdown = ({ \n  onToggle, onChangeValue,\n  status, dropdownOpen\n  }) => {\n\n    return (\n      <div>\n        <FormGroup>\n          <Label>Status</Label>\n          <Dropdown className=\"form-group\" isOpen={dropdownOpen} toggle={onToggle}>\n            <DropdownToggle className=\"btn-block\" caret>\n              {status || ''}\n            </DropdownToggle>\n            <DropdownMenu className=\"btn-block\">\n              <DropdownItem onClick={onChangeValue}>Candidate</DropdownItem>\n              <DropdownItem onClick={onChangeValue}>Processed</DropdownItem>\n              <DropdownItem onClick={onChangeValue}>Converted</DropdownItem>\n              <DropdownItem onClick={onChangeValue}>Rejected</DropdownItem>\n            </DropdownMenu>\n          </Dropdown>\n        </FormGroup>\n      </div>\n    )    \n}","import React from 'react'\n\nimport * as Inputs from '../../Atoms/AddInputs/AddInputs'\nimport { CheckboxIsCorp } from '../../Atoms/Checkboxes/CheckboxIsCorp'\nimport { CheckboxIsPayed } from '../../Atoms/Checkboxes/CheckboxIsPayed'\nimport { CustomDropdown } from '../../Atoms/Dropdown/Dropdown'\n\nexport const InputFormNoteQuickAdd = ({ \n      onInputChange, handleCheckboxIsCorpBtnClick,\n      onChangeValue, onToggle, handleCheckboxIsPayBtnClick,\n      text, phone, email,  \n      linkedin_profile, website, \n      correspondence, is_corporate,\n      is_staff, is_payed, dropdownOpen,\n      status, updateNoteId,\n      errors,  }) => {\n\n    return (\n      <div>\n        <Inputs.InputName \n          onInputChange={onInputChange} \n          text={text} \n          errors={errors} \n        />\n        <Inputs.InputPhone \n          onInputChange={onInputChange} \n          phone={phone} \n          errors={errors} \n        />\n        <Inputs.InputEmail \n          onInputChange={onInputChange} \n          email={email} \n          errors={errors} \n        />      \n        <Inputs.InputLinkedin \n          onInputChange={onInputChange} \n          linkedin_profile={linkedin_profile} \n          errors={errors} \n        />\n        <Inputs.InputWebsite \n          onInputChange={onInputChange} \n          website={website} \n          errors={errors} \n        />      \n        <Inputs.InputCorrespondence \n          onInputChange={onInputChange} \n          correspondence={correspondence} \n          errors={errors} \n        />      \n        \n        <CheckboxIsCorp \n          handleCheckboxIsCorpBtnClick={handleCheckboxIsCorpBtnClick} \n          is_corporate={is_corporate} \n        />\n        {updateNoteId !== null ?\n        <CustomDropdown \n          onChangeValue={onChangeValue} \n          onToggle={onToggle} \n          status={status} \n          dropdownOpen={dropdownOpen} \n        />:null}\n        {updateNoteId !== null && status!==\"Candidate\" && is_staff ?\n          <CheckboxIsPayed \n            handleCheckboxIsPayBtnClick={handleCheckboxIsPayBtnClick} \n            status={status} \n            is_staff={is_staff} \n            is_payed={is_payed}\n          />\n        : null}      \n         \n      </div>\n    )\n}","import React, { useState, useEffect } from 'react'\nimport { Button } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMale, \n  faUsers, faExchangeAlt, faLongArrowAltDown,\n  faTimes } from '@fortawesome/free-solid-svg-icons'\nimport './styles.scss'\n\nexport const OrderingHeaderTable = ({ \n    onOrderNotes, searchingProp\n  }) => {\n  const [stateOrder, setStateOrder] = useState([]);\n  const [isOrderingName, setIsOrderingName] = useState(false);\n  const [searching, setSearching] = useState(searchingProp);\n  \n\n\n  const onBtnClickOrderingName = (ordername) => {\n    // Create a new array based on current state:\n    let order = [...stateOrder];\n    let newordername = \"-\"+ordername\n    let is_ordering_name = false\n\n    // if ordername starts from \"C\"-character - clear that order!\n    if (ordername.charAt(0) === \"C\"){\n      let index = order.indexOf(ordername.slice(1, ordername.length))\n      // Clear ordername (remove from array)\n      if (index !== -1) {\n        order.splice(index, 1);\n      }\n    } else {\n      // Add or remove item to it\n      if (order.includes(ordername)){\n        let index = order.indexOf(ordername)\n        if (index !== -1) {          \n          order.splice(index, 1);\n          order.splice(index, 0, newordername);         \n        }\n      } else if (order.includes(newordername)) {\n        let index = order.indexOf(newordername)\n        if (index !== -1) {\n          order.splice(index, 1);\n          order.splice(index, 0, ordername);\n        }\n      } else {\n        order.push(ordername);\n\n      }\n    }\n    if (order.length > 0) {\n      is_ordering_name = true\n    } \n\n    // FIX BUG with \"owner\" negative ordering\n    if (order.includes(\"-owner\")&&order.length===1) {\n      // adding \"-id\" field to multiply filter\n      // if has only \"-owner\" field\n      order.push(\"-id\");\n    } else {\n      // remove \"-id\" in all other variants\n      let index = order.indexOf(\"-id\")\n      if (index !== -1) {        \n        order.splice(index, 1);\n      }      \n    }\n\n    // Set state\n    setStateOrder(order);\n    setIsOrderingName(is_ordering_name);\n    setSearching(false)\n  }\n  useEffect(() => {\n    setSearching(searchingProp)\n    setStateOrder([]);\n    setIsOrderingName(false);  \n  }, [searchingProp]);\n  \n  useEffect(() => {\n    if (!searching) {\n      onOrderNotes({order: stateOrder, is_ordering_name: isOrderingName, searchtext: \"\"})\n    }\n  }, [stateOrder, isOrderingName, searching]);\n    return (\n          <thead>\n            <tr>\n              <th className=\"table-num__title\">#</th>\n              <th className=\"table-investor__title\"><FontAwesomeIcon icon={faMale} color=\"black\"/> / <FontAwesomeIcon icon={faUsers} color=\"black\"/></th>\n              <th>\n                <div className=\"table-investor__ordering\">\n                  <span>Name </span>\n                  <div className=\"table-investor__ordering--control\">\n                    <Button color=\"link\" onClick={() => onBtnClickOrderingName(\"text\")}>\n                      {stateOrder.includes(\"text\") && !searching ? <FontAwesomeIcon icon={faLongArrowAltDown} color=\"black\"/>\n                      :stateOrder.includes(\"-text\") && !searching ? <FontAwesomeIcon rotation={180} icon={faLongArrowAltDown} color=\"black\"/>\n                      :<FontAwesomeIcon rotation={90} icon={faExchangeAlt} color=\"grey\"/>}\n                    </Button>\n                    {stateOrder.includes(\"text\") && !searching ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => onBtnClickOrderingName(\"Ctext\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                    :stateOrder.includes(\"-text\") && !searching ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => onBtnClickOrderingName(\"C-text\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                    :\"\"}\n                  </div>\n                </div>\n              </th>\n              <th>\n                <div className=\"table-investor__ordering\">                  \n                  <span>Dev </span>\n                  <div className=\"table-investor__ordering--control\">\n                    <Button color=\"link\" onClick={() => onBtnClickOrderingName(\"owner\")}>\n                    {stateOrder.includes(\"owner\") && !searching ? <FontAwesomeIcon icon={faLongArrowAltDown} color=\"black\"/>\n                    :stateOrder.includes(\"-owner\") && !searching ? <FontAwesomeIcon rotation={180} icon={faLongArrowAltDown} color=\"black\"/>\n                    :<FontAwesomeIcon rotation={90} icon={faExchangeAlt} color=\"grey\"/>}</Button>\n                    {stateOrder.includes(\"owner\") && !searching ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => onBtnClickOrderingName(\"Cowner\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                    :stateOrder.includes(\"-owner\") && !searching ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => onBtnClickOrderingName(\"C-owner\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                    :\"\"}\n                  </div>\n                </div>\n              </th>\n              <th className=\"table-phone__title\">Phone</th>\n              <th>\n                <div className=\"table-investor__ordering\">                  \n                  <span>Status </span>\n                  <div className=\"table-investor__ordering--control\">\n                    <Button color=\"link\" onClick={() => onBtnClickOrderingName(\"status\")}>\n                    {stateOrder.includes(\"status\") && !searching ? <FontAwesomeIcon icon={faLongArrowAltDown} color=\"black\"/>\n                    :stateOrder.includes(\"-status\") && !searching ? <FontAwesomeIcon rotation={180} icon={faLongArrowAltDown} color=\"black\"/>\n                    :<FontAwesomeIcon rotation={90} icon={faExchangeAlt} color=\"grey\"/>}</Button>\n                    {stateOrder.includes(\"status\") && !searching ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => onBtnClickOrderingName(\"Cstatus\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                    :stateOrder.includes(\"-status\") && !searching ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => onBtnClickOrderingName(\"C-status\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                    :\"\"}\n                  </div>\n                </div>\n              </th>\n              <th>\n                <div className=\"table-investor__ordering \">                  \n                  <span className=\"table-investor__ordering--payment\">Payment </span>\n                  <div className=\"table-investor__ordering--control\">\n                    <Button color=\"link\" onClick={() => onBtnClickOrderingName(\"is_payed\")}>\n                    {stateOrder.includes(\"is_payed\") && !searching ? <FontAwesomeIcon icon={faLongArrowAltDown} color=\"black\"/>\n                    :stateOrder.includes(\"-is_payed\") && !searching ? <FontAwesomeIcon rotation={180} icon={faLongArrowAltDown} color=\"black\"/>\n                    :<FontAwesomeIcon rotation={90} icon={faExchangeAlt} color=\"grey\"/>}</Button>\n                    {stateOrder.includes(\"is_payed\") && !searching ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => onBtnClickOrderingName(\"Cis_payed\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                    :stateOrder.includes(\"-is_payed\") && !searching ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => onBtnClickOrderingName(\"C-is_payed\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                    :\"\"}\n                  </div>\n                </div>\n              </th>\n              <th>Manage</th>\n            </tr>\n          </thead>\n    )\n}","import React from 'react'\nimport { Button } from 'reactstrap';\nimport { Link } from 'react-router-dom'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMale, faUsers, faEdit, \n  faCheckCircle, faHandHoldingUsd, faTrash } from '@fortawesome/free-solid-svg-icons'\nimport './styles.scss'\n\nexport const OrderingBodyTable = ({ \n      onSelectForEdit, onToggleModalDelete,\n      post, index   }) => {\n\n\n    return (\n        <tbody key={index}>\n          {post.noteitems !== undefined && post.noteitems.length > 0 ? post.noteitems.map((note, id) => {\n            return (                                    \n                <tr key={id}>\n                    <th scope=\"row\" className=\"table-num__text\">{id+1}</th>\n                    <td className=\"table-investor__text\">{note.is_corporate ? <FontAwesomeIcon icon={faUsers} color=\"black\"/> : <FontAwesomeIcon icon={faMale} color=\"black\"/>}</td>\n                    <td>\n                      <Link className=\"info-link\" to={{pathname:`/investors/${note.id}`,\n                            state: {fromDashboard: false, prevLink: window.location.pathname}\n                            }}>{note.text}</Link>\n                    </td>\n                    <td>\n                      <Link className=\"info-link\" to={{pathname:`/profile/${note.owner}`,\n                            state: {fromDashboard: false, prevLink: window.location.pathname}\n                            }}>{note.owner_username}</Link></td>\n                    <td className=\"table-phone__text\">{note.phone}</td>\n                    <td>{note.status}</td>\n                    <td>{note.is_payed ? <FontAwesomeIcon icon={faCheckCircle} color=\"black\"/> : <FontAwesomeIcon icon={faHandHoldingUsd} color=\"black\"/>}</td>\n                    <td>\n                      <Button className=\"rounded-0\" color=\"info\" title=\"edit\" onClick={() => onSelectForEdit(index, id)}><FontAwesomeIcon icon={faEdit} /></Button>\n                      <Button className=\"rounded-0\" color=\"secondary\" onClick={() => onToggleModalDelete(index, id)} title=\"delete\"><FontAwesomeIcon icon={faTrash} /></Button>\n                    </td>\n                </tr>                                        \n              )\n            }\n          ) : null}\n        </tbody>\n      )    \n}\n","export const handleValidation = (fields) => {\n  // let fields = this.state;\n  let errors = {};\n\n  //Name\n  if(fields[\"text\"].trim() === \"\"){\n     errors[\"text\"] = \"Cannot be empty\";\n  } else {\n    if(typeof fields[\"text\"] !== \"undefined\"){\n       if(!fields[\"text\"].match(/^[a-zA-Z]+$/)){\n          errors[\"text\"] = \"Name must be only letters\";\n       } else if (fields[\"text\"].length > 15) {\n          errors[\"text\"] = \"Your name is too long\";\n       }        \n    }\n  }\n\n  //Phone\n  if(fields[\"phone\"].trim() === \"\"){\n     errors[\"phone\"] = \"Phone cannot be empty\";\n  } else {\n    if(typeof fields[\"phone\"] !== \"undefined\"){\n      if(!fields[\"phone\"].match(/^[0-9\\-\\\\+]{9,15}$/)){\n        errors[\"phone\"] = \"Not phone number\";\n      }      \n    }\n  }\n  // Email\n  if(fields[\"email\"].trim() === \"\"){\n    errors[\"email\"] = \"Cannot be empty\";\n  } else {\n    if(typeof fields[\"email\"] !== \"undefined\"){\n      let lastAtPos = fields[\"email\"].lastIndexOf('@');\n      let lastDotPos = fields[\"email\"].lastIndexOf('.');\n      if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"email\"].indexOf('@@') === -1 && lastDotPos > 2 && (fields[\"email\"].length - lastDotPos) > 2)) {\n        errors[\"email\"] = \"Email is not valid\";\n      }\n    }\n  }\n  // Linkedin profile\n  if(fields[\"linkedin_profile\"].trim() === \"\"){\n    errors[\"linkedin_profile\"] = \"Cannot be empty\";\n  } else {\n    if(typeof fields[\"linkedin_profile\"] !== \"undefined\"){\n      let re=/^((https?|ftp|smtp):\\/\\/)+(www.)?[a-z0-9]+(\\.[a-z]{2,}){1,3}(#?\\/?[a-zA-Z0-9-_#]+)*\\/?(\\?[a-zA-Z0-9-_]+=[a-zA-Z0-9-%]+&?)?$/;\n      if (!re.test(fields[\"linkedin_profile\"])) {\n        errors[\"linkedin_profile\"] = \"Not Linkedin URL\";\n      }\n    }\n  }\n  // Website\n  if(fields[\"website\"].trim() === \"\"){\n  } else {\n    if(typeof fields[\"website\"] !== \"undefined\"){\n      let re=/^((https?|ftp|smtp):\\/\\/)+(www.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_+.~#?&//=]*)?$/;\n      if (!re.test(fields[\"website\"])) {\n        errors[\"website\"] = \"URL is not valid\";\n      }\n    }\n  }\n\n  return errors;\n}\n\n// export const validateEmailForm = (values) => {\n//   const errors = {};\n//   const { email } = values;\n//   if (!email) {\n//       errors.email = 'This field is required.'\n//   } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\n//       errors.email = 'Invalid email address'\n//   }  \n//   return errors;\n// }","import React, { Component } from 'react'\n\nimport {connect} from 'react-redux';\nimport { Link } from 'react-router-dom'\nimport { Form, FormText,  \n  FormGroup, Button,\n  Table, CustomInput,\n  Modal, ModalHeader, ModalBody, ModalFooter, } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlusSquare, \n  faSearch, faSave, faTimes,  } from '@fortawesome/free-solid-svg-icons'\n\nimport * as notes from \"../../../../actions/notesActions\";\nimport { LoadScreen, LoadObject } from '../../../general/Organisms/LoadScreen/LoadScreen'\nimport { ModalDelete } from '../../Organisms/Modal/Modal'\nimport { InputFormNoteQuickAdd } from '../../Molecules/Forms/InputFormNoteQuickAdd'\nimport { OrderingHeaderTable } from '../../Molecules/Tables/OrderingHeaderTable/OrderingHeaderTable'\nimport { OrderingBodyTable } from '../../Molecules/Tables/OrderingBodyTable/OrderingBodyTable'\nimport { handleValidation } from '../../../../utils/helpers'\nimport './styles.scss'\n\nclass Notes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: \"\",\n      phone: \"\",\n      status: 'Candidate',\n      email: \"\",\n      linkedin_profile: \"\",\n      website: \"\",\n      correspondence: \"\",\n      is_corporate: false,\n      is_payed: false,\n      searchtext: \"\",\n      updateNoteId: null,\n      updateNoteIndex: null,\n      dropdownOpen: false,\n      is_ordering_name: false,\n      modal: false,\n      modaldelete: false,\n      is_staff: false,\n      loading: true,\n      fetching: true,\n      nextafterdelete: \"\",\n      deleted: false,\n      order: [],\n      errors: {},\n      notes: [\n          {\n            count: null,\n            next: null,\n            previous: null,\n            noteitems: []\n          },\n        ],\n      }\n  }\n\n  // // END FETCH DATA AFTER PROPS\n  componentDidMount () {\n    // Check if was ordering\n    if (!(Array.isArray(this.props.notes[0].noteitems) && this.props.notes[0].noteitems.length)) {\n      // array exists and is not empty\n      this.props.fetchNotes()\n    } else {\n      this.props.orderNotes(\"\")\n    }\n\n  }\n\n  resetForm = () => {\n    this.setState({text: \"\", phone: '', email:'', errors: {}, \n      updateNoteId: null, status: 'Candidate', is_corporate: false, \n      is_payed: false, linkedin_profile: \"\", website: \"\",\n      correspondence: \"\", });\n  }\n  addNew = () => {\n    this.setState({text: \"\", phone: '', email:'', errors: {}, \n      updateNoteId: null, status: 'Candidate', is_corporate: false, \n      is_payed: false, linkedin_profile: \"\", website: \"\", \n      modal: true, correspondence: \"\", });\n  }\n  resetSearch = () => {\n    if (this.state.searching) {\n        this.props.searchNotes(\"\") \n        this.setState({\n          is_ordering_name: false,\n          order: [],\n          searching: false\n        });             \n    }    \n    this.setState({ searchtext: \"\" });\n  }\n \n  selectForEdit = (index, id) => {\n    let note = this.props.notes[index].noteitems[id];\n    this.setState({text: note.text, phone: note.phone, \n      status: note.status, is_payed: note.is_payed, \n      is_corporate: note.is_corporate, email: note.email, \n      linkedin_profile: note.linkedin_profile, \n      website: note.website, correspondence:note.correspondence,\n      updateNoteId: id, updateNoteIndex: index, modal: true, });\n  }\n\n  selectForDelete = (index, id) => {\n    this.props.deleteNote(index, id)\n    this.setState({\n      modaldelete: false,\n    })     \n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.notes !== prevProps.notes) {\n      this.setState({\n        loading: this.props.notes[0].loading,\n        fetching: this.props.notes[0].fetching,\n      }) \n      // если длина массива меньше чем предыдущая длина (один элемент удален)\n      // то пересчитываем эндпоинт для фетча (вычитаем из последнего символа next\n      // число \"1\" чтобы получить текущий фетч), если в нексте на конце \"1\", то обрезаем\n      // до знака \"?\"\n      let nextForDelete = \"\";\n      if(this.props.notes[0].deleted && this.props.notes[0].next) {\n        nextForDelete = this.props.notes[0].next\n        // console.log(nextForDelete)\n        let lastChar = parseInt(nextForDelete.slice(-1), 10)\n        if ((lastChar-1) >= 2) {\n          nextForDelete = nextForDelete.slice(0, -1)+(lastChar-1);\n          // console.log(nextForDelete)\n        }\n        \n        //add flag nextafterdelete to correctly fetch\n        this.setState({nextafterdelete: nextForDelete,\n          deleted: false})\n      }\n      // if (this.props.lead) {\n      //   const leads = paymentsUtil(this.props.lead.leads)\n      //   this.setState({leads: leads}); \n      // }\n\n    }\n  }   \n    \n  toggle = () => {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  }\n  toggleModal = () => {\n    this.setState(prevState => ({\n      modal: !prevState.modal,\n    }));\n  }\n  toggleModalDelete = (index, id) => {\n    let text = \"\"\n    if (id !== undefined) {\n      text = this.props.notes[index].noteitems[id].text\n    }\n    this.setState(prevState => ({\n      modaldelete: !prevState.modaldelete,\n      index: index,\n      id: id,\n      text: text\n    }));\n  }\n\n  handleChange = (e) => {\n    e.preventDefault();\n    let key = e.target.name\n    let value = e.target.value\n\n    this.setState({\n        [key]: value,\n        errors: {}\n    })\n\n  }\n\n  changeValue = (e) => {\n    this.setState({status: e.currentTarget.textContent})\n  }\n  loadMorePosts = () => {\n    const {next} = this.props.notes[this.props.notes.length - 1]\n    this.setState({\n      fetching: true,\n    });\n    // Check if investor is after delete to correct fetch \n    if (this.state.nextafterdelete) {\n      this.props.fetchNotes(this.state.nextafterdelete)\n      //clear flag nextafterdelete\n      this.setState({nextafterdelete: \"\"})\n    } else {\n      if (next !== null || next !== undefined) {\n        // checking with timeout function\n        // setTimeout( () => {this.props.fetchNotes(next)}, 5000 )\n        this.props.fetchNotes(next)             \n      }\n    }\n     \n  }\n  searchNotes = () => {\n      const {searchtext} = this.state\n      if (searchtext !== null || searchtext !== undefined) {\n          this.props.searchNotes(searchtext) \n          this.setState({\n            is_ordering_name: false,\n            order: [],\n            searching: true,\n          });             \n      }  \n  }\n\n  onCheckboxIsCorpBtnClick = () => {\n    this.setState({\n      is_corporate: !this.state.is_corporate,\n    });\n  }\n  onCheckboxIsPayBtnClick = () => {\n    this.setState({\n      is_payed: !this.state.is_payed,\n    });\n  }\n\n  onOrderNotes = (dataFromCallback) => {\n    // Array to string with ','\n    \n    if (dataFromCallback && dataFromCallback.order.length) {\n      let mapped = dataFromCallback.order.map((item)=>(item)).join(\",\");\n      this.setState({...dataFromCallback});      \n      this.props.orderNotes(mapped)              \n    } else {\n      this.setState({order: []});\n      this.props.orderNotes(\"\")   \n    }    \n  }\n  submitNote = (e) => {\n      e.preventDefault();\n      // check validation from helper file\n      const validation_errors = handleValidation(this.state)\n      // check validation_errors dictionary is empty or has any errors\n      if (Object.keys(validation_errors).length === 0) {\n        // Check what do you want add or edit?\n        if (this.state.updateNoteId === null) {\n            this.props.addNote(this.state.text, this.state.phone, this.state.status, \n              this.state.is_corporate, this.state.is_payed, this.state.email, \n              this.state.linkedin_profile, this.state.website, this.state.correspondence,)\n              .then(this.resetForm)\n              .then(this.toggleModal)            \n              .catch(function (error) {\n                 console.log(\"error\", error);\n               });\n        } else {\n            this.props.updateNote(this.state.updateNoteIndex, this.state.updateNoteId, \n              this.state.text, this.state.phone, this.state.status, this.state.is_corporate, \n              this.state.is_payed, this.state.email, this.state.linkedin_profile, \n              this.state.website, this.state.correspondence)\n              .then(this.resetForm)\n              .then(this.toggleModal)              \n              .catch(function (error) {\n                 console.log(\"error\", error);\n               });\n        }\n      } else {\n        this.setState({errors: validation_errors}); \n      }\n  }\n  renderModal() {\n      const { modal, \n        text, phone, email, linkedin_profile,\n        website, correspondence, is_corporate,\n        status, is_payed, dropdownOpen,\n        updateNoteId,\n        errors } = this.state;\n      const { is_staff } = this.props;\n      \n      if (this.state.modal) {\n        return (\n          <Modal isOpen={modal} toggle={this.toggleModal}>\n            <Form onSubmit={this.submitNote}>            \n\n              <ModalHeader toggle={this.toggleModal}>{updateNoteId === null ? \"New Investor\" : \"Edit Investor\"}</ModalHeader>\n              <ModalBody>                    \n                <InputFormNoteQuickAdd\n                  onInputChange={this.handleChange}\n                  handleCheckboxIsCorpBtnClick={this.onCheckboxIsCorpBtnClick}\n                  handleCheckboxIsPayBtnClick={this.onCheckboxIsPayBtnClick} \n                  onToggle={this.toggle} \n                  onChangeValue={this.changeValue}\n\n                  text={text} \n                  phone={phone}\n                  email={email}\n                  linkedin_profile={linkedin_profile}\n                  website={website}\n                  correspondence={correspondence}\n                  is_corporate={is_corporate}\n                  is_staff={is_staff}\n                  status={status}\n                  is_payed={is_payed}\n                  dropdownOpen={dropdownOpen}\n                  updateNoteId={updateNoteId}\n\n                  errors={errors} \n                />                              \n              </ModalBody>\n              <ModalFooter> \n                <FormGroup row>                   \n                <Button className=\"rounded-0\" color=\"info\" type=\"submit\"><FontAwesomeIcon icon={faSave} color=\"white\"/></Button>              \n                {updateNoteId === null ? <Button className=\"rounded-0\" outline onClick={this.resetForm}>Clear</Button> : null}\n                <Button className=\"rounded-0\" onClick={this.toggleModal}>Cancel</Button>\n                </FormGroup>\n              </ModalFooter>\n            </Form>\n          </Modal>            \n        );\n      }\n    }\n\n  renderNotes () {\n    const { notes } = this.props\n    const { errors, modal, searchtext, \n      modaldelete, index, id, \n      text, fetching, searching } = this.state;\n    const { next } = this.props.notes[this.props.notes.length - 1];\n\n    return (\n      <div>\n        <div className=\"centering notes-header mt-2\"> \n          <div className=\"centering-left\"> \n            <Button className=\"rounded-0\" color=\"info\" onClick={this.addNew}><FontAwesomeIcon icon={faPlusSquare} color=\"white\"/><span className=\"btn-quick__text\"> Quick Add</span></Button>\n          </div>\n          <div className=\"centering-center\">\n          {modal ? this.renderModal() : null}\n          {modaldelete ? \n            <ModalDelete \n              modaldelete={modaldelete} \n              index={index} \n              id={id} \n              text={text}\n              toggle={this.toggleModalDelete}\n              onSelectForDelete={this.selectForDelete}\n            /> \n          : null}\n            <FormGroup row>\n              <CustomInput inline\n                id=\"searchtext\"\n                type=\"text\" \n                name=\"searchtext\"\n                value={searchtext || ''}\n                placeholder=\"Search by Name...\"\n                onChange={this.handleChange}\n                \n                />\n                {errors.searchtext ? <FormText color=\"danger\">{errors.searchtext}</FormText>: \"\"}\n              <Button className=\"rounded-0\" onClick={this.searchNotes}><FontAwesomeIcon icon={faSearch} color=\"white\"/></Button>\n              {searchtext !== \"\" ? \n                <Button outline className=\"rounded-0 btn-sort__clear\" onClick={this.resetSearch}>\n                  <FontAwesomeIcon rotation={90} icon={faTimes}/>\n                </Button> \n              : null}          \n            </FormGroup>\n          </div>\n          <div className=\"centering-right\"> \n            <Link to={\"/investors/add\"}><Button className=\"rounded-0 btn-add\" color=\"info\">Add New</Button></Link>\n          </div>\n        </div>          \n        <div className=\"centering\"> \n          <div className=\"centering-left\"></div>\n          <h3 className=\"centering-center\">Leads</h3>\n          <div className=\"centering-right centering-right__tablepreffix\">\n          </div>\n        </div>\n        <Table className=\"table text-center table-investors\" striped>\n          <OrderingHeaderTable\n            onOrderNotes={this.onOrderNotes}\n            searchingProp={searching} \n          />\n          {notes !== undefined ? notes.map((post, index)=>{\n            return (\n              <OrderingBodyTable\n                  post={post}\n                  key={`${index}`}\n                  index={index}\n\n                  onSelectForEdit={this.selectForEdit}\n                  onToggleModalDelete={this.toggleModalDelete}\n                />\n              )\n          })\n        :null}   \n        </Table>\n        <div className=\"text-center\">\n          {next !== null && !fetching ? \n            <Button className=\"rounded-0\" onClick={this.loadMorePosts}>Load more</Button> \n          : ''}\n          {fetching && <LoadObject objectclass=\"loadnotes\" />}\n        </div>\n      </div>\n    )\n  }\n  render () {\n    const { loading } = this.state\n    return(\n      <div>\n        { loading ? <LoadScreen /> : this.renderNotes() }\n      </div>      \n    )\n  }\n}\n\nconst mapStateToProps = state => {\n    return {\n      notes: state.notes,\n      deleted: state.deleted,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchNotes: (next) => {\n            dispatch(notes.fetchNotes(next));\n        },\n        addNote: (text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence) => {\n            return dispatch(notes.addNote(text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence));\n        },\n        updateNote: (index, id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence) => {\n            return dispatch(notes.updateNote(index, id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence));\n        },\n        deleteNote: (index, id) => {\n            dispatch(notes.deleteNote(index, id));\n        },\n        searchNotes: (searchtext) => {\n            dispatch(notes.searchNotes(searchtext));\n        },\n        orderNotes: (order) => {\n            dispatch(notes.orderNotes(order));\n        },\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notes);","import React from 'react'\nimport { Button, \n  FormGroup, Label, } from 'reactstrap';\nimport DatePicker from \"react-datepicker\";\nimport moment from \"moment\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './styles.scss'\n\n// Checkbox is corporate\nexport const DatePickLastCall = ({ \n  handleChangeDate, handleAddCallClick,\n  handleResetCallClick,\n  last_call\n  }) => {\n\n\n  const onChangeDate = (date) => {\n    if (date) {\n      handleChangeDate(moment(date, moment.defaultFormat).toDate());\n    } else {\n      handleChangeDate(null);\n    }\n    \n  }\n\n    const is_valid_date = moment(last_call).isValid()\n\n    return ( \n      <div>\n        <FormGroup>\n          <Label>Last Call {is_valid_date ? <Button className=\"btn\" onClick={handleResetCallClick}>Reset</Button>: \"\"}</Label>\n          {is_valid_date ?\n          <div>\n            <DatePicker     \n              selected={is_valid_date && moment(last_call, moment.defaultFormat).toDate()}\n              onChange={onChangeDate}\n              showTimeSelect\n              timeFormat=\"HH:mm\"\n              timeIntervals={15}\n              dateFormat=\"d MMMM yyyy HH:mm\"\n              timeCaption=\"time\"\n            />\n          </div>\n          :                     \n            <Button className=\"btn btn-block\" onClick={handleAddCallClick}>Add Last Call</Button>\n          }\n        </FormGroup>\n      </div>\n    )    \n}","import React, { Component } from 'react'\nimport Dropzone from 'react-dropzone'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFileUpload } from '@fortawesome/free-solid-svg-icons'\nimport './styles.scss'\n\nconst imageMaxSize = 10000000; //bytes\n\nclass FileDrop extends Component {\n\n\tonDrop = (acceptedFiles, rejectedFiles) => {\n\t\t// console.log(acceptedFiles, rejectedFiles)\n\t\tthis.props.onSelectDrop(acceptedFiles);\n\t}\n\tdropProperties = (documents, detail) => {\n\t\tlet drop_class, drop_text\n\t\tif (documents) {\n\t\t\tif (detail) {\n\t\t\t\tif (documents === detail) {\n\t\t\t\t  drop_class = \"dropzone-field dropzone-field__default\"\n\t\t\t\t  drop_text = \"  Replace Document\"\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t  drop_class = \"dropzone-field dropzone-field__success\";\n\t\t\t  \t  drop_text = \"  Save to Attach\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdrop_class = \"dropzone-field dropzone-field__success\";\n\t\t\t\tdrop_text = \"  Save to Attach\";\n\t\t\t}\n\t\t} else {\n\t\t\tdrop_class = \"dropzone-field dropzone-field__default\";\n\t\t\tdrop_text = \"  Add Document\"\n\t\t} \n\t\treturn {drop_class: drop_class, drop_text: drop_text}\n\t}\n\trender () {\n\t\t\n\t\tconst { documents, detail } = this.props;\n\t\tconst drop_properties = this.dropProperties(documents, detail)\n\n\t\treturn (\n\t\t  <div>Documents:\n            <span className=\"document-title\">{detail !== \"null\" ? \" (\"+detail.split(\"/\").slice(-1)[0]+\")\" : \"\"}</span>\n\t\t    <Dropzone\n\t            onDrop={this.onDrop}\t\t            \n\t            multiple={false}\n\t            maxSize={imageMaxSize}\n\t            >\n\t                {({getRootProps, getInputProps}) => (\n\t                    <div {...getRootProps()} className={`${drop_properties.drop_class}`}>\n\t                        <input {...getInputProps()} />\n\t                       \t<div>\n\t                       \t\t<FontAwesomeIcon icon={faFileUpload} color=\"white\"/>\n\t                       \t\t\t<span className=\"dropzone-field__text\">{`${drop_properties.drop_text}`}</span>\n\t\t\t\t\t\t\t</div>\n\t                    </div>\n\t                )}\n\t\t\t</Dropzone>﻿\n\t\t  </div>\n\t\t  )\n\t}\n}\nexport default FileDrop","import React from 'react'\n\nimport * as Inputs from '../../Atoms/AddInputs/AddInputs'\nimport { CheckboxIsCorp } from '../../Atoms/Checkboxes/CheckboxIsCorp'\nimport { CheckboxIsPayed } from '../../Atoms/Checkboxes/CheckboxIsPayed'\nimport { CustomDropdown } from '../../Atoms/Dropdown/Dropdown'\nimport { DatePickLastCall } from '../../Atoms/DatePick/DatePickLastCall'\nimport FileDrop from '../../Atoms/FileDrop/FileDrop'\n\nexport const InputFormNoteDetail = ({ \n      onInputChange, \n      handleCheckboxIsPayBtnClick,\n      handleCheckboxIsCorpBtnClick,\n      onChangeValue, onToggle,\n      handleChangeDate, handleResetCallClick,\n      handleAddCallClick, onSelectDrop,\n      text, phone, email,  \n      linkedin_profile, website, \n      correspondence, is_corporate,\n      status, dropdownOpen, is_payed,\n      is_staff, add_call, last_call,\n      documents, detail,\n      errors,  }) => {\n      \n    return (\n      <div>        \n        <Inputs.InputName \n          onInputChange={onInputChange} \n          text={text} \n          errors={errors} \n        />\n        <Inputs.InputPhone \n          onInputChange={onInputChange} \n          phone={phone} \n          errors={errors} \n        />\n        <Inputs.InputEmail \n          onInputChange={onInputChange} \n          email={email} \n          errors={errors} \n        />      \n        <Inputs.InputLinkedin \n          onInputChange={onInputChange} \n          linkedin_profile={linkedin_profile} \n          errors={errors} \n        />\n        <Inputs.InputWebsite \n          onInputChange={onInputChange} \n          website={website} \n          errors={errors} \n        />      \n        <Inputs.InputCorrespondence \n          onInputChange={onInputChange} \n          correspondence={correspondence} \n          errors={errors} \n        />        \n        <CheckboxIsPayed \n          handleCheckboxIsPayBtnClick={handleCheckboxIsPayBtnClick} \n          status={status} \n          is_staff={is_staff} \n          is_payed={is_payed}\n        />                \n        <CheckboxIsCorp \n          handleCheckboxIsCorpBtnClick={handleCheckboxIsCorpBtnClick} \n          is_corporate={is_corporate} \n        />          \n        <CustomDropdown \n          onChangeValue={onChangeValue} \n          onToggle={onToggle} \n          status={status} \n          dropdownOpen={dropdownOpen} \n        />      \n        <DatePickLastCall \n          handleChangeDate={handleChangeDate} \n          handleResetCallClick={handleResetCallClick} \n          handleAddCallClick={handleAddCallClick} \n          add_call={add_call} \n          last_call={last_call} \n        />      \n        <FileDrop \n          onSelectDrop={onSelectDrop} \n          documents={documents}\n          detail={detail}\n        />\n      </div>\n    )\n}","import React from 'react'\nimport { Table } from 'reactstrap';\n\nimport { ReturnButton, EditButton } from '../../../../general/Atoms/Buttons/Buttons'\nimport moment from \"moment\";\nimport './styles.scss'\n\nexport const DetailPreviewTable = ({ \n      onEdit, handleCheckboxIsCorpBtnClick,\n      text, phone, email,  \n      linkedin_profile, website, \n      correspondence, is_corporate,\n      status, is_payed,\n      last_call, documents,   }) => {\n\n    return (\n            <div className=\"mt-2 table-detail\"> \n                <Table className=\"userprofile-header\">\n                  <tbody>\n                    <tr>\n                      <th>\n                        <h2>Investor <b>{text}</b></h2>\n                      </th>\n                      <td>\n                        <ReturnButton />\n                        <EditButton\n                          onEdit={onEdit} \n                        />\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>             \n                <Table striped>\n                  <tbody>\n                    <tr>\n                      <th>Phone</th>\n                      <td>{phone}</td>\n                    </tr>\n                    <tr>\n                      <th>Email</th>\n                      <td className=\"table-correspondence__data\">{email}</td>\n                    </tr>\n                    <tr>\n                      <th>Linkedin</th>\n                      <td className=\"table-correspondence__data\"><a className=\"table-correspondence__url\" href={`${linkedin_profile}`} >{linkedin_profile}</a></td>\n                    </tr>\n                    <tr>\n                      <th>Website</th>\n                      <td className=\"table-correspondence__data\"><a className=\"table-correspondence__url\" href={`${website}`} >{website}</a></td>\n                    </tr>\n                    <tr>\n                      <th>Correspondence</th>\n                      <td className=\"table-correspondence__data\">{correspondence}</td>\n                    </tr>\n                    <tr>\n                      <th>Investor</th>\n                      <td>{is_corporate ? \"Corporate\" : \"Individual\" }</td>\n                    </tr>\n                    <tr>\n                      <th>Status</th>\n                      <td>{status}</td>\n                    </tr>\n                    <tr>\n                      <th>Payment</th>\n                      <td>{is_payed ? \"Payed\" : \"New\" }</td>\n                    </tr>\n                    <tr>\n                      <th>Calls</th>\n                      <td>{last_call ? moment(last_call).format(\"D MMM YYYY HH:mm\") : \"\"}</td>\n                    </tr>\n                    <tr>\n                      <th>Documents</th>\n                      <td>{documents ? <a className=\"table-correspondence__url\" href={`${documents}`} >{documents.split(\"/\").slice(-1)[0]}</a> : \"\"}</td>\n                    </tr>\n                  </tbody>\n                </Table>\n            </div>\n    )\n}","import React, {Component} from 'react'\n\nimport * as detail from \"../../../../actions/noteDetailActions\";\nimport {connect} from 'react-redux';\nimport { Form, Container, Row, FormGroup, Button,\n    Modal, ModalHeader, ModalBody, ModalFooter, } from 'reactstrap';\nimport moment from \"moment\";\n\nimport { ErrorPage } from '../../../general/Organisms/ErrorPage/ErrorPage'\nimport { LoadScreen } from '../../../general/Organisms/LoadScreen/LoadScreen'\nimport { SaveButton } from '../../../general/Atoms/Buttons/Buttons'\nimport { InputFormNoteDetail } from '../../Molecules/Forms/InputFormNoteDetail'\nimport { DetailPreviewTable } from '../../Molecules/Tables/DetailPreviewTable/DetailPreviewTable'\nimport { handleValidation } from '../../../../utils/helpers'\n\nimport './styles.scss'\n\nclass NoteDetail extends Component {\n\n    constructor(props){\n        super(props);\n  \n        this.state = {\n          text: \"\",\n          phone: \"\",\n          status: \"\",\n          email:\"\",\n          linkedin_profile: \"\",\n          website: \"\",\n          correspondence: \"\",\n          is_corporate: false,\n          is_payed: false,\n          id: null,\n          loading: true,\n          errors: {},\n          hasError: false,\n          dropdownOpen: false,\n          detail: {},\n          add_call: false,\n          last_call: \"\", \n          documents: null,\n          attached: false, \n          modal: false,     \n        }\n    }\n\n    componentDidMount(){\n      if (this.props.match){\n        const {id} = this.props.match.params\n        this.setState({\n            id: id,\n        })\n        this.props.fetchDetailNote(id)        \n      }      \n    }\n\n    componentWillReceiveProps(nextProps) {\n      const detailed = nextProps.detail\n\n      if (Object.keys(detailed).length) {\n        this.setState({\n          text: detailed.text,\n          phone: detailed.phone,\n          status: detailed.status,\n          is_corporate: detailed.is_corporate,\n          is_payed: detailed.is_payed,\n          email: detailed.email,\n          linkedin_profile: detailed.linkedin_profile,\n          website: detailed.website,\n          correspondence: detailed.correspondence,\n          last_call: moment(detailed.last_call, moment.defaultFormat).toDate(),\n          documents: detailed.documents,\n          hasError: detailed.hasError,\n          loading: detailed.loading,\n          errors: detailed.errors\n        }) \n      }        \n    }    \n    toggle = () => {\n      this.setState(prevState => ({\n        dropdownOpen: !prevState.dropdownOpen\n      }));\n    }\n    toggleModal = () => {\n      this.setState(prevState => ({\n        modal: !prevState.modal,\n      }));\n    }\n    handleChange = (e) => {\n      e.preventDefault();\n      let key = e.target.name\n      let value = e.target.value\n      this.setState({\n          [key]: value,\n          errors: {}\n      })\n    }\n    changeDate = (date) => {      \n      this.setState({last_call: date})\n    }\n\n    changeValue = (e) => {\n      this.setState({status: e.currentTarget.textContent})\n    }\n\n    getData = (documents) => {\n      // console.log(\"getData!\")\n      this.setState({\n        documents: documents[0],\n        attached: true,\n      })\n    }\n\n    onCheckboxIsCorpBtnClick = () => {\n      this.setState({\n        is_corporate: !this.state.is_corporate,\n      });\n    }\n    onCheckboxIsPayBtnClick = () => {\n      this.setState({\n        is_payed: !this.state.is_payed,\n      });\n    }\n    onAddCallClick = () => {\n      this.setState({\n        add_call: true,\n        last_call: moment(new Date(), moment.defaultFormat).toDate(),\n      });\n    }\n\n    onResetCallClick = () => {\n      this.setState({\n        add_call: false,\n        last_call: \"\",\n      });\n    }\n\n    submitNote = (e) => {\n      e.preventDefault();\n      // check validation from helper file\n      const validation_errors = handleValidation(this.state)\n      // check validation_errors dictionary is empty or has any errors\n      if (Object.keys(validation_errors).length === 0) {\n        this.props.updateDetailNote(this.state.id, this.state.text, \n          this.state.phone, this.state.status, this.state.is_corporate, \n          this.state.is_payed, this.state.email, this.state.linkedin_profile, \n          this.state.website, this.state.correspondence, this.state.last_call,\n          this.state.documents, this.state.attached,)              \n        this.toggleModal()            \n\n      } else {\n        this.setState({errors: validation_errors}); \n      }\n    }\n  renderModal() {\n      const { detail, is_staff } = this.props;\n      const { modal, \n        text, phone, email, \n        linkedin_profile, website,\n        correspondence, is_corporate,\n        status, dropdownOpen, is_payed,\n        add_call, last_call, documents,\n        errors } = this.state;\n      \n      if (this.state.modal) {\n        return (\n          <Modal isOpen={modal} toggle={this.toggleModal}>\n            <Form onSubmit={this.submitNote}>            \n\n              <ModalHeader toggle={this.toggleModal}>Edit Investor</ModalHeader>\n              <ModalBody>                    \n                <InputFormNoteDetail \n                  onInputChange={this.handleChange}\n                  handleCheckboxIsCorpBtnClick={this.onCheckboxIsCorpBtnClick}\n                  handleCheckboxIsPayBtnClick={this.onCheckboxIsPayBtnClick} \n                  onToggle={this.toggle} \n                  onChangeValue={this.changeValue}\n                  handleChangeDate={this.changeDate}\n                  handleResetCallClick={this.onResetCallClick}\n                  handleAddCallClick={this.onAddCallClick}\n                  onSelectDrop={this.getData}\n\n                  text={text} \n                  phone={phone}\n                  email={email}\n                  linkedin_profile={linkedin_profile}\n                  website={website}\n                  correspondence={correspondence}\n                  is_corporate={is_corporate}\n                  status={status}\n                  is_staff={is_staff}\n                  is_payed={is_payed}\n                  dropdownOpen={dropdownOpen}\n                  add_call={add_call}\n                  last_call={last_call}\n                  documents={documents}\n                  detail={`${detail.documents}`}\n\n                  errors={errors} \n                />                              \n              </ModalBody>\n              <ModalFooter> \n                <FormGroup row>                   \n                <SaveButton />                              \n                <Button className=\"rounded-0\" onClick={this.toggleModal}>Cancel</Button>\n                </FormGroup>\n              </ModalFooter>\n            </Form>\n          </Modal>            \n        );\n      }\n    }\n    renderNote() {\n        const { detail } = this.props;\n        const { modal, hasError, errors } = this.state;\n\n        if (!detail.detail && !hasError) {\n          return (\n                <Container fluid>\n                  <Row>\n                    {modal ? this.renderModal() : null}\n                    <DetailPreviewTable \n                      {...detail}\n                      onEdit={this.toggleModal}\n                    />\n              </Row>\n            </Container>              \n          );\n\n        } else {\n            return (\n              <ErrorPage \n                  errors={errors && errors.page}\n                /> \n            );\n        }\n    }\n    render () {\n        const {loading} = this.state\n        return(\n            <div>\n              {loading ?<LoadScreen />:this.renderNote()}\n          </div>               \n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      detail: state.detail,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      fetchDetailNote: (id) => {\n          dispatch(detail.fetchDetailNote(id));\n      },\n      updateDetailNote: (id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence, last_call, documents, attached) => {\n          dispatch(detail.updateDetailNote(id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence, last_call, documents, attached));\n      }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteDetail);","import { toast } from 'react-toastify';\nexport const fetchDetailNote = (id) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        const endpoint = `/api/investors/${id}/` \n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        \n        return fetch(endpoint, {headers, })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n               \n                } else {\n                    toast.error(\"Server Error...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'FETCH_DETAIL_NOTE', detail: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authentication Error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", detail: res.data});\n                    throw res.data;\n                } \n                else if (res.status === 404) {\n                    toast.error(\"Investor is not found...\")\n                    dispatch({type: \"INVESTOR_NOT_FOUND\", detail: res.data});\n                    throw res.data;\n                }\n            })\n            .catch(error => {                \n                console.log(\"error\", error);\n            });\n    }\n}\n\nexport const updateDetailNote = (id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence, last_call, documents, attached) => {\n    return (dispatch, getState) => {\n\n        let headers = {'Accept': 'application/json'};\n        // let headers = {\"Content-Type\": \"multipart/form-data\"};\n\n        let {token} = getState().auth;\n\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        let formData = new FormData();\n        formData.append('text', text);\n        formData.append('phone', phone);\n        formData.append('status', status);\n        formData.append('is_corporate', is_corporate);\n        formData.append('is_payed', is_payed);\n        formData.append('email', email);\n        formData.append('linkedin_profile', linkedin_profile);\n        formData.append('website', website);\n        // Not required fields\n        if (correspondence) {\n            formData.append('correspondence', correspondence);\n        }\n        //check if attached & if documents(file) is not string\n        //if documents is string don't append formData\n        if (attached && \n          !(typeof documents === 'string' || documents instanceof String)) {\n            formData.append('documents', documents);\n        }\n\n        // formData need to convert ISO format string\n        if (last_call){\n            if (String(last_call) !==\"Invalid Date\") {\n                formData.append('last_call', last_call.toISOString());\n            }            \n        } else {\n            formData.append('last_call', \"\");\n        }\n        let noteId = id;\n        return fetch(`/api/investors/${noteId}/`, {headers, method: \"PUT\", body: formData})\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    toast.error(\"Server error...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 200) {\n                    toast.info(\"Investor \"+res.data.text+\" edited\")\n                    return dispatch({type: 'UPDATE_DETAIL_NOTE', detail: res.data, id});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authentication Error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n            .catch(error => {                \n                console.log(\"error\", error);\n            });\n    }\n}\n\nexport const addDetailNote = (text, phone, status, is_corporate, email, linkedin_profile, website, correspondence) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n\n        let body = JSON.stringify({text, phone, status, is_corporate, email, linkedin_profile, website, correspondence });\n        return fetch(\"/api/investors/\", {headers, method: \"POST\", body})\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 201) {\n                    toast.info(\"Investor \"+res.data.text+\" added\")\n                    return dispatch({type: 'ADD_DETAIL_NOTE', detail: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n           .catch(error => {                \n                console.log(\"error\", error);\n            });\n    }\n}\n","import React from 'react'\n\nimport * as Inputs from '../../Atoms/AddInputs/AddInputs'\nimport { CheckboxIsCorp } from '../../Atoms/Checkboxes/CheckboxIsCorp'\n\nexport const InputFormNoteAdd = ({ onInputChange, handleCheckboxIsCorpBtnClick,\n      text, phone, email,  \n      linkedin_profile, website, \n      correspondence, is_corporate,\n      errors,  }) => {\n    return (\n      <div>\n        <Inputs.InputName \n          onInputChange={onInputChange} \n          text={text} \n          errors={errors} \n        />\n        <Inputs.InputPhone \n          onInputChange={onInputChange} \n          phone={phone} \n          errors={errors} \n        />\n        <Inputs.InputEmail \n          onInputChange={onInputChange} \n          email={email} \n          errors={errors} \n        />      \n        <Inputs.InputLinkedin \n          onInputChange={onInputChange} \n          linkedin_profile={linkedin_profile} \n          errors={errors} \n        />\n        <Inputs.InputWebsite \n          onInputChange={onInputChange} \n          website={website} \n          errors={errors} \n        />      \n        <Inputs.InputCorrespondence \n          onInputChange={onInputChange} \n          correspondence={correspondence} \n          errors={errors} \n        />      \n        \n        <CheckboxIsCorp \n          handleCheckboxIsCorpBtnClick={handleCheckboxIsCorpBtnClick} \n          is_corporate={is_corporate} \n        />\n\n      </div>\n    )\n}","import React, {Component} from 'react'\nimport { Redirect } from 'react-router-dom'\nimport {connect} from 'react-redux';\n\nimport Form from 'reactstrap/lib/Form';\n\nimport * as detail from \"../../../../actions/noteDetailActions\";\nimport { InputFormNoteAdd } from '../../Molecules/Forms/InputFormNoteAdd'\nimport { ReturnButton, SaveButton, ClearButton } from '../../../general/Atoms/Buttons/Buttons'\nimport { handleValidation } from '../../../../utils/helpers'\n\nclass NoteNew extends Component {\n    constructor(props){\n        super(props)       \n        this.state = {\n          text: \"\",\n          phone: \"\",\n          email: \"\",\n          status: \"Candidate\",\n          linkedin_profile: \"\",\n          website: \"\",\n          correspondence: \"\",\n          is_corporate: false,\n          id: null,\n          doneLoading: false,\n          errors: {},        \n          redirectToNewPage: false          \n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n      if (this.state.redirectToNewPage) {  \n        this.setState({\n          id: nextProps.detail.id,\n        })\n      }\n    }    \n\n    resetForm = () => {\n      this.setState({text: \"\", phone: '', email:'', errors: {}, status: 'Candidate', \n        is_corporate: false, linkedin_profile: \"\", website: \"\",\n        correspondence: \"\",\n      });\n    }\n    handleChange = (e) => {\n      e.preventDefault();\n      let key = e.target.name\n      let value = e.target.value\n      this.setState({\n          [key]: value,\n          errors: {}\n      })\n    }\n    changeValue = (e) => {\n      this.setState({status: e.currentTarget.textContent})\n    }\n\n    onCheckboxIsCorpBtnClick = () => {\n      this.setState({\n        is_corporate: !this.state.is_corporate,\n      });\n    }\n\n    submitNote = (e) => {\n      e.preventDefault();\n      // check validation from helper file\n      const validation_errors = handleValidation(this.state)\n      // check validation_errors dictionary is empty or has any errors\n      if (Object.keys(validation_errors).length === 0) {\n        this.props.addDetailNote(this.state.text, this.state.phone, this.state.status, \n          this.state.is_corporate, this.state.email, this.state.linkedin_profile, \n          this.state.website, this.state.correspondence)\n          .then(this.setState({ redirectToNewPage: true }))            \n          .catch(function (error) {\n             console.log(\"error\", error);\n           });\n      } else {\n        this.setState({errors: validation_errors}); \n      }\n    }\n\n    render () {\n        const { text, phone, email, \n          linkedin_profile, website,\n          correspondence, is_corporate,\n          errors } = this.state;\n        // The part that makes the redirect happen\n        if (this.state.redirectToNewPage && this.state.id) {\n          return (\n            <Redirect to={{pathname:`/investors/${this.state.id}`}} />\n          )\n        }\n        return(\n            <div>\n              <div className=\"mt-2 mb-2\">\n                <h3>Add New</h3>\n              </div>\n              <Form onSubmit={this.submitNote} className=\"form col col-sm-4 mt-2 p-2\">\n                <InputFormNoteAdd\n                  onInputChange={this.handleChange}\n                  handleCheckboxIsCorpBtnClick={this.onCheckboxIsCorpBtnClick} \n\n                  text={text} \n                  phone={phone}\n                  email={email}\n                  linkedin_profile={linkedin_profile}\n                  website={website}\n                  correspondence={correspondence}\n                  is_corporate={is_corporate}\n\n                  errors={errors} \n                /> \n                <div>\n                  <SaveButton />\n                  <ClearButton\n                    onClear={this.resetForm} \n                  />\n                  <ReturnButton />\n                </div>\n            </Form>\n          </div>               \n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      detail: state.detail,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addDetailNote: (text, phone, status, is_corporate, email, linkedin_profile, website, correspondence) => {\n            return dispatch(detail.addDetailNote(text, phone, status, is_corporate, email, linkedin_profile, website, correspondence));\n        },\n    }\n}\n\n// export default NewNote;\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteNew);","import React, {Component} from 'react'\nimport {connect} from 'react-redux';\nimport { Link } from 'react-router-dom'\nimport { Table } from 'reactstrap';\n\nimport * as lead from \"../../../../actions/paymentsActions\";\nimport { LoadScreen } from '../../../general/Organisms/LoadScreen/LoadScreen'\nimport { paymentsUtil } from '../../../../utils/paymentsUtils'\nimport './styles.scss'\n\nclass Payments extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {         \n        loading: true,\n        errors: {},\n        lead: {},\n      };\n    }\n\n    componentDidMount(){\n      if (this.props.match){\n        this.props.fetchPaymentsLead()\n      }\n    }\n\n    componentDidUpdate(prevProps) {\n      if (this.props.lead !== prevProps.lead) {\n        if (this.props.lead) {\n          const leads = paymentsUtil(this.props.lead.leads)\n          this.setState({leads: leads}); \n        }\n      }\n    }   \n    renderPayments() {\n      const { lead } = this.props;\n        if (lead.leads) {\n          return (\n            <div>\n              <h3>Leads View</h3>\n              <Table className=\"table text-center\" striped>\n                <thead>\n                  <tr>\n                    <th className=\"table-num__title table-payments\">#</th>\n                    <th className=\"table-payments\">Developer</th>\n                    <th className=\"table-payments\">Total Leads</th>\n                    <th className=\"table-payments\">Processed</th>\n                    <th className=\"table-payments\">Converted</th>\n                    <th className=\"table-payments\">Rejected</th>\n                    <th className=\"table-payments\">Next Payment</th>\n                  </tr>\n                </thead>  \n                <tbody>\n                  {lead.leads.length > 0 ? lead.leads.map((item,id) => (\n                    <tr key={id}>\n                        <th scope=\"row\" className=\"table-num__text\">{id+1}</th>\n                        <td>\n                          <Link className=\"info-link\" to={{pathname:`/profile/${item.id}`,\n                              state: {fromDashboard: false, prevLink: window.location.pathname}\n                              }}>{item.owner}</Link>\n                        </td>\n                        <td>{item.total}</td>\n                        <td>{item.processed}</td>\n                        <td>{item.converted}</td>\n                        <td>{item.rejected}</td>\n                        <td>{item.price}</td>\n                    </tr>\n                  )) : <tr><td colSpan=\"7\">Table is empty. Add your investors</td></tr>}\n                </tbody>                     \n              </Table>\n            </div>              \n          );\n        }\n    }\n    render () {\n      const { loading } = this.props\n      return(\n          <div>\n            { loading ? <LoadScreen /> : this.renderPayments() }\n        </div>               \n      )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      lead: state.lead,\n      loading: state.lead.loading\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      fetchPaymentsLead: () => {\n          dispatch(lead.fetchPaymentsLead());\n      },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Payments);","export const paymentsUtil = (leads) => {\n\n  // initialize newstate for reducer (to add calculated parameter lead.price)\n  let newstate = leads\n  // calculating next payment\n  newstate.forEach(item=>{\n    // get true_investors (without candidate status)\n    let true_investors = item.converted + item.processed + item.rejected\n    // get count of payed investors\n    let count_payed = item.payed\n    let price_all = 0;\n    let price_payed = 0;\n\n    // Calculating price\n    for(let key in item.prices){\n      let value = item.prices[key]\n      // Calculating price for investors without Candidate status\n      if (true_investors >=10){\n          if (true_investors>=key) {\n              price_all += 10*value\n          } else {\n              if (Math.ceil(true_investors/10) === key/10) {\n                  price_all += (true_investors+10-key)*value \n              }\n          }\n      }\n      // Get payed price\n      if (count_payed && true_investors >=10){\n          if (count_payed >= key) {\n              price_payed += 10*value\n          } else {\n              if (Math.ceil(count_payed/10) === key/10) {\n                  price_payed += (count_payed+10-key)*value \n              }\n          }\n      }\n    }\n    // output price without payed prices\n    item.price =price_all-price_payed;              \n  });\n  return newstate\n}","export const fetchPaymentsLead = () => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        const endpoint = `/api/payments/` \n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        \n        return fetch(endpoint, {headers, })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                // } else if (res.status === 404) {\n                //     dispatch({type: \"MESSAGE_NOT_FOUND\", data: res.data});\n                //     throw res.data;\n                } else {\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'FETCH_PAYMENTS_LEAD', leads: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                } else if (res.status === 404) {\n                    dispatch({type: \"ERROR_NOT_FOUND\", leads: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport RequireAuth from \"./auth/RequireAuth\";\nimport { Landing } from \"./Landing\";\nimport Login from \"./auth/Templates/Login\";\nimport Logout from \"./auth/Logout\";\nimport Signup from \"./auth/Signup\";\nimport SignupDone from \"./auth/SignupDone\";\nimport AccountActivation from \"./auth/AccountActivation\";\nimport UserProfile from \"./auth/Templates/UserProfile\";\nimport UserProfileDetail from \"./auth/Templates/UserProfileDetail\";\nimport UserProfileEdit from \"./auth/UserProfileEdit\";\nimport PasswordChange from \"./auth/PasswordChange\";\nimport PasswordReset from \"./auth/PasswordReset\";\nimport PasswordResetDone from \"./auth/PasswordResetDone\";\nimport PasswordResetConfirm from \"./auth/PasswordResetConfirm\";\nimport {ErrorPage} from \"./general/Organisms/ErrorPage/ErrorPage\";\n\nimport Notes from './notes/Templates/Notes/Notes'\nimport NoteDetail from './notes/Templates/NoteDetail/NoteDetail'\nimport NoteNew from './notes/Templates/NoteNew/NoteNew'\nimport Payments from './notes/Templates/Payments/Payments'\n\nconst MainContent = () => (\n\n    <Switch>\n        <Route exact path=\"/\" component={props => <Landing {...props} />} />\n        <Route path=\"/reload\" component={null} key=\"reload\" />\n        <Route path=\"/login\" component={props => <Login {...props} />} />\n        <Route path=\"/logout\" component={props => <Logout {...props} />}/>\n        <Route path=\"/signup\" component={props => <Signup {...props} />}/>\n        <Route path=\"/activation/confirm-email/:key\" component={props => <AccountActivation {...props} />}/>\n        <Route path=\"/signup_done\" component={props => <SignupDone {...props} />}/>\n        <Route path=\"/reset_password\" component={props => <PasswordReset {...props} />}/>\n        <Route path=\"/reset_password_done\" component={props => <PasswordResetDone {...props} />}/>\n        <Route path=\"/pass/reset/:uid/:token/\" component={props => <PasswordResetConfirm {...props} />}/>\n        <Route exact path=\"/profile\" component={RequireAuth(UserProfile)}/>\n        <Route path='/profile/:id' component={RequireAuth(UserProfileDetail)}/>\n        <Route path=\"/profile_edit\" component={RequireAuth(UserProfileEdit)}/>\n        <Route path=\"/change_password\" component={RequireAuth(PasswordChange)}/>\n        <Route exact path='/investors' component={RequireAuth(Notes)} />\n        <Route path='/investors/add' component={RequireAuth(NoteNew)}/>\n        <Route path='/investors/:id' component={RequireAuth(NoteDetail)}/>\n        <Route exact path='/payments' component={RequireAuth(Payments)} />\n\n        <Route component={props => <ErrorPage {...props} />}/>\n    </Switch>\n\n);\n\nexport default MainContent;\n","import React, {Component} from \"react\";\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css'; \n\nimport Header from \"./Header\";\nimport MainContent from \"./MainContent\";\n\nexport default class App extends Component {\n    render() {\n        return (\n            <>                \n              <Header />\n              <div className=\"container\">\n                  <ToastContainer \n                    hideProgressBar={true} \n                    position=\"bottom-right\"\n                    autoClose={3000}\n                    removeCloseButton={true}\n                  />\n              </div>\n              <div className=\"container\">\n                <MainContent />\n              </div>              \n            </>\n        );\n    }\n}","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"bootstrap/dist/css/bootstrap.css\";\n\nimport \"./styles/style.scss\"\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import { Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport store from \"./store\";\n// import history from \"./utils/historyUtils\";\nimport { authLogin } from \"./actions/authActions\";\nimport App from \"./components/App\";\nimport registerServiceWorker from './registerServiceWorker';\n\n// import { syncHistoryWithStore } from 'react-router-redux'\n\n\n// const browserhistory = syncHistoryWithStore(history, store)\n\nregisterServiceWorker();\n\nconst token = localStorage.getItem(\"token\");\n\nif (token) {\n    store.dispatch(authLogin(token));\n}\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <App />\n        </Router>\n    </Provider>\n    , document.getElementById(\"root\"));\n"],"sourceRoot":""}