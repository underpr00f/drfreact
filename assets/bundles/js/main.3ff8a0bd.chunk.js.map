{"version":3,"sources":["../config/polyfills.js","reducers/notesReducer.js","constants/actionTypes.js","reducers/index.js","reducers/authReducer.js","reducers/noteDetailReducer.js","reducers/paymentsReducer.js","store/index.js","constants/urls.js","utils/authUtils.js","actions/authActions.js","components/Header.js","utils/noteUtils.js","components/auth/RequireAuth.js","posts/PostDetail.js","posts/PostList.js","components/Landing.js","utils/renderUtils.js","components/auth/Login.js","components/auth/Logout.js","components/auth/Signup.js","components/auth/SignupDone.js","components/auth/AccountActivation.js","components/auth/UserProfile.js","components/auth/UserProfileEdit.js","components/auth/PasswordChange.js","components/auth/PasswordReset.js","components/auth/PasswordResetDone.js","components/auth/PasswordResetConfirm.js","components/NoMatch.js","reactify/PostInline.js","reactify/Posts.js","routingComps/ReactifyComp.js","reactify/PostForm.js","reactify/PostDetail.js","reactify/PostCreate.js","components/notes/InputForm.js","actions/notesActions.js","components/notes/FileDrop/FileDrop.js","components/notes/NoteDetail.js","actions/noteDetailActions.js","components/notes/NewNote.js","components/notes/Payments.js","actions/paymentsActions.js","components/MainContent.js","components/App.js","registerServiceWorker.js","index.js"],"names":["Promise","__webpack_require__","enable","window","Object","assign","initialState","noteitems","AuthTypes","LOGIN","LOGOUT","CHANGE_PASSWORD","USER_PROFILE","rootReducer","combineReducers","form","formReducer","notifications","auth","state","arguments","length","undefined","action","type","objectSpread","authenticated","token","payload","user","notes","noteList","map","a","reduce","b","concat","toConsumableArray","slice","filter","index","self","findIndex","t","created_at","id","unshift","note","selectById","indexEdit","p","noteToUpdate","text","phone","status","is_corporate","is_payed","email","linkedin_profile","website","correspondence","splice","deleteById","indexDel","detail","errors","lead","console","log","newstate","forEach","item","true_investors","converted","processed","rejected","count_payed","payed","price_all","price_payed","key","prices","value","Math","ceil","price","store","logger","createLogger","middleware","applyMiddleware","thunk","compose","createStoreWithMiddleware","createStore","configureStore","ROOT_URL","AuthUrls","SIGNUP","RESET_PASSWORD","RESET_PASSWORD_CONFIRM","USER_ACTIVATION","getUserToken","notifSend","notifActions","authLogin","getUserProfile","dispatch","getState","axios","get","headers","authorization","then","response","data","catch","error","processServerError","keys","newDict","push","_error","Header","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleNavbar","setState","collapsed","react_default","createElement","Nav","className","navbar","NavItem","NavLink","onClick","forceUpdate","href","username","renderUser","Navbar","color","dark","expand","NavbarBrand","NavbarToggler","Collapse","isOpen","renderLinks","Component","connect","RequireAuth","ComposedComponent","Authentication","_Component","apply","inherits","createClass","checkAuthentication","nextProps","history","is_staff","is_superuser","PostDetail","titleWasClicked","bind","assertThisInitialized","toggleContent","removeContent","showContent","postItem","event","preventDefault","dataCallback","newPostItem","post","didHandleRemove","prevProps","prevState","snapshop","setPostStateOnProps","Row","Col","xs","md","Card","CardImg","top","width","src","image","CardBody","CardTitle","title","CardText","description","Link","to","slug","PostList","items","isOldestFirst","isLoading","handleDataCallback","handlePostRemove","toggleListReverse","toggleSortId","newPostList","sort","sortById","reverse","currentPostList","updateBackend","pop","getItems","_this2","fetch","results","json","_this3","_this$state","posts_PostDetail","Landing","posts_PostList","renderField","_ref","input","label","_ref$meta","meta","touched","renderTextAreaField","_ref2","_ref2$meta","renderError","errorMessages","Login","_this$props","handleSubmit","onSubmit","Field","name","component","validate","required","message","reduxForm","formValues","loginUrl","localStorage","setItem","processedError","SubmissionError","Logout","logoutUser","removeItem","Signup","values","password1","password2","signupUrl","SignupDone","AccountActivation","match","params","activateUserUrl","kind","dismissAfter","UserProfile","first_name","last_name","about","withRouter","initialValues","patch","PasswordChange","changePasswordUrl","new_password1","new_password2","PasswordReset","resetPasswordUrl","PasswordResetDone","PasswordResetConfirm","_props$match$params","uid","resetPasswordConfirmUrl","NoMatch","PostInline","elClass","pathname","fromDashboard","content","Posts","togglePostListClass","handleNewPost","loadMorePosts","posts","postsListClass","next","previous","author","count","loadPosts","nextEndpoint","endpoint","thisComp","lookupOptions","method","Content-Type","csrfToken","cookie","load","responseData","postItemData","currentPosts","reactify_PostInline","ReacTifyComp","reactify_Posts","PostForm","handleInputChange","handleDraftChange","clearForm","postTitleRef","React","createRef","postContentRef","deletePost","draft","publish","moment","Date","format","X-CSRFToken","Authorization","body","JSON","stringify","credentials","newPostItemUpdated","alert","newPostItemCreated","defaultState","postCreateForm","reset","current","updatePost","createPost","target","defineProperty","cancelClass","deleteClass","ref","el","htmlFor","placeholder","onChange","checked","handlePostItemUpdated","doneLoading","loadPost","owner","reactify_PostForm","postItemUpdated","PostCreate","InputForm","resetForm","updateNoteId","addNew","modal","resetSearch","searchtext","resetSort","order","handleOrderNotes","selectForEdit","updateNoteIndex","selectForDelete","deleteNote","toggle","dropdownOpen","toggleModal","handleValidation","fields","formIsValid","trim","lastAtPos","lastIndexOf","lastDotPos","indexOf","test","handleChange","e","_this$setState","changeValue","currentTarget","textContent","fetchNotes","searchNotes","is_ordering_name","onCheckboxIsCorpBtnClick","onCheckboxIsPayBtnClick","onBtnClickOrderingName","ordername","newordername","charAt","includes","mapped","join","orderNotes","submitNote","addNote","updateNote","nextForDelete","lastChar","parseInt","split","Modal","Form","ModalHeader","ModalBody","FormGroup","Label","Input","FormText","index_es","icon","faMale","faUsers","Button","active","Dropdown","DropdownToggle","caret","DropdownMenu","DropdownItem","faHandHoldingUsd","faCheckCircle","ModalFooter","row","faSave","faPlusSquare","renderModal","CustomInput","inline","faSearch","outline","disabled","Table","striped","faLongArrowAltDown","rotation","faExchangeAlt","faTimes","scope","owner_username","faEdit","faTrash","res","loading","noteId","FileDrop","onDrop","acceptedFiles","rejectedFiles","onSelectDrop","dist_es","multiple","maxSize","getRootProps","getInputProps","faFileUpload","documents","NoteDetail","changeDate","date","last_call","getData","attached","onAddCallClick","add_call","defaultFormat","toDate","onResetCallClick","updateDetailNote","hasError","fetchDetailNote","Container","fluid","isValid","react_datepicker_es","selected","showTimeSelect","timeFormat","timeIntervals","dateFormat","timeCaption","notes_FileDrop_FileDrop","size","faUndoAlt","renderNote","location","Accept","formData","FormData","append","String","toISOString","NewNote","onCheckboxBtnClick","addDetailNote","redirectToNewPage","Redirect","Payments","fetchPaymentsLead","total","MainContent","Switch","Route","exact","path","components_Landing","auth_Login","auth_Logout","auth_Signup","auth_AccountActivation","SignupDone_SignupDone","auth_PasswordReset","PasswordResetDone_PasswordResetDone","auth_PasswordResetConfirm","UserProfileEdit","ReactifyComp","components_NoMatch","App","components_Header","components_MainContent","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","URL","process","origin","addEventListener","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","getItem","ReactDOM","render","es","BrowserRouter","App_App","document","getElementById"],"mappings":"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","file":"js/main.3ff8a0bd.chunk.js","sourcesContent":["'use strict';\n\nif (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where React gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes React's erratic future behavior.\n  require('promise/lib/rejection-tracking').enable();\n\n  window.Promise = require('promise/lib/es6-extensions.js');\n} // fetch() polyfill for making API calls.\n\n\nrequire('whatwg-fetch'); // Object.assign() is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\n\n\nObject.assign = require('object-assign'); // In tests, polyfill requestAnimationFrame since jsdom doesn't provide it yet.\n// We don't polyfill it in the browser--this is user's responsibility.\n\nif (process.env.NODE_ENV === 'test') {\n  require('raf').polyfill(global);\n}","const initialState = [{noteitems: [], \n                        // loading: false\n                    }]\n\nexport default function notes(state=initialState, action) {\n    //собрать все массивы с ключами noteitems и объединить в один массив\n    let noteList = state.map(a => a.noteitems).reduce((a, b) => [...a, ...b], []).slice();\n\n    switch (action.type) {\n\n        case 'FETCH_NOTES':\n            //удаление дубликатов\n            noteList = noteList.filter((noteList, index, self) => self.findIndex(t => t.created_at === noteList.created_at && t.id === noteList.id) === index)\n            \n            return [                    \n                    {...state[state.length-1],\n                    noteitems: noteList,\n                    // loading: action.loading\n                    // ...action.notes\n                    },\n                ];\n        case 'SEARCH_NOTES':\n            noteList = action.notes\n        \n            return [                    \n\n                    {...state,\n                    ...action.notes},\n                ];\n\n        case 'ORDER_NOTES':\n            noteList = action.notes\n       \n            return [                    \n\n                    {...state,\n                    ...action.notes},\n                ];\n\n\n        case 'ADD_NOTE':\n            // Добавляем заметку\n            noteList.unshift(action.note);\n            // Удаляем нижнюю\n            // if (noteList.length > 0) {\n            //     noteList.pop();\n            // }\n\n            return [\n                        //берем последний стейт и добавляем к нему общий массив\n                        {...state[state.length-1],\n                            noteitems: noteList},\n\n                    ];\n\n        case 'UPDATE_NOTE':\n\n            //Поиск в общем массиве элемента по id и index (2мерный массив)\n            let selectById = state[action.index].noteitems[action.id].id\n            let indexEdit = noteList.findIndex(p => p.id === selectById) \n\n            let noteToUpdate = noteList[indexEdit]\n            noteToUpdate.text = action.note.text;\n            noteToUpdate.phone = action.note.phone;\n            noteToUpdate.status = action.note.status;\n            noteToUpdate.is_corporate = action.note.is_corporate;\n            noteToUpdate.is_payed = action.note.is_payed;\n            noteToUpdate.email = action.note.email;\n            noteToUpdate.linkedin_profile = action.note.linkedin_profile;\n            noteToUpdate.website = action.note.website;\n            noteToUpdate.correspondence = action.note.correspondence;\n            noteList.splice(indexEdit, 1, noteToUpdate);\n            return [\n                    {...state[state.length-1],\n                        noteitems: noteList},\n                    ];\n\n        case 'DELETE_NOTE':\n            //Поиск в общем массиве элемента по id и index (2мерный массив)\n            let deleteById = state[action.id].noteitems[action.index].id\n            let indexDel = noteList.findIndex(p => p.id === deleteById)            \n\n            noteList.splice(indexDel, 1);\n            return [\n                        {...state[state.length-1],\n                            noteitems: noteList}\n                    ];\n\n        default:\n            \n    }\n    return state;\n}\n","export const AuthTypes = {\n    LOGIN: \"LOGIN\",\n    LOGOUT: \"LOGOUT\",\n    CHANGE_PASSWORD: \"CHANGE_PASSWORD\",\n    USER_PROFILE: \"USER_PROFILE\"\n};","import {combineReducers} from \"redux\";\nimport { reducer as formReducer } from \"redux-form\";\nimport { reducer as notifications } from 'react-notification-system-redux';\n\nimport notesReducer from \"./notesReducer\";\nimport noteDetailReducer from \"./noteDetailReducer\";\nimport authReducer from \"./authReducer\";\nimport paymentsReducer from \"./paymentsReducer\";\n// import { routerReducer } from 'react-router-redux'\n\nconst rootReducer = combineReducers({\n    form: formReducer,\n    notifications,\n    auth: authReducer,\n    notes: notesReducer,\n    detail: noteDetailReducer,\n    lead: paymentsReducer,\n    // routing: routerReducer\n});\n\nexport default rootReducer;\n\n\n","import { AuthTypes } from \"../constants/actionTypes\";\n\nexport default function(state = {}, action) {\n    switch(action.type) {\n        case AuthTypes.LOGIN:\n            return { ...state, authenticated: true, token: action.payload};\n        case AuthTypes.LOGOUT:\n            return { ...state, authenticated: false, token: null};\n        case AuthTypes.USER_PROFILE:\n            return { ...state, user: action.payload};\n        default:\n        \t// will NOT execute because of the line preceding the switch.\n    }\n    return state;\n}","export default function noteDetailReducer(state = {}, action) {\n    switch(action.type) {\n\n        case 'FETCH_DETAIL_NOTE':\n            return { ...state, ...action.detail};\n        case 'UPDATE_DETAIL_NOTE':\n            return { ...state, ...action.detail};\n        case 'ADD_DETAIL_NOTE':\n            return { ...state, ...action.detail};\n\n        case 'MESSAGE_NOT_FOUND':\n            return { errors: [ ...state.errors, \n                                action.detail\n                            ]\n                    }\n        default:\n          // will NOT execute because of the line preceding the switch.\n    }\n    return state;\n}","export default function paymentsReducer(state = [], action) {\n    switch(action.type) {\n\n        case 'FETCH_PAYMENTS_LEAD':\n            console.log([...action.lead]) \n            console.log([...state, ...action.lead]) \n            // initialize newstate for reducer (to add calculated parameter lead.price)\n            let newstate =  [...state, ...action.lead];\n            // calculating next payment\n            newstate.forEach(item=>{\n              // get true_investors (without candidate status)\n              let true_investors = item.converted + item.processed + item.rejected\n              // get count of payed investors\n              let count_payed = item.payed\n              let price_all = 0;\n              let price_payed = 0;\n\n              // Calculating price\n              for(let key in item.prices){\n                let value = item.prices[key]\n                // Calculating price for investors without Candidate status\n                if (true_investors >=10){\n                    if (true_investors>=key) {\n                        price_all += 10*value\n                    } else {\n                        if (Math.ceil(true_investors/10) === key/10) {\n                            price_all += (true_investors+10-key)*value \n                        }\n                    }\n                }\n                // Get payed price\n                if (count_payed && true_investors >=10){\n                    if (count_payed >= key) {\n                        price_payed += 10*value\n                    } else {\n                        if (Math.ceil(count_payed/10) === key/10) {\n                            price_payed += (count_payed+10-key)*value \n                        }\n                    }\n                }\n              }\n              // output price without payed prices\n              item.price =price_all-price_payed;\n            });\n\n            return newstate;\n\n        case 'MESSAGE_NOT_FOUND':\n            return [ ...state, ...action.lead];\n        default:\n          // will NOT execute because of the line preceding the switch.\n    }\n    return state;\n}","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from '../reducers';\n\nfunction configureStore(initialState) {\n    let createStoreWithMiddleware;\n\n    const logger = createLogger();\n    const middleware = applyMiddleware(thunk, logger);\n\n    createStoreWithMiddleware = compose(\n        middleware\n    );\n\n    return createStoreWithMiddleware(createStore)(rootReducer, initialState);\n}\n\nlet store = configureStore();\n\nexport default store;","const ROOT_URL = \"http://localhost:8000/\";\n\nexport const AuthUrls = {\n    LOGIN: `${ROOT_URL}rest-auth/login/`,\n    SIGNUP: `${ROOT_URL}rest-auth/registration/`,\n    CHANGE_PASSWORD: `${ROOT_URL}rest-auth/password/change/`,\n    RESET_PASSWORD: `${ROOT_URL}rest-auth/password/reset/`,\n    RESET_PASSWORD_CONFIRM: `${ROOT_URL}rest-auth/password/reset/confirm/`,\n    USER_ACTIVATION: `${ROOT_URL}rest-auth/registration/verify-email/`,\n    USER_PROFILE: `${ROOT_URL}rest-auth/user/`\n};","export function getUserToken(state) {\n    return state.auth.token;\n}","import axios from \"axios\";\nimport { SubmissionError } from 'redux-form';\nimport { actions as notifActions } from 'redux-notifications';\nimport { AuthTypes } from \"../constants/actionTypes\";\nimport { AuthUrls } from \"../constants/urls\";\nimport store from \"../store\";\nimport { getUserToken } from \"../utils/authUtils\";\n\n\nconst { notifSend } = notifActions;\nexport function authLogin(token) {\n    return {\n        type: AuthTypes.LOGIN,\n        payload: token,\n    };\n}\n\nexport function loginUser(formValues, dispatch, props) {\n        const loginUrl = AuthUrls.LOGIN;\n\n        return axios.post(loginUrl, formValues).then((response) => {\n            // If request is good...\n            // Update state to indicate user is authenticated\n            const token = response.data.key; \n\n            dispatch(authLogin(token));\n            localStorage.setItem(\"token\", token);\n\n            // redirect to the route '/'\n            props.history.push(\"/\");\n            // to getUserProfile in Header\n            dispatch(getUserProfile())\n        }).catch(error => {\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n\nexport function logoutUser() {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"csrftoken\");\n    return {\n        type: AuthTypes.LOGOUT\n    };\n}\n\nexport function signupUser(formValues, dispatch, props) {\n    const signupUrl = AuthUrls.SIGNUP;\n\n    return axios.post(signupUrl, formValues)\n        .then((response) => {\n            // If request is good...\n            // you can login if email verification is turned off.\n            // const token = response.data.key;\n            // dispatch(authLogin(token));\n            // localStorage.setItem(\"token\", token);\n\n            // email need to be verified, so don't login and send user to signup_done page.\n            // redirect to signup done page.\n            props.history.push(\"/signup_done\");\n        })\n        .catch((error) => {\n            // If request is bad...\n            // Show an error to the user\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n\nfunction setUserProfile(payload) {\n    return {\n        type: AuthTypes.USER_PROFILE,\n        payload: payload\n    };\n}\n\nexport function getUserProfile() {\n    return function(dispatch) {\n        const token = getUserToken(store.getState());\n\n        if (token) {\n            axios.get(AuthUrls.USER_PROFILE, {\n                headers: {\n                    authorization: 'Token ' + token\n                }\n            }).then(response => {\n                dispatch(setUserProfile(response.data))\n            }).catch((error) => {\n                // If request is bad...\n                // Show an error to the user\n                console.log(error);\n                // TODO: send notification and redirect\n            });\n        }\n    };\n}\n\nexport function changePassword(formValues, dispatch, props) {\n    const changePasswordUrl = AuthUrls.CHANGE_PASSWORD;\n    const token = getUserToken(store.getState());\n\n    if (token) {\n        return axios.post(changePasswordUrl, formValues, {\n            headers: {\n                authorization: 'Token ' + token\n            }\n        })\n            .then((response) => {\n                dispatch(notifSend({\n                    message: \"Password has been changed successfully\",\n                    kind: \"info\",\n                    dismissAfter: 5000\n                }));\n                // redirect to the route '/profile'\n                props.history.push(\"/profile\");\n            })\n            .catch((error) => {\n                // If request is bad...\n                // Show an error to the user\n                const processedError = processServerError(error.response.data);\n                throw new SubmissionError(processedError);\n            });\n    }\n}\n\nexport function resetPassword(formValues, dispatch, props) {\n    const resetPasswordUrl = AuthUrls.RESET_PASSWORD;\n\n    return axios.post(resetPasswordUrl, formValues)\n        .then(response => {\n            // redirect to reset done page\n            props.history.push(\"/reset_password_done\");\n        }).catch((error) => {\n            // If request is bad...\n            // Show an error to the user\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n\nexport function confirmPasswordChange(formValues, dispatch, props) {\n    const { uid, token } = props.match.params;\n    const resetPasswordConfirmUrl = AuthUrls.RESET_PASSWORD_CONFIRM;\n    const data = Object.assign(formValues, { uid, token });\n\n    return axios.post(resetPasswordConfirmUrl, data)\n        .then(response => {\n            dispatch(notifSend({\n                message: \"Password has been reset successfully, please log in\",\n                kind: \"info\",\n                dismissAfter: 5000\n            }));\n            props.history.push(\"/login\");\n        }).catch((error) => {\n            // If request is bad...\n            // Show an error to the user\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n\nexport function activateUserAccount(formValues, dispatch, props) {\n    const { key } = props.match.params;\n    const activateUserUrl = AuthUrls.USER_ACTIVATION;\n    const data = Object.assign(formValues, { key });\n\n    return axios.post(activateUserUrl, data)\n        .then(response => {\n            dispatch(notifSend({\n                message: \"Your account has been activated successfully, please log in\",\n                kind: \"info\",\n                dismissAfter: 5000\n            }));\n            props.history.push(\"/login\");\n        }).catch((error) => {\n            // If request is bad...\n            // Show an error to the user\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n\nexport function updateUserProfile(formValues, dispatch, props) {\n    const token = getUserToken(store.getState());\n\n    return axios.patch(AuthUrls.USER_PROFILE, formValues, {\n        headers: {\n            authorization: 'Token ' + token\n        }\n    })\n        .then(response => {\n            dispatch(notifSend({\n                message: \"Your profile has been updated successfully\",\n                kind: \"info\",\n                dismissAfter: 5000\n            }));\n            props.history.push(\"/profile\");\n        }).catch((error) => {\n            // If request is bad...\n            // Show an error to the user\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n// util functions\nfunction processServerError(error) {\n    return  Object.keys(error).reduce(function(newDict, key) {\n        if (key === \"non_field_errors\") {\n            newDict[\"_error\"].push(error[key]);\n        } else if (key === \"token\") {\n            // token sent with request is invalid\n            newDict[\"_error\"].push(\"The link is not valid any more.\");\n        } else {\n            newDict[key] = error[key];\n        }\n\n        return newDict\n    }, {\"_error\": []});\n}","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n// import { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n    } from 'reactstrap';\n\nimport { getUserProfile } from \"../actions/authActions\";\nimport { renderUser } from \"../utils/noteUtils\";\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            collapsed: true\n        };\n    }\n    toggleNavbar = () => {\n        this.setState({\n            collapsed: !this.state.collapsed\n        });\n    }\n\n    static propTypes = {\n        authenticated: PropTypes.bool,\n        getUserProfile: PropTypes.func.isRequired,\n        user: PropTypes.object\n    };\n    componentWillMount() {\n        this.props.getUserProfile();\n    } \n\n    renderLinks() {\n        if (this.props.authenticated) {\n            const { user } = this.props\n            return (\n                \n                    <Nav className=\"mr-auto\" navbar>\n                        <NavItem key=\"investors\">\n                            <NavLink className=\"nav-link\" onClick={this.forceUpdate} href={\"/investors\"}>Investors</NavLink>\n                        </NavItem>\n                        <NavItem key=\"payments\">\n                            <NavLink className=\"nav-link\" onClick={this.forceUpdate} href={\"/payments\"}>Payments</NavLink>\n                        </NavItem>\n                        <NavItem key=\"profile\">\n                            <NavLink className=\"nav-link\" href=\"/profile\">{renderUser(user)}</NavLink>\n                        </NavItem>\n                        <NavItem key=\"logout\">\n                            <NavLink className=\"nav-link\" href=\"/logout\">Logout</NavLink>\n                        </NavItem>\n                    </Nav>\n                \n            );\n\n        } else {\n            return (\n                    <Nav className=\"ml-auto\" navbar>\n                        <NavItem key=\"login\">\n                            <NavLink className=\"nav-link\" href=\"/login\">Login</NavLink>\n                        </NavItem>,\n                        <NavItem key=\"signup\">\n                            <NavLink className=\"nav-link\" href=\"/signup\">Sign Up</NavLink>\n                        </NavItem>\n                    </Nav>\n            );\n        }\n    }\n\n    render() {\n        return (\n            <Navbar color=\"info\" dark expand=\"md\">\n                <NavbarBrand href=\"/\">Lead Platform</NavbarBrand>\n                <NavbarToggler onClick={this.toggleNavbar} />\n                  <Collapse isOpen={!this.state.collapsed} navbar>                    \n                        {this.renderLinks()}\n                  </Collapse>\n            </Navbar>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        authenticated: state.auth.authenticated,\n        user: state.auth.user\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getUserProfile: () => {\n            return dispatch(getUserProfile());\n        }\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import React from \"react\";\n\n\nexport const renderUser = (user) => {\n  // const user = this.props.user;\n  if (user) {\n      return <div>{user.username}</div>\n  }\n\n};\n// export const renderError = (errors) => {\n\n// \tif (Object.keys(errors).length) {\n// \t  return (\n// \t    <div>\n// \t        <div>{ errors['text'] }</div> \n// \t        <div>{ errors['phone'] }</div>\n// \t    </div>\n// \t    );\n// \t}\n// \treturn null;\n// };","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n// import {withRouter} from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nexport default function(ComposedComponent) {\n    class Authentication extends Component {\n\n        static propTypes = {\n            history: PropTypes.object\n        };\n\n        componentWillMount() {\n            this.checkAuthentication(this.props);\n\n        }\n\n        componentWillUpdate(nextProps) {\n            this.checkAuthentication(nextProps);\n        }\n\n        checkAuthentication(props) {\n            if (!props.authenticated) {\n                this.props.history.push(\"/login\");\n            }\n        }\n\n        render() {\n            return <ComposedComponent {...this.props} />\n        }\n    }\n\n    function mapStateToProps(state) {\n\n        // provide is_staff to props\n        let is_staff = false;\n        if (state.auth.user && (state.auth.user.is_staff || state.auth.user.is_superuser)) {\n            is_staff = true;\n        }\n        return { authenticated: state.auth.authenticated, \n                is_staff: is_staff, \n            }\n    }\n    // return withRouter(connect(mapStateToProps)(Authentication));\n    return connect(mapStateToProps)(Authentication);\n}\n","import React, {Component} from 'react';\n\nimport '../index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {\n\tRow, Col, Card, CardBody, CardTitle, CardText, CardImg\n} from \"reactstrap\";\n\nimport { Link } from 'react-router-dom'\n\nclass PostDetail extends Component {\n\tconstructor (props) {\n\t\tsuper(props)\n\t\tthis.titleWasClicked = this.titleWasClicked.bind(this)\n\t\tthis.toggleContent = this.toggleContent.bind(this)\n\t\tthis.removeContent = this.removeContent.bind(this)\n\t\tthis.state = {\n\t\t\tshowContent: false,\n\t\t\tpostItem: null\n\t\t}\n\t}\n\ttitleWasClicked (event) {\n\t\tevent.preventDefault()\n\t\tconst {dataCallback} = this.props\n\t\tlet newPostItem = this.props.post\n\t\tnewPostItem['title'] = \"This is new Title\"\n\t\t\n\t\tthis.setState({\n\t\t\tpostItem: newPostItem\n\t\t})\n\t\tif (dataCallback !== undefined) {\n\t\t\tdataCallback(newPostItem)\t\n\t\t}\t\t\t\n\t}\n\ttoggleContent (event) {\n\t\tevent.preventDefault()\t\n\t\tthis.setState({\n\t\t\tshowContent: !this.state.showContent\n\t\t})\t\t\n\t}\n\tremoveContent (event) {\n\t\tif (this.props.didHandleRemove) {\n\t\t\tthis.props.didHandleRemove(this.props.post)\n\t\t}\t\n\t}\n\tcomponentDidMount() {\n\t\tconst {post} = this.props\n\t\tthis.setState({\n\t\t\tpostItem: post\n\t\t})\n\t}\n\tsetPostStateOnProps() {\n\t\tconst {post} = this.props\n\t\tthis.setState({\n\t\t\tpostItem: post\n\t\t})\n\t}\n\tcomponentDidUpdate(prevProps, prevState, snapshop) {\n\t\tif (this.props !== prevProps) {\t\t\t\n\t\t\tthis.setPostStateOnProps()\n\t\t}\n\n\t}\n\trender () {\n\t\tconst {postItem} = this.state\n\t\tconst {showContent} = this.state\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{postItem !== null \n\t\t\t\t?<Row className=\"ContentItem\">\n\t\t\t\t\t<Col xs=\"12\" md=\"6\">\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<CardImg top width=\"100%\" src={postItem.image}>\n\t\t\t\t\t\t\t</CardImg>\n\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t<CardTitle onClick={this.titleWasClicked}>\n\t\t\t\t\t\t\t\t\t{postItem.title}\n\t\t\t\t\t\t\t\t</CardTitle>\n\t\t\t\t\t\t\t\t{showContent === true ? <CardText>\n\t\t\t\t\t\t\t\t\t{postItem.description}\n\t\t\t\t\t\t\t\t</CardText> : \"\"}\n\t\t\t\t\t\t\t\t<button className='btn btn-info' onClick={this.toggleContent}>Toggle Content Display</button>\n\t\t\t\t\t\t\t\t<button className='btn btn-success' onClick={this.removeContent}>Remove content</button>\n\t\t\t\t\t\t\t\t<Link className='btn btn-danger' to={'/posts/' + postItem.slug}>{postItem.title}</Link>\n\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t:\"\"}\n\t\t\t</div>\n\n\t\t)\n\t}\n}\nexport default PostDetail\n","import React, {Component} from 'react';\nimport '../index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport PostDetail from './PostDetail'\n\nclass PostList extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\t'items': [],\n\t\t\tisOldestFirst: true,\n\t\t\tisLoading: true,\n\t\t}\n\t\tthis.handleDataCallback = this.handleDataCallback.bind(this)\n\t\tthis.handlePostRemove = this.handlePostRemove.bind(this)\n\t\tthis.toggleListReverse = this.toggleListReverse.bind(this)\n\t\tthis.toggleSortId = this.toggleSortId.bind(this)\n\t}\n\n\n\tsortById () {\n\t\tconst {items} = this.state\n\t\tlet newPostList = items\n\t\tif (this.state.isOldestFirst) {\n\t\t\tnewPostList = items.sort((a, b) => a.id < b.id)\n\t\t} else {\n\t\t\tnewPostList = items.sort((a, b) => a.id > b.id)\n\t\t}\n\t\tthis.setState({\n\t\t\titems: newPostList,\n\t\t\tisOldestFirst: !this.state.isOldestFirst\n\t\t})\n\t}\n\ttoggleSortId(event) {\n\t\tthis.sortById()\n\t}\n\n\ttoggleListReverse(event) {\n\t\tconst {items} = this.state\n\t\tlet newPostList = items.reverse()\n\t\tthis.setState({\n\t\t\titems: newPostList\n\t\t})\n\t\t\n\t}\n\n\tupdateBackend(currentPostList) {\n\t\tconsole.log(currentPostList)\n\t\tthis.setState({\n\t\t\tpostItem: currentPostList\n\t\t})\n\t}\n\thandleDataCallback(postItem) {\n\t\tlet currentPostList = this.state.items\n\t\tcurrentPostList.push(postItem)\n\t\tthis.updateBackend(currentPostList)\n\t}\n\thandlePostRemove(postItem) {\n\t\tlet currentPostList = this.state.items\n\t\tcurrentPostList.pop(postItem)\n\t\tthis.updateBackend(currentPostList)\n\t}\n\tcomponentDidMount() {\n\t\tthis.getItems();\n\t}\n\tgetItems() {\n\t\t// setTimeout(() => this.setState({ isLoading: false }), 2500); // simulates an async action, and hides the spinner\n\t\tfetch('http://127.0.0.1:8000/api/item/')\n\t\t  .then(results => results.json())\n\t\t  .then(results => this.setState({'items':results, isLoading: false}));\n\t}\n\trender() {\n\t\tconst {items, isLoading} = this.state\n\t\tif (isLoading) {\n\t\t\treturn <p>Loading ...</p>;\n\t\t}\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>HI!</h1>\n\t\t\t\t<button className='btn btn-secondary mx-auto d-block' onClick={this.toggleListReverse}>Reverse</button>\n\t\t\t\t<button className='btn btn-info mx-auto d-block' onClick={this.toggleSortId}>SortId</button>\n\t\t\t\t<div>{items.map((post,index) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<PostDetail \n\t\t\t\t\t\t\tpost={post} \n\t\t\t\t\t\t\tkey={`post-list-key ${index}`}\n\t\t\t\t\t\t\tdataCallback={this.handleDataCallback} \n\t\t\t\t\t\t\tdidHandleRemove={this.handlePostRemove} />\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\nexport default PostList\n","import React, { Component } from 'react'\nimport PostList from '../posts/PostList';\nimport { Link } from 'react-router-dom'\n\nclass Landing extends Component {\n  render () {\n    return (\n\n      \t<div className='text-center'>\t\n      \t\t<Link className='some-link' to='/posts/dynamic/'>Dynamic Page</Link>\n        \n        \t<PostList />                \n\t\t</div>\n    )\n  }\n}\nexport default Landing\n","import React from \"react\";\n\nexport const renderField = ({ input, label, type, meta: { touched, error } }) => (\n    <div>\n        <label>{label}</label>\n        <div>\n            <input className=\"form-control\" {...input} type={type}/>\n        </div>\n        {touched && ((error && <div className=\"alert alert-danger p-1\"><small>{error}</small></div>))}\n    </div>\n);\n\nexport const renderTextAreaField = ({ input, label, type, meta: { touched, error } }) => (\n    <div>\n        <label>{label}</label>\n        <div>\n            <textarea className=\"form-control\" {...input} type={type}/>\n        </div>\n        {touched && ((error && <div className=\"alert alert-danger p-1\"><small>{error}</small></div>))}\n    </div>\n);\n\nexport const renderError = (errorMessages) => {\n    if ( errorMessages) {\n        return (\n            <div className=\"alert alert-danger\">\n                {errorMessages}\n            </div>\n        )\n    }\n};\n","import React, { Component } from \"react\";\n// import PropTypes from \"prop-types\";\nimport { reduxForm, Field, propTypes } from \"redux-form\";\nimport { Link } from \"react-router-dom\";\nimport { required } from \"redux-form-validators\"\n\nimport { renderField, renderError} from \"../../utils/renderUtils\";\nimport { loginUser } from \"../../actions/authActions\";\n\nclass Login extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Please Log In</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"email\" label=\"Email\" component={renderField}\n                               type=\"text\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"password\" label=\"Password\" component={renderField}\n                               type=\"password\"  validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        { renderError(error) }\n                        <button action=\"submit\" className=\"btn btn-primary\">Login</button>\n                    </fieldset>\n\n                    <p>Not registered? <Link to=\"/signup\">Signup Here!</Link></p>\n                    <Link to=\"/reset_password\">forgot password?</Link>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default reduxForm({\n    form: \"login\",\n    onSubmit: loginUser\n})(Login);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\n\nclass Logout extends Component {\n\n    static propTypes = {\n        logoutUser: PropTypes.func.isRequired\n    };\n\n    componentWillMount() {\n        this.props.logoutUser();\n    }\n\n    render() {\n        return (\n            <h2>Sorry to see you go...</h2>\n        );\n    }\n}\n\nexport default connect(null, { logoutUser })(Logout);","import React, { Component } from \"react\";\n// import PropTypes from \"prop-types\";\nimport { reduxForm, Field, propTypes } from \"redux-form\";\nimport { required } from \"redux-form-validators\"\nimport { renderField, renderError } from \"../../utils/renderUtils\";\nimport { signupUser } from \"../../actions/authActions\";\n\nclass Signup extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n\n    render() {\n        const { handleSubmit, error } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Sign Up</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"email\" label=\"Email\" component={renderField}\n                               type=\"text\"/>\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"username\" label=\"Username\" component={renderField}\n                               type=\"text\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"password1\" label=\"Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"password2\" label=\"Confirm Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    { renderError(error) }\n\n                    <fieldset className=\"form-group\">\n                        <button action=\"submit\" className=\"btn btn-primary\">Sign Up</button>\n                    </fieldset>\n                </form>\n            </div>\n        );\n    }\n}\n\n// Sync field level validation for password match\nconst validateForm = values => {\n    const errors = {};\n    const { password1, password2 } = values;\n    if (password1 !== password2) {\n        errors.password2 = \"Password does not match.\"\n    }\n    return errors;\n};\n\nexport default reduxForm({\n    form: \"signup\",\n    validate: validateForm,\n    onSubmit: signupUser\n})(Signup);\n","import React, { Component } from \"react\";\n\nexport default class SignupDone extends Component {\n    render() {\n        return (\n            <h3 className=\"mx-5\">\n                Thanks for your registration, please follow the link sent to your provided email to activate\n                your account.\n            </h3>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { reduxForm, propTypes } from \"redux-form\";\nimport { activateUserAccount } from \"../../actions/authActions\";\nimport { renderError } from \"../../utils/renderUtils\";\n\nclass AccountActivation extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Please click the button below to activate your account</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        {renderError(error)}\n                        <button action=\"submit\" className=\"btn btn-primary\">Activate</button>\n                    </fieldset>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default reduxForm({\n    form: \"user_account_activation\",\n    onSubmit: activateUserAccount,\n})(AccountActivation);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getUserProfile } from \"../../actions/authActions\";\nimport {withRouter} from \"react-router-dom\";\n\nclass UserProfile extends Component {\n\n    static propTypes = {\n        getUserProfile: PropTypes.func.isRequired,\n        user: PropTypes.object\n    };\n\n    componentWillMount() {\n        this.props.getUserProfile();\n    }\n\n    renderUser() {\n        const user = this.props.user;\n        if (user) {\n            return (\n                <div className=\"mx-2\">\n                    <h4>username: {user.username}</h4>\n                    <h4>First Name: {user.first_name}</h4>\n                    <h4>Last Name: {user.last_name}</h4>\n                    <h4>email: {user.email}</h4>\n                    <h4>Website: {user.website}</h4>\n                    <hr />\n                    <h4>About Myself:</h4>\n                    <p>{user.about}</p>\n\n                </div>\n            );\n        }\n        return null;\n    }\n\n    render() {\n        return (\n            <div>\n                {this.renderUser()}\n                {\" \"}\n                <hr />\n                <Link className=\"btn btn-primary mr-2\" to=\"/profile_edit\">Update Profile</Link>\n                <Link className=\"btn btn-primary\" to=\"/change_password\">Change Password</Link>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        user: state.auth.user\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, { getUserProfile } )(UserProfile));","import React, { Component } from \"react\";\nimport { reduxForm, Field, propTypes } from \"redux-form\";\nimport { connect } from 'react-redux'\n// import { required } from \"redux-form-validators\"\n\nimport { renderField, renderTextAreaField, renderError} from \"../../utils/renderUtils\";\nimport { updateUserProfile } from \"../../actions/authActions\";\n\nclass Login extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Edit Profile</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"username\" label=\"Username\" component={renderField}\n                               type=\"text\"\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"first_name\" label=\"First Name\" component={renderField}\n                               type=\"text\"\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"last_name\" label=\"Last Name\" component={renderField}\n                               type=\"text\"\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"website\" label=\"Website\" component={renderField}\n                               type=\"text\"\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"about\" label=\"About Yourself\" component={renderTextAreaField}\n                               type=\"text\"\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        { renderError(error) }\n                        <button action=\"submit\" className=\"btn btn-primary\">Save</button>\n                    </fieldset>\n                </form>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        initialValues: state.auth.user\n    }\n}\n\nexport default connect(mapStateToProps)(reduxForm({\n    form: \"update_user_profile\",\n    onSubmit: updateUserProfile\n})(Login));\n","import React, { Component } from \"react\";\n// import PropTypes from \"prop-types\";\nimport { reduxForm, Field, propTypes } from \"redux-form\";\nimport { required } from \"redux-form-validators\"\nimport { changePassword } from \"../../actions/authActions\";\nimport { renderField, renderError } from \"../../utils/renderUtils\";\n\nclass PasswordChange extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Change Password</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"old_password\" label=\"Old Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"new_password1\" label=\"New Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"new_password2\" label=\"Confirm New Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        {renderError(error)}\n                        <button action=\"submit\" className=\"btn btn-primary\">Submit</button>\n                    </fieldset>\n                </form>\n            </div>\n        );\n    }\n}\n\n// Sync field level validation for password match\nconst validateForm = values => {\n    const errors = {};\n    const { new_password1, new_password2 } = values;\n    if (new_password1 !== new_password2) {\n        errors.new_password2 = \"Password does not match.\"\n    }\n    return errors;\n};\n\nexport default reduxForm({\n    form: \"change_password\",\n    onSubmit: changePassword,\n    validate: validateForm\n})(PasswordChange);\n","import React, { Component } from \"react\";\nimport { reduxForm, Field, propTypes } from \"redux-form\";\nimport { required } from \"redux-form-validators\"\n\nimport { renderField, renderError} from \"../../utils/renderUtils\";\nimport { resetPassword } from \"../../actions/authActions\";\n\nclass PasswordReset extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Reset Your Password</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"email\" label=\"Please enter your email\" component={renderField}\n                               type=\"text\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        { renderError(error) }\n                        <button action=\"submit\" className=\"btn btn-primary\">Submit</button>\n                    </fieldset>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default reduxForm({\n    form: \"password_reset\",\n    onSubmit: resetPassword\n})(PasswordReset);\n","import React, { Component } from \"react\";\n\nexport default class PasswordResetDone extends Component {\n    render() {\n        return (\n            <h3 className=\"mx-5\">An password reset email has been sent to your email. Please follow the link to reset your password.</h3>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { reduxForm, Field, propTypes } from \"redux-form\";\nimport { required } from \"redux-form-validators\"\nimport { confirmPasswordChange } from \"../../actions/authActions\";\nimport { renderField, renderError } from \"../../utils/renderUtils\";\n\nclass PasswordResetConfirm extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Create New Password</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"new_password1\" label=\"New Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"new_password2\" label=\"Confirm New Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        {renderError(error)}\n                        <button action=\"submit\" className=\"btn btn-primary\">Submit</button>\n                    </fieldset>\n                </form>\n            </div>\n        );\n    }\n}\n\n// Sync field level validation for password match\nconst validateForm = values => {\n    const errors = {};\n    const { new_password1, new_password2 } = values;\n    if (new_password1 !== new_password2) {\n        errors.new_password2 = \"Password does not match.\"\n    }\n    return errors;\n};\n\nexport default reduxForm({\n    form: \"password_reset_confirm\",\n    onSubmit: confirmPasswordChange,\n    validate: validateForm\n})(PasswordResetConfirm);\n","import React from \"react\";\n\nconst NoMatch = () => (\n    <h2 className=\"mt-2\">{\"Sorry, the page you are looking for doesn't exist.\"}</h2>\n);\n\nexport default NoMatch;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\n\nclass PostInline extends Component {\n  // {post !== undefined ? <div className={elClass}>\n  //    <h1><Link maintainScrollPosition={false} to={{\n  //        pathname:`/react/posts/${post.slug}`,\n  //        state: {fromDashboard: false}\n  //    }}>{post.title}</Link></h1>\n\n  //   <p className={showContent}>{post.content}</p>\n  //   </div>\n  //   : \"\"}\n  render() {\n      const {post} = this.props\n      const {elClass} = this.props\n      const showContent = elClass === 'card' ? 'd-block' : 'd-none'\n    return (\n      <div>\n          {post !== undefined ? \n            <div className={elClass}>\n            <Link \n              to={{pathname:`/react/posts/${post.slug}`,\n              state: {fromDashboard: false}\n            }}>\n                <h1>{post.title}</h1>\n            </Link>\n                  <p className={showContent}>{post.content}</p>\n            </div>\n          : ''}\n      </div>\n    );\n  }\n}\n\nexport default PostInline;\n","import React, { Component } from 'react';\nimport 'whatwg-fetch'\nimport cookie from 'react-cookies'\nimport { Link } from 'react-router-dom'\nimport PostInline from './PostInline'\n// import PostCreate from './PostCreate'\n// import PostForm from './PostForm'\nimport { connect } from 'react-redux'\n\nimport store from \"../store\";\nimport { getUserToken } from \"../utils/authUtils\";\n\nclass Posts extends Component {\n\n  constructor(props){\n      super(props)\n      this.togglePostListClass = this.togglePostListClass.bind(this)\n      this.handleNewPost = this.handleNewPost.bind(this)\n      this.loadMorePosts =this.loadMorePosts.bind(this)\n      this.state = {\n          posts: [],\n          postsListClass: \"card\",\n          next: null,\n          previous: null,\n          author: false,\n          count: 0,\n          authenticated: false, //adding redux-props\n      }\n  }\n\n  loadMorePosts(){\n      const {next} = this.state \n      if (next !== null || next !== undefined) {\n           this.props.loadPosts(next)\n      }\n     \n  }\n    \n  loadPosts(nextEndpoint){\n      let endpoint = '/api/posts/' \n      if (nextEndpoint !== undefined) {\n          endpoint = nextEndpoint\n      }\n      let thisComp = this\n      let lookupOptions = {\n          method: \"GET\",\n          headers: {\n              'Content-Type': 'application/json'\n          }\n      }\n      const csrfToken = cookie.load('csrftoken')\n      const token = getUserToken(store.getState());\n      console.log('token', token);\n      console.log('csrftoken', csrfToken);\n\n      if (csrfToken !== undefined) {\n          lookupOptions['credentials'] = 'include'\n          lookupOptions['headers']['X-CSRFToken'] = csrfToken\n       } \n\n      fetch(endpoint, lookupOptions)\n      .then(function(response){\n          return response.json()\n      }).then(function(responseData){\n          console.log(responseData)\n          // let currentPosts = thisComp.state.posts\n          // let newPosts = currentPosts.concat(responseData.results)\n          // console.log(currentPosts)\n           thisComp.setState({\n                  posts: thisComp.state.posts.concat(responseData.results),\n                  next: responseData.next,\n                  previous: responseData.previous,\n                  author: responseData.author,\n                  count: responseData.count,\n                  authenticated: thisComp.props.state.auth.authenticated //adding redux-props\n              })\n      }).catch(function(error){\n          console.log(\"error\", error)\n      })\n  }\n\n  handleNewPost(postItemData){\n      // console.log(postItemData)\n      let currentPosts = this.state.posts\n      currentPosts.unshift(postItemData) // unshift\n      this.setState({\n          posts: currentPosts\n      })\n  }\n\n  \n\n  togglePostListClass(event){\n      event.preventDefault()\n      let currentListClass = this.state.postsListClass\n      if (currentListClass === \"\"){\n          this.setState({\n              postsListClass: \"card\",\n          })\n      } else {\n          this.setState({\n              postsListClass: \"\",\n          })\n      }\n      \n  }\n\n  componentDidMount(){\n      this.setState({\n          posts: [],\n          postsListClass: \"card\",\n          next: null,\n          previous: null,\n          author: false,\n          count: 0,\n          authenticated: false,\n      })\n      this.loadPosts()\n  }\n  // {author === true ? <Link className='mr-2' maintainScrollPosition={false} to={{\n  //           pathname: `/posts/create/`,\n  //           state: { fromDashboard: false }\n  //         }}>Create Post</Link> : \"\"}\n  \n  // <button onClick={this.togglePostListClass}>Toggle Class</button>\n  // {posts.length > 0 ? posts.map((postItem, index)=>{\n  //     return (\n  //             <PostInline post={postItem} elClass={postsListClass} />\n  //     )\n  // }) : <p>No Posts Found</p>}\n  // {next !== null ? <button onClick={this.loadMorePosts}>Load more</button> : ''}\n  render() {\n      const {posts} = this.state\n      const {postsListClass} = this.state\n      // const {author} = this.state\n      const {next} = this.state \n      // const {auth} = this.props.state.auth.authenticated\n      const {authenticated} = this.state //adding redux-props\n      // const csrfToken = cookie.load('csrftoken')\n    return (\n      <div>\n        {authenticated === true ?\n          <Link className='mr-2' to={{\n            pathname: `/react/posts/create/`,\n            state: { fromDashboard: false }\n          }}>Create Post</Link>\n        : ''}\n          <button onClick={this.togglePostListClass}>Toggle Class</button>\n          {posts.length > 0 ? posts.map((postItem, index)=>{\n            return (\n              <PostInline post={postItem} key={`post-list-key ${index}`} elClass={postsListClass} />\n            )\n          }) : <p>No Posts Found</p>}\n        {next !== null ? <button onClick={this.loadMorePosts}>Load more</button> : ''}\n\n      </div>\n    );\n  }\n}\n\n// export default Posts;\n\n\nconst mapStateToProps = (state) => {\n  return {\n    state: state\n  }\n}\n\nexport default connect(mapStateToProps)(Posts);\n// {(csrfToken !== 'undefined' && csrfToken !== null) ?\n// <div className='my-5'>\n//   <PostForm newPostItemCreated={this.handleNewPost} />\n// </div>\n// : ''}","import React, { Component } from 'react'\n\nimport { Link } from 'react-router-dom'\nimport Posts from '../reactify/Posts';\n\nclass ReacTifyComp extends Component {\n  componentDidMount () {\n\n  }\n\n  render () {\n    return (\n      <div>\n        <Link className='some-link' to='/about/'>Static Page</Link>\n        <Posts />\n      </div>\n      \n    )\n  }\n}\n\nexport default ReacTifyComp","import React, {Component} from 'react'\nimport 'whatwg-fetch'\nimport cookie from 'react-cookies'\nimport moment from 'moment'\n// import { Redirect } from 'react-router-dom'\n\nimport store from \"../store\";\nimport { getUserToken } from \"../utils/authUtils\";\n\n\nclass PostForm extends Component {\n    constructor(props){\n        super(props)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleInputChange = this.handleInputChange.bind(this)\n        this.handleDraftChange = this.handleDraftChange.bind(this)\n        this.clearForm = this.clearForm.bind(this)\n        this.postTitleRef = React.createRef()\n        this.postContentRef = React.createRef()\n        this.deletePost= this.deletePost.bind(this)\n        this.state = {\n            draft: false,\n            title: null,\n            slug: null,\n            content: null,\n            publish: moment(new Date()).format('YYYY-MM-DD'),\n            errors: {}\n        }\n    }\n\n    updatePost(data){\n      const {post} = this.props\n      const endpoint = `/api/posts/${post.slug}/` \n      const csrfToken = cookie.load('csrftoken')\n      const token = getUserToken(store.getState());\n      console.log('token', token);\n      console.log('csrftoken', csrfToken);\n      let thisComp = this\n      if (csrfToken !== undefined) {\n          let lookupOptions = {\n              method: \"PUT\",\n              headers: {\n                  'Content-Type': 'application/json',\n                  'X-CSRFToken': csrfToken,\n                  'Authorization': 'Token ' + token\n              },\n              body: JSON.stringify(data),\n              credentials: 'include'\n          }\n\n          fetch(endpoint, lookupOptions)\n          .then(function(response){\n              return response.json()\n          }).then(function(responseData){\n              console.log(responseData)\n              if (thisComp.props.newPostItemUpdated){\n                  thisComp.props.newPostItemUpdated(responseData)\n              }\n              thisComp.clearForm()\n          }).catch(function(error){\n              console.log(\"error\", error)\n              alert(\"An error occured, please try again later.\")\n          })\n      } \n      \n  \t} \n    createPost(data){\n      const endpoint = '/api/posts/' \n      const csrfToken = cookie.load('csrftoken')\n      let thisComp = this\n      console.log('csrf', csrfToken)\n      if (csrfToken !== undefined) {\n          let lookupOptions = {\n              method: \"POST\",\n              headers: {\n                  'Content-Type': 'application/json',\n                  'X-CSRFToken': csrfToken\n              },\n              body: JSON.stringify(data),\n              credentials: 'include'\n          }\n\n          fetch(endpoint, lookupOptions)\n          .then(function(response){              \n              return response.json()\n          }).then(function(responseData){\n              console.log(responseData)\n              if (thisComp.props.newPostItemCreated){\n                  thisComp.props.newPostItemCreated(responseData)\n              }\n              thisComp.clearForm()\n              thisComp.defaultState()\n          }).catch(function(error){\n              console.log(\"error\", error)\n              alert(\"An error occured, please try again later.\")\n          })\n      } \n      \n    }\n    deletePost(event) {\n      event.preventDefault();\n      const {post} = this.props\n      const endpoint = `/api/posts/${post.slug}/` \n      const csrfToken = cookie.load('csrftoken')\n      console.log(post)\n      return fetch(endpoint, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': csrfToken\n            },\n            credentials: 'include'\n        }).then(function(response){\n          return response\n        }).then(data => {\n          if(data.status === 204){\n            // this.UpdateRoute();\n            console.log('Successfully Delete');\n          }   \n        }).catch(function(error){\n            console.log(\"error\", error)\n            alert(\"An error occured, please try again later.\")\n        })\n    };\n\n  \tclearForm(event){\n      if (event){\n        event.preventDefault()\n      }\n      this.postCreateForm.reset()\n      \n    } \n    clearFormRefs(){\n      this.postTitleRef.current=''\n      this.postContentRef.current=''\n    }  \t\n\thandleSubmit(event){      \n\t    event.preventDefault()\n\t    let data = this.state\n      const {post} = this.props\n      if (post !== undefined) {\n        this.updatePost(data)\n      } else {\n        this.createPost(data)\n      }\n\t    \n      console.log({post})\n\t}\n\thandleInputChange(event){\n        event.preventDefault()\n        let key = event.target.name\n        let value = event.target.value\n\n        if (key === 'title'){\n            if (value.length > 120){\n                alert(\"This title is too long\")\n            }\n        }\n        this.setState({\n            [key]: value\n\n        })\n    }\n  //fix doubleclick checkbox\n  handleDraftChange(event){\n    this.setState({\n      draft: !this.state.draft\n    })\n  }\n  defaultState(){\n    this.setState({\n        draft: false,\n        title: null,\n        content: null,\n        slug: null,\n        publish: moment(new Date()).format('YYYY-MM-DD'),\n    })   \n  }\n  componentDidMount(){\n    const {post} = this.props\n    // this.loginCheck()\n    if (post !== undefined) {\n      this.setState({\n          draft: post.draft,\n          title: post.title,\n          content: post.content,\n          slug: post.slug,\n          publish: moment(post.publish).format('YYYY-MM-DD'),\n      })\n    } else {\n      this.defaultState()\n    }\n    // this.postTitleRef.current.focus()\n  }\n\trender(){\n\t\tconst {publish} = this.state\n    const {title} = this.state\n    const {content} = this.state\n    const {slug} = this.state\n    const cancelClass = this.props.post !== undefined ? \"d-none\" : \"\"\n    const deleteClass = this.props.post === undefined ? \"d-none\" : \"\"\n\t\treturn (\n\t\t  <div>\n\t\t    <form onSubmit={this.handleSubmit} ref={(el)=> this.postCreateForm = el}>\n\t\t        <div className=\"form-group\">\n\t\t\t\t\t<label htmlFor='blogTitle'>Title</label>\n\t\t\t\t\t<input \n\t\t\t\t\t  type='text' \n\t\t\t\t\t  id='blogTitle' \n\t\t\t\t\t  name='title' \n\t\t\t\t\t  className='form-control' \n\t\t\t\t\t  placeholder='Blog post title'\n            value={title || ''}            \n\t\t\t\t\t  ref={this.postTitleRef} \n\t\t\t\t\t  onChange={this.handleInputChange} \n\t\t\t\t\t  required='required' />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label htmlFor='content'>Content</label>\n\t\t\t\t\t<textarea \n\t\t\t\t\t  id='content' \n\t\t\t\t\t  name='content' \n\t\t\t\t\t  className='form-control' \n\t\t\t\t\t  placeholder='Post content'\n            value={content || ''}\n\t\t\t\t\t  ref={this.postContentRef} \n\t\t\t\t\t  onChange={this.handleInputChange} \n\t\t\t\t\t  required='required' />\n\t\t\t\t</div>\n\t\t\t\t<div className='form-group'>\n                    <label htmlFor='slug'>Slug</label>\n                    <input \n                      type='text' \n                      id='slug' \n                      name='slug' \n                      className='form-control'\n                      placeholder='Type Slug'\n                      value={slug || ''}  \n                      onChange={this.handleInputChange} \n                      required='required'/>\n                </div>\n\t\t        <div className=\"form-group\">\n\t\t\t\t\t<label htmlFor='draft'>\n\t\t\t\t\t\t<input \n\t\t\t\t\t\t  type='checkbox' \n\t\t\t\t\t\t  id='draft' \n\t\t\t\t\t\t  name='draft' \n\t\t\t\t\t\t  className='mr-2' \n\t\t\t\t\t\t  onChange={this.handleDraftChange} \n\t\t\t\t\t\t  checked={this.state.draft}\n\t\t\t\t\t\t  />\n\t\t\t\t\tDraft</label>\n                <button onClick={(event)=>{event.preventDefault();this.handleDraftChange()}}>Toggle Draft</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label htmlFor='publish'>Publish Date</label>\n\t\t\t\t\t<input \n\t\t\t\t\t  type='date' \n\t\t\t\t\t  id='publish' \n\t\t\t\t\t  name='publish' \n\t\t\t\t\t  className='form-control' \n\t\t\t\t\t  onChange={this.handleInputChange} \n\t\t\t\t\t  required='required'\n\t\t\t\t\t  value={publish}\n\t\t\t\t\t   />\n\t\t\t\t</div>\n\t\t\t\t<button type='submit' className='btn btn-primary '>Save</button>\n\t\t\t\t<button className={`btn btn-secondary ${cancelClass}`} onClick={this.clearForm}>Clear</button>\n        <button className={`btn btn-danger' ${deleteClass}`} onClick={this.deletePost}>Delete</button>\n\n\t\t    </form>\n\t\t  </div>\n\t\t)\n\t}\n\n}\n\nexport default PostForm\n","import React, {Component} from 'react'\nimport 'whatwg-fetch'\nimport cookie from 'react-cookies'\nimport { Link } from 'react-router-dom'\n\nimport PostForm from './PostForm'\n\nclass PostDetail extends Component {\n    constructor(props){\n        super(props)\n        this.handlePostItemUpdated= this.handlePostItemUpdated.bind(this)        \n        this.state = {\n             slug: null,\n             post: null,\n             doneLoading: false,\n        }\n    }\n\n    handlePostItemUpdated(postItemData){\n        this.setState({\n            post: postItemData\n        })\n    }\n    loadPost(slug){\n      const endpoint = `/api/posts/${slug}/` \n      let thisComp = this\n      let lookupOptions = {\n          method: \"GET\",\n          headers: {\n              'Content-Type': 'application/json'\n          }\n      }\n\n      const csrfToken = cookie.load('csrftoken')\n      if (csrfToken !== undefined) {\n          lookupOptions['credentials'] = 'include'\n          lookupOptions['headers']['X-CSRFToken'] = csrfToken\n       }\n\n      fetch(endpoint, lookupOptions)\n      .then(function(response){\n          if (response.status === 404){\n              console.log('Page not found')\n          }\n          return response.json()\n      }).then(function(responseData){\n          if (responseData.detail){\n              thisComp.setState({\n                  doneLoading: true,\n                  post: null\n              })\n          } else {\n           thisComp.setState({\n                  doneLoading: true,\n                  post: responseData\n              })\n          }\n      }).catch(function(error){\n          console.log(\"error\", error)\n      })\n  }\n\n    componentDidMount(){\n        this.setState({\n                slug: null,\n                post: null\n            })\n        if (this.props.match){\n            const {slug} = this.props.match.params\n            this.setState({\n                slug: slug,\n                doneLoading: false\n            })\n            this.loadPost(slug)\n        }\n    }\n    // const {doneLoading} = this.state\n    //     const {post} = this.state\n    //     return(\n    //         <p>{(doneLoading === true) ? <div>\n    //             {post === null ? \"Not Found\": \n    //             <div>\n    //             <h1>{post.title}</h1>\n    //             {post.slug}\n\n    //             <p className='lead'>\n    //             <Link maintainScrollPosition={false} to={{\n    //                 pathname: `/react/posts`,\n    //                 state: { fromDashboard: false }\n    //               }}>Posts</Link>\n\n    //               {post.owner === true ? <Link maintainScrollPosition={false} to={{\n    //                 pathname: `/react/posts/create/`,\n    //                 state: { fromDashboard: false }\n    //               }}>Create Post</Link> : \"\" }\n    //            </p>\n\n    //               {post.owner === true ? <PostForm post={post} postItemUpdated={this.handlePostItemUpdated} /> : \"\"}\n    //             </div>\n    //            }\n    //        </div> : \"Loading...\"}</p>\n    //     )\n    // }\n    render(){\n        const {doneLoading} = this.state\n        // const {slug} = this.state\n        const {post} = this.state\n        return(\n          <div>\n            {(doneLoading === true) ? <div>\n              {(post === null) ? \"Not Found\": \n                <div> \n                  <p className=\"lead\"><Link \n                      to={{pathname:`/react/posts/`,\n                      state: {fromDashboard: false}\n                    }}>\n                      BACK\n                    </Link>\n                    {post.owner === true ? <Link to={{\n                      pathname: `/react/posts/create/`,\n                      state: { fromDashboard: false }\n                    }}>Create Post</Link> : \"\"}\n                  </p>                 \n                  <h1>{post.slug}</h1>\n                  <h1>{post.title}</h1>\n                  {post.owner === true ? <PostForm post={post} postItemUpdated={this.handlePostItemUpdated} /> : \"\"}\n                </div>\n              }\n\n            </div> : \"Loading...\"}\n          </div>               \n        )\n    }\n}\n\nexport default PostDetail","import React, {Component} from 'react'\nimport { Link } from 'react-router-dom'\nimport PostForm from './PostForm'\n\nclass PostCreate extends Component {\n\n  render(){\n    return (\n      <div>\n      \t<Link \n          to={{pathname:`/react/posts/`,\n          state: {fromDashboard: false}\n        }}>\n          BACK\n        </Link>\n      \t<h1>Create Post</h1>\n        \t<PostForm />\n      </div>\n    )\n  }\n\n}\n\nexport default PostCreate\n// // left for reference\n\n\n\n\n// // import React, {Component} from 'react'\n// // import 'whatwg-fetch'\n// // import cookie from 'react-cookies'\n// // import moment from 'moment'\n\n// // class PostCreate extends Component {\n// //     constructor(props){\n// //         super(props)\n// //         this.handleSubmit = this.handleSubmit.bind(this)\n// //         this.handleInputChange = this.handleInputChange.bind(this)\n// //         this.handleDraftChange = this.handleDraftChange.bind(this)\n// //         this.clearForm = this.clearForm.bind(this)\n// //         this.postTitleRef = React.createRef()\n// //         this.postContentRef = React.createRef()\n// //         this.state = {\n// //             draft: false,\n// //             title: null,\n// //             content: null,\n// //             publish: null,\n// //             errors: {}\n// //         }\n// //     }\n// //     createPost(data){\n// //       const endpoint = '/api/posts/' \n// //       const csrfToken = cookie.load('csrftoken')\n// //       let thisComp = this\n// //       if (csrfToken !== undefined) {\n// //           let lookupOptions = {\n// //               method: \"POST\",\n// //               headers: {\n// //                   'Content-Type': 'application/json',\n// //                   'X-CSRFToken': csrfToken\n// //               },\n// //               body: JSON.stringify(data),\n// //               credentials: 'include'\n// //           }\n\n// //           fetch(endpoint, lookupOptions)\n// //           .then(function(response){\n// //               return response.json()\n// //           }).then(function(responseData){\n// //               console.log(responseData)\n// //               if (thisComp.props.newPostItemCreated){\n// //                   thisComp.props.newPostItemCreated(responseData)\n// //               }\n// //               thisComp.clearForm()\n// //           }).catch(function(error){\n// //               console.log(\"error\", error)\n// //               alert(\"An error occured, please try again later.\")\n// //           })\n// //       } \n      \n// //   }\n\n// //     handleSubmit(event){\n// //         event.preventDefault()\n// //         let data = this.state\n// //         this.createPost(data)\n// //     }\n\n// //     handleInputChange(event){\n// //         event.preventDefault()\n// //         let key = event.target.name\n// //         let value = event.target.value\n// //         if (key === 'title'){\n// //             if (value.length > 120){\n// //                 alert(\"This title is too long\")\n// //             }\n// //         }\n// //         this.setState({\n// //             [key]: value\n// //         })\n// //     }\n\n// //     handleDraftChange(event){\n// //       this.setState({\n// //         draft: !this.state.draft\n// //       })\n// //     }\n\n// //     clearForm(event){\n// //       if (event){\n// //         event.preventDefault()\n// //       }\n// //       this.postCreateForm.reset()\n// //     }\n\n\n// //     clearFormRefs(){\n// //       this.postTitleRef.current=''\n// //       this.postContentRef.current=''\n// //     }\n\n\n// //     componentDidMount(){\n// //         this.setState({\n// //             draft: false,\n// //             title: null,\n// //             content: null,\n// //             publish: moment(new Date()).format('YYYY-MM-DD'),\n// //         })\n// //         this.postTitleRef.current.focus()\n// //     }\n\n// //     render(){\n// //         const {publish} = this.state\n// //         let thisComp = this\n// //         return (\n// //             <form onSubmit={this.handleSubmit} ref={(el) => this.postCreateForm = el}>\n// //                 <div className='form-group'>\n// //                     <label for='title'>Post title</label>\n// //                     <input \n// //                       type='text' \n// //                       id='title' \n// //                       name='title' \n// //                       className='form-control'\n// //                       placeholder='Blog post title' \n// //                       ref = {this.postTitleRef}\n// //                       onChange={this.handleInputChange} \n// //                       required='required'/>\n// //                 </div>\n// //                  <div className='form-group'>\n// //                     <label for='content'>Content</label>\n// //                     <textarea id='content' ref = {this.postContentRef} name='content' className='form-control' placeholder='Post content' onChange={this.handleInputChange} required='required'/>\n                   \n// //                 </div>\n// //                 <div className='form-group'>\n// //                     <label for='draft'>\n// //                     <input type='checkbox' checked={this.state.draft} id='draft' name='draft' className='mr-2' onChange={this.handleDraftChange}/>\n// //                      Draft </label>\n// //                      <button onClick={(event)=>{event.preventDefault();this.handleDraftChange()}}>Toggle Draft</button>\n// //                 </div>\n// //                 <div className='form-group'>\n// //                     <label for='publish'>Publish Date</label>\n// //                     <input \n// //                     type='date' \n// //                     id='publish' \n// //                     name='publish' \n// //                     className='form-control' \n// //                     onChange={this.handleInputChange}\n// //                      value={publish}\n// //                      required='required'/>\n// //                 </div>\n// //                 <button type='submit' className='btn btn-primary'>Save</button>\n// //                 <button className='btn btn-secondary' onClick={this.clearForm}>Cancel</button>\n// //             </form>\n// //         )\n// //     }\n\n// // }\n\n// // export default PostCreate","import React, { Component } from 'react'\n\nimport * as notes from \"../../actions/notesActions\";\nimport {connect} from 'react-redux';\nimport { Link } from 'react-router-dom'\nimport { Form, FormText,  \n  FormGroup, Label, Input, Button,\n  Dropdown, DropdownToggle, \n  DropdownMenu, DropdownItem, Table, CustomInput,\n  Modal, ModalHeader, ModalBody, ModalFooter, } from 'reactstrap';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEdit, faTrash, faMale, \n  faUsers, faSave, faPlusSquare, \n  faSearch, faExchangeAlt, faLongArrowAltDown,\n  faCheckCircle, faHandHoldingUsd, faTimes } from '@fortawesome/free-solid-svg-icons'\n \nclass InputForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: \"\",\n      phone: \"\",\n      status: 'Candidate',\n      email: \"\",\n      linkedin_profile: \"\",\n      website: \"\",\n      correspondence: \"\",\n      is_corporate: false,\n      is_payed: false,\n      searchtext: \"\",\n      updateNoteId: null,\n      updateNoteIndex: null,\n      dropdownOpen: false,\n      is_ordering_name: false,\n      modal: false,\n      is_staff: false,\n      // loading: true,\n      order: [],\n      errors: {},\n      notes: [\n          {\n            count: null,\n            next: null,\n            previous: null,\n            noteitems: []\n          },\n        ],\n      }\n  }\n\n  // // END FETCH DATA AFTER PROPS\n  componentDidMount () {\n    this.props.fetchNotes()\n  }\n\n  resetForm = () => {\n    this.setState({text: \"\", phone: '', email:'', errors: {}, \n      updateNoteId: null, status: 'Candidate', is_corporate: false, \n      is_payed: false, linkedin_profile: \"\", website: \"\",\n      correspondence: \"\", });\n  }\n  addNew = () => {\n    this.setState({text: \"\", phone: '', email:'', errors: {}, \n      updateNoteId: null, status: 'Candidate', is_corporate: false, \n      is_payed: false, linkedin_profile: \"\", website: \"\", \n      modal: true, correspondence: \"\", });\n  }\n  resetSearch = () => {\n    this.setState({ searchtext: \"\" });\n  }\n  resetSort = () => {\n    this.setState({order: []}, function () {\n        this.handleOrderNotes();\n    });\n  }  \n  selectForEdit = (index, id) => {\n      let note = this.props.notes[index].noteitems[id];\n      this.setState({text: note.text, phone: note.phone, \n        status: note.status, is_payed: note.is_payed, \n        is_corporate: note.is_corporate, email: note.email, \n        linkedin_profile: note.linkedin_profile, \n        website: note.website, correspondence:note.correspondence,\n        updateNoteId: id, updateNoteIndex: index, modal: true, });\n  }\n\n  selectForDelete = (index, id) => {\n    this.props.deleteNote(index, id)\n  }\n  componentWillReceiveProps(nextProps) {\n    // если длина массива меньше чем предыдущая длина (один элемент удален)\n    // то пересчитываем эндпоинт для фетча (вычитаем из последнего символа next\n    // число \"1\" чтобы получить текущий фетч), если в нексте на конце \"1\", то обрезаем\n    // до знака \"?\"\n    let nextForDelete = null;\n    // this.setState({is_staff: nextProps.auth.user.is_staff,}) \n    if(this.props.notes[0].noteitems.length > nextProps.notes[0].noteitems.length && this.state.searchtext === \"\" && this.state.is_ordering_name === \"\") {\n      nextForDelete = this.props.notes[0].next\n      if (nextForDelete) {\n        let lastChar = parseInt(nextForDelete.slice(-1), 10)\n        if ((lastChar-1) >= 2) {\n          nextForDelete = nextForDelete.slice(0, -1)+(lastChar-1);\n        } else {\n          nextForDelete = nextForDelete.split('?')[0]\n        }\n      }\n      this.props.fetchNotes(nextForDelete);\n    }\n  }  \n    \n  toggle = () => {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  }\n  toggleModal = () => {\n    this.setState(prevState => ({\n      modal: !prevState.modal,\n    }));\n  }\n\n  handleValidation = () => {\n      let fields = this.state;\n      let errors = {};\n      let formIsValid = true;\n\n      //Name\n      if(fields[\"text\"].trim() === \"\"){\n         formIsValid = false;\n         errors[\"text\"] = \"Cannot be empty\";\n      } else {\n        if(typeof fields[\"text\"] !== \"undefined\"){\n           if(!fields[\"text\"].match(/^[a-zA-Z]+$/)){\n              formIsValid = false;\n              errors[\"text\"] = \"Name must be only letters\";\n           } else if (fields[\"text\"].length > 7) {\n              formIsValid = false;\n              errors[\"text\"] = \"Your name is too long\";\n           }        \n        }\n      }\n\n      //Phone\n      if(fields[\"phone\"].trim() === \"\"){\n         formIsValid = false;\n         errors[\"phone\"] = \"Phone cannot be empty\";\n      } else {\n        if(typeof fields[\"phone\"] !== \"undefined\"){\n          if(!fields[\"phone\"].match(/^[0-9\\-\\\\+]{9,15}$/)){\n            formIsValid = false;\n            errors[\"phone\"] = \"Not phone number\";\n          }      \n        }\n      }\n      // Email\n      if(fields[\"email\"].trim() === \"\"){\n        formIsValid = false;\n        errors[\"email\"] = \"Cannot be empty\";\n      } else {\n        if(typeof fields[\"email\"] !== \"undefined\"){\n          let lastAtPos = fields[\"email\"].lastIndexOf('@');\n          let lastDotPos = fields[\"email\"].lastIndexOf('.');\n          if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"email\"].indexOf('@@') === -1 && lastDotPos > 2 && (fields[\"email\"].length - lastDotPos) > 2)) {\n            formIsValid = false;\n            errors[\"email\"] = \"Email is not valid\";\n          }\n        }\n      }\n      // Linkedin profile\n      if(fields[\"linkedin_profile\"].trim() === \"\"){\n        formIsValid = false;\n        errors[\"linkedin_profile\"] = \"Cannot be empty\";\n      } else {\n        if(typeof fields[\"linkedin_profile\"] !== \"undefined\"){\n          let re=/^((https?|ftp|smtp):\\/\\/)+(www.)?[a-z0-9]+(\\.[a-z]{2,}){1,3}(#?\\/?[a-zA-Z0-9-_#]+)*\\/?(\\?[a-zA-Z0-9-_]+=[a-zA-Z0-9-%]+&?)?$/;\n          if (!re.test(fields[\"linkedin_profile\"])) {\n            formIsValid = false;\n            errors[\"linkedin_profile\"] = \"Not Linkedin URL\";\n          }\n        }\n      }\n      // Website\n      if(fields[\"website\"].trim() === \"\"){\n      } else {\n        if(typeof fields[\"website\"] !== \"undefined\"){\n          let re=/^((https?|ftp|smtp):\\/\\/)+(www.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_+.~#?&//=]*)?$/;\n          if (!re.test(fields[\"website\"])) {\n            formIsValid = false;\n            errors[\"website\"] = \"URL is not valid\";\n          }\n        }\n      }\n      this.setState({errors: errors}); \n\n      return formIsValid;\n }\n  handleChange = (e) => {\n    e.preventDefault();\n    let key = e.target.name\n    let value = e.target.value\n\n    this.setState({\n        [key]: value,\n        errors: {}\n    })\n\n  }\n\n  changeValue = (e) => {\n    this.setState({status: e.currentTarget.textContent})\n  }\n  loadMorePosts = () => {\n      const {next} = this.props.notes[this.props.notes.length - 1] \n      if (next !== null || next !== undefined) {\n          this.props.fetchNotes(next)              \n      }     \n  }\n  searchNotes = () => {\n      const {searchtext} = this.state\n      if (searchtext !== null || searchtext !== undefined) {\n          this.props.searchNotes(searchtext) \n          this.setState({\n            is_ordering_name: false,\n            order: [],\n          });             \n      }     \n  }\n\n  onCheckboxIsCorpBtnClick = () => {\n    this.setState({\n      is_corporate: !this.state.is_corporate,\n    });\n  }\n  onCheckboxIsPayBtnClick = () => {\n    this.setState({\n      is_payed: !this.state.is_payed,\n    });\n  }\n  onBtnClickOrderingName = (ordername) => {\n    // Create a new array based on current state:\n    let order = [...this.state.order];\n    let newordername = \"-\"+ordername\n    let is_ordering_name = false\n    // if ordername starts from \"C\"-character - clear that order!\n    if (ordername.charAt(0) === \"C\"){\n      let index = order.indexOf(ordername.slice(1, ordername.length))\n      // Clear ordername (remove from array)\n      if (index !== -1) {\n        order.splice(index, 1);\n      }\n    } else {\n      // Add or remove item to it\n      if (order.includes(ordername)){\n        let index = order.indexOf(ordername)\n        if (index !== -1) {\n          order.splice(index, 1);\n          order.splice(index, 0, newordername);\n        }\n      } else if (order.includes(newordername)) {\n        let index = order.indexOf(newordername)\n        if (index !== -1) {\n          order.splice(index, 1);\n          order.splice(index, 0, ordername);\n        }\n      } else {\n        order.push(ordername);\n      }\n    }\n    if (order.length > 0) {\n      is_ordering_name = true\n    } \n\n    // Set state\n    this.setState({is_ordering_name: is_ordering_name, searchtext: \"\", order}, function () {\n        this.handleOrderNotes();\n    });\n  }\n  handleOrderNotes = () => {\n    // Array to string with ','\n    let mapped = this.state.order.map((item)=>(item)).join(\",\");\n\n    if (this.state.order.length) {      \n      this.props.orderNotes(mapped)              \n    } else {\n      this.setState({order: []});\n      this.props.orderNotes(\"\")   \n    }    \n  }\n  submitNote = (e) => {\n      e.preventDefault();\n      if(this.handleValidation()){\n        if (this.state.updateNoteId === null) {\n            this.props.addNote(this.state.text, this.state.phone, this.state.status, \n              this.state.is_corporate, this.state.is_payed, this.state.email, \n              this.state.linkedin_profile, this.state.website, this.state.correspondence,)\n              .then(this.resetForm)\n              .then(this.toggleModal)            \n              .catch(function (error) {\n                 console.log(\"error\", error);\n               });\n        } else {\n            this.props.updateNote(this.state.updateNoteIndex, this.state.updateNoteId, \n              this.state.text, this.state.phone, this.state.status, this.state.is_corporate, \n              this.state.is_payed, this.state.email, this.state.linkedin_profile, \n              this.state.website, this.state.correspondence)\n              .then(this.resetForm)\n              .then(this.toggleModal)              \n              .catch(function (error) {\n                 console.log(\"error\", error);\n               });\n        }\n      }\n  }\n  renderModal() {\n      if (this.state.modal) {\n        const { errors } = this.state;\n        const { is_staff } = this.props;\n\n        return (\n          <Modal isOpen={this.state.modal} toggle={this.toggleModal}>\n            <Form onSubmit={this.submitNote}>            \n\n              <ModalHeader toggle={this.toggleModal}>{this.state.updateNoteId === null ? \"New Investor\" : \"Edit Investor\"}</ModalHeader>\n              <ModalBody>                    \n                <FormGroup>\n                  <Label>Name <span className=\"text-danger\">*</span></Label>\n                  <Input\n                    name=\"text\"\n                    value={this.state.text || ''}\n                    placeholder=\"Enter name...\"\n                    onChange={this.handleChange}\n                    required />\n                    {errors.text ? <FormText color=\"danger\">{errors.text}</FormText>: \"\"}\n                </FormGroup>\n                <FormGroup>\n                  <Label>Phone <span className=\"text-danger\">*</span></Label>\n                  <Input\n                    className=\"form-group\"\n                    name=\"phone\"\n                    type='tel'\n                    value={this.state.phone || ''}\n                    placeholder=\"Enter phone...\"\n                    onChange={this.handleChange}\n                    />\n                    {errors.phone ? <FormText color=\"danger\">{errors.phone}</FormText>: \"\"}\n                </FormGroup>\n                <FormGroup>\n                  <Label>Email <span className=\"text-danger\">*</span></Label>\n                  <Input\n                    className=\"form-group\"\n                    name=\"email\"\n                    type='text'\n                    value={this.state.email || ''}\n                    placeholder=\"Enter email...\"\n                    onChange={this.handleChange}\n                    />\n                    {errors.email ? <FormText color=\"danger\">{errors.email}</FormText>: \"\"}\n                </FormGroup> \n                <FormGroup>\n                  <Label>Linkedin <span className=\"text-danger\">*</span></Label>\n                  <Input\n                    className=\"form-group\"\n                    name=\"linkedin_profile\"\n                    type='text'\n                    value={this.state.linkedin_profile || ''}\n                    placeholder=\"Enter Linkedin profile...\"\n                    onChange={this.handleChange}\n                    />\n                    {errors.linkedin_profile ? <FormText color=\"danger\">{errors.linkedin_profile}</FormText>: \"\"}\n                </FormGroup> \n                <FormGroup>\n                  <Label>Website</Label>\n                  <Input\n                    className=\"form-group\"\n                    name=\"website\"\n                    type='text'\n                    value={this.state.website || ''}\n                    placeholder=\"Enter your website...\"\n                    onChange={this.handleChange}\n                    />\n                    {errors.website ? <FormText color=\"danger\">{errors.website}</FormText>: \"\"}\n                </FormGroup> \n                <FormGroup>\n                  <Label>Correspondence</Label>\n                  <Input\n                    className=\"form-group\"\n                    name=\"correspondence\"\n                    type='textarea'\n                    value={this.state.correspondence || ''}\n                    placeholder=\"Enter your correspondence...\"\n                    onChange={this.handleChange}\n                    />\n                    {errors.correspondence ? <FormText color=\"danger\">{errors.correspondence}</FormText>: \"\"}\n                </FormGroup> \n                <FormGroup>\n                    <Label>Individual <FontAwesomeIcon icon={faMale} color={!this.state.is_corporate ? \"black\": \"grey\"}/> / Corporate <FontAwesomeIcon icon={faUsers} color={this.state.is_corporate ? \"black\": \"grey\"}/></Label>\n                    <Button className=\"btn btn-block\" onClick={this.onCheckboxIsCorpBtnClick} active={this.state.is_corporate}>{this.state.is_corporate ? 'Change to Individual' : 'Change to Corporate'}</Button>\n                </FormGroup>\n                {this.state.updateNoteId !== null ?\n                <FormGroup>\n                <Label>Status</Label>\n                  <Dropdown className=\"form-group\" isOpen={this.state.dropdownOpen} toggle={this.toggle}>              \n                    <DropdownToggle className=\"btn-block\" caret>\n                      {this.state.status}\n                    </DropdownToggle>\n                    <DropdownMenu className=\"btn-block\">\n                      <DropdownItem onClick={this.changeValue}>Candidate</DropdownItem>\n                      <DropdownItem onClick={this.changeValue}>Processed</DropdownItem>\n                      <DropdownItem onClick={this.changeValue}>Converted</DropdownItem>\n                      <DropdownItem onClick={this.changeValue}>Rejected</DropdownItem>\n                    </DropdownMenu>\n                  </Dropdown>\n                </FormGroup>\n                : null}\n                {this.state.updateNoteId !== null && this.state.status !==\"Candidate\" && is_staff ?\n                <FormGroup>\n                    <Label>New <FontAwesomeIcon icon={faHandHoldingUsd} color={!this.state.is_payed ? \"black\": \"grey\"}/> / Payed <FontAwesomeIcon icon={faCheckCircle} color={this.state.is_payed ? \"black\": \"grey\"}/></Label>\n                    <Button className=\"btn btn-block\" onClick={this.onCheckboxIsPayBtnClick} active={this.state.is_payed}>{this.state.is_payed ? 'Change to New' : 'Change to Payed'}</Button>\n                </FormGroup>\n                : null}                            \n              </ModalBody>\n              <ModalFooter> \n                <FormGroup row>                   \n                <Button className=\"rounded-0\" color=\"info\" type=\"submit\"><FontAwesomeIcon icon={faSave} color=\"white\"/></Button>              \n                {this.state.updateNoteId === null ? <Button className=\"rounded-0\" onClick={this.resetForm}>Reset</Button> : null}\n                <Button className=\"rounded-0\" onClick={this.toggleModal}>Cancel</Button>\n                </FormGroup>\n              </ModalFooter>\n            </Form>\n          </Modal>            \n        );\n      }\n    }\n  render () {\n    const { notes } = this.props\n    const { errors } = this.state;\n    const { next } = this.props.notes[this.props.notes.length - 1];\n    const { order } = this.state;\n    \n    return (\n      <div>\n        <div className=\"centering mt-2\"> \n          <div className=\"centering-left\"> \n            <Link to={\"/investors/add\"}><Button className=\"rounded-0\" color=\"info\"><FontAwesomeIcon icon={faPlusSquare} color=\"white\"/> Add New</Button></Link>\n          </div>\n          <div className=\"centering-center\"> \n            {this.renderModal()}\n            <FormGroup row>\n              <Button className=\"rounded-0\" color=\"info\" onClick={this.addNew}>Add New</Button>\n              <CustomInput inline\n                id=\"searchtext\"\n                type=\"text\" \n                name=\"searchtext\"\n                value={this.state.searchtext || ''}\n                placeholder=\"Search by Name...\"\n                onChange={this.handleChange}\n                \n                />\n                {errors.searchtext ? <FormText color=\"danger\">{errors.searchtext}</FormText>: \"\"}\n              <Button className=\"rounded-0\" onClick={this.searchNotes}><FontAwesomeIcon icon={faSearch} color=\"white\"/></Button>\n              {this.state.searchtext !== \"\" ? <Button outline className=\"rounded-0\" onClick={this.resetSearch}>Clear</Button> : \"\"}          \n            </FormGroup>\n          </div>\n          <div className=\"centering-right\"> \n          </div>\n        </div>          \n        <div className=\"centering\"> \n          <div className=\"centering-left\"></div>\n          <h3 className=\"centering-center\">Leads</h3>\n          <div className=\"centering-right centering-right__tablepreffix\">\n            {order.length > 0 ? <Button color=\"info\" onClick={this.resetSort}>Clear Sort</Button> : <Button outline color=\"info\" disabled>Clear Sort</Button>}\n          </div>\n        </div>\n        <Table className=\"table text-center\" striped>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th><FontAwesomeIcon icon={faMale} color=\"black\"/> / <FontAwesomeIcon icon={faUsers} color=\"black\"/></th>\n              <th>Name <Button color=\"link\" onClick={() => this.onBtnClickOrderingName(\"text\")}>\n                {order.includes(\"text\") ? <FontAwesomeIcon icon={faLongArrowAltDown} color=\"black\"/>\n                :order.includes(\"-text\") ? <FontAwesomeIcon rotation={180} icon={faLongArrowAltDown} color=\"black\"/>\n                :<FontAwesomeIcon rotation={90} icon={faExchangeAlt} color=\"grey\"/>}</Button>\n                {order.includes(\"text\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"Ctext\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                :order.includes(\"-text\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"C-text\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                :\"\"}\n              </th>\n              <th>Dev <Button color=\"link\" onClick={() => this.onBtnClickOrderingName(\"owner\")}>\n                {order.includes(\"owner\") ? <FontAwesomeIcon icon={faLongArrowAltDown} color=\"black\"/>\n                :order.includes(\"-owner\") ? <FontAwesomeIcon rotation={180} icon={faLongArrowAltDown} color=\"black\"/>\n                :<FontAwesomeIcon rotation={90} icon={faExchangeAlt} color=\"grey\"/>}</Button>\n                {order.includes(\"owner\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"Cowner\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                :order.includes(\"-owner\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"C-owner\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                :\"\"}\n              </th>\n              <th>Phone</th>\n              <th>Status <Button color=\"link\" onClick={() => this.onBtnClickOrderingName(\"status\")}>\n                {order.includes(\"status\") ? <FontAwesomeIcon icon={faLongArrowAltDown} color=\"black\"/>\n                :order.includes(\"-status\") ? <FontAwesomeIcon rotation={180} icon={faLongArrowAltDown} color=\"black\"/>\n                :<FontAwesomeIcon rotation={90} icon={faExchangeAlt} color=\"grey\"/>}</Button>\n                {order.includes(\"status\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"Cstatus\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                :order.includes(\"-status\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"C-status\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                :\"\"}\n              </th>\n              <th>Payment <Button color=\"link\" onClick={() => this.onBtnClickOrderingName(\"is_payed\")}>\n                {order.includes(\"is_payed\") ? <FontAwesomeIcon icon={faLongArrowAltDown} color=\"black\"/>\n                :order.includes(\"-is_payed\") ? <FontAwesomeIcon rotation={180} icon={faLongArrowAltDown} color=\"black\"/>\n                :<FontAwesomeIcon rotation={90} icon={faExchangeAlt} color=\"grey\"/>}</Button>\n                {order.includes(\"is_payed\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"Cis_payed\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                :order.includes(\"-is_payed\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"C-is_payed\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                :\"\"}\n              </th>\n              <th>Manage</th>\n            </tr>\n          </thead>  \n               \n          {notes !== undefined ? notes.map((post, index)=>{\n            return ( \n                <tbody key={index}>\n                    {post.noteitems !== undefined && post.noteitems.length > 0 ? post.noteitems.map((note, id) => {\n                      return (                                    \n                          <tr key={id}>\n                              <th scope=\"row\">{id+1}</th>\n                              <td>{note.is_corporate ? <FontAwesomeIcon icon={faUsers} color=\"black\"/> : <FontAwesomeIcon icon={faMale} color=\"black\"/>}</td>\n                              <td>\n                                <Link to={{pathname:`/investors/${note.id}`,\n                                      state: {fromDashboard: false}\n                                      }}>{note.text}</Link>\n                              </td>\n                              <td>{note.owner_username}</td>\n                              <td>{note.phone}</td>\n                              <td>{note.status}</td>\n                              <td>{note.is_payed ? <FontAwesomeIcon icon={faCheckCircle} color=\"black\"/> : <FontAwesomeIcon icon={faHandHoldingUsd} color=\"black\"/>}</td>\n                              <td>\n                                <Button className=\"mr-1\" color=\"info\" onClick={() => this.selectForEdit(index, id)}><FontAwesomeIcon icon={faEdit} color=\"white\"/></Button>\n                                <Button onClick={() => this.selectForDelete(index, id)}><FontAwesomeIcon icon={faTrash} color=\"white\"/></Button>\n                              </td>\n                          </tr>                                        \n                        )\n                      }\n                    ) : null}\n                </tbody>\n              )\n            }) : null}\n        </Table>\n        {next !== null ? <Button onClick={this.loadMorePosts}>Load more</Button> : ''}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n    return {\n        notes: state.notes,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchNotes: (next) => {\n            dispatch(notes.fetchNotes(next));\n        },\n        addNote: (text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence) => {\n            return dispatch(notes.addNote(text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence));\n        },\n        updateNote: (index, id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence) => {\n            return dispatch(notes.updateNote(index, id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence));\n        },\n        deleteNote: (index, id) => {\n            dispatch(notes.deleteNote(index, id));\n        },\n        searchNotes: (searchtext) => {\n            dispatch(notes.searchNotes(searchtext));\n        },\n        orderNotes: (order) => {\n            dispatch(notes.orderNotes(order));\n        },\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputForm);","export const fetchNotes = (nextEndpoint) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        let endpoint = '/api/investors/' \n        // console.log(nextEndpoint)\n        if (nextEndpoint !== undefined && nextEndpoint !== null) {\n          endpoint = nextEndpoint\n        }\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        let {notes} = getState();\n        return fetch(endpoint, {headers, })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            // getState().notes[0].concat(res.data)}\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'FETCH_NOTES', notes: notes.push(res.data), loading: false});\n                } else if (res.status === 401 || res.status === 403) {\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\nexport const searchNotes = (searchtext) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        let endpoint = '/api/investors/' \n        if (searchtext !== undefined && searchtext !== null) {\n          endpoint = `/api/investors/?search=${searchtext}`\n        }\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        return fetch(endpoint, {headers, method: \"GET\", })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        // console.log(res)\n                        return {status: res.status, data};\n                    })\n                } else {\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'SEARCH_NOTES', notes: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\nexport const orderNotes = (order) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        let endpoint = '/api/investors/' \n        if (order !== undefined && order !== null) {\n          endpoint = `/api/investors/?ordering=${order}`\n        }\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        return fetch(endpoint, {headers, method: \"GET\", })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        // console.log(res)\n                        return {status: res.status, data};\n                    })\n                } else {\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'ORDER_NOTES', notes: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\nexport const addNote = (text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n\n        let body = JSON.stringify({text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence });\n        return fetch(\"/api/investors/\", {headers, method: \"POST\", body})\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 201) {\n                    return dispatch({type: 'ADD_NOTE', note: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\n\nexport const updateNote = (index, id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence) => {\n    return (dispatch, getState) => {\n\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n\n        let body = JSON.stringify({text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence });\n        console.log(\"id\", id, \"index\", index)\n        let noteId = getState().notes[index].noteitems[id].id;\n\n        return fetch(`/api/investors/${noteId}/`, {headers, method: \"PUT\", body})\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'UPDATE_NOTE', note: res.data, index, id});\n                } else if (res.status === 401 || res.status === 403) {\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\n\nexport const deleteNote = (id, index) => {\n    return (dispatch, getState) => {\n\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        let noteId = getState().notes[id].noteitems[index].id;\n\n        return fetch(`/api/investors/${noteId}/`, {headers, method: \"DELETE\"})\n            .then(res => {\n                if (res.status === 204) {\n                    return {status: res.status, data: {}};\n                } else if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 204) {\n                    return dispatch({type: 'DELETE_NOTE', id, index});\n                } else if (res.status === 401 || res.status === 403) {\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\n","import React, { Component } from 'react'\nimport Dropzone from 'react-dropzone'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFileUpload } from '@fortawesome/free-solid-svg-icons'\n\nconst imageMaxSize = 10000000; //bytes\n\nclass FileDrop extends Component {\n\n\tonDrop = (acceptedFiles, rejectedFiles) => {\n\t\t// console.log(acceptedFiles, rejectedFiles)\n\t\tthis.props.onSelectDrop(acceptedFiles);\n\t}\n\trender () {\n\t\treturn (\n\t\t  <div>\n\t\t    <Dropzone\n\t            onDrop={this.onDrop}\t\t            \n\t            multiple={false}\n\t            maxSize={imageMaxSize}\n\t            >\n\t                {({getRootProps, getInputProps}) => (\n\t                    <div {...getRootProps()} className=\"dropzone-field\">\n\t                        <input {...getInputProps()} />\n\t                       \t<div>\n\t                       \t\t<FontAwesomeIcon icon={faFileUpload} color=\"white\"/>\n\t\t\t\t\t\t\t\t{this.props.documents ? \n\t\t\t\t\t\t\t\t\tthis.props.detail ? \n\t\t\t\t\t\t\t\t\t\tthis.props.documents === this.props.detail ?\n\t\t\t\t\t\t\t\t\t\t\t\"  Replace Document\"\n\t\t\t\t\t\t\t\t\t\t:  \"  Save to Attach\"\n\t\t\t\t\t\t\t\t\t: \"  Save to Attach\"\n\t\t\t\t\t\t\t\t: \"  Add Document\"}\n\t\t\t\t\t\t\t</div>\n\t                    </div>\n\t                )}\n\t\t\t</Dropzone>﻿\n\t\t  </div>\n\t\t  )\n\t}\n}\nexport default FileDrop","import React, {Component} from 'react'\n// import 'whatwg-fetch'\n// import cookie from 'react-cookies'\nimport { Link } from 'react-router-dom'\nimport * as detail from \"../../actions/noteDetailActions\";\nimport {connect} from 'react-redux';\nimport { Form, FormText, Container, Row,\n  FormGroup, Label, Input, Button,\n  Dropdown, DropdownToggle, \n  DropdownMenu, DropdownItem, Table } from 'reactstrap';\n// import PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMale, faUsers, faUndoAlt, faSave,\n      faCheckCircle, faHandHoldingUsd,\n       } from '@fortawesome/free-solid-svg-icons'\nimport DatePicker from \"react-datepicker\";\nimport FileDrop from './FileDrop/FileDrop';\nimport moment from \"moment\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass NoteDetail extends Component {\n\n    constructor(props){\n        super(props);\n        // this.handleValidation = handleValidation.bind(this)   \n        this.state = {\n          text: \"\",\n          phone: \"\",\n          status: \"\",\n          email:\"\",\n          linkedin_profile: \"\",\n          website: \"\",\n          correspondence: \"\",\n          is_corporate: false,\n          is_payed: false,\n          id: null,\n          isLoading: true,\n          errors: {},\n          hasError: false,\n          dropdownOpen: false,\n          detail: {},\n          add_call: false,\n          last_call: \"\", \n          documents: null,\n          attached: false,      \n        }\n    }\n\n    componentDidMount(){\n      if (this.props.match){\n        const {id} = this.props.match.params\n        this.setState({\n            id: id,\n            doneLoading: false,\n        })\n        this.props.fetchDetailNote(id)        \n      }\n      \n    }\n    componentWillReceiveProps(nextProps) {\n      console.log(Object.keys(nextProps.detail).length)\n      if (Object.keys(nextProps.detail).length) {\n        this.setState({\n          text: nextProps.detail.text,\n          phone: nextProps.detail.phone,\n          status: nextProps.detail.status,\n          is_corporate: nextProps.detail.is_corporate,\n          is_payed: nextProps.detail.is_payed,\n          email: nextProps.detail.email,\n          linkedin_profile: nextProps.detail.linkedin_profile,\n          website: nextProps.detail.website,\n          correspondence: nextProps.detail.correspondence,\n          last_call: moment(nextProps.detail.last_call, moment.defaultFormat).toDate(),\n          documents: nextProps.detail.documents,\n          hasError: false\n        }) \n      } else {\n        this.setState({\n          hasError: true\n        })\n      }\n       \n    }    \n    toggle = () => {\n      this.setState(prevState => ({\n        dropdownOpen: !prevState.dropdownOpen\n      }));\n    }\n    handleChange = (e) => {\n      e.preventDefault();\n      let key = e.target.name\n      let value = e.target.value\n      this.setState({\n          [key]: value,\n          errors: {}\n      })\n    }\n    changeDate = (date) => {\n      this.setState({last_call: date})\n    }\n\n    changeValue = (e) => {\n      this.setState({status: e.currentTarget.textContent})\n    }\n    handleValidation = () => {\n      let fields = this.state;\n      let errors = {};\n      let formIsValid = true;\n\n      //Name\n      if(fields[\"text\"].trim() === \"\"){\n         formIsValid = false;\n         errors[\"text\"] = \"Cannot be empty\";\n      } else {\n        if(typeof fields[\"text\"] !== \"undefined\"){\n           if(!fields[\"text\"].match(/^[a-zA-Z]+$/)){\n              formIsValid = false;\n              errors[\"text\"] = \"Name must be only letters\";\n           } else if (fields[\"text\"].length > 7) {\n              formIsValid = false;\n              errors[\"text\"] = \"Your name is too long\";\n           }        \n        }\n      }\n\n      //Phone\n      if(fields[\"phone\"].trim() === \"\"){\n         formIsValid = false;\n         errors[\"phone\"] = \"Phone cannot be empty\";\n      } else {\n        if(typeof fields[\"phone\"] !== \"undefined\"){\n          if(!fields[\"phone\"].match(/^[0-9\\-\\\\+]{9,15}$/)){\n            formIsValid = false;\n            errors[\"phone\"] = \"Not phone number\";\n          }      \n        }\n      }\n      // Email\n      if(fields[\"email\"].trim() === \"\"){\n        formIsValid = false;\n        errors[\"email\"] = \"Cannot be empty\";\n      } else {\n        if(typeof fields[\"email\"] !== \"undefined\"){\n          let lastAtPos = fields[\"email\"].lastIndexOf('@');\n          let lastDotPos = fields[\"email\"].lastIndexOf('.');\n          if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"email\"].indexOf('@@') === -1 && lastDotPos > 2 && (fields[\"email\"].length - lastDotPos) > 2)) {\n            formIsValid = false;\n            errors[\"email\"] = \"Email is not valid\";\n          }\n        }\n      }\n      // Linkedin profile\n      if(fields[\"linkedin_profile\"].trim() === \"\"){\n        formIsValid = false;\n        errors[\"linkedin_profile\"] = \"Cannot be empty\";\n      } else {\n        if(typeof fields[\"linkedin_profile\"] !== \"undefined\"){\n          let re=/^((https?|ftp|smtp):\\/\\/)+(www.)?[a-z0-9]+(\\.[a-z]{2,}){1,3}(#?\\/?[a-zA-Z0-9-_#]+)*\\/?(\\?[a-zA-Z0-9-_]+=[a-zA-Z0-9-%]+&?)?$/;\n          if (!re.test(fields[\"linkedin_profile\"])) {\n            formIsValid = false;\n            errors[\"linkedin_profile\"] = \"Not Linkedin URL\";\n          }\n        }\n      }\n      // Website\n      if(fields[\"website\"].trim() === \"\"){\n      } else {\n        if(typeof fields[\"website\"] !== \"undefined\"){\n          let re=/^((https?|ftp|smtp):\\/\\/)+(www.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_+.~#?&//=]*)?$/;\n          if (!re.test(fields[\"website\"])) {\n            formIsValid = false;\n            errors[\"website\"] = \"URL is not valid\";\n          }\n        }\n      }\n      this.setState({errors: errors}); \n      return formIsValid;\n    }\n    getData = (documents) => {\n      this.setState({\n        documents: documents[0],\n        attached: true,\n      })\n    }\n\n    onCheckboxIsCorpBtnClick = () => {\n      this.setState({\n        is_corporate: !this.state.is_corporate,\n      });\n    }\n    onCheckboxIsPayBtnClick = () => {\n      this.setState({\n        is_payed: !this.state.is_payed,\n      });\n    }\n    onAddCallClick = () => {\n      this.setState({\n        add_call: true,\n        last_call: moment(new Date(), moment.defaultFormat).toDate(),\n      });\n    }\n\n    onResetCallClick = () => {\n      this.setState({\n        add_call: false,\n        last_call: \"\",\n      });\n    }\n    submitNote = (e) => {\n        e.preventDefault();\n        if(this.handleValidation()){\n          this.props.updateDetailNote(this.state.id, this.state.text, \n            this.state.phone, this.state.status, this.state.is_corporate, \n            this.state.is_payed, this.state.email, this.state.linkedin_profile, \n            this.state.website, this.state.correspondence, this.state.last_call,\n            this.state.documents, this.state.attached,)\n        }\n\n    }\n\n    renderNote() {\n        if (!this.props.detail.detail && !this.state.hasError) {\n          console.log(this.state)\n          // const {doneLoading} = this.state\n          const { detail } = this.props;\n          const { is_staff } = this.props;\n          const { errors } = this.state;\n          return (\n                <Container fluid>\n                  <Row>\n                    <Form onSubmit={this.submitNote} className=\"form col col-lg-4 mt-2 p-2\">\n                      \n                      <FormGroup>\n                        <Label>Name <span className=\"text-danger\">*</span></Label>\n                        <Input\n                          name=\"text\"\n                          value={this.state.text || ''}\n                          placeholder=\"Enter name...\"\n                          onChange={this.handleChange}\n                          required />\n                          {errors.text ? <FormText color=\"danger\">{errors.text}</FormText>: \"\"}\n                      </FormGroup>\n                      <FormGroup>\n                        <Label>Phone <span className=\"text-danger\">*</span></Label>\n                        <Input\n                          className=\"form-group\"\n                          name=\"phone\"\n                          type='tel'\n                          value={this.state.phone || ''}\n                          placeholder=\"Enter phone...\"\n                          onChange={this.handleChange}\n                          />\n                          {errors.phone ? <FormText color=\"danger\">{errors.phone}</FormText>: \"\"}\n                      </FormGroup>\n                      <FormGroup>\n                        <Label>Email <span className=\"text-danger\">*</span></Label>\n                        <Input\n                          className=\"form-group\"\n                          name=\"email\"\n                          type='text'\n                          value={this.state.email || ''}\n                          placeholder=\"Enter email...\"\n                          onChange={this.handleChange}\n                          />\n                          {errors.email ? <FormText color=\"danger\">{errors.email}</FormText>: \"\"}\n                      </FormGroup> \n                      <FormGroup>\n                        <Label>Linkedin <span className=\"text-danger\">*</span></Label>\n                        <Input\n                          className=\"form-group\"\n                          name=\"linkedin_profile\"\n                          type='text'\n                          value={this.state.linkedin_profile || ''}\n                          placeholder=\"Enter Linkedin profile...\"\n                          onChange={this.handleChange}\n                          />\n                          {errors.linkedin_profile ? <FormText color=\"danger\">{errors.linkedin_profile}</FormText>: \"\"}\n                      </FormGroup> \n                      <FormGroup>\n                      <Label>Website</Label>\n                      <Input\n                        className=\"form-group\"\n                        name=\"website\"\n                        type='text'\n                        value={this.state.website || ''}\n                        placeholder=\"Enter your website...\"\n                        onChange={this.handleChange}\n                        />\n                        {errors.website ? <FormText color=\"danger\">{errors.website}</FormText>: \"\"}\n                    </FormGroup>\n                    <FormGroup>\n                      <Label>Correspondence</Label>\n                      <Input\n                        className=\"form-group\"\n                        name=\"correspondence\"\n                        type='textarea'\n                        value={this.state.correspondence || ''}\n                        placeholder=\"Enter your correspondence...\"\n                        onChange={this.handleChange}\n                        />\n                        {errors.correspondence ? <FormText color=\"danger\">{errors.correspondence}</FormText>: \"\"}\n                    </FormGroup>    \n                    <FormGroup>\n                        <Label>Individual <FontAwesomeIcon icon={faMale} color={!this.state.is_corporate ? \"black\": \"grey\"}/> / Corporate <FontAwesomeIcon icon={faUsers} color={this.state.is_corporate ? \"black\": \"grey\"}/></Label>\n                        <Button className=\"btn btn-block\" onClick={this.onCheckboxIsCorpBtnClick} active={this.state.is_corporate}>{this.state.is_corporate ? 'Change to Individual' : 'Change to Corporate'}</Button>\n                    </FormGroup>   \n                    <FormGroup>\n                      <Label>Status</Label>\n                      <Dropdown className=\"form-group\" isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n                        <DropdownToggle className=\"btn-block\" caret>\n                          {this.state.status || ''}\n                        </DropdownToggle>\n                        <DropdownMenu className=\"btn-block\">\n                          <DropdownItem onClick={this.changeValue}>Candidate</DropdownItem>\n                          <DropdownItem onClick={this.changeValue}>Processed</DropdownItem>\n                          <DropdownItem onClick={this.changeValue}>Converted</DropdownItem>\n                          <DropdownItem onClick={this.changeValue}>Rejected</DropdownItem>\n                        </DropdownMenu>\n                      </Dropdown>\n                    </FormGroup>\n                    {this.state.status !== \"Candidate\" && is_staff ?\n                    <FormGroup>\n                        <Label>New <FontAwesomeIcon icon={faHandHoldingUsd} color={!this.state.is_payed ? \"black\": \"grey\"}/> / Payed <FontAwesomeIcon icon={faCheckCircle} color={this.state.is_payed ? \"black\": \"grey\"}/></Label>\n                        <Button className=\"btn btn-block\" onClick={this.onCheckboxIsPayBtnClick} active={this.state.is_payed}>{this.state.is_payed ? 'Change to New' : 'Change to Payed'}</Button>\n                    </FormGroup>\n                    : null}                \n                    <FormGroup>\n                      <Label>Last Call {this.state.add_call ? <Button className=\"btn\" onClick={this.onResetCallClick}>Reset</Button>: \"\"}</Label>\n                      {moment(this.state.last_call).isValid() ?\n                      <div>\n                        <DatePicker     \n                          selected={moment(this.state.last_call, moment.defaultFormat).toDate()}\n                          onChange={this.changeDate}\n                          showTimeSelect\n                          timeFormat=\"HH:mm\"\n                          timeIntervals={15}\n                          dateFormat=\"d MMMM yyyy HH:mm\"\n                          timeCaption=\"time\"\n                        />\n                      </div>\n                      :                     \n                        <Button className=\"btn btn-block\" onClick={this.onAddCallClick}>Add Last Call</Button>\n                      }\n                    </FormGroup>\n                    <div>Documents:\n                    {detail.documents ? \" (\"+detail.documents.split(\"/\").slice(-1)[0]+\")\" : \"\"}\n                    </div>\n                    <FileDrop onSelectDrop={this.getData} documents={this.state.documents} detail={`${detail.documents}`}/>\n                    <Button color=\"info\" size=\"lg\" type=\"submit\"><FontAwesomeIcon icon={faSave} color=\"white\"/></Button>\n                  </Form>\n                  <div className=\"col col-lg-8\">\n                    <h3>Detailed Preview</h3>\n                    <Table striped>\n                      <tbody>\n                        <tr>\n                          <th>Investor</th>\n                          <td>{detail.is_corporate ? \"Corporate\" : \"Individual\" }</td>\n                        </tr>\n                        <tr>\n                          <th>Name</th>\n                          <td>{detail.text}</td>\n                        </tr>\n                        <tr>\n                          <th>Phone</th>\n                          <td>{detail.phone}</td>\n                        </tr>\n                        <tr>\n                          <th>Status</th>\n                          <td>{detail.status}</td>\n                        </tr>\n                        <tr>\n                          <th>Email</th>\n                          <td>{detail.email}</td>\n                        </tr>\n                        <tr>\n                          <th>Linkedin</th>\n                          <td className=\"table-correspondence__data\"><a href={`${detail.linkedin_profile}`} >{detail.linkedin_profile}</a></td>\n                        </tr>\n                        <tr>\n                          <th>Website</th>\n                          <td className=\"table-correspondence__data\"><a href={`${detail.website}`} >{detail.website}</a></td>\n                        </tr>\n                        <tr>\n                          <th>Correspondence</th>\n                          <td className=\"table-correspondence__data\">{detail.correspondence}</td>\n                        </tr>\n                        <tr>\n                          <th>Payment</th>\n                          <td>{detail.is_payed ? \"Payed\" : \"New\" }</td>\n                        </tr>\n                        <tr>\n                          <th>Calls</th>\n                          <td>{detail.last_call ? moment(detail.last_call).format(\"D MMM YYYY HH:mm\") : \"\"}</td>\n                        </tr>\n                        <tr>\n                          <th>Documents</th>\n                          <td>{detail.documents ? <a href={`${detail.documents}`} >{detail.documents.split(\"/\").slice(-1)[0]}</a> : \"\"}</td>\n                        </tr>\n                      </tbody>\n                    </Table>\n                  </div>\n              </Row>\n            </Container>              \n          );\n\n        } else {\n            return (\n              <div>\n                <h1>404 error. Message Not Found</h1>\n              </div>\n            );\n        }\n    }\n    render () {\n        return(\n            <div>\n                <div className=\"mt-2 mb-2\">\n                  <Link to={\"/investors\"} onClick={this.forceUpdate}><Button><FontAwesomeIcon icon={faUndoAlt} color=\"white\"/> Return</Button></Link>\n                </div>\n              {this.renderNote()}\n          </div>               \n        )\n    }\n}\nconst mapStateToProps = state => {\n    return {\n      detail: state.detail,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      fetchDetailNote: (id) => {\n          dispatch(detail.fetchDetailNote(id));\n      },\n      updateDetailNote: (id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence, last_call, documents, attached) => {\n          dispatch(detail.updateDetailNote(id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence, last_call, documents, attached));\n      }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteDetail);","export const fetchDetailNote = (id) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        const endpoint = `/api/investors/${id}/` \n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        \n        return fetch(endpoint, {headers, })\n            .then(res => {\n                if (res.status < 500 && res.status !== 404) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else if (res.status === 404) {\n                    //redirect page need fix\n                    window.location.href = '/404';\n                    throw res;                \n                } else {\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'FETCH_DETAIL_NOTE', detail: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    dispatch({type: \"AUTHENTICATION_ERROR\", detail: res.data});\n                    throw res.data;\n                }\n            })\n            .catch(error => {                \n                //error.redirect('/404');\n                //Handle error\n                // console.log(\"error\": error);\n                // dispatch({type: \"MESSAGE_NOT_FOUND\", detail: error});\n            });\n    }\n}\n\nexport const updateDetailNote = (id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence, last_call, documents, attached) => {\n    return (dispatch, getState) => {\n\n        let headers = {'Accept': 'application/json'};\n        // let headers = {\"Content-Type\": \"multipart/form-data\"};\n\n        let {token} = getState().auth;\n\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        let formData = new FormData();\n        formData.append('text', text);\n        formData.append('phone', phone);\n        formData.append('status', status);\n        formData.append('is_corporate', is_corporate);\n        formData.append('is_payed', is_payed);\n        formData.append('email', email);\n        formData.append('linkedin_profile', linkedin_profile);\n        formData.append('website', website);\n\n        // Not required fields\n        if (correspondence) {\n            formData.append('correspondence', correspondence);\n        }\n        if (attached) {\n            formData.append('documents', documents);\n        }\n\n        // formData need to convert ISO format string\n        if (last_call && String(last_call) !==\"Invalid Date\") {\n            formData.append('last_call', last_call.toISOString());\n        }\n\n        let noteId = id;\n\n        return fetch(`/api/investors/${noteId}/`, {headers, method: \"PUT\", body: formData})\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'UPDATE_DETAIL_NOTE', detail: res.data, id});\n                } else if (res.status === 401 || res.status === 403) {\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\n\nexport const addDetailNote = (text, phone, status, is_corporate, email, linkedin_profile, website, correspondence) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n\n        let body = JSON.stringify({text, phone, status, is_corporate, email, linkedin_profile, website, correspondence });\n        return fetch(\"/api/investors/\", {headers, method: \"POST\", body})\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 201) {\n                    return dispatch({type: 'ADD_DETAIL_NOTE', detail: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\n","import React, {Component} from 'react'\n// import 'whatwg-fetch'\n// import cookie from 'react-cookies'\nimport { Link, Redirect } from 'react-router-dom'\nimport * as detail from \"../../actions/noteDetailActions\";\nimport {connect} from 'react-redux';\nimport { Form, FormText, \n  FormGroup, Label, Input, Button,\n   } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUndoAlt, faSave, faMale, faUsers } from '@fortawesome/free-solid-svg-icons'\n\nclass NewNote extends Component {\n    constructor(props){\n        super(props)       \n        this.state = {\n          text: \"\",\n          phone: \"\",\n          email: \"\",\n          status: \"Candidate\",\n          linkedin_profile: \"\",\n          website: \"\",\n          correspondence: \"\",\n          is_corporate: false,\n          id: null,\n          doneLoading: false,\n          errors: {},        \n          redirectToNewPage: false          \n        }\n    }\n\n    componentDidMount(){\n      if (this.props.match){\n        // const {id} = this.props.match.params\n        // this.setState({\n        //     id: id,\n        //     doneLoading: false,\n        // })\n        // this.props.fetchDetailNote(id)\n      }\n    }\n    componentWillReceiveProps(nextProps) {\n      if (this.state.redirectToNewPage) {  \n        this.setState({\n          id: nextProps.detail.id,\n        })\n      }\n    }    \n\n    resetForm = () => {\n      this.setState({text: \"\", phone: '', email:'', errors: {}, status: 'Candidate', \n        is_corporate: false, linkedin_profile: \"\", website: \"\",\n        correspondence: \"\",\n      });\n    }\n    handleChange = (e) => {\n      e.preventDefault();\n      let key = e.target.name\n      let value = e.target.value\n      this.setState({\n          [key]: value,\n          errors: {}\n      })\n    }\n    changeValue = (e) => {\n      this.setState({status: e.currentTarget.textContent})\n    }\n    handleValidation = () => {\n      let fields = this.state;\n      let errors = {};\n      let formIsValid = true;\n\n      //Name\n      if(fields[\"text\"].trim() === \"\"){\n         formIsValid = false;\n         errors[\"text\"] = \"Cannot be empty\";\n      } else {\n        if(typeof fields[\"text\"] !== \"undefined\"){\n           if(!fields[\"text\"].match(/^[a-zA-Z]+$/)){\n              formIsValid = false;\n              errors[\"text\"] = \"Name must be only letters\";\n           } else if (fields[\"text\"].length > 7) {\n              formIsValid = false;\n              errors[\"text\"] = \"Your name is too long\";\n           }        \n        }\n      }\n\n      //Phone\n      if(fields[\"phone\"].trim() === \"\"){\n         formIsValid = false;\n         errors[\"phone\"] = \"Phone cannot be empty\";\n      } else {\n        if(typeof fields[\"phone\"] !== \"undefined\"){\n          if(!fields[\"phone\"].match(/^[0-9\\-\\\\+]{9,15}$/)){\n            formIsValid = false;\n            errors[\"phone\"] = \"Not phone number\";\n          }      \n        }\n      }\n      // Email\n      if(fields[\"email\"].trim() === \"\"){\n        formIsValid = false;\n        errors[\"email\"] = \"Cannot be empty\";\n      } else {\n        if(typeof fields[\"email\"] !== \"undefined\"){\n          let lastAtPos = fields[\"email\"].lastIndexOf('@');\n          let lastDotPos = fields[\"email\"].lastIndexOf('.');\n          if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"email\"].indexOf('@@') === -1 && lastDotPos > 2 && (fields[\"email\"].length - lastDotPos) > 2)) {\n            formIsValid = false;\n            errors[\"email\"] = \"Email is not valid\";\n          }\n        }\n      }\n      // Linkedin profile\n      if(fields[\"linkedin_profile\"].trim() === \"\"){\n        formIsValid = false;\n        errors[\"linkedin_profile\"] = \"Cannot be empty\";\n      } else {\n        if(typeof fields[\"linkedin_profile\"] !== \"undefined\"){\n          let re=/^((https?|ftp|smtp):\\/\\/)+(www.)?[a-z0-9]+(\\.[a-z]{2,}){1,3}(#?\\/?[a-zA-Z0-9-_#]+)*\\/?(\\?[a-zA-Z0-9-_]+=[a-zA-Z0-9-%]+&?)?$/;\n          if (!re.test(fields[\"linkedin_profile\"])) {\n            formIsValid = false;\n            errors[\"linkedin_profile\"] = \"Not Linkedin URL\";\n          }\n        }\n      }\n      // Website\n      if(fields[\"website\"].trim() === \"\"){\n      } else {\n        if(typeof fields[\"website\"] !== \"undefined\"){\n          let re=/^((https?|ftp|smtp):\\/\\/)+(www.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_+.~#?&//=]*)?$/;\n          if (!re.test(fields[\"website\"])) {\n            formIsValid = false;\n            errors[\"website\"] = \"URL is not valid\";\n          }\n        }\n      }\n\n      this.setState({errors: errors}); \n      return formIsValid;\n    }\n    onCheckboxBtnClick = () => {\n      this.setState({\n        is_corporate: !this.state.is_corporate,\n      });\n    }\n    submitNote = (e) => {\n      e.preventDefault();\n      if(this.handleValidation()){\n        this.props.addDetailNote(this.state.text, this.state.phone, this.state.status, \n          this.state.is_corporate, this.state.email, this.state.linkedin_profile, \n          this.state.website, this.state.correspondence)\n          .then(this.setState({ redirectToNewPage: true }))            \n          .catch(function (error) {\n             console.log(\"error\", error);\n           });\n      }\n    }\n\n    render () {\n        // const {doneLoading} = this.state\n        const { errors } = this.state;\n        // The part that makes the redirect happen\n        if (this.state.redirectToNewPage && this.state.id) {\n          // const { detail } = this.state;\n          // console.log(this.state.id)\n          return (\n            <Redirect to={{pathname:`/investors/${this.state.id}`}} />\n          )\n        }\n        return(\n            <div>\n              <div className=\"mt-2 mb-2\">\n                <Link className=\"mt-2 mb-2\" to={\"/investors\"} onClick={this.forceUpdate}><Button><FontAwesomeIcon icon={faUndoAlt} color=\"white\"/></Button></Link>\n                <h3>Add New</h3>\n              </div>\n              <Form onSubmit={this.submitNote} className=\"form col col-sm-4 mt-2 p-2\">\n                \n                <FormGroup>\n                  <Label>Name <span className=\"text-danger\">*</span></Label>\n                  <Input\n                    name=\"text\"\n                    value={this.state.text || ''}\n                    placeholder=\"Enter name...\"\n                    onChange={this.handleChange}\n                    required />\n                    {errors.text ? <FormText color=\"danger\">{errors.text}</FormText>: \"\"}\n                </FormGroup>\n                <FormGroup>\n                  <Label>Phone <span className=\"text-danger\">*</span></Label>\n                  <Input\n                    className=\"form-group\"\n                    name=\"phone\"\n                    type='tel'\n                    value={this.state.phone || ''}\n                    placeholder=\"Enter phone...\"\n                    onChange={this.handleChange}\n                    />\n                    {errors.phone ? <FormText color=\"danger\">{errors.phone}</FormText>: \"\"}\n                </FormGroup>\n                <FormGroup>\n                  <Label>Email <span className=\"text-danger\">*</span></Label>\n                  <Input\n                    className=\"form-group\"\n                    name=\"email\"\n                    type='text'\n                    value={this.state.email || ''}\n                    placeholder=\"Enter email...\"\n                    onChange={this.handleChange}\n                    />\n                    {errors.email ? <FormText color=\"danger\">{errors.email}</FormText>: \"\"}\n                </FormGroup> \n                <FormGroup>\n                  <Label>Linkedin <span className=\"text-danger\">*</span></Label>\n                  <Input\n                    className=\"form-group\"\n                    name=\"linkedin_profile\"\n                    type='text'\n                    value={this.state.linkedin_profile || ''}\n                    placeholder=\"Enter Linkedin profile...\"\n                    onChange={this.handleChange}\n                    />\n                    {errors.linkedin_profile ? <FormText color=\"danger\">{errors.linkedin_profile}</FormText>: \"\"}\n                </FormGroup> \n                <FormGroup>\n                  <Label>Website</Label>\n                  <Input\n                    className=\"form-group\"\n                    name=\"website\"\n                    type='text'\n                    value={this.state.website || ''}\n                    placeholder=\"Enter your website...\"\n                    onChange={this.handleChange}\n                    />\n                    {errors.website ? <FormText color=\"danger\">{errors.website}</FormText>: \"\"}\n                </FormGroup>\n                <FormGroup>\n                  <Label>Correspondence</Label>\n                  <Input\n                    className=\"form-group\"\n                    name=\"correspondence\"\n                    type='textarea'\n                    value={this.state.correspondence || ''}\n                    placeholder=\"Enter your correspondence...\"\n                    onChange={this.handleChange}\n                    />\n                    {errors.correspondence ? <FormText color=\"danger\">{errors.correspondence}</FormText>: \"\"}\n                </FormGroup>                  \n                <FormGroup>\n                    <Label>Individual <FontAwesomeIcon icon={faMale} color=\"black\"/> / Corporate <FontAwesomeIcon icon={faUsers} color=\"black\"/></Label>\n                    <Button className=\"btn btn-block\" onClick={this.onCheckboxBtnClick} active={this.state.is_corporate}>{this.state.is_corporate ? 'Corporate' : 'Individual'}</Button>\n                </FormGroup>\n\n                <Button color=\"info\" onClick={this.resetForm}>Reset</Button>\n                <Button type=\"submit\"><FontAwesomeIcon icon={faSave} color=\"white\"/></Button>\n            </Form>\n          </div>               \n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      detail: state.detail,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addDetailNote: (text, phone, status, is_corporate, email, linkedin_profile, website, correspondence) => {\n            return dispatch(detail.addDetailNote(text, phone, status, is_corporate, email, linkedin_profile, website, correspondence));\n        },\n    }\n}\n\n// export default NewNote;\nexport default connect(mapStateToProps, mapDispatchToProps)(NewNote);","import React, {Component} from 'react'\n// import 'whatwg-fetch'\n// import cookie from 'react-cookies'\n// import { Link } from 'react-router-dom'\nimport * as lead from \"../../actions/paymentsActions\";\nimport {connect} from 'react-redux';\n// import { Form, FormText, \n//   FormGroup, Label, Input, Button,\n//   Dropdown, DropdownToggle, \n//   DropdownMenu, DropdownItem, Table } from 'reactstrap';\nimport { Table } from 'reactstrap';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n// import { faMale, faUsers, faSave } from '@fortawesome/free-solid-svg-icons'\n\nclass Payments extends Component {\n    constructor(props){\n        super(props)       \n        this.state = {\n          doneLoading: false,\n          errors: {},\n          lead: {},          \n        }\n    }\n\n    componentDidMount(){\n      if (this.props.match){\n        this.setState({\n            doneLoading: false,\n        })\n        this.props.fetchPaymentsLead()\n      }\n    }\n   \n    renderNote() {\n        if (this.props.lead) {\n          // const {doneLoading} = this.state\n          const { lead } = this.props;\n          // const { errors } = this.state;\n\n          return (\n            <div>\n              <h3>Leads View</h3>\n              <Table className=\"table text-center\" striped>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Developer</th>\n                    <th>Total Leads</th>\n                    <th>Processed</th>\n                    <th>Converted</th>\n                    <th>Rejected</th>\n                    <th>Next Payment</th>\n                  </tr>\n                </thead>  \n                <tbody>\n                  {lead.length > 0 ? lead.map((item,id) => (\n                    <tr key={id}>\n                        <th scope=\"row\">{id+1}</th>\n                        <td>{item.owner}</td>\n                        <td>{item.total}</td>\n                        <td>{item.processed}</td>\n                        <td>{item.converted}</td>\n                        <td>{item.rejected}</td>\n                        <td>{item.price}</td>\n                    </tr>\n                  )) : null}\n                </tbody>                     \n\n              </Table>\n            </div>              \n          );\n\n        } else {\n            return (\n              <div>\n                <h1>404 error. Message Not Found</h1>\n              </div>\n            );\n        }\n    }\n    render () {\n        return(\n            <div>\n              {this.renderNote()}\n          </div>               \n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      lead: state.lead,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      fetchPaymentsLead: () => {\n          dispatch(lead.fetchPaymentsLead());\n      },\n      // updateDetailNote: (id, text, phone, status, is_corporate, email, linkedin_profile, website) => {\n      //     dispatch(detail.updateDetailNote(id, text, phone, status, is_corporate, email, linkedin_profile, website));\n      // }\n    }\n}\n\n// export default NoteDetail;\nexport default connect(mapStateToProps, mapDispatchToProps)(Payments);","export const fetchPaymentsLead = () => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        const endpoint = `/api/payments/` \n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        \n        return fetch(endpoint, {headers, })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                // } else if (res.status === 404) {\n                //     dispatch({type: \"MESSAGE_NOT_FOUND\", data: res.data});\n                //     throw res.data;\n                } else {\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'FETCH_PAYMENTS_LEAD', lead: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                } else if (res.status === 404) {\n                    dispatch({type: \"MESSAGE_NOT_FOUND\", lead: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport RequireAuth from \"./auth/RequireAuth\";\nimport Landing from \"./Landing\";\nimport Login from \"./auth/Login\";\nimport Logout from \"./auth/Logout\";\nimport Signup from \"./auth/Signup\";\nimport SignupDone from \"./auth/SignupDone\";\nimport AccountActivation from \"./auth/AccountActivation\";\nimport UserProfile from \"./auth/UserProfile\";\nimport UserProfileEdit from \"./auth/UserProfileEdit\";\nimport PasswordChange from \"./auth/PasswordChange\";\nimport PasswordReset from \"./auth/PasswordReset\";\nimport PasswordResetDone from \"./auth/PasswordResetDone\";\nimport PasswordResetConfirm from \"./auth/PasswordResetConfirm\";\nimport NoMatch from \"./NoMatch\";\n\nimport ReactifyComp from '../routingComps/ReactifyComp'\nimport PostDetail from '../reactify/PostDetail';\nimport PostCreate from '../reactify/PostCreate'\nimport InputForm from './notes/InputForm'\nimport NoteDetail from './notes/NoteDetail'\nimport NewNote from './notes/NewNote'\nimport Payments from './notes/Payments'\n\nconst MainContent = () => (\n    <div>\n        <Switch>\n            <Route exact path=\"/\" component={props => <Landing {...props} />} />\n            <Route path=\"/login\" component={props => <Login {...props} />} />\n            <Route path=\"/logout\" component={props => <Logout {...props} />}/>\n            <Route path=\"/signup\" component={props => <Signup {...props} />}/>\n            <Route path=\"/account/confirm-email/:key\" component={props => <AccountActivation {...props} />}/>\n            <Route path=\"/signup_done\" component={props => <SignupDone {...props} />}/>\n            <Route path=\"/reset_password\" component={props => <PasswordReset {...props} />}/>\n            <Route path=\"/reset_password_done\" component={props => <PasswordResetDone {...props} />}/>\n            <Route path=\"/reset/:uid/:token/\" component={props => <PasswordResetConfirm {...props} />}/>\n            <Route path=\"/profile\" component={RequireAuth(UserProfile)}/>\n            <Route path=\"/profile_edit\" component={RequireAuth(UserProfileEdit)}/>\n            <Route path=\"/change_password\" component={RequireAuth(PasswordChange)}/>\n            <Route path='/react/posts/create' component={RequireAuth(PostCreate)}/>\n            <Route path='/react/posts/:slug' component={RequireAuth(PostDetail)}/>\n            <Route path='/react/posts' component={RequireAuth(ReactifyComp)} />\n            <Route exact path='/investors' component={RequireAuth(InputForm)} />\n            <Route path='/investors/add' component={RequireAuth(NewNote)}/>\n            <Route path='/investors/:id' component={RequireAuth(NoteDetail)}/>\n            <Route exact path='/payments' component={RequireAuth(Payments)} />\n\n            <Route component={props => <NoMatch {...props} />}/>\n        </Switch>\n    </div>\n);\n\nexport default MainContent;\n","import React, {Component} from \"react\";\n// import { Notifs } from 'redux-notifications';\n// <Notifs />\n\nimport Header from \"./Header\";\nimport MainContent from \"./MainContent\";\n\nexport default class App extends Component {\n\n    render() {\n        return (\n            <div>                \n                <Header />\n                <div className=\"container\">\n                \t<MainContent />\n                </div>\n            </div>\n        );\n    }\n}","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"bootstrap/dist/css/bootstrap.css\";\nimport 'redux-notifications/lib/styles.css';\nimport \"./styles/style.css\"\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import { Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport store from \"./store\";\n// import history from \"./utils/historyUtils\";\nimport { authLogin } from \"./actions/authActions\";\nimport App from \"./components/App\";\nimport registerServiceWorker from './registerServiceWorker';\n\n// import { syncHistoryWithStore } from 'react-router-redux'\n\n\n// const browserhistory = syncHistoryWithStore(history, store)\n\nregisterServiceWorker();\n\nconst token = localStorage.getItem(\"token\");\n\nif (token) {\n    store.dispatch(authLogin(token));\n}\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <App />\n        </Router>\n    </Provider>\n    , document.getElementById(\"root\"));\n"],"sourceRoot":""}