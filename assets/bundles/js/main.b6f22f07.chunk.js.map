{"version":3,"sources":["../config/polyfills.js","reducers/notesReducer.js","constants/actionTypes.js","reducers/index.js","reducers/authReducer.js","reducers/noteDetailReducer.js","reducers/paymentsReducer.js","reducers/userDetailReducer.js","store/index.js","constants/urls.js","utils/authUtils.js","actions/authActions.js","components/general/Organisms/LoadScreen/LoadScreen.js","utils/renderUtils.js","components/general/Atoms/Links/Links.js","components/Header.js","components/auth/RequireAuth.js","components/Landing.js","components/auth/Login.js","components/auth/Logout.js","components/auth/Signup.js","components/auth/SignupDone.js","components/auth/AccountActivation.js","components/general/Atoms/Buttons/Buttons.js","components/auth/Molecules/Tables/UserDetailTable.js","components/auth/Templates/UserProfile.js","components/general/Organisms/ErrorPage/ErrorPage.js","components/auth/Templates/UserProfileDetail.js","actions/userDetailActions.js","components/auth/Atoms/ImageDrop/ImageDrop.js","components/auth/UserProfileEdit.js","components/auth/PasswordChange.js","components/auth/PasswordReset.js","components/auth/PasswordResetDone.js","components/auth/PasswordResetConfirm.js","reactify/PostInline.js","reactify/Posts.js","routingComps/ReactifyComp.js","reactify/PostForm.js","reactify/PostDetail.js","reactify/PostCreate.js","actions/notesActions.js","components/notes/Organisms/Modal/Modal.js","components/notes/Atoms/AddInputs/AddInputs.js","components/notes/Atoms/Checkboxes/CheckboxIsCorp.js","components/notes/Atoms/Checkboxes/CheckboxIsPayed.js","components/notes/Atoms/Dropdown/Dropdown.js","components/notes/Molecules/Forms/InputFormNoteQuickAdd.js","components/notes/Molecules/Tables/OrderingHeaderTable.js","components/notes/Molecules/Tables/OrderingBodyTable.js","utils/helpers.js","components/notes/Templates/Notes.js","components/notes/Atoms/DatePick/DatePickLastCall.js","components/notes/Atoms/FileDrop/FileDrop.js","components/notes/Molecules/Forms/InputFormNoteDetail.js","components/notes/Molecules/Tables/DetailPreviewTable.js","components/notes/Templates/NoteDetail.js","actions/noteDetailActions.js","components/notes/Molecules/Forms/InputFormNoteAdd.js","components/notes/Templates/NoteNew.js","components/notes/Templates/Payments.js","utils/paymentsUtils.js","actions/paymentsActions.js","components/MainContent.js","components/App.js","registerServiceWorker.js","index.js"],"names":["Promise","__webpack_require__","enable","window","Object","assign","initialState","noteitems","loading","AuthTypes","LOGIN","LOGOUT","CHANGE_PASSWORD","USER_PROFILE","rootReducer","combineReducers","form","formReducer","auth","state","arguments","length","undefined","action","type","objectSpread","authenticated","token","payload","user","notes","noteList","map","a","reduce","b","concat","toConsumableArray","slice","filter","index","self","findIndex","t","created_at","id","fetching","unshift","note","selectById","indexEdit","p","noteToUpdate","text","phone","status","is_corporate","is_payed","email","linkedin_profile","website","correspondence","splice","deleteById","indexDel","nextafterdelete","next","deleted","detail","updated","hasError","errors","page","lead","leads","loaded","error","userdetail","store","logger","createLogger","middleware","applyMiddleware","thunk","compose","createStoreWithMiddleware","createStore","configureStore","ROOT_URL","HOMEPAGE_URL","require","homepage","AuthUrls","SIGNUP","RESET_PASSWORD","RESET_PASSWORD_CONFIRM","USER_ACTIVATION","getUserToken","authLogin","getUserProfile","dispatch","getState","axios","get","headers","authorization","then","response","data","catch","console","log","processedError","processServerError","SubmissionError","keys","newDict","key","push","_error","LoadScreen","react_default","createElement","className","LoadObject","props","objectclass","renderField","_ref","input","label","_ref$meta","meta","touched","renderTextAreaField","_ref2","_ref2$meta","renderError","errorMessages","JSON","stringify","toast","NavigationLink","_Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","value","_this$props","urltext","customclass","url","toLowerCase","NavItem_default","Link","to","pathname","fromDashboard","Component","NavigationUserLink","_Component2","_this$props2","avatar","src","alt","username","renderUser","LoadScreen_LoadObject","HomeButton","role","index_es","icon","faHome","color","BrandButton","Header","_this","call","toggleNavbar","setState","collapsed","Fragment","Nav","navbar","Links_NavigationLink","Links_NavigationUserLink","Navbar","dark","expand","Links_BrandButton","NavbarToggler","onClick","Collapse","isOpen","renderLinks","connect","RequireAuth","ComposedComponent","Authentication","checkAuthentication","nextProps","history","is_staff","is_superuser","Landing","Login","handleSubmit","pristine","submitting","onSubmit","Field","name","component","validate","required","message","Button","disabled","reduxForm","formValues","loginUrl","post","localStorage","setItem","onChange","values","clearSubmitErrors","test","Logout","logoutUser","removeItem","Signup","password1","password2","signupUrl","SignupDone","AccountActivation","match","params","activateUserUrl","info","ReturnButton","Button_default","outline","context","router","goBack","faArrowLeft","contextTypes","PropTypes","object","SaveButton","faSave","ClearButton","onClear","EditButton","onEdit","faEdit","UserDetailTable","Table","first_name","last_name","Buttons_ReturnButton","Links_HomeButton","colSpan","style","backgroundImage","href","about","UserProfile","UserDetailTable_UserDetailTable","LoadScreen_LoadScreen","ErrorPage","rotation","faSpaceShuttle","UserProfileDetail","prevProps","fetchUserDetail","_this$state","ErrorPage_ErrorPage","renderNote","Content-Type","endpoint","fetch","res","json","ImageDrop","attached","handleDrop","files","_this2","_this$props$meta","classNameLabel","cbFunction","drop_class","drop_text","dist_es","onDrop","f","maxSize","getRootProps","getInputProps","defaultProps","Atoms_ImageDrop_ImageDrop","dropzone_options","multiple","accept","initialValues","formData","FormData","String","forEach","append","patch","PasswordChange","changePasswordUrl","new_password1","new_password2","PasswordReset","resetPasswordUrl","PasswordResetDone","PasswordResetConfirm","_props$match$params","uid","resetPasswordConfirmUrl","PostInline","elClass","showContent","slug","title","content","Posts","togglePostListClass","bind","assertThisInitialized","handleNewPost","loadMorePosts","posts","postsListClass","previous","author","count","loadPosts","nextEndpoint","thisComp","lookupOptions","method","csrfToken","cookie","load","responseData","results","postItemData","currentPosts","event","preventDefault","postItem","reactify_PostInline","ReacTifyComp","reactify_Posts","PostForm","handleInputChange","handleDraftChange","clearForm","postTitleRef","React","createRef","postContentRef","deletePost","draft","publish","moment","Date","format","X-CSRFToken","Authorization","body","credentials","newPostItemUpdated","alert","newPostItemCreated","defaultState","postCreateForm","reset","current","updatePost","createPost","target","defineProperty","cancelClass","deleteClass","ref","el","htmlFor","placeholder","checked","PostDetail","handlePostItemUpdated","doneLoading","loadPost","owner","reactify_PostForm","postItemUpdated","PostCreate","fetchNotes","ModalDelete","modaldelete","toggle","Modal","ModalHeader","ModalBody","ModalFooter","FormGroup","row","onSelectForDelete","faTrash","InputName","Label","Input","onInputChange","FormText","InputPhone","InputEmail","_Component3","_this$props3","InputLinkedin","_Component4","_this$props4","InputWebsite","_Component5","_this$props5","InputCorrespondence","_Component6","_this$props6","CheckboxIsCorp","faMale","faUsers","handleCheckboxIsCorpBtnClick","active","CheckboxIsPayed","faHandHoldingUsd","faCheckCircle","handleCheckboxIsPayBtnClick","CustomDropdown","dropdownOpen","Dropdown","onToggle","DropdownToggle","caret","DropdownMenu","DropdownItem","onChangeValue","InputFormNoteQuickAdd","updateNoteId","AddInputs_InputName","AddInputs_InputPhone","AddInputs_InputEmail","AddInputs_InputLinkedin","AddInputs_InputWebsite","AddInputs_InputCorrespondence","CheckboxIsCorp_CheckboxIsCorp","Dropdown_CustomDropdown","CheckboxIsPayed_CheckboxIsPayed","OrderingHeaderTable","_getPrototypeOf2","_len","args","Array","_key","order","is_ordering_name","searchtext","onBtnClickOrderingName","ordername","newordername","charAt","indexOf","includes","onOrderNotes","faLongArrowAltDown","faExchangeAlt","faTimes","OrderingBodyTable","scope","prevLink","location","owner_username","onSelectForEdit","onToggleModalDelete","handleValidation","fields","trim","lastAtPos","lastIndexOf","lastDotPos","Notes","resetForm","addNew","modal","resetSearch","searching","searchNotes","selectForEdit","updateNoteIndex","selectForDelete","deleteNote","prevState","toggleModal","toggleModalDelete","handleChange","e","_this$setState","changeValue","currentTarget","textContent","onCheckboxIsCorpBtnClick","onCheckboxIsPayBtnClick","dataFromCallback","mapped","item","join","orderNotes","submitNote","validation_errors","addNote","updateNote","isArray","nextForDelete","lastChar","parseInt","Form","InputFormNoteQuickAdd_InputFormNoteQuickAdd","_this$state2","faPlusSquare","renderModal","Modal_ModalDelete","CustomInput","inline","faSearch","striped","OrderingHeaderTable_OrderingHeaderTable","OrderingBodyTable_OrderingBodyTable","renderNotes","noteId","DatePickLastCall","handleChangeDate","date","defaultFormat","toDate","add_call","last_call","is_valid_date","isValid","handleResetCallClick","react_datepicker_es","selected","showTimeSelect","timeFormat","timeIntervals","dateFormat","timeCaption","handleAddCallClick","FileDrop","acceptedFiles","rejectedFiles","onSelectDrop","documents","split","faFileUpload","InputFormNoteDetail","DatePickLastCall_DatePickLastCall","Atoms_FileDrop_FileDrop","DetailPreviewTable","Buttons_EditButton","NoteDetail","changeDate","getData","onAddCallClick","onResetCallClick","updateDetailNote","fetchDetailNote","detailed","InputFormNoteDetail_InputFormNoteDetail","Buttons_SaveButton","Container","fluid","Row","DetailPreviewTable_DetailPreviewTable","Accept","toISOString","InputFormNoteAdd","NoteNew","addDetailNote","redirectToNewPage","Redirect","Form_default","InputFormNoteAdd_InputFormNoteAdd","Buttons_ClearButton","Payments","fetchPaymentsLead","newstate","true_investors","converted","processed","rejected","count_payed","payed","price_all","price_payed","prices","Math","ceil","price","paymentsUtil","total","renderPayments","MainContent","Switch","Route","exact","path","components_Landing","auth_Login","auth_Logout","auth_Signup","auth_AccountActivation","SignupDone_SignupDone","auth_PasswordReset","PasswordResetDone_PasswordResetDone","auth_PasswordResetConfirm","UserProfileEdit","ReactifyComp","App","components_Header","lib","hideProgressBar","position","autoClose","removeCloseButton","components_MainContent","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","URL","process","origin","addEventListener","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","getItem","ReactDOM","render","es","BrowserRouter","App_App","document","getElementById"],"mappings":"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","file":"js/main.b6f22f07.chunk.js","sourcesContent":["'use strict';\n\nif (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where React gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes React's erratic future behavior.\n  require('promise/lib/rejection-tracking').enable();\n\n  window.Promise = require('promise/lib/es6-extensions.js');\n} // fetch() polyfill for making API calls.\n\n\nrequire('whatwg-fetch'); // Object.assign() is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\n\n\nObject.assign = require('object-assign'); // In tests, polyfill requestAnimationFrame since jsdom doesn't provide it yet.\n// We don't polyfill it in the browser--this is user's responsibility.\n\nif (process.env.NODE_ENV === 'test') {\n  require('raf').polyfill(global);\n}","const initialState = [{noteitems: [], \n                       loading: true\n                    }]\n\nexport default function notes(state=initialState, action) {\n    //собрать все массивы с ключами noteitems и объединить в один массив\n    let noteList = state.map(a => a.noteitems).reduce((a, b) => [...a, ...b], []).slice();\n\n    switch (action.type) {\n\n        case 'FETCH_NOTES':\n            //удаление дубликатов\n            noteList = noteList.filter((noteList, index, self) => self.findIndex(t => t.created_at === noteList.created_at && t.id === noteList.id) === index)\n            \n            return [                    \n                    {...state[state.length-1],\n                    noteitems: noteList,\n                    loading: false,\n                    fetching: false,\n                    // deleted: false\n                    // ...action.notes\n                    },\n                ];\n        case 'SEARCH_NOTES':\n        \n            return [                    \n\n                    {...state,\n                    ...action.notes,\n                    loading: false,},\n                ];\n\n        case 'ORDER_NOTES':\n       \n            return [                    \n\n                    {...state,\n                    ...action.notes,\n                    loading: false,},\n                ];\n\n\n        case 'ADD_NOTE':\n            // Добавляем заметку\n            noteList.unshift(action.note);\n            // Удаляем нижнюю\n            // if (noteList.length > 0) {\n            //     noteList.pop();\n            // }\n\n            return [\n                        //берем последний стейт и добавляем к нему общий массив\n                        {...state[state.length-1],\n                            noteitems: noteList,\n                            loading: false,},\n\n                    ];\n\n        case 'UPDATE_NOTE':\n\n            //Поиск в общем массиве элемента по id и index (2мерный массив)\n            let selectById = state[action.index].noteitems[action.id].id\n            let indexEdit = noteList.findIndex(p => p.id === selectById) \n\n            let noteToUpdate = noteList[indexEdit]\n            noteToUpdate.text = action.note.text;\n            noteToUpdate.phone = action.note.phone;\n            noteToUpdate.status = action.note.status;\n            noteToUpdate.is_corporate = action.note.is_corporate;\n            noteToUpdate.is_payed = action.note.is_payed;\n            noteToUpdate.email = action.note.email;\n            noteToUpdate.linkedin_profile = action.note.linkedin_profile;\n            noteToUpdate.website = action.note.website;\n            noteToUpdate.correspondence = action.note.correspondence;\n            noteList.splice(indexEdit, 1, noteToUpdate);\n            return [\n                    {...state[state.length-1],\n                        noteitems: noteList,\n                        loading: false,},\n                    ];\n\n        case 'DELETE_NOTE':\n            //Поиск в общем массиве элемента по id и index (2мерный массив)\n            let deleteById = state[action.id].noteitems[action.index].id\n            let indexDel = noteList.findIndex(p => p.id === deleteById)                      \n            noteList.splice(indexDel, 1);\n            return [\n                        {...state[state.length-1],\n                            noteitems: noteList,\n                            loading: false,\n                            nextafterdelete: state[0].next,\n                            deleted: true\n                        }\n                    ];\n\n        default:\n            \n    }\n    return state;\n}\n","export const AuthTypes = {\n    LOGIN: \"LOGIN\",\n    LOGOUT: \"LOGOUT\",\n    CHANGE_PASSWORD: \"CHANGE_PASSWORD\",\n    USER_PROFILE: \"USER_PROFILE\",\n    // WITH_ERROR: \"WITH_ERROR\"\n};","import {combineReducers} from \"redux\";\nimport { reducer as formReducer } from \"redux-form\";\n\nimport notesReducer from \"./notesReducer\";\nimport noteDetailReducer from \"./noteDetailReducer\";\nimport userDetailReducer from \"./userDetailReducer\";\nimport authReducer from \"./authReducer\";\nimport paymentsReducer from \"./paymentsReducer\";\n// import { routerReducer } from 'react-router-redux'\n\nconst rootReducer = combineReducers({\n    form: formReducer,\n    auth: authReducer,\n    notes: notesReducer,\n    detail: noteDetailReducer,\n    lead: paymentsReducer,\n    userdetail: userDetailReducer,\n    // routing: routerReducer\n});\n\nexport default rootReducer;\n\n\n","import { AuthTypes } from \"../constants/actionTypes\";\n\nexport default function(state = {loading: true}, action) {\n    switch(action.type) {\n        case AuthTypes.LOGIN:\n            return { ...state, authenticated: true, token: action.payload};\n        case AuthTypes.LOGOUT:\n            return { ...state, authenticated: false, token: null};\n        case AuthTypes.USER_PROFILE:\n            return { ...state, user: action.payload, loading: false};\n        // case AuthTypes.WITH_ERROR:\n        //     return { ...state, error: action.payload};\n        default:\n        \t// will NOT execute because of the line preceding the switch.\n    }\n    return state;\n}","export default function noteDetailReducer(state = {loading: true, updated: false, hasError: false, errors: {}}, action) {\n    switch(action.type) {\n\n        case 'FETCH_DETAIL_NOTE':\n            return { ...state, ...action.detail, loading: false, hasError: false, errors: {}};\n        case 'UPDATE_DETAIL_NOTE':\n            return { ...state, ...action.detail, loading: false, updated: true, hasError: false, errors: {}};\n        case 'ADD_DETAIL_NOTE':\n            return { ...state, ...action.detail, loading: false, hasError: false, errors: {}};\n\n        case 'INVESTOR_NOT_FOUND':\n            return {...state, \n                hasError: true,\n                errors: {page: \"Investor not found\"},\n                loading: false,\n            };\n        case 'AUTHENTICATION_ERROR':\n            return {...state, \n                hasError: true,\n                errors: {page: \"Authentication Error\"},\n                loading: false,\n            };\n        default:\n          // will NOT execute because of the line preceding the switch.\n    }\n    return state;\n}","export default function paymentsReducer(state = {leads: \"\", loading: true, loaded: false}, action) {\n    switch(action.type) {\n        case 'FETCH_PAYMENTS_LEAD':\n            return { ...state, leads: [...action.leads], loading: false, loaded: true }\n        case 'LEAD_NOT_FOUND':\n            return {...state, loading: false, error: \"Not found\"};\n        default:\n          // will NOT execute because of the line preceding the switch.\n    }\n    return state;\n}","export default function userDetailReducer(state = {loading: true}, action) {\n    switch(action.type) {\n\n        case 'FETCH_USER_DETAIL':\n            return { ...state, \n                ...action.userdetail, \n                hasError: false,\n                errors: {},\n                loading: false,\n            };\n        // case 'UPDATE_DETAIL_NOTE':\n        //     return { ...state, ...action.detail, loading: false, updated: true};\n        // case 'ADD_DETAIL_NOTE':\n        //     return { ...state, ...action.detail, loading: false};\n\n        case 'USER_NOT_FOUND':\n            return {...state, \n                hasError: true,\n                errors: {page: \"User not found\"},\n                loading: false,\n            };\n\n        default:\n          // will NOT execute because of the line preceding the switch.\n    }\n    return state;\n}","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from '../reducers';\n\nfunction configureStore(initialState) {\n    let createStoreWithMiddleware;\n\n    const logger = createLogger();\n    const middleware = applyMiddleware(thunk, logger);\n\n    createStoreWithMiddleware = compose(\n        middleware\n    );\n\n    return createStoreWithMiddleware(createStore)(rootReducer, initialState);\n}\n\nlet store = configureStore();\n\nexport default store;","export let ROOT_URL = \"http://localhost:8000/\";\n\n// FOR PRODUCTION URLS\nconst HOMEPAGE_URL = require('../../package.json').homepage;\n\nif (process.env.NODE_ENV === \"production\") {\n\tROOT_URL = HOMEPAGE_URL\n}\n\nexport const AuthUrls = {\n    LOGIN: `${ROOT_URL}rest-auth/login/`,\n    SIGNUP: `${ROOT_URL}rest-auth/registration/`,\n    CHANGE_PASSWORD: `${ROOT_URL}rest-auth/password/change/`,\n    RESET_PASSWORD: `${ROOT_URL}rest-auth/password/reset/`,\n    RESET_PASSWORD_CONFIRM: `${ROOT_URL}rest-auth/password/reset/confirm/`,\n    USER_ACTIVATION: `${ROOT_URL}rest-auth/registration/verify-email/`,\n    USER_PROFILE: `${ROOT_URL}rest-auth/user/`\n};","export function getUserToken(state) {\n    return state.auth.token;\n}","import axios from \"axios\";\nimport { SubmissionError } from 'redux-form';\n// import { actions as notifActions } from 'redux-notifications';\nimport { AuthTypes } from \"../constants/actionTypes\";\nimport { AuthUrls } from \"../constants/urls\";\nimport store from \"../store\";\nimport { getUserToken } from \"../utils/authUtils\";\nimport { toast } from 'react-toastify';\n\n// const { notifSend } = notifActions;\nexport function authLogin(token) {\n    return {\n        type: AuthTypes.LOGIN,\n        payload: token,\n    };\n}\n\nexport function loginUser(formValues, dispatch, props) {\n        const loginUrl = AuthUrls.LOGIN;\n\n        return axios.post(loginUrl, formValues).then((response) => {\n            // If request is good...\n            // Update state to indicate user is authenticated\n            const token = response.data.key; \n\n            dispatch(authLogin(token));\n            localStorage.setItem(\"token\", token);\n\n            // redirect to the route '/'\n            props.history.push(\"/investors\");\n            // to getUserProfile in Header\n            dispatch(getUserProfile())\n        }).catch(error => {            \n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n\nexport function logoutUser() {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"csrftoken\");\n    return {\n        type: AuthTypes.LOGOUT\n    };\n}\n\nexport function signupUser(formValues, dispatch, props) {\n    const signupUrl = AuthUrls.SIGNUP;\n\n    return axios.post(signupUrl, formValues)\n        .then((response) => {\n            // If request is good...\n            // you can login if email verification is turned off.\n            // const token = response.data.key;\n            // dispatch(authLogin(token));\n            // localStorage.setItem(\"token\", token);\n\n            // email need to be verified, so don't login and send user to signup_done page.\n            // redirect to signup done page.\n            props.history.push(\"/signup_done\");\n        })\n        .catch((error) => {\n            // If request is bad...\n            // Show an error to the user\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n\nfunction setUserProfile(payload) {\n    return {\n        type: AuthTypes.USER_PROFILE,\n        payload: payload\n    };\n}\n\nexport function getUserProfile() {\n    return function(dispatch) {\n        const token = getUserToken(store.getState());\n\n        if (token) {\n            axios.get(AuthUrls.USER_PROFILE, {\n                headers: {\n                    authorization: 'Token ' + token\n                }\n            }).then(response => {\n                dispatch(setUserProfile(response.data))\n            }).catch((error) => {\n                // If request is bad...\n                // Show an error to the user\n                console.log(error);\n                // TODO: send notification and redirect\n                const processedError = processServerError(error.response.data);\n                throw new SubmissionError(processedError);\n            });\n        }\n    };\n}\n\nexport function changePassword(formValues, dispatch, props) {\n    const changePasswordUrl = AuthUrls.CHANGE_PASSWORD;\n    const token = getUserToken(store.getState());\n\n    if (token) {\n        return axios.post(changePasswordUrl, formValues, {\n            headers: {\n                authorization: 'Token ' + token\n            }\n        })\n            .then((response) => {\n                toast.info('Password has been changed successfully')\n                // dispatch(notifSend({\n                //     message: \"Password has been changed successfully\",\n                //     kind: \"info\",\n                //     dismissAfter: 5000\n                // }));\n                // redirect to the route '/profile'\n                props.history.push(\"/profile\");\n            })\n            .catch((error) => {\n                // If request is bad...\n                // Show an error to the user\n                const processedError = processServerError(error.response.data);\n                throw new SubmissionError(processedError);\n            });\n    }\n}\n\nexport function resetPassword(formValues, dispatch, props) {\n    const resetPasswordUrl = AuthUrls.RESET_PASSWORD;\n\n    return axios.post(resetPasswordUrl, formValues)\n        .then(response => {\n            // redirect to reset done page\n            props.history.push(\"/reset_password_done\");\n        }).catch((error) => {\n            // If request is bad...\n            // Show an error to the user\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n\nexport function confirmPasswordChange(formValues, dispatch, props) {\n    const { uid, token } = props.match.params;\n    const resetPasswordConfirmUrl = AuthUrls.RESET_PASSWORD_CONFIRM;\n    const data = Object.assign(formValues, { uid, token });\n\n    return axios.post(resetPasswordConfirmUrl, data)\n        .then(response => {\n            toast.info('Password has been reset successfully, please log in')\n            props.history.push(\"/login\");\n        }).catch((error) => {\n            // If request is bad...\n            // Show an error to the user\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n\nexport function activateUserAccount(formValues, dispatch, props) {\n    const { key } = props.match.params;\n    const activateUserUrl = AuthUrls.USER_ACTIVATION;\n    const data = Object.assign(formValues, { key });\n\n    return axios.post(activateUserUrl, data)\n        .then(response => {\n            toast.info('Your account has been activated successfully, please log in')\n            props.history.push(\"/login\");\n        }).catch((error) => {\n            // If request is bad...\n            // Show an error to the user\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n\nexport function updateUserProfile(formValues, dispatch, props) {\n    const token = getUserToken(store.getState());\n\n    let object = formValues\n\n    // Fix problem with update profile without upload avatar\n    const formData = new FormData(); \n    if (typeof formValues.avatar === 'string' || \n        formValues.avatar instanceof String ||\n        formValues.avatar === null) {\n        Object.keys(object).forEach(key => \n            (key !== \"avatar\") && formData.append(key, object[key])      \n        );\n    } else {\n        Object.keys(object).forEach(key => \n            formData.append(key, object[key])      \n        );\n    }\n\n    // adding \"Content-Type\": \"multipart/form-data\", for images\n    return axios.patch(AuthUrls.USER_PROFILE, formData, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\",\n                authorization: 'Token ' + token\n            }\n        })\n        .then(response => {\n            toast.info('Your profile has been updated successfully')\n            props.history.push(\"/profile\");\n        }).catch((error) => {\n            // If request is bad...\n            // Show an error to the user\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n// util functions\nfunction processServerError(error) {\n\n    return  Object.keys(error).reduce(function(newDict, key) {\n        if (key === \"non_field_errors\") {\n            newDict[\"_error\"].push(error[key]);\n        } else if (key === \"token\") {\n            // token sent with request is invalid\n            newDict[\"_error\"].push(\"The link is not valid any more.\");\n        } else {\n            newDict[key] = error[key];\n        }\n        return newDict\n    }, {\"_error\": []});\n}","import React from \"react\";\nimport './styles.scss'\n\nexport const LoadScreen = () => (\n  <div className=\"loadscreen\">\n    <div className=\"load-9\">\n      <div className=\"spinner\">\n        <div className=\"bubble-1\"></div>\n        <div className=\"bubble-2\"></div>\n      </div>\n    </div>\n  </div>\n)\n\nexport const LoadObject = (props) => (\n  <div className={`${props.objectclass}`}>\n    <div className=\"load-3\">\n    <div className=\"line\"></div>\n    <div className=\"line\"></div>\n    <div className=\"line\"></div>\n    </div>\n  </div>\n)\n","import React from \"react\";\nimport { toast } from 'react-toastify';\n\nexport const renderUser = (user) => {\n  if (user) {\n      return (\n        <div className=\"user\">\n            {user.avatar ? <img src={`${user.avatar}`} className=\"user-avatar\" alt=\"Avatar\" /> : \"\"}            \n            <span className=\"user-username\">{user.username}</span>\n        </div>\n      );\n  }\n};\n\nexport const renderField = ({ input, label, type, meta: { touched, error } }) => (\n    <div>\n        <label>{label}</label>\n        <div>\n            <input className=\"form-control\" {...input} type={type}/>\n        </div>\n        {touched && ((error && <div className=\"alert alert-danger p-1\"><small>{error}</small></div>))}\n    </div>\n);\n\nexport const renderTextAreaField = ({ input, label, type, meta: { touched, error } }) => (\n    <div>\n        <label>{label}</label>\n        <div>\n            <textarea className=\"form-control\" {...input} type={type} />\n        </div>\n        {touched && ((error && <div className=\"alert alert-danger p-1\"><small>{error}</small></div>))}\n    </div>\n);\nexport const renderImageField = ({ input, label, type, meta: { touched, error } }) => (\n    <div>\n        <label>{label}</label>\n        <div>\n            <input className=\"form-control\" {...input} type={type}/>\n        </div>\n        {touched && ((error && <div className=\"alert alert-danger p-1\"><small>{error}</small></div>))}\n    </div>\n);\nexport const renderError = (errorMessages) => {\n    if ( errorMessages ) {\n        if (JSON.stringify(errorMessages)!==\"[]\") {\n            toast.error(errorMessages[0][0])          \n        } else {\n            toast.error(\"Error...\")\n        }  \n    } \n};\n","import React, { Component } from 'react'\nimport { Link } from \"react-router-dom\";\nimport NavItem from 'reactstrap/lib/NavItem';\nimport { LoadObject } from '../../Organisms/LoadScreen/LoadScreen'\nimport { renderUser } from \"../../../../utils/renderUtils\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\n\nexport class NavigationLink extends Component {\n\n  render() {\n  \tconst { urltext, customclass } = this.props;\n  \tconst url = urltext.toLowerCase()\n    return (               \n    \t\t<NavItem key={`/${url}`}>\n    \t\t\t<Link className={`nav-link ${customclass}`} \n    \t\t\t  to={{\n\t\t\t    \t  pathname: `/${url}`,\n      \t\t\t\t  state: {fromDashboard: false}\n      \t\t\t  }}>\n      \t\t\t  \t{ urltext }\n    \t\t\t</Link>\n    \t\t</NavItem>\n        )    \n  }\n}\n\nexport class NavigationUserLink extends Component {\n\n  render() {\n  \tconst { urltext, customclass, user } = this.props;\n  \tconst url = urltext.toLowerCase()\n\n    return (               \n    \t\t<NavItem key={`/${url}`}>\n    \t\t\t<Link className={`nav-link ${customclass}`} \n    \t\t\t  to={{\n\t\t\t    \t  pathname: `/${url}`,\n      \t\t\t\t  state: {fromDashboard: false}\n      \t\t\t  }}>\n      \t\t\t  \t{user ? renderUser(user) : <LoadObject objectclass=\"loaduser\"/>}\n    \t\t\t</Link>\n    \t\t</NavItem>\n        )    \n  }\n}\n\nexport const HomeButton = () => (\n\t<Link className=\"btn btn-outline-info rounded-0 button-icon\"\n\t\trole=\"button\" \n\t\tto={{\n\t\t  \tpathname: `/investors`,\n\t\t\tstate: {fromDashboard: false}\n\t\t  }}>\n\t\t  \t<FontAwesomeIcon icon={faHome} color=\"info\"/>\n\t</Link>\n);\n\nexport const BrandButton = () => (\n    <Link className=\"navbar-brand\"\n      to={{\n          pathname: `/`,\n          state: {fromDashboard: false}\n      }}>\n        Lead Platform\n    </Link>\n\n);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n// import { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  Nav,\n    } from 'reactstrap';\n\nimport { NavigationLink, NavigationUserLink, BrandButton } from './general/Atoms/Links/Links'\nimport { getUserProfile } from \"../actions/authActions\";\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            collapsed: true\n        };\n    }\n    toggleNavbar = () => {\n        this.setState({\n            collapsed: !this.state.collapsed\n        });\n    }\n\n    static propTypes = {\n        authenticated: PropTypes.bool,\n        getUserProfile: PropTypes.func.isRequired,\n        user: PropTypes.object\n    };\n    componentWillMount() {\n        this.props.getUserProfile();\n    } \n\n    renderLinks() {\n        if (this.props.authenticated) {\n            const { user } = this.props\n            return (\n                <>\n                    <Nav navbar className=\"navbar-links\">\n                        <NavigationLink\n                          urltext=\"Investors\"\n                          customclass=\"nav-links__link\"\n                        />\n                        <NavigationLink\n                          urltext=\"Payments\"\n                          customclass=\"nav-links__link\"\n                        />\n                    </Nav>\n                    <Nav navbar className=\"navbar-profile\">\n                        <NavigationUserLink\n                            urltext=\"profile\"\n                            user={user}\n                            customclass=\"nav-user\"\n                        />\n                        <NavigationLink\n                            urltext=\"Logout\"\n                            customclass=\"nav-logout\"\n                        />\n                    </Nav>  \n                </>              \n            );\n        } else {\n            return (\n                    <Nav className=\"ml-auto\" navbar>\n                        <NavigationLink\n                          urltext=\"Login\"\n                          customclass=\"nav-links__link\"\n                        />\n                       <NavigationLink\n                          urltext=\"SignUp\"\n                          customclass=\"nav-links__link\"\n                        />\n                    </Nav>\n            );\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"content-navbar\">\n                <Navbar color=\"secondary\" dark expand=\"md\">\n                    <BrandButton />\n                    <NavbarToggler onClick={this.toggleNavbar} />\n                      <Collapse isOpen={!this.state.collapsed} navbar>                    \n                            {this.renderLinks()}\n                      </Collapse>\n                </Navbar>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        authenticated: state.auth.authenticated,\n        user: state.auth.user\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getUserProfile: () => {\n            return dispatch(getUserProfile());\n        }\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n// import {withRouter} from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nexport default function(ComposedComponent) {\n    class Authentication extends Component {\n\n        static propTypes = {\n            history: PropTypes.object\n        };\n\n        componentWillMount() {\n            this.checkAuthentication(this.props);\n\n        }\n\n        componentWillUpdate(nextProps) {\n            this.checkAuthentication(nextProps);\n        }\n\n        checkAuthentication(props) {\n            if (!props.authenticated) {\n                this.props.history.push(\"/login\");\n            }\n        }\n\n        render() {\n            return <ComposedComponent {...this.props} />\n        }\n    }\n\n    function mapStateToProps(state) {\n\n        // provide is_staff to props\n        let is_staff = false;\n        if (state.auth.user && (state.auth.user.is_staff || state.auth.user.is_superuser)) {\n            is_staff = true;\n        }\n        return { authenticated: state.auth.authenticated, \n                is_staff: is_staff, \n            }\n    }\n    // return withRouter(connect(mapStateToProps)(Authentication));\n    return connect(mapStateToProps)(Authentication);\n}\n","import React, { Component } from 'react'\n\nclass Landing extends Component {\n  \n  render () {\n    return (\n\t\t<div className=\"main-wrapper text-center\">\n\t\t  <h2 className=\"main-wrapper__text\">Lead Platform based on DRF+React+Redux</h2>\n\t\t  <img className=\"main-wrapper__image\" src='/static/bundles/building.jpeg' alt=\"logo\" />  \n\t\t</div>\n    )\n  }\n}\nexport default Landing\n","import React, { Component } from \"react\";\n// import T from \"prop-types\";\n\nimport { reduxForm, Field, clearSubmitErrors, propTypes } from \"redux-form\";\nimport { Link } from \"react-router-dom\";\nimport { required } from \"redux-form-validators\"\n\nimport { renderField, renderError} from \"../../utils/renderUtils\";\nimport { loginUser } from \"../../actions/authActions\";\n\nimport { Button, } from 'reactstrap';\n\nclass Login extends Component {\n    static propTypes = {\n        ...propTypes\n    };\n    // static propTypes = {\n    //     form: T.string.isRequired,\n    //     onSubmit: T.func.isRequired,\n    // }\n\n    render() {\n        const { handleSubmit, error, pristine, submitting } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Please Log In</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"email\" label=\"Email\" component={renderField}\n                               type=\"text\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"password\" label=\"Password\" component={renderField}\n                               type=\"password\"  validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        { renderError(error) }\n                        <div className=\"form-button\">\n                            <Link role=\"button\" to=\"/signup\" className=\"btn btn-outline-info rounded-0 form-button__part\">SignUp</Link>\n                            <Button action=\"submit\" color=\"info\" className=\"rounded-0 form-button__part\" disabled={pristine || submitting}>Login</Button>\n                        </div>\n                    </fieldset>\n\n                    <Link to=\"/reset_password\" className=\"text-center info-link\">forgot password?</Link>\n                </form>\n            </div>\n        )\n    }\n}\n// Sync field level validation for password match\nconst validateLoginForm = values => {\n    const errors = {};\n    const { email } = values;\n\n    if (!email) {\n        errors.email = 'This field is required.'\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\n        errors.email = 'Invalid email address'\n    }\n    \n    return errors;\n};\nexport default reduxForm({\n    form: \"login\",\n    onSubmit: loginUser,\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('login'));\n    },\n    validate: validateLoginForm\n})(Login);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\n\nclass Logout extends Component {\n\n    static propTypes = {\n        logoutUser: PropTypes.func.isRequired\n    };\n\n    componentWillMount() {\n        this.props.logoutUser();\n    }\n\n    render() {\n        return (\n            <h2>Welcome to Lead Platform. Please Login or Signup...</h2>\n        );\n    }\n}\n\nexport default connect(null, { logoutUser })(Logout);","import React, { Component } from \"react\";\n// import PropTypes from \"prop-types\";\nimport { reduxForm, Field, propTypes, clearSubmitErrors } from \"redux-form\";\nimport { required } from \"redux-form-validators\"\nimport { renderField, renderError } from \"../../utils/renderUtils\";\nimport { signupUser } from \"../../actions/authActions\";\nimport { Link } from \"react-router-dom\";\nimport { Button, } from 'reactstrap';\n\nclass Signup extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n\n    render() {\n        const { handleSubmit, error, pristine, submitting } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Sign Up</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"email\" label=\"Email\" component={renderField}\n                               type=\"text\"/>\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"username\" label=\"Username\" component={renderField}\n                               type=\"text\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"password1\" label=\"Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"password2\" label=\"Confirm Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    { renderError(error) }\n\n                    <fieldset className=\"form-group\">\n                        <div className=\"form-button\">\n                            <Link role=\"button\" to=\"/login\" className=\"btn btn-outline-info rounded-0 form-button__part\">Login</Link>\n                            <Button action=\"submit\" color=\"info\" className=\"rounded-0 form-button__part\" disabled={pristine || submitting}>Sign Up</Button>\n                        </div>\n                    </fieldset>\n                </form>\n            </div>\n        );\n    }\n}\n\n// Sync field level validation for password match\nconst validateForm = values => {\n    const errors = {};\n    const { email, username, password1, password2 } = values;\n\n    if (!username) {\n        errors.username = 'This field is required.'\n    } else if (username.length > 15) {\n        errors.username = 'Must be 15 characters or less'\n    }\n    if (!email) {\n        errors.email = 'This field is required.'\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\n        errors.email = 'Invalid email address'\n    }\n    \n    if (password1 !== password2) {\n        errors.password2 = \"Password does not match.\"\n    }\n    return errors;\n};\n\nexport default reduxForm({\n    form: \"signup\",\n    validate: validateForm,\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('signup'));\n    },\n    onSubmit: signupUser\n})(Signup);\n","import React, { Component } from \"react\";\n\nexport default class SignupDone extends Component {\n    render() {\n        return (\n            <h3 className=\"mx-5\">\n                Thanks for your registration, please follow the link sent to your provided email to activate\n                your account.\n            </h3>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { reduxForm, propTypes, clearSubmitErrors } from \"redux-form\";\nimport { activateUserAccount } from \"../../actions/authActions\";\nimport { renderError } from \"../../utils/renderUtils\";\n\nclass AccountActivation extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Please click the button below to activate your account</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group text-center\">\n                        {renderError(error)}\n                        <button action=\"submit\" className=\"btn btn-info rounded-0\">Activate</button>\n                    </fieldset>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default reduxForm({\n    form: \"user_account_activation\",\n    onSubmit: activateUserAccount,\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('user_account_activation'));\n    },\n})(AccountActivation);\n","import React, { Component } from 'react'\nimport PropTypes from \"prop-types\";\nimport Button from 'reactstrap/lib/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowLeft, faSave, faEdit } from '@fortawesome/free-solid-svg-icons'\n\nexport class ReturnButton extends Component {\n  static contextTypes = {\n    router: PropTypes.object\n  }\n\n  render() {\n    return (               \n        <Button color=\"info\" outline className=\"rounded-0 button-icon\" role=\"button\"\n          onClick={this.context.router.history.goBack}>\n          <FontAwesomeIcon icon={faArrowLeft} color=\"secondary\"/>\n        </Button>   \n        )    \n  }\n}\n\nexport const SaveButton = () => (\n    <Button color=\"info\" className=\"rounded-0\" type=\"submit\">\n      <FontAwesomeIcon icon={faSave} color=\"secondary\"/>\n    </Button>\n);\n\nexport const ClearButton = props => (\n    <Button outline className=\"rounded-0\" type=\"button\"\n      onClick={props.onClear}\n    >\n      Clear\n    </Button>\n);\n\nexport const EditButton = props => (\n    <Button color=\"info\" outline className=\"rounded-0 button-icon\" type=\"button\"\n      onClick={props.onEdit}\n    >\n      <FontAwesomeIcon icon={faEdit} color=\"secondary\"/>\n    </Button>\n);","import React from 'react'\nimport { Table } from 'reactstrap';\n\nimport { ReturnButton } from '../../../general/Atoms/Buttons/Buttons'\nimport { HomeButton } from '../../../general/Atoms/Links/Links'\nimport './styles.scss'\n\nexport const UserDetailTable = (userdetail) => {\n  if (userdetail) {\n    return (\n      <div className=\"mx-2 mt-2\">\n        <Table className=\"userprofile-header\">\n          <tbody>\n            <tr>\n              <th>\n                <h2>{userdetail.first_name}{\" \"}{userdetail.last_name}</h2>\n              </th>\n              <td>\n                <ReturnButton />\n                <HomeButton />\n              </td>\n            </tr>\n          </tbody>\n        </Table>\n        <Table className=\"table-userprofile\">\n          <thead>\n            <tr>\n              <td colSpan=\"2\">\n                <div className=\"avatar\"\n                    style={{ backgroundImage: `url(${userdetail.avatar})` }}>\n                </div>\n              </td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <th>Profile:</th>\n              <td>\n                {userdetail.username}\n              </td>\n            </tr>\n\n            <tr>\n              <th>Email:</th>\n              <td>{userdetail.email}</td>\n            </tr>\n            <tr>\n              <th>Website:</th>\n              <td><a className=\"table-correspondence__url\" href={`${userdetail.website}`} >{userdetail.website}</a></td>\n            </tr>                    \n            <tr>\n              <th>About:</th>\n              <td>{userdetail.about}</td>\n            </tr>\n          </tbody>\n        </Table>\n      </div>\n    )\n  } \n  return null\n\n\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getUserProfile } from \"../../../actions/authActions\";\n\nimport { LoadScreen } from '../../general/Organisms/LoadScreen/LoadScreen'\nimport { UserDetailTable } from '../Molecules/Tables/UserDetailTable'\n\nclass UserProfile extends Component {\n\n    static propTypes = {\n        getUserProfile: PropTypes.func.isRequired,\n        user: PropTypes.object,\n        loading: PropTypes.bool\n    };\n    static contextTypes = {\n        router: PropTypes.object\n    }\n    componentWillMount() {\n        this.props.getUserProfile();\n    }\n\n    renderUser() {\n        const { user } = this.props;\n\n        if (user) {\n            return (\n                <UserDetailTable \n                    {...user}\n                  />  \n            );\n        }\n        return null;\n    }\n\n    render() {\n        const {loading} = this.props\n\n        return(\n            <div>\n              {loading ?\n                <LoadScreen />\n              :\n                <div>\n                    {this.renderUser()}\n                    <hr />                \n                    <fieldset className=\"form-group\">\n                        <div className=\"form-button\">\n                            <Link to=\"/profile_edit\" className=\"btn btn-info rounded-0 form-button__part\">Update Profile</Link>\n                            <Link to=\"/change_password\" className=\"btn btn-outline-info rounded-0 form-button__part\">Change Password</Link>\n                        </div>\n                    </fieldset>\n                </div>\n              }\n          </div>               \n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        user: state.auth.user,\n        loading: state.auth.loading\n    }\n}\n\nexport default connect(mapStateToProps, { getUserProfile } )(UserProfile);","import React from 'react'\nimport { HomeButton } from '../../Atoms/Links/Links'\nimport './styles.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSpaceShuttle } from '@fortawesome/free-solid-svg-icons'\n\nexport const ErrorPage = ({errors}) => (\n    <div className=\"error-page\">\n      <div className=\"wrapper-error\"> \n        <h1>Error</h1>     \n        {errors ?  \n            <p>{errors}</p> \n          : \n            <p>Sorry, the page you are looking for doesn't exist.</p>\n        }\n        <h2>Return to <HomeButton /></h2>\n      </div>  \n      <div className=\"space\">\n        <div className=\"blackhole\"></div>\n        <FontAwesomeIcon rotation={180} className=\"ship\" icon={faSpaceShuttle} color=\"info\"/>\n      </div>\n    </div>\n)","import React, {Component} from 'react'\nimport {connect} from 'react-redux';\nimport { LoadScreen } from '../../general/Organisms/LoadScreen/LoadScreen'\nimport { ErrorPage } from '../../general/Organisms/ErrorPage/ErrorPage'\nimport * as userdetail from \"../../../actions/userDetailActions\";\nimport { UserDetailTable } from '../Molecules/Tables/UserDetailTable'\n\nclass UserProfileDetail extends Component {\n    constructor(props){\n        super(props);  \n        this.state = {\n        \tuserdetail: {},\n        \tloading: true,\n        \thasError: false      \n        }\n    }\n\n    componentDidUpdate(prevProps) {\n      if (this.props.userdetail !== prevProps.userdetail) {\n\t\tthis.setState({\n\t\t\t\tuserdetail : this.props.userdetail,\n\t\t\t\tloading: this.props.userdetail.loading,\n\t\t\t\thasError: this.props.userdetail.hasError,\n\t\t\t\terrors: this.props.userdetail.errors,\n\t\t\t\t});\n      }\n    } \n    componentDidMount(){\n      if (this.props.match){\n        const {id} = this.props.match.params\n        this.setState({\n            id: id,\n        })\n        this.props.fetchUserDetail(id)        \n      }      \n    }\n\n    renderNote() {\n        const { userdetail } = this.props;\n        const { hasError, errors } = this.state;\n\n        if (!hasError) {\n          return (\n                  <UserDetailTable \n                    {...userdetail}\n                  />             \n          );\n\n        } else {\n            return (\n                <ErrorPage \n                    errors={errors && errors.page}\n                  /> \n            );\n        }\n    }\n    render () {\n        const {loading} = this.state\n        return(\n            <div>\n              {loading ?<LoadScreen />:this.renderNote()}\n          </div>               \n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      userdetail: state.userdetail,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      fetchUserDetail: (id) => {\n          dispatch(userdetail.fetchUserDetail(id));\n      },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserProfileDetail);","import { toast } from 'react-toastify';\nexport const fetchUserDetail = (id) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        const endpoint = `/api/user/${id}/` \n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        \n        return fetch(endpoint, {headers, })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n               \n                } else {\n                    toast.error(\"Server Error...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'FETCH_USER_DETAIL', userdetail: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authentication Error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", userdetail: res.data});\n                    throw res.data;\n                } \n                else if (res.status === 404) {\n                    toast.error(\"User is not found...\")\n                    dispatch({type: \"USER_NOT_FOUND\"});\n                } else {\n                    throw res.data\n                }\n            })\n            .catch(error => {                \n                //error.redirect('/404');\n                //Handle error\n                console.log(\"error\", error);\n                // return dispatch({type: \"MESSAGE_NOT_FOUND\", detail: error});\n                // dispatch({type: \"MESSAGE_NOT_FOUND\", detail: error});\n            });\n    }\n}\n","import React, {Component} from 'react';\nimport Dropzone from 'react-dropzone';\nimport PropTypes from \"prop-types\";\n// import { Form } from 'elements';\nimport { Field } from 'redux-form';\nimport './styles.scss'\n\nconst imageMaxSize = 1000000; //bytes\n\nclass ImageDrop extends Component {\n  static propTypes = {\n    dropzone_options: PropTypes.object,\n    meta: PropTypes.object,\n    label: PropTypes.string,\n    classNameLabel: PropTypes.string,\n    input: PropTypes.object,\n    className: PropTypes.string,\n    // children: PropTypes.node,\n\t//    children: PropTypes.oneOfType([\n\t//      PropTypes.node,\n\t//   PropTypes.object,\n\t//   PropTypes.func,\n\t// ]),\n    cbFunction: PropTypes.func,\n  };\n\n  static defaultProps = {\n    className: '',\n    cbFunction: () => {},\n  };\n  state = { attached: false };\n  handleDrop = (files) => {\n\tthis.setState({attached: true})\n  }\n  render() {\n    const { className, input: { onChange }, meta: { error, touched }, label, classNameLabel, name, cbFunction } = this.props;\n\n\tlet drop_class = \"dropimage-field dropimage-field__default avatar\"\n\tlet drop_text = \"\"\n\n\tif (this.props.input.value && this.state.attached) {\n\t\tdrop_class = \"dropimage-field dropimage-field__success\";\n\t\tdrop_text = \"Press Save to Add\";\n\t} else {\n\t\tdrop_class = \"dropimage-field dropimage-field__default avatar\";\n\t\t// drop_text = \"Add Document\"\n\t} \n    return (\n      <div className={`${className}` + (error && touched ? ' has-error ' : '')}>\n        {label && <p className={classNameLabel || ''}>{label}</p>}\n        <Dropzone\n          onDrop={(f) => {\n            cbFunction(f);\n            this.handleDrop(f);\n            return onChange(f[0]);\n          }}\n          name={name}\n          maxSize={imageMaxSize}\n        >\n            {({getRootProps, getInputProps}) => (\n                <div {...getRootProps()} className={`${drop_class}`} \n                  style={{ backgroundImage: `url(${this.props.input.value})`}}>\n                    <input {...getInputProps()} />\n                    <span className=\"dropimage-field__text\">{`${drop_text}`}</span>\n                </div>\n            )}\n        </Dropzone>\n        {error && touched ? <div className=\"alert alert-danger p-1\"><small>{error}</small></div> : ''}\n      </div>\n    );\n  }\n}\nexport default props => <Field {...props} component={ImageDrop} />;","import React, { Component } from \"react\";\nimport { reduxForm, Field, propTypes, clearSubmitErrors } from \"redux-form\";\nimport { connect } from 'react-redux'\nimport { Link } from \"react-router-dom\";\n\nimport { renderField, renderTextAreaField,\n    renderError} from \"../../utils/renderUtils\";\nimport { updateUserProfile } from \"../../actions/authActions\";\nimport ImageDrop from './Atoms/ImageDrop/ImageDrop'\n\nclass Login extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Edit Profile</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"username\" label=\"Username\" component={renderField}\n                               type=\"text\"\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"first_name\" label=\"First Name\" component={renderField}\n                               type=\"text\"\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"last_name\" label=\"Last Name\" component={renderField}\n                               type=\"text\"\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"website\" label=\"Website\" component={renderField}\n                               type=\"text\"\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"about\" label=\"About Yourself\" component={renderTextAreaField}\n                               type=\"text\"\n                        />\n                    </fieldset>\n                    <fieldset className=\"form-group\">\n                        <ImageDrop\n                         name=\"avatar\"\n                         label=\"Avatar:\"\n                          classNameLabel=\"file-input-label\"\n                          className=\"file-input\"\n                          dropzone_options={{\n                            multiple: false,\n                            accept: 'image/*'\n                          }}\n                        >\n                          <span>Add more</span>\n                        </ImageDrop>\n                    </fieldset>\n                    <fieldset className=\"form-group\">\n                        {renderError(error)}\n                        <div className=\"form-button\">\n                            <button action=\"submit\" className=\"btn btn-info rounded-0 form-button__part\">Save</button>\n                            <Link to=\"/profile\" className=\"btn btn-outline-info rounded-0 form-button__part\">Cancel</Link>\n                        </div>\n                    </fieldset>\n\n                </form>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        initialValues: state.auth.user\n    }\n}\n\nexport default connect(mapStateToProps)(reduxForm({\n    form: \"update_user_profile\",\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('update_user_profile'));\n    },\n    onSubmit: updateUserProfile\n})(Login));","import React, { Component } from \"react\";\n// import PropTypes from \"prop-types\";\nimport { reduxForm, Field, propTypes, clearSubmitErrors } from \"redux-form\";\nimport { required } from \"redux-form-validators\"\nimport { changePassword } from \"../../actions/authActions\";\nimport { renderField, renderError } from \"../../utils/renderUtils\";\nimport { Link } from \"react-router-dom\";\nimport { Button, } from 'reactstrap';\nclass PasswordChange extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error, pristine, submitting } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Change Password</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"old_password\" label=\"Old Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"new_password1\" label=\"New Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"new_password2\" label=\"Confirm New Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        {renderError(error)}\n                        <div className=\"form-button\">\n                            <Button action=\"submit\" color=\"info\" className=\"rounded-0 form-button__part\" disabled={pristine || submitting}>Submit</Button>\n                            <Link to=\"/profile\" className=\"btn btn-outline-info rounded-0 form-button__part\">Cancel</Link>\n                        </div>\n                    </fieldset>\n                </form>\n            </div>\n        );\n    }\n}\n\n// Sync field level validation for password match\nconst validateForm = values => {\n    const errors = {};\n    const { new_password1, new_password2 } = values;\n    if (new_password1 !== new_password2) {\n        errors.new_password2 = \"Password does not match.\"\n    }\n    return errors;\n};\n\nexport default reduxForm({\n    form: \"change_password\",\n    onSubmit: changePassword,\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('change_password'));\n    },\n    validate: validateForm\n})(PasswordChange);\n","import React, { Component } from \"react\";\nimport { reduxForm, Field, propTypes, clearSubmitErrors } from \"redux-form\";\nimport { required } from \"redux-form-validators\"\n\nimport { renderField, renderError} from \"../../utils/renderUtils\";\nimport { resetPassword } from \"../../actions/authActions\";\n\nclass PasswordReset extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Reset Your Password</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"email\" label=\"Please enter your email\" component={renderField}\n                               type=\"text\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n                    <fieldset className=\"form-group text-center\">\n                        {renderError(error)}\n                        <button action=\"submit\" className=\"btn btn-info rounded-0\">Submit</button>\n                    </fieldset>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default reduxForm({\n    form: \"password_reset\",\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('password_reset'));\n    },\n    onSubmit: resetPassword\n})(PasswordReset);\n","import React, { Component } from \"react\";\n\nexport default class PasswordResetDone extends Component {\n    render() {\n        return (\n            <h3 className=\"mx-5\">An password reset email has been sent to your email. Please follow the link to reset your password.</h3>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { reduxForm, Field, propTypes, clearSubmitErrors } from \"redux-form\";\nimport { required } from \"redux-form-validators\"\nimport { confirmPasswordChange } from \"../../actions/authActions\";\nimport { renderField, renderError } from \"../../utils/renderUtils\";\n\nclass PasswordResetConfirm extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Create New Password</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"new_password1\" label=\"New Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"new_password2\" label=\"Confirm New Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group text-center\">\n                        {renderError(error)}\n                        <button action=\"submit\" className=\"btn btn-info rounded-0\">Submit</button>\n                    </fieldset>\n                </form>\n            </div>\n        );\n    }\n}\n\n// Sync field level validation for password match\nconst validateForm = values => {\n    const errors = {};\n    const { new_password1, new_password2 } = values;\n    if (new_password1 !== new_password2) {\n        errors.new_password2 = \"Password does not match.\"\n    }\n    return errors;\n};\n\nexport default reduxForm({\n    form: \"password_reset_confirm\",\n    onSubmit: confirmPasswordChange,\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('password_reset_confirm'));\n    },\n    validate: validateForm\n})(PasswordResetConfirm);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\n\nclass PostInline extends Component {\n  // {post !== undefined ? <div className={elClass}>\n  //    <h1><Link maintainScrollPosition={false} to={{\n  //        pathname:`/react/posts/${post.slug}`,\n  //        state: {fromDashboard: false}\n  //    }}>{post.title}</Link></h1>\n\n  //   <p className={showContent}>{post.content}</p>\n  //   </div>\n  //   : \"\"}\n  render() {\n      const {post} = this.props\n      const {elClass} = this.props\n      const showContent = elClass === 'card' ? 'd-block' : 'd-none'\n    return (\n      <div>\n          {post !== undefined ? \n            <div className={elClass}>\n            <Link \n              to={{pathname:`/react/posts/${post.slug}`,\n              state: {fromDashboard: false}\n            }}>\n                <h1>{post.title}</h1>\n            </Link>\n                  <p className={showContent}>{post.content}</p>\n            </div>\n          : ''}\n      </div>\n    );\n  }\n}\n\nexport default PostInline;\n","import React, { Component } from 'react';\nimport 'whatwg-fetch'\nimport cookie from 'react-cookies'\nimport { Link } from 'react-router-dom'\nimport PostInline from './PostInline'\n// import PostCreate from './PostCreate'\n// import PostForm from './PostForm'\nimport { connect } from 'react-redux'\n\nimport store from \"../store\";\nimport { getUserToken } from \"../utils/authUtils\";\n\nclass Posts extends Component {\n\n  constructor(props){\n      super(props)\n      this.togglePostListClass = this.togglePostListClass.bind(this)\n      this.handleNewPost = this.handleNewPost.bind(this)\n      this.loadMorePosts =this.loadMorePosts.bind(this)\n      this.state = {\n          posts: [],\n          postsListClass: \"card\",\n          next: null,\n          previous: null,\n          author: false,\n          count: 0,\n          authenticated: false, //adding redux-props\n      }\n  }\n\n  loadMorePosts(){\n      const {next} = this.state \n      if (next !== null || next !== undefined) {\n           this.props.loadPosts(next)\n      }\n     \n  }\n    \n  loadPosts(nextEndpoint){\n      let endpoint = '/api/posts/' \n      if (nextEndpoint !== undefined) {\n          endpoint = nextEndpoint\n      }\n      let thisComp = this\n      let lookupOptions = {\n          method: \"GET\",\n          headers: {\n              'Content-Type': 'application/json'\n          }\n      }\n      const csrfToken = cookie.load('csrftoken')\n      const token = getUserToken(store.getState());\n      console.log('token', token);\n      console.log('csrftoken', csrfToken);\n\n      if (csrfToken !== undefined) {\n          lookupOptions['credentials'] = 'include'\n          lookupOptions['headers']['X-CSRFToken'] = csrfToken\n       } \n\n      fetch(endpoint, lookupOptions)\n      .then(function(response){\n          return response.json()\n      }).then(function(responseData){\n          console.log(responseData)\n          // let currentPosts = thisComp.state.posts\n          // let newPosts = currentPosts.concat(responseData.results)\n          // console.log(currentPosts)\n           thisComp.setState({\n                  posts: thisComp.state.posts.concat(responseData.results),\n                  next: responseData.next,\n                  previous: responseData.previous,\n                  author: responseData.author,\n                  count: responseData.count,\n                  authenticated: thisComp.props.state.auth.authenticated //adding redux-props\n              })\n      }).catch(function(error){\n          console.log(\"error\", error)\n      })\n  }\n\n  handleNewPost(postItemData){\n      // console.log(postItemData)\n      let currentPosts = this.state.posts\n      currentPosts.unshift(postItemData) // unshift\n      this.setState({\n          posts: currentPosts\n      })\n  }\n\n  \n\n  togglePostListClass(event){\n      event.preventDefault()\n      let currentListClass = this.state.postsListClass\n      if (currentListClass === \"\"){\n          this.setState({\n              postsListClass: \"card\",\n          })\n      } else {\n          this.setState({\n              postsListClass: \"\",\n          })\n      }\n      \n  }\n\n  componentDidMount(){\n      this.setState({\n          posts: [],\n          postsListClass: \"card\",\n          next: null,\n          previous: null,\n          author: false,\n          count: 0,\n          authenticated: false,\n      })\n      this.loadPosts()\n  }\n  // {author === true ? <Link className='mr-2' maintainScrollPosition={false} to={{\n  //           pathname: `/posts/create/`,\n  //           state: { fromDashboard: false }\n  //         }}>Create Post</Link> : \"\"}\n  \n  // <button onClick={this.togglePostListClass}>Toggle Class</button>\n  // {posts.length > 0 ? posts.map((postItem, index)=>{\n  //     return (\n  //             <PostInline post={postItem} elClass={postsListClass} />\n  //     )\n  // }) : <p>No Posts Found</p>}\n  // {next !== null ? <button onClick={this.loadMorePosts}>Load more</button> : ''}\n  render() {\n      const {posts} = this.state\n      const {postsListClass} = this.state\n      // const {author} = this.state\n      const {next} = this.state \n      // const {auth} = this.props.state.auth.authenticated\n      const {authenticated} = this.state //adding redux-props\n      // const csrfToken = cookie.load('csrftoken')\n    return (\n      <div>\n        {authenticated === true ?\n          <Link className='mr-2' to={{\n            pathname: `/react/posts/create/`,\n            state: { fromDashboard: false }\n          }}>Create Post</Link>\n        : ''}\n          <button onClick={this.togglePostListClass}>Toggle Class</button>\n          {posts.length > 0 ? posts.map((postItem, index)=>{\n            return (\n              <PostInline post={postItem} key={`post-list-key ${index}`} elClass={postsListClass} />\n            )\n          }) : <p>No Posts Found</p>}\n        {next !== null ? <button onClick={this.loadMorePosts}>Load more</button> : ''}\n\n      </div>\n    );\n  }\n}\n\n// export default Posts;\n\n\nconst mapStateToProps = (state) => {\n  return {\n    state: state\n  }\n}\n\nexport default connect(mapStateToProps)(Posts);\n// {(csrfToken !== 'undefined' && csrfToken !== null) ?\n// <div className='my-5'>\n//   <PostForm newPostItemCreated={this.handleNewPost} />\n// </div>\n// : ''}","import React, { Component } from 'react'\n\nimport { Link } from 'react-router-dom'\nimport Posts from '../reactify/Posts';\n\nclass ReacTifyComp extends Component {\n  componentDidMount () {\n\n  }\n\n  render () {\n    return (\n      <div>\n        <Link className='some-link' to='/about/'>Static Page</Link>\n        <Posts />\n      </div>\n      \n    )\n  }\n}\n\nexport default ReacTifyComp","import React, {Component} from 'react'\nimport 'whatwg-fetch'\nimport cookie from 'react-cookies'\nimport moment from 'moment'\n// import { Redirect } from 'react-router-dom'\n\nimport store from \"../store\";\nimport { getUserToken } from \"../utils/authUtils\";\n\n\nclass PostForm extends Component {\n    constructor(props){\n        super(props)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleInputChange = this.handleInputChange.bind(this)\n        this.handleDraftChange = this.handleDraftChange.bind(this)\n        this.clearForm = this.clearForm.bind(this)\n        this.postTitleRef = React.createRef()\n        this.postContentRef = React.createRef()\n        this.deletePost= this.deletePost.bind(this)\n        this.state = {\n            draft: false,\n            title: null,\n            slug: null,\n            content: null,\n            publish: moment(new Date()).format('YYYY-MM-DD'),\n            errors: {}\n        }\n    }\n\n    updatePost(data){\n      const {post} = this.props\n      const endpoint = `/api/posts/${post.slug}/` \n      const csrfToken = cookie.load('csrftoken')\n      const token = getUserToken(store.getState());\n      console.log('token', token);\n      console.log('csrftoken', csrfToken);\n      let thisComp = this\n      if (csrfToken !== undefined) {\n          let lookupOptions = {\n              method: \"PUT\",\n              headers: {\n                  'Content-Type': 'application/json',\n                  'X-CSRFToken': csrfToken,\n                  'Authorization': 'Token ' + token\n              },\n              body: JSON.stringify(data),\n              credentials: 'include'\n          }\n\n          fetch(endpoint, lookupOptions)\n          .then(function(response){\n              return response.json()\n          }).then(function(responseData){\n              console.log(responseData)\n              if (thisComp.props.newPostItemUpdated){\n                  thisComp.props.newPostItemUpdated(responseData)\n              }\n              thisComp.clearForm()\n          }).catch(function(error){\n              console.log(\"error\", error)\n              alert(\"An error occured, please try again later.\")\n          })\n      } \n      \n  \t} \n    createPost(data){\n      const endpoint = '/api/posts/' \n      const csrfToken = cookie.load('csrftoken')\n      let thisComp = this\n      console.log('csrf', csrfToken)\n      if (csrfToken !== undefined) {\n          let lookupOptions = {\n              method: \"POST\",\n              headers: {\n                  'Content-Type': 'application/json',\n                  'X-CSRFToken': csrfToken\n              },\n              body: JSON.stringify(data),\n              credentials: 'include'\n          }\n\n          fetch(endpoint, lookupOptions)\n          .then(function(response){              \n              return response.json()\n          }).then(function(responseData){\n              console.log(responseData)\n              if (thisComp.props.newPostItemCreated){\n                  thisComp.props.newPostItemCreated(responseData)\n              }\n              thisComp.clearForm()\n              thisComp.defaultState()\n          }).catch(function(error){\n              console.log(\"error\", error)\n              alert(\"An error occured, please try again later.\")\n          })\n      } \n      \n    }\n    deletePost(event) {\n      event.preventDefault();\n      const {post} = this.props\n      const endpoint = `/api/posts/${post.slug}/` \n      const csrfToken = cookie.load('csrftoken')\n      console.log(post)\n      return fetch(endpoint, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': csrfToken\n            },\n            credentials: 'include'\n        }).then(function(response){\n          return response\n        }).then(data => {\n          if(data.status === 204){\n            // this.UpdateRoute();\n            console.log('Successfully Delete');\n          }   \n        }).catch(function(error){\n            console.log(\"error\", error)\n            alert(\"An error occured, please try again later.\")\n        })\n    };\n\n  \tclearForm(event){\n      if (event){\n        event.preventDefault()\n      }\n      this.postCreateForm.reset()\n      \n    } \n    clearFormRefs(){\n      this.postTitleRef.current=''\n      this.postContentRef.current=''\n    }  \t\n\thandleSubmit(event){      \n\t    event.preventDefault()\n\t    let data = this.state\n      const {post} = this.props\n      if (post !== undefined) {\n        this.updatePost(data)\n      } else {\n        this.createPost(data)\n      }\n\t    \n      console.log({post})\n\t}\n\thandleInputChange(event){\n        event.preventDefault()\n        let key = event.target.name\n        let value = event.target.value\n\n        if (key === 'title'){\n            if (value.length > 120){\n                alert(\"This title is too long\")\n            }\n        }\n        this.setState({\n            [key]: value\n\n        })\n    }\n  //fix doubleclick checkbox\n  handleDraftChange(event){\n    this.setState({\n      draft: !this.state.draft\n    })\n  }\n  defaultState(){\n    this.setState({\n        draft: false,\n        title: null,\n        content: null,\n        slug: null,\n        publish: moment(new Date()).format('YYYY-MM-DD'),\n    })   \n  }\n  componentDidMount(){\n    const {post} = this.props\n    // this.loginCheck()\n    if (post !== undefined) {\n      this.setState({\n          draft: post.draft,\n          title: post.title,\n          content: post.content,\n          slug: post.slug,\n          publish: moment(post.publish).format('YYYY-MM-DD'),\n      })\n    } else {\n      this.defaultState()\n    }\n    // this.postTitleRef.current.focus()\n  }\n\trender(){\n\t\tconst {publish} = this.state\n    const {title} = this.state\n    const {content} = this.state\n    const {slug} = this.state\n    const cancelClass = this.props.post !== undefined ? \"d-none\" : \"\"\n    const deleteClass = this.props.post === undefined ? \"d-none\" : \"\"\n\t\treturn (\n\t\t  <div>\n\t\t    <form onSubmit={this.handleSubmit} ref={(el)=> this.postCreateForm = el}>\n\t\t        <div className=\"form-group\">\n\t\t\t\t\t<label htmlFor='blogTitle'>Title</label>\n\t\t\t\t\t<input \n\t\t\t\t\t  type='text' \n\t\t\t\t\t  id='blogTitle' \n\t\t\t\t\t  name='title' \n\t\t\t\t\t  className='form-control' \n\t\t\t\t\t  placeholder='Blog post title'\n            value={title || ''}            \n\t\t\t\t\t  ref={this.postTitleRef} \n\t\t\t\t\t  onChange={this.handleInputChange} \n\t\t\t\t\t  required='required' />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label htmlFor='content'>Content</label>\n\t\t\t\t\t<textarea \n\t\t\t\t\t  id='content' \n\t\t\t\t\t  name='content' \n\t\t\t\t\t  className='form-control' \n\t\t\t\t\t  placeholder='Post content'\n            value={content || ''}\n\t\t\t\t\t  ref={this.postContentRef} \n\t\t\t\t\t  onChange={this.handleInputChange} \n\t\t\t\t\t  required='required' />\n\t\t\t\t</div>\n\t\t\t\t<div className='form-group'>\n                    <label htmlFor='slug'>Slug</label>\n                    <input \n                      type='text' \n                      id='slug' \n                      name='slug' \n                      className='form-control'\n                      placeholder='Type Slug'\n                      value={slug || ''}  \n                      onChange={this.handleInputChange} \n                      required='required'/>\n                </div>\n\t\t        <div className=\"form-group\">\n\t\t\t\t\t<label htmlFor='draft'>\n\t\t\t\t\t\t<input \n\t\t\t\t\t\t  type='checkbox' \n\t\t\t\t\t\t  id='draft' \n\t\t\t\t\t\t  name='draft' \n\t\t\t\t\t\t  className='mr-2' \n\t\t\t\t\t\t  onChange={this.handleDraftChange} \n\t\t\t\t\t\t  checked={this.state.draft}\n\t\t\t\t\t\t  />\n\t\t\t\t\tDraft</label>\n                <button onClick={(event)=>{event.preventDefault();this.handleDraftChange()}}>Toggle Draft</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label htmlFor='publish'>Publish Date</label>\n\t\t\t\t\t<input \n\t\t\t\t\t  type='date' \n\t\t\t\t\t  id='publish' \n\t\t\t\t\t  name='publish' \n\t\t\t\t\t  className='form-control' \n\t\t\t\t\t  onChange={this.handleInputChange} \n\t\t\t\t\t  required='required'\n\t\t\t\t\t  value={publish}\n\t\t\t\t\t   />\n\t\t\t\t</div>\n\t\t\t\t<button type='submit' className='btn btn-primary '>Save</button>\n\t\t\t\t<button className={`btn btn-secondary ${cancelClass}`} onClick={this.clearForm}>Clear</button>\n        <button className={`btn btn-danger' ${deleteClass}`} onClick={this.deletePost}>Delete</button>\n\n\t\t    </form>\n\t\t  </div>\n\t\t)\n\t}\n\n}\n\nexport default PostForm\n","import React, {Component} from 'react'\nimport 'whatwg-fetch'\nimport cookie from 'react-cookies'\nimport { Link } from 'react-router-dom'\n\nimport PostForm from './PostForm'\n\nclass PostDetail extends Component {\n    constructor(props){\n        super(props)\n        this.handlePostItemUpdated= this.handlePostItemUpdated.bind(this)        \n        this.state = {\n             slug: null,\n             post: null,\n             doneLoading: false,\n        }\n    }\n\n    handlePostItemUpdated(postItemData){\n        this.setState({\n            post: postItemData\n        })\n    }\n    loadPost(slug){\n      const endpoint = `/api/posts/${slug}/` \n      let thisComp = this\n      let lookupOptions = {\n          method: \"GET\",\n          headers: {\n              'Content-Type': 'application/json'\n          }\n      }\n\n      const csrfToken = cookie.load('csrftoken')\n      if (csrfToken !== undefined) {\n          lookupOptions['credentials'] = 'include'\n          lookupOptions['headers']['X-CSRFToken'] = csrfToken\n       }\n\n      fetch(endpoint, lookupOptions)\n      .then(function(response){\n          if (response.status === 404){\n              console.log('Page not found')\n          }\n          return response.json()\n      }).then(function(responseData){\n          if (responseData.detail){\n              thisComp.setState({\n                  doneLoading: true,\n                  post: null\n              })\n          } else {\n           thisComp.setState({\n                  doneLoading: true,\n                  post: responseData\n              })\n          }\n      }).catch(function(error){\n          console.log(\"error\", error)\n      })\n  }\n\n    componentDidMount(){\n        this.setState({\n                slug: null,\n                post: null\n            })\n        if (this.props.match){\n            const {slug} = this.props.match.params\n            this.setState({\n                slug: slug,\n                doneLoading: false\n            })\n            this.loadPost(slug)\n        }\n    }\n    // const {doneLoading} = this.state\n    //     const {post} = this.state\n    //     return(\n    //         <p>{(doneLoading === true) ? <div>\n    //             {post === null ? \"Not Found\": \n    //             <div>\n    //             <h1>{post.title}</h1>\n    //             {post.slug}\n\n    //             <p className='lead'>\n    //             <Link maintainScrollPosition={false} to={{\n    //                 pathname: `/react/posts`,\n    //                 state: { fromDashboard: false }\n    //               }}>Posts</Link>\n\n    //               {post.owner === true ? <Link maintainScrollPosition={false} to={{\n    //                 pathname: `/react/posts/create/`,\n    //                 state: { fromDashboard: false }\n    //               }}>Create Post</Link> : \"\" }\n    //            </p>\n\n    //               {post.owner === true ? <PostForm post={post} postItemUpdated={this.handlePostItemUpdated} /> : \"\"}\n    //             </div>\n    //            }\n    //        </div> : \"Loading...\"}</p>\n    //     )\n    // }\n    render(){\n        const {doneLoading} = this.state\n        // const {slug} = this.state\n        const {post} = this.state\n        return(\n          <div>\n            {(doneLoading === true) ? <div>\n              {(post === null) ? \"Not Found\": \n                <div> \n                  <p className=\"lead\"><Link \n                      to={{pathname:`/react/posts/`,\n                      state: {fromDashboard: false}\n                    }}>\n                      BACK\n                    </Link>\n                    {post.owner === true ? <Link to={{\n                      pathname: `/react/posts/create/`,\n                      state: { fromDashboard: false }\n                    }}>Create Post</Link> : \"\"}\n                  </p>                 \n                  <h1>{post.slug}</h1>\n                  <h1>{post.title}</h1>\n                  {post.owner === true ? <PostForm post={post} postItemUpdated={this.handlePostItemUpdated} /> : \"\"}\n                </div>\n              }\n\n            </div> : \"Loading...\"}\n          </div>               \n        )\n    }\n}\n\nexport default PostDetail","import React, {Component} from 'react'\nimport { Link } from 'react-router-dom'\nimport PostForm from './PostForm'\n\nclass PostCreate extends Component {\n\n  render(){\n    return (\n      <div>\n      \t<Link \n          to={{pathname:`/react/posts/`,\n          state: {fromDashboard: false}\n        }}>\n          BACK\n        </Link>\n      \t<h1>Create Post</h1>\n        \t<PostForm />\n      </div>\n    )\n  }\n\n}\n\nexport default PostCreate\n// // left for reference\n\n\n\n\n// // import React, {Component} from 'react'\n// // import 'whatwg-fetch'\n// // import cookie from 'react-cookies'\n// // import moment from 'moment'\n\n// // class PostCreate extends Component {\n// //     constructor(props){\n// //         super(props)\n// //         this.handleSubmit = this.handleSubmit.bind(this)\n// //         this.handleInputChange = this.handleInputChange.bind(this)\n// //         this.handleDraftChange = this.handleDraftChange.bind(this)\n// //         this.clearForm = this.clearForm.bind(this)\n// //         this.postTitleRef = React.createRef()\n// //         this.postContentRef = React.createRef()\n// //         this.state = {\n// //             draft: false,\n// //             title: null,\n// //             content: null,\n// //             publish: null,\n// //             errors: {}\n// //         }\n// //     }\n// //     createPost(data){\n// //       const endpoint = '/api/posts/' \n// //       const csrfToken = cookie.load('csrftoken')\n// //       let thisComp = this\n// //       if (csrfToken !== undefined) {\n// //           let lookupOptions = {\n// //               method: \"POST\",\n// //               headers: {\n// //                   'Content-Type': 'application/json',\n// //                   'X-CSRFToken': csrfToken\n// //               },\n// //               body: JSON.stringify(data),\n// //               credentials: 'include'\n// //           }\n\n// //           fetch(endpoint, lookupOptions)\n// //           .then(function(response){\n// //               return response.json()\n// //           }).then(function(responseData){\n// //               console.log(responseData)\n// //               if (thisComp.props.newPostItemCreated){\n// //                   thisComp.props.newPostItemCreated(responseData)\n// //               }\n// //               thisComp.clearForm()\n// //           }).catch(function(error){\n// //               console.log(\"error\", error)\n// //               alert(\"An error occured, please try again later.\")\n// //           })\n// //       } \n      \n// //   }\n\n// //     handleSubmit(event){\n// //         event.preventDefault()\n// //         let data = this.state\n// //         this.createPost(data)\n// //     }\n\n// //     handleInputChange(event){\n// //         event.preventDefault()\n// //         let key = event.target.name\n// //         let value = event.target.value\n// //         if (key === 'title'){\n// //             if (value.length > 120){\n// //                 alert(\"This title is too long\")\n// //             }\n// //         }\n// //         this.setState({\n// //             [key]: value\n// //         })\n// //     }\n\n// //     handleDraftChange(event){\n// //       this.setState({\n// //         draft: !this.state.draft\n// //       })\n// //     }\n\n// //     clearForm(event){\n// //       if (event){\n// //         event.preventDefault()\n// //       }\n// //       this.postCreateForm.reset()\n// //     }\n\n\n// //     clearFormRefs(){\n// //       this.postTitleRef.current=''\n// //       this.postContentRef.current=''\n// //     }\n\n\n// //     componentDidMount(){\n// //         this.setState({\n// //             draft: false,\n// //             title: null,\n// //             content: null,\n// //             publish: moment(new Date()).format('YYYY-MM-DD'),\n// //         })\n// //         this.postTitleRef.current.focus()\n// //     }\n\n// //     render(){\n// //         const {publish} = this.state\n// //         let thisComp = this\n// //         return (\n// //             <form onSubmit={this.handleSubmit} ref={(el) => this.postCreateForm = el}>\n// //                 <div className='form-group'>\n// //                     <label for='title'>Post title</label>\n// //                     <input \n// //                       type='text' \n// //                       id='title' \n// //                       name='title' \n// //                       className='form-control'\n// //                       placeholder='Blog post title' \n// //                       ref = {this.postTitleRef}\n// //                       onChange={this.handleInputChange} \n// //                       required='required'/>\n// //                 </div>\n// //                  <div className='form-group'>\n// //                     <label for='content'>Content</label>\n// //                     <textarea id='content' ref = {this.postContentRef} name='content' className='form-control' placeholder='Post content' onChange={this.handleInputChange} required='required'/>\n                   \n// //                 </div>\n// //                 <div className='form-group'>\n// //                     <label for='draft'>\n// //                     <input type='checkbox' checked={this.state.draft} id='draft' name='draft' className='mr-2' onChange={this.handleDraftChange}/>\n// //                      Draft </label>\n// //                      <button onClick={(event)=>{event.preventDefault();this.handleDraftChange()}}>Toggle Draft</button>\n// //                 </div>\n// //                 <div className='form-group'>\n// //                     <label for='publish'>Publish Date</label>\n// //                     <input \n// //                     type='date' \n// //                     id='publish' \n// //                     name='publish' \n// //                     className='form-control' \n// //                     onChange={this.handleInputChange}\n// //                      value={publish}\n// //                      required='required'/>\n// //                 </div>\n// //                 <button type='submit' className='btn btn-primary'>Save</button>\n// //                 <button className='btn btn-secondary' onClick={this.clearForm}>Cancel</button>\n// //             </form>\n// //         )\n// //     }\n\n// // }\n\n// // export default PostCreate","import { toast } from 'react-toastify';\n\nexport const fetchNotes = (nextEndpoint) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        let endpoint = '/api/investors/' \n\n        if (nextEndpoint !== undefined && nextEndpoint !== null) {\n          endpoint = nextEndpoint\n        }\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        let {notes} = getState();\n        return fetch(endpoint, {headers, })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    toast.error(\"Error! Can't load investors...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            // getState().notes[0].concat(res.data)}\n            .then(res => {\n                if (res.status === 200) {               \n                    return dispatch({type: 'FETCH_NOTES', notes: notes.push(res.data), loading: false});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authetication error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\nexport const searchNotes = (searchtext) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        let endpoint = '/api/investors/' \n        if (searchtext !== undefined && searchtext !== null) {\n          endpoint = `/api/investors/?search=${searchtext}`\n        }\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        return fetch(endpoint, {headers, method: \"GET\", })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        // console.log(res)\n                        return {status: res.status, data};\n                    })\n                } else {\n                    toast.error(\"Error! Can't load investors...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'SEARCH_NOTES', notes: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authetication error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\nexport const orderNotes = (order) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        let endpoint = '/api/investors/' \n        if (order !== undefined && order !== null) {\n          endpoint = `/api/investors/?ordering=${order}`\n        }\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        return fetch(endpoint, {headers, method: \"GET\", })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        // console.log(res)\n                        return {status: res.status, data};\n                    })\n                } else {\n                    toast.error(\"Error! Can't load investors...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'ORDER_NOTES', notes: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authetication error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\nexport const addNote = (text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n\n        let body = JSON.stringify({text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence });\n        return fetch(\"/api/investors/\", {headers, method: \"POST\", body})\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    toast.error(\"Error! Can't load investors...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 201) {\n                    toast.info(\"Investor \"+res.data.text+\" added\")\n                    return dispatch({type: 'ADD_NOTE', note: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authetication error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\n\nexport const updateNote = (index, id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence) => {\n    return (dispatch, getState) => {\n\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n\n        let body = JSON.stringify({text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence });\n        // console.log(\"id\", id, \"index\", index)\n        let noteId = getState().notes[index].noteitems[id].id;\n\n        return fetch(`/api/investors/${noteId}/`, {headers, method: \"PUT\", body})\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    toast.error(\"Error! Can't load investors...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 200) {\n                    toast.info(\"Investor \"+res.data.text+\" edited\")\n                    return dispatch({type: 'UPDATE_NOTE', note: res.data, index, id});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authetication error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\n\nexport const deleteNote = (id, index) => {\n    return (dispatch, getState) => {\n\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        let noteId = getState().notes[id].noteitems[index].id;\n\n        return fetch(`/api/investors/${noteId}/`, {headers, method: \"DELETE\"})\n            .then(res => {\n                if (res.status === 204) {\n                    toast.info(\"Investor deleted\")\n                    return {status: res.status, data: {}};\n                } else if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 204) {\n                    // toast.info(\"Investor deleted\")\n                    return dispatch({type: 'DELETE_NOTE', id, index});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authetication error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n            .then(res => {dispatch(fetchNotes())})\n    }\n}\n","import React, { Component } from 'react'\nimport {   \n  FormGroup, Button, Modal, \n  ModalHeader, ModalBody, \n  ModalFooter, } from 'reactstrap';\nimport './styles.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\n\nexport class ModalDelete extends Component {\n  render() {\n    const { modaldelete, text, index, id, toggle} = this.props;\n\n    return (\n      <div>\n        <Modal isOpen={modaldelete} toggle={toggle}>\n            <ModalHeader color=\"info\">Are you sure?</ModalHeader>           \n            <ModalBody>Delete <b>{text}</b> Investor?</ModalBody>\n            <ModalFooter> \n              <FormGroup row>                   \n              <Button className=\"rounded-0\" color=\"info\" onClick={() => this.props.onSelectForDelete(index, id)}><FontAwesomeIcon icon={faTrash} color=\"white\"/></Button>              \n              <Button className=\"rounded-0\" onClick={toggle}>Cancel</Button>\n              </FormGroup>\n            </ModalFooter>\n        </Modal> \n      </div>\n    )\n    \n  }\n}\n","import React, { Component } from 'react'\nimport { FormText,  \n  FormGroup, Label, Input,  } from 'reactstrap';\n\n// REQUIRED FIELDS\nexport class InputName extends Component {\n  render() {\n    const { text, errors } = this.props;\n    return (\n      <div>\n        <FormGroup>\n          <Label>Name <span className=\"text-danger\">*</span></Label>\n          <Input\n            name=\"text\"\n            value={text || ''}\n            placeholder=\"Enter name...\"\n            onChange={this.props.onInputChange}\n            required />\n            {errors.text ? <FormText color=\"danger\">{errors.text}</FormText>: \"\"}\n        </FormGroup>\n      </div>\n    )\n    \n  }\n}\nexport class InputPhone extends Component {\n  render() {\n    const { phone, errors } = this.props;\n    return (\n      <div>\n        <FormGroup>\n          <Label>Phone <span className=\"text-danger\">*</span></Label>\n          <Input\n            name=\"phone\"\n            value={phone || ''}\n            placeholder=\"Enter phone...\"\n            onChange={this.props.onInputChange}\n            required />\n            {errors.phone ? <FormText color=\"danger\">{errors.phone}</FormText>: \"\"}\n        </FormGroup>\n      </div>\n    )\n    \n  }\n}\nexport class InputEmail extends Component {\n  render() {\n    const { email, errors } = this.props;\n    return (\n      <div>\n        <FormGroup>\n          <Label>Email <span className=\"text-danger\">*</span></Label>\n          <Input\n            name=\"email\"\n            value={email || ''}\n            placeholder=\"Enter email...\"\n            onChange={this.props.onInputChange}\n            required />\n            {errors.email ? <FormText color=\"danger\">{errors.email}</FormText>: \"\"}\n        </FormGroup>\n      </div>\n    )    \n  }\n}\nexport class InputLinkedin extends Component {\n  render() {\n    const { linkedin_profile, errors } = this.props;\n    return (\n      <div>\n        <FormGroup>\n          <Label>Linkedin <span className=\"text-danger\">*</span></Label>\n          <Input\n            name=\"linkedin_profile\"\n            value={linkedin_profile || ''}\n            placeholder=\"Enter linkedin url...\"\n            onChange={this.props.onInputChange}\n            required />\n            {errors.linkedin_profile ? <FormText color=\"danger\">{errors.linkedin_profile}</FormText>: \"\"}\n        </FormGroup>\n      </div>\n    )    \n  }\n}\n// NOT REQUIRED FIELDS\nexport class InputWebsite extends Component {\n  render() {\n    const { website, errors } = this.props;\n    return (\n      <div>\n        <FormGroup>\n          <Label>Website</Label>\n          <Input\n            name=\"website\"\n            value={website || ''}\n            placeholder=\"Enter website url...\"\n            onChange={this.props.onInputChange}\n            />\n            {errors.website ? <FormText color=\"danger\">{errors.website}</FormText>: \"\"}\n        </FormGroup>\n      </div>\n    )    \n  }\n}\nexport class InputCorrespondence extends Component {\n  render() {\n    const { correspondence, errors } = this.props;\n    return (\n      <div>\n        <FormGroup>\n          <Label>Correspondence</Label>\n          <Input\n            name=\"correspondence\"\n            value={correspondence || ''}\n            placeholder=\"Enter correspondence...\"\n            onChange={this.props.onInputChange}\n            type='textarea'\n            />\n            {errors.correspondence ? <FormText color=\"danger\">{errors.correspondence}</FormText>: \"\"}\n        </FormGroup>\n      </div>\n    )    \n  }\n}","import React, { Component } from 'react'\nimport { Button, \n  FormGroup, Label, } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMale, faUsers, \n       } from '@fortawesome/free-solid-svg-icons'\n\n// Checkbox is corporate\nexport class CheckboxIsCorp extends Component {\n  render() {\n    const { is_corporate } = this.props;\n    return (\n      <div>\n        <FormGroup>\n            <Label>Individual <FontAwesomeIcon icon={faMale} color={!is_corporate ? \"black\": \"grey\"}/> / Corporate <FontAwesomeIcon icon={faUsers} color={is_corporate ? \"black\": \"grey\"}/></Label>\n            <Button className=\"btn btn-block\" onClick={this.props.handleCheckboxIsCorpBtnClick} active={is_corporate}>{is_corporate ? 'Change to Individual' : 'Change to Corporate'}</Button>\n        </FormGroup>\n      </div>\n    )    \n  }\n}","import React, { Component } from 'react'\nimport { Button, \n  FormGroup, Label, } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHandHoldingUsd, faCheckCircle, \n       } from '@fortawesome/free-solid-svg-icons'\n\n// Checkbox is corporate\nexport class CheckboxIsPayed extends Component {\n  render() {\n    const { status, is_staff, is_payed } = this.props;\n    return (\n      <div>\n        {status !== \"Candidate\" && is_staff ?\n          <FormGroup>\n              <Label>New <FontAwesomeIcon icon={faHandHoldingUsd} color={!is_payed ? \"black\": \"grey\"}/> / Payed <FontAwesomeIcon icon={faCheckCircle} color={is_payed ? \"black\": \"grey\"}/></Label>\n              <Button className=\"btn btn-block\" onClick={this.props.handleCheckboxIsPayBtnClick} active={is_payed}>{is_payed ? 'Change to New' : 'Change to Payed'}</Button>\n          </FormGroup>\n          : null} \n      </div>\n    )    \n  }\n}","import React, { Component } from 'react'\nimport { \n  FormGroup, Label, Dropdown, \n  DropdownToggle, \n  DropdownMenu, DropdownItem, } from 'reactstrap';\n\n// Checkbox is corporate\nexport class CustomDropdown extends Component {\n  render() {\n    const { status, dropdownOpen } = this.props;\n    return (\n      <div>\n        <FormGroup>\n          <Label>Status</Label>\n          <Dropdown className=\"form-group\" isOpen={dropdownOpen} toggle={this.props.onToggle}>\n            <DropdownToggle className=\"btn-block\" caret>\n              {status || ''}\n            </DropdownToggle>\n            <DropdownMenu className=\"btn-block\">\n              <DropdownItem onClick={this.props.onChangeValue}>Candidate</DropdownItem>\n              <DropdownItem onClick={this.props.onChangeValue}>Processed</DropdownItem>\n              <DropdownItem onClick={this.props.onChangeValue}>Converted</DropdownItem>\n              <DropdownItem onClick={this.props.onChangeValue}>Rejected</DropdownItem>\n            </DropdownMenu>\n          </Dropdown>\n        </FormGroup>\n      </div>\n    )    \n  }\n}","import React, { Component } from 'react'\n\nimport * as Inputs from '../../Atoms/AddInputs/AddInputs'\nimport { CheckboxIsCorp } from '../../Atoms/Checkboxes/CheckboxIsCorp'\nimport { CheckboxIsPayed } from '../../Atoms/Checkboxes/CheckboxIsPayed'\nimport { CustomDropdown } from '../../Atoms/Dropdown/Dropdown'\n// import { DatePickLastCall } from '../../Atoms/DatePick/DatePickLastCall'\n// import FileDrop from '../../Atoms/FileDrop/FileDrop'\n\nexport class InputFormNoteQuickAdd extends Component {\n  render() {\n    const { text, phone, email,  \n      linkedin_profile, website, \n      correspondence, is_corporate,\n      is_staff, is_payed, dropdownOpen,\n      status, updateNoteId,\n      errors, \n    } = this.props;\n\n    return (\n      <div>\n        <Inputs.InputName \n          onInputChange={this.props.onInputChange} \n          text={text} \n          errors={errors} \n        />\n        <Inputs.InputPhone \n          onInputChange={this.props.onInputChange} \n          phone={phone} \n          errors={errors} \n        />\n        <Inputs.InputEmail \n          onInputChange={this.props.onInputChange} \n          email={email} \n          errors={errors} \n        />      \n        <Inputs.InputLinkedin \n          onInputChange={this.props.onInputChange} \n          linkedin_profile={linkedin_profile} \n          errors={errors} \n        />\n        <Inputs.InputWebsite \n          onInputChange={this.props.onInputChange} \n          website={website} \n          errors={errors} \n        />      \n        <Inputs.InputCorrespondence \n          onInputChange={this.props.onInputChange} \n          correspondence={correspondence} \n          errors={errors} \n        />      \n        \n        <CheckboxIsCorp \n          handleCheckboxIsCorpBtnClick={this.props.handleCheckboxIsCorpBtnClick} \n          is_corporate={is_corporate} \n        />\n        {updateNoteId !== null ?\n        <CustomDropdown \n          onChangeValue={this.props.onChangeValue} \n          onToggle={this.props.onToggle} \n          status={status} \n          dropdownOpen={dropdownOpen} \n        />:null}\n        {updateNoteId !== null && status!==\"Candidate\" && is_staff ?\n          <CheckboxIsPayed \n            handleCheckboxIsPayBtnClick={this.props.handleCheckboxIsPayBtnClick} \n            status={status} \n            is_staff={is_staff} \n            is_payed={is_payed}\n          />\n        : null}      \n         \n      </div>\n    )\n    \n  }\n}","import React, { Component } from 'react'\nimport { Button } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMale, \n  faUsers, faExchangeAlt, faLongArrowAltDown,\n  faTimes } from '@fortawesome/free-solid-svg-icons'\n\n\nexport class OrderingHeaderTable extends Component {\n\n  state = { order: [], is_ordering_name: false, searchtext: \"\" }\n\n  onBtnClickOrderingName = (ordername) => {\n    // Create a new array based on current state:\n    let order = [...this.state.order];\n    let newordername = \"-\"+ordername\n    let is_ordering_name = false\n\n    // if ordername starts from \"C\"-character - clear that order!\n    if (ordername.charAt(0) === \"C\"){\n      let index = order.indexOf(ordername.slice(1, ordername.length))\n      // Clear ordername (remove from array)\n      if (index !== -1) {\n        order.splice(index, 1);\n      }\n    } else {\n      // Add or remove item to it\n      if (order.includes(ordername)){\n        let index = order.indexOf(ordername)\n        if (index !== -1) {          \n          order.splice(index, 1);\n          order.splice(index, 0, newordername);         \n        }\n      } else if (order.includes(newordername)) {\n        let index = order.indexOf(newordername)\n        if (index !== -1) {\n          order.splice(index, 1);\n          order.splice(index, 0, ordername);\n        }\n      } else {\n        order.push(ordername);\n\n      }\n    }\n    if (order.length > 0) {\n      is_ordering_name = true\n    } \n\n    // FIX BUG with \"owner\" negative ordering\n    if (order.includes(\"-owner\")&&order.length===1) {\n      // adding \"-id\" field to multiply filter\n      // if has only \"-owner\" field\n      order.push(\"-id\");\n    } else {\n      // remove \"-id\" in all other variants\n      let index = order.indexOf(\"-id\")\n      if (index !== -1) {        \n        order.splice(index, 1);\n      }      \n    }\n\n    // Set state\n    this.setState({is_ordering_name: is_ordering_name, searchtext: \"\", order}, function () {\n        // console.log(this.state)\n        this.props.onOrderNotes(this.state);\n    });\n  }\n\n  render() {\n\n    const {order} = this.state;\n\n    return (\n          <thead>\n            <tr>\n              <th className=\"table-num__title\">#</th>\n              <th className=\"table-investor__title\"><FontAwesomeIcon icon={faMale} color=\"black\"/> / <FontAwesomeIcon icon={faUsers} color=\"black\"/></th>\n              <th>\n                <div className=\"table-investor__ordering\">\n                  <span>Name </span>\n                  <div className=\"table-investor__ordering--control\">\n                    <Button color=\"link\" onClick={() => this.onBtnClickOrderingName(\"text\")}>\n                    {order.includes(\"text\") ? <FontAwesomeIcon icon={faLongArrowAltDown} color=\"black\"/>\n                    :order.includes(\"-text\") ? <FontAwesomeIcon rotation={180} icon={faLongArrowAltDown} color=\"black\"/>\n                    :<FontAwesomeIcon rotation={90} icon={faExchangeAlt} color=\"grey\"/>}</Button>\n                    {order.includes(\"text\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"Ctext\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                    :order.includes(\"-text\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"C-text\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                    :\"\"}\n                  </div>\n                </div>\n              </th>\n              <th>\n                <div className=\"table-investor__ordering\">                  \n                  <span>Dev </span>\n                  <div className=\"table-investor__ordering--control\">\n                    <Button color=\"link\" onClick={() => this.onBtnClickOrderingName(\"owner\")}>\n                    {order.includes(\"owner\") ? <FontAwesomeIcon icon={faLongArrowAltDown} color=\"black\"/>\n                    :order.includes(\"-owner\") ? <FontAwesomeIcon rotation={180} icon={faLongArrowAltDown} color=\"black\"/>\n                    :<FontAwesomeIcon rotation={90} icon={faExchangeAlt} color=\"grey\"/>}</Button>\n                    {order.includes(\"owner\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"Cowner\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                    :order.includes(\"-owner\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"C-owner\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                    :\"\"}\n                  </div>\n                </div>\n              </th>\n              <th className=\"table-phone__title\">Phone</th>\n              <th>\n                <div className=\"table-investor__ordering\">                  \n                  <span>Status </span>\n                  <div className=\"table-investor__ordering--control\">\n                    <Button color=\"link\" onClick={() => this.onBtnClickOrderingName(\"status\")}>\n                    {order.includes(\"status\") ? <FontAwesomeIcon icon={faLongArrowAltDown} color=\"black\"/>\n                    :order.includes(\"-status\") ? <FontAwesomeIcon rotation={180} icon={faLongArrowAltDown} color=\"black\"/>\n                    :<FontAwesomeIcon rotation={90} icon={faExchangeAlt} color=\"grey\"/>}</Button>\n                    {order.includes(\"status\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"Cstatus\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                    :order.includes(\"-status\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"C-status\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                    :\"\"}\n                  </div>\n                </div>\n              </th>\n              <th>\n                <div className=\"table-investor__ordering \">                  \n                  <span className=\"table-investor__ordering--payment\">Payment </span>\n                  <div className=\"table-investor__ordering--control\">\n                    <Button color=\"link\" onClick={() => this.onBtnClickOrderingName(\"is_payed\")}>\n                    {order.includes(\"is_payed\") ? <FontAwesomeIcon icon={faLongArrowAltDown} color=\"black\"/>\n                    :order.includes(\"-is_payed\") ? <FontAwesomeIcon rotation={180} icon={faLongArrowAltDown} color=\"black\"/>\n                    :<FontAwesomeIcon rotation={90} icon={faExchangeAlt} color=\"grey\"/>}</Button>\n                    {order.includes(\"is_payed\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"Cis_payed\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                    :order.includes(\"-is_payed\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"C-is_payed\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                    :\"\"}\n                  </div>\n                </div>\n              </th>\n              <th>Manage</th>\n            </tr>\n          </thead>\n    )\n    \n  }\n}","import React, { Component } from 'react'\nimport { Button } from 'reactstrap';\nimport { Link } from 'react-router-dom'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMale, faUsers, faEdit, \n  faCheckCircle, faHandHoldingUsd, faTrash } from '@fortawesome/free-solid-svg-icons'\n\n\nexport class OrderingBodyTable extends Component {\n\n  render() { \n    const { post, index } = this.props\n\n    return (\n        <tbody key={index}>\n          {post.noteitems !== undefined && post.noteitems.length > 0 ? post.noteitems.map((note, id) => {\n            return (                                    \n                <tr key={id}>\n                    <th scope=\"row\" className=\"table-num__text\">{id+1}</th>\n                    <td className=\"table-investor__text\">{note.is_corporate ? <FontAwesomeIcon icon={faUsers} color=\"black\"/> : <FontAwesomeIcon icon={faMale} color=\"black\"/>}</td>\n                    <td>\n                      <Link className=\"info-link\" to={{pathname:`/investors/${note.id}`,\n                            state: {fromDashboard: false, prevLink: window.location.pathname}\n                            }}>{note.text}</Link>\n                    </td>\n                    <td>\n                      <Link className=\"info-link\" to={{pathname:`/profile/${note.owner}`,\n                            state: {fromDashboard: false, prevLink: window.location.pathname}\n                            }}>{note.owner_username}</Link></td>\n                    <td className=\"table-phone__text\">{note.phone}</td>\n                    <td>{note.status}</td>\n                    <td>{note.is_payed ? <FontAwesomeIcon icon={faCheckCircle} color=\"black\"/> : <FontAwesomeIcon icon={faHandHoldingUsd} color=\"black\"/>}</td>\n                    <td>\n                      <Button className=\"rounded-0\" color=\"info\" title=\"edit\" onClick={() => this.props.onSelectForEdit(index, id)}><FontAwesomeIcon icon={faEdit} /></Button>\n                      <Button className=\"rounded-0\" color=\"secondary\" onClick={() => this.props.onToggleModalDelete(index, id)} title=\"delete\"><FontAwesomeIcon icon={faTrash} /></Button>\n                    </td>\n                </tr>                                        \n              )\n            }\n          ) : null}\n        </tbody>\n      )    \n  }\n}\n","export const handleValidation = (fields) => {\n  // let fields = this.state;\n  let errors = {};\n\n  //Name\n  if(fields[\"text\"].trim() === \"\"){\n     errors[\"text\"] = \"Cannot be empty\";\n  } else {\n    if(typeof fields[\"text\"] !== \"undefined\"){\n       if(!fields[\"text\"].match(/^[a-zA-Z]+$/)){\n          errors[\"text\"] = \"Name must be only letters\";\n       } else if (fields[\"text\"].length > 15) {\n          errors[\"text\"] = \"Your name is too long\";\n       }        \n    }\n  }\n\n  //Phone\n  if(fields[\"phone\"].trim() === \"\"){\n     errors[\"phone\"] = \"Phone cannot be empty\";\n  } else {\n    if(typeof fields[\"phone\"] !== \"undefined\"){\n      if(!fields[\"phone\"].match(/^[0-9\\-\\\\+]{9,15}$/)){\n        errors[\"phone\"] = \"Not phone number\";\n      }      \n    }\n  }\n  // Email\n  if(fields[\"email\"].trim() === \"\"){\n    errors[\"email\"] = \"Cannot be empty\";\n  } else {\n    if(typeof fields[\"email\"] !== \"undefined\"){\n      let lastAtPos = fields[\"email\"].lastIndexOf('@');\n      let lastDotPos = fields[\"email\"].lastIndexOf('.');\n      if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"email\"].indexOf('@@') === -1 && lastDotPos > 2 && (fields[\"email\"].length - lastDotPos) > 2)) {\n        errors[\"email\"] = \"Email is not valid\";\n      }\n    }\n  }\n  // Linkedin profile\n  if(fields[\"linkedin_profile\"].trim() === \"\"){\n    errors[\"linkedin_profile\"] = \"Cannot be empty\";\n  } else {\n    if(typeof fields[\"linkedin_profile\"] !== \"undefined\"){\n      let re=/^((https?|ftp|smtp):\\/\\/)+(www.)?[a-z0-9]+(\\.[a-z]{2,}){1,3}(#?\\/?[a-zA-Z0-9-_#]+)*\\/?(\\?[a-zA-Z0-9-_]+=[a-zA-Z0-9-%]+&?)?$/;\n      if (!re.test(fields[\"linkedin_profile\"])) {\n        errors[\"linkedin_profile\"] = \"Not Linkedin URL\";\n      }\n    }\n  }\n  // Website\n  if(fields[\"website\"].trim() === \"\"){\n  } else {\n    if(typeof fields[\"website\"] !== \"undefined\"){\n      let re=/^((https?|ftp|smtp):\\/\\/)+(www.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_+.~#?&//=]*)?$/;\n      if (!re.test(fields[\"website\"])) {\n        errors[\"website\"] = \"URL is not valid\";\n      }\n    }\n  }\n\n  return errors;\n}","import React, { Component } from 'react'\n\nimport * as notes from \"../../../actions/notesActions\";\nimport {connect} from 'react-redux';\nimport { Link } from 'react-router-dom'\nimport { Form, FormText,  \n  FormGroup, Button,\n  Table, CustomInput,\n  Modal, ModalHeader, ModalBody, ModalFooter, } from 'reactstrap';\nimport { LoadScreen, LoadObject } from '../../general/Organisms/LoadScreen/LoadScreen'\nimport { ModalDelete } from '../Organisms/Modal/Modal'\n\nimport { InputFormNoteQuickAdd } from '../Molecules/Forms/InputFormNoteQuickAdd'\nimport { OrderingHeaderTable } from '../Molecules/Tables/OrderingHeaderTable'\nimport { OrderingBodyTable } from '../Molecules/Tables/OrderingBodyTable'\n\nimport { handleValidation } from '../../../utils/helpers'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlusSquare, \n  faSearch, faSave, faTimes,  } from '@fortawesome/free-solid-svg-icons'\n\n\nclass Notes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: \"\",\n      phone: \"\",\n      status: 'Candidate',\n      email: \"\",\n      linkedin_profile: \"\",\n      website: \"\",\n      correspondence: \"\",\n      is_corporate: false,\n      is_payed: false,\n      searchtext: \"\",\n      updateNoteId: null,\n      updateNoteIndex: null,\n      dropdownOpen: false,\n      is_ordering_name: false,\n      modal: false,\n      modaldelete: false,\n      is_staff: false,\n      loading: true,\n      fetching: true,\n      nextafterdelete: \"\",\n      deleted: false,\n      order: [],\n      errors: {},\n      notes: [\n          {\n            count: null,\n            next: null,\n            previous: null,\n            noteitems: []\n          },\n        ],\n      }\n  }\n\n  // // END FETCH DATA AFTER PROPS\n  componentDidMount () {\n    // Check if was ordering\n    if (!(Array.isArray(this.props.notes[0].noteitems) && this.props.notes[0].noteitems.length)) {\n      // array exists and is not empty\n      this.props.fetchNotes()\n    } else {\n      this.props.orderNotes(\"\")\n    }\n\n  }\n\n  resetForm = () => {\n    this.setState({text: \"\", phone: '', email:'', errors: {}, \n      updateNoteId: null, status: 'Candidate', is_corporate: false, \n      is_payed: false, linkedin_profile: \"\", website: \"\",\n      correspondence: \"\", });\n  }\n  addNew = () => {\n    this.setState({text: \"\", phone: '', email:'', errors: {}, \n      updateNoteId: null, status: 'Candidate', is_corporate: false, \n      is_payed: false, linkedin_profile: \"\", website: \"\", \n      modal: true, correspondence: \"\", });\n  }\n  resetSearch = () => {\n    if (this.state.searching) {\n        this.props.searchNotes(\"\") \n        this.setState({\n          is_ordering_name: false,\n          order: [],\n          searching: false\n        });             \n    }    \n    this.setState({ searchtext: \"\" });\n  }\n \n  selectForEdit = (index, id) => {\n    let note = this.props.notes[index].noteitems[id];\n    this.setState({text: note.text, phone: note.phone, \n      status: note.status, is_payed: note.is_payed, \n      is_corporate: note.is_corporate, email: note.email, \n      linkedin_profile: note.linkedin_profile, \n      website: note.website, correspondence:note.correspondence,\n      updateNoteId: id, updateNoteIndex: index, modal: true, });\n  }\n\n  selectForDelete = (index, id) => {\n    this.props.deleteNote(index, id)\n    this.setState({\n      modaldelete: false,\n    })     \n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.notes !== prevProps.notes) {\n      this.setState({\n        loading: this.props.notes[0].loading,\n        fetching: this.props.notes[0].fetching,\n      }) \n      // если длина массива меньше чем предыдущая длина (один элемент удален)\n      // то пересчитываем эндпоинт для фетча (вычитаем из последнего символа next\n      // число \"1\" чтобы получить текущий фетч), если в нексте на конце \"1\", то обрезаем\n      // до знака \"?\"\n      let nextForDelete = \"\";\n      if(this.props.notes[0].deleted && this.props.notes[0].next) {\n        nextForDelete = this.props.notes[0].next\n        // console.log(nextForDelete)\n        let lastChar = parseInt(nextForDelete.slice(-1), 10)\n        if ((lastChar-1) >= 2) {\n          nextForDelete = nextForDelete.slice(0, -1)+(lastChar-1);\n          // console.log(nextForDelete)\n        }\n        \n        //add flag nextafterdelete to correctly fetch\n        this.setState({nextafterdelete: nextForDelete,\n          deleted: false})\n      }\n      // if (this.props.lead) {\n      //   const leads = paymentsUtil(this.props.lead.leads)\n      //   this.setState({leads: leads}); \n      // }\n\n    }\n  }   \n    \n  toggle = () => {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  }\n  toggleModal = () => {\n    this.setState(prevState => ({\n      modal: !prevState.modal,\n    }));\n  }\n  toggleModalDelete = (index, id) => {\n    let text = \"\"\n    if (id !== undefined) {\n      text = this.props.notes[index].noteitems[id].text\n    }\n    this.setState(prevState => ({\n      modaldelete: !prevState.modaldelete,\n      index: index,\n      id: id,\n      text: text\n    }));\n  }\n\n  handleChange = (e) => {\n    e.preventDefault();\n    let key = e.target.name\n    let value = e.target.value\n\n    this.setState({\n        [key]: value,\n        errors: {}\n    })\n\n  }\n\n  changeValue = (e) => {\n    this.setState({status: e.currentTarget.textContent})\n  }\n  loadMorePosts = () => {\n    const {next} = this.props.notes[this.props.notes.length - 1]\n    this.setState({\n      fetching: true,\n    });\n    // Check if investor is after delete to correct fetch \n    if (this.state.nextafterdelete) {\n      this.props.fetchNotes(this.state.nextafterdelete)\n      //clear flag nextafterdelete\n      this.setState({nextafterdelete: \"\"})\n    } else {\n      if (next !== null || next !== undefined) {\n        // checking with timeout function\n        // setTimeout( () => {this.props.fetchNotes(next)}, 5000 )\n        this.props.fetchNotes(next)             \n      }\n    }\n     \n  }\n  searchNotes = () => {\n      const {searchtext} = this.state\n      if (searchtext !== null || searchtext !== undefined) {\n          this.props.searchNotes(searchtext) \n          this.setState({\n            is_ordering_name: false,\n            order: [],\n            searching: true,\n          });             \n      }  \n  }\n\n  onCheckboxIsCorpBtnClick = () => {\n    this.setState({\n      is_corporate: !this.state.is_corporate,\n    });\n  }\n  onCheckboxIsPayBtnClick = () => {\n    this.setState({\n      is_payed: !this.state.is_payed,\n    });\n  }\n\n  onOrderNotes = (dataFromCallback) => {\n    // Array to string with ','\n    \n    if (dataFromCallback && dataFromCallback.order.length) {\n      let mapped = dataFromCallback.order.map((item)=>(item)).join(\",\");\n      this.setState({...dataFromCallback});      \n      this.props.orderNotes(mapped)              \n    } else {\n      this.setState({order: []});\n      this.props.orderNotes(\"\")   \n    }    \n  }\n  submitNote = (e) => {\n      e.preventDefault();\n      // check validation from helper file\n      const validation_errors = handleValidation(this.state)\n      // check validation_errors dictionary is empty or has any errors\n      if (Object.keys(validation_errors).length === 0) {\n        // Check what do you want add or edit?\n        if (this.state.updateNoteId === null) {\n            this.props.addNote(this.state.text, this.state.phone, this.state.status, \n              this.state.is_corporate, this.state.is_payed, this.state.email, \n              this.state.linkedin_profile, this.state.website, this.state.correspondence,)\n              .then(this.resetForm)\n              .then(this.toggleModal)            \n              .catch(function (error) {\n                 console.log(\"error\", error);\n               });\n        } else {\n            this.props.updateNote(this.state.updateNoteIndex, this.state.updateNoteId, \n              this.state.text, this.state.phone, this.state.status, this.state.is_corporate, \n              this.state.is_payed, this.state.email, this.state.linkedin_profile, \n              this.state.website, this.state.correspondence)\n              .then(this.resetForm)\n              .then(this.toggleModal)              \n              .catch(function (error) {\n                 console.log(\"error\", error);\n               });\n        }\n      } else {\n        this.setState({errors: validation_errors}); \n      }\n  }\n  renderModal() {\n      const { modal, \n        text, phone, email, linkedin_profile,\n        website, correspondence, is_corporate,\n        status, is_payed, dropdownOpen,\n        updateNoteId,\n        errors } = this.state;\n      const { is_staff } = this.props;\n      \n      if (this.state.modal) {\n        return (\n          <Modal isOpen={modal} toggle={this.toggleModal}>\n            <Form onSubmit={this.submitNote}>            \n\n              <ModalHeader toggle={this.toggleModal}>{updateNoteId === null ? \"New Investor\" : \"Edit Investor\"}</ModalHeader>\n              <ModalBody>                    \n                <InputFormNoteQuickAdd\n                  onInputChange={this.handleChange}\n                  handleCheckboxIsCorpBtnClick={this.onCheckboxIsCorpBtnClick}\n                  handleCheckboxIsPayBtnClick={this.onCheckboxIsPayBtnClick} \n                  onToggle={this.toggle} \n                  onChangeValue={this.changeValue}\n\n                  text={text} \n                  phone={phone}\n                  email={email}\n                  linkedin_profile={linkedin_profile}\n                  website={website}\n                  correspondence={correspondence}\n                  is_corporate={is_corporate}\n                  is_staff={is_staff}\n                  status={status}\n                  is_payed={is_payed}\n                  dropdownOpen={dropdownOpen}\n                  updateNoteId={updateNoteId}\n\n                  errors={errors} \n                />                              \n              </ModalBody>\n              <ModalFooter> \n                <FormGroup row>                   \n                <Button className=\"rounded-0\" color=\"info\" type=\"submit\"><FontAwesomeIcon icon={faSave} color=\"white\"/></Button>              \n                {updateNoteId === null ? <Button className=\"rounded-0\" outline onClick={this.resetForm}>Clear</Button> : null}\n                <Button className=\"rounded-0\" onClick={this.toggleModal}>Cancel</Button>\n                </FormGroup>\n              </ModalFooter>\n            </Form>\n          </Modal>            \n        );\n      }\n    }\n\n  renderNotes () {\n    const { notes } = this.props\n    const { errors, modal, searchtext, modaldelete, index, id, text, fetching } = this.state;\n    const { next } = this.props.notes[this.props.notes.length - 1];\n\n    return (\n      <div>\n        <div className=\"centering mt-2\"> \n          <div className=\"centering-left\"> \n            <Button className=\"rounded-0\" color=\"info\" onClick={this.addNew}><FontAwesomeIcon icon={faPlusSquare} color=\"white\"/><span className=\"btn-quick__text\"> Quick Add</span></Button>\n          </div>\n          <div className=\"centering-center\">\n          {modal ? this.renderModal() : null}\n          {modaldelete ? \n            <ModalDelete \n              modaldelete={modaldelete} \n              index={index} \n              id={id} \n              text={text}\n              toggle={this.toggleModalDelete}\n              onSelectForDelete={this.selectForDelete}\n            /> \n          : null}\n            <FormGroup row>\n              <CustomInput inline\n                id=\"searchtext\"\n                type=\"text\" \n                name=\"searchtext\"\n                value={searchtext || ''}\n                placeholder=\"Search by Name...\"\n                onChange={this.handleChange}\n                \n                />\n                {errors.searchtext ? <FormText color=\"danger\">{errors.searchtext}</FormText>: \"\"}\n              <Button className=\"rounded-0\" onClick={this.searchNotes}><FontAwesomeIcon icon={faSearch} color=\"white\"/></Button>\n              {searchtext !== \"\" ? \n                <Button outline className=\"rounded-0 btn-sort__clear\" onClick={this.resetSearch}>\n                  <FontAwesomeIcon rotation={90} icon={faTimes}/>\n                </Button> \n              : null}          \n            </FormGroup>\n          </div>\n          <div className=\"centering-right\"> \n            <Link to={\"/investors/add\"}><Button className=\"rounded-0 btn-add\" color=\"info\">Add New</Button></Link>\n          </div>\n        </div>          \n        <div className=\"centering\"> \n          <div className=\"centering-left\"></div>\n          <h3 className=\"centering-center\">Leads</h3>\n          <div className=\"centering-right centering-right__tablepreffix\">\n          </div>\n        </div>\n        <Table className=\"table text-center table-investors\" striped>\n          <OrderingHeaderTable\n            onOrderNotes={this.onOrderNotes} \n          />\n          {notes !== undefined ? notes.map((post, index)=>{\n            return (\n              <OrderingBodyTable\n                  post={post}\n                  key={`${index}`}\n                  index={index}\n\n                  onSelectForEdit={this.selectForEdit}\n                  onToggleModalDelete={this.toggleModalDelete}\n                />\n              )\n          })\n        :null}   \n        </Table>\n        {next !== null && !fetching ? <Button onClick={this.loadMorePosts}>Load more</Button> : ''}\n        {fetching && <LoadObject objectclass=\"loadnotes\" />}\n      </div>\n    )\n  }\n  render () {\n    const { loading } = this.state\n    return(\n      <div>\n        { loading ? <LoadScreen /> : this.renderNotes() }\n      </div>      \n    )\n  }\n}\n\nconst mapStateToProps = state => {\n    return {\n      notes: state.notes,\n      deleted: state.deleted,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchNotes: (next) => {\n            dispatch(notes.fetchNotes(next));\n        },\n        addNote: (text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence) => {\n            return dispatch(notes.addNote(text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence));\n        },\n        updateNote: (index, id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence) => {\n            return dispatch(notes.updateNote(index, id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence));\n        },\n        deleteNote: (index, id) => {\n            dispatch(notes.deleteNote(index, id));\n        },\n        searchNotes: (searchtext) => {\n            dispatch(notes.searchNotes(searchtext));\n        },\n        orderNotes: (order) => {\n            dispatch(notes.orderNotes(order));\n        },\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notes);","import React, { Component } from 'react'\nimport { Button, \n  FormGroup, Label, } from 'reactstrap';\nimport DatePicker from \"react-datepicker\";\nimport moment from \"moment\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n// Checkbox is corporate\nexport class DatePickLastCall extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      add_call: false,\n      last_call: \"\",      \n    }\n  }\n  handleChangeDate = (date) => {\n    if (date) {\n      this.props.handleChangeDate(moment(date, moment.defaultFormat).toDate());\n    } else {\n      this.props.handleChangeDate(null);\n    }\n    \n  }\n\n  render() {\n    // const { last_call } = this.state;\n    const { last_call } = this.props;\n    const is_valid_date = moment(last_call).isValid()\n\n    return ( \n      <div>\n        <FormGroup>\n          <Label>Last Call {is_valid_date ? <Button className=\"btn\" onClick={this.props.handleResetCallClick}>Reset</Button>: \"\"}</Label>\n          {is_valid_date ?\n          <div>\n            <DatePicker     \n              selected={is_valid_date ? moment(last_call, moment.defaultFormat).toDate() : moment(this.state.last_call, moment.defaultFormat).toDate()}\n              onChange={this.handleChangeDate}\n              showTimeSelect\n              timeFormat=\"HH:mm\"\n              timeIntervals={15}\n              dateFormat=\"d MMMM yyyy HH:mm\"\n              timeCaption=\"time\"\n            />\n          </div>\n          :                     \n            <Button className=\"btn btn-block\" onClick={this.props.handleAddCallClick}>Add Last Call</Button>\n          }\n        </FormGroup>\n      </div>\n    )    \n  }\n}","import React, { Component } from 'react'\nimport Dropzone from 'react-dropzone'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFileUpload } from '@fortawesome/free-solid-svg-icons'\nimport './style.scss'\n\nconst imageMaxSize = 10000000; //bytes\n\nclass FileDrop extends Component {\n\n\tonDrop = (acceptedFiles, rejectedFiles) => {\n\t\t// console.log(acceptedFiles, rejectedFiles)\n\t\tthis.props.onSelectDrop(acceptedFiles);\n\t}\n\trender () {\n\t\t\n\t\tconst { documents, detail } = this.props;\n\t\tlet drop_class\n\t\tlet drop_text\n\n\t\tif (documents) {\n\t\t\tif (detail) {\n\t\t\t\tif (documents === detail) {\n\t\t\t\t  drop_class = \"dropzone-field dropzone-field__default\"\n\t\t\t\t  drop_text = \"  Replace Document\"\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t  drop_class = \"dropzone-field dropzone-field__success\";\n\t\t\t  \t  drop_text = \"  Save to Attach\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdrop_class = \"dropzone-field dropzone-field__success\";\n\t\t\t\tdrop_text = \"  Save to Attach\";\n\t\t\t}\n\t\t} else {\n\t\t\tdrop_class = \"dropzone-field dropzone-field__default\";\n\t\t\tdrop_text = \"  Add Document\"\n\t\t} \n\n\t\treturn (\n\t\t  <div>Documents:\n            <span className=\"document-title\">{detail !== \"null\" ? \" (\"+detail.split(\"/\").slice(-1)[0]+\")\" : \"\"}</span>\n\t\t    <Dropzone\n\t            onDrop={this.onDrop}\t\t            \n\t            multiple={false}\n\t            maxSize={imageMaxSize}\n\t            >\n\t                {({getRootProps, getInputProps}) => (\n\t                    <div {...getRootProps()} className={`${drop_class}`}>\n\t                        <input {...getInputProps()} />\n\t                       \t<div>\n\t                       \t\t<FontAwesomeIcon icon={faFileUpload} color=\"white\"/>\n\t                       \t\t\t<span className=\"dropzone-field__text\">{`${drop_text}`}</span>\n\t\t\t\t\t\t\t</div>\n\t                    </div>\n\t                )}\n\t\t\t</Dropzone>﻿\n\t\t  </div>\n\t\t  )\n\t}\n}\nexport default FileDrop","import React, { Component } from 'react'\n\nimport * as Inputs from '../../Atoms/AddInputs/AddInputs'\nimport { CheckboxIsCorp } from '../../Atoms/Checkboxes/CheckboxIsCorp'\nimport { CheckboxIsPayed } from '../../Atoms/Checkboxes/CheckboxIsPayed'\nimport { CustomDropdown } from '../../Atoms/Dropdown/Dropdown'\nimport { DatePickLastCall } from '../../Atoms/DatePick/DatePickLastCall'\nimport FileDrop from '../../Atoms/FileDrop/FileDrop'\n\nexport class InputFormNoteDetail extends Component {\n  render() {\n    const { text, phone, email,  \n      linkedin_profile, website, \n      correspondence, is_corporate,\n      status, dropdownOpen, is_payed,\n      is_staff, add_call, last_call,\n      documents, detail,\n      errors, } = this.props;\n      \n    return (\n      <div>        \n        <Inputs.InputName \n          onInputChange={this.props.onInputChange} \n          text={text} \n          errors={errors} \n        />\n        <Inputs.InputPhone \n          onInputChange={this.props.onInputChange} \n          phone={phone} \n          errors={errors} \n        />\n        <Inputs.InputEmail \n          onInputChange={this.props.onInputChange} \n          email={email} \n          errors={errors} \n        />      \n        <Inputs.InputLinkedin \n          onInputChange={this.props.onInputChange} \n          linkedin_profile={linkedin_profile} \n          errors={errors} \n        />\n        <Inputs.InputWebsite \n          onInputChange={this.props.onInputChange} \n          website={website} \n          errors={errors} \n        />      \n        <Inputs.InputCorrespondence \n          onInputChange={this.props.onInputChange} \n          correspondence={correspondence} \n          errors={errors} \n        />        \n        <CheckboxIsPayed \n          handleCheckboxIsPayBtnClick={this.props.handleCheckboxIsPayBtnClick} \n          status={status} \n          is_staff={is_staff} \n          is_payed={is_payed}\n        />                \n        <CheckboxIsCorp \n          handleCheckboxIsCorpBtnClick={this.props.handleCheckboxIsCorpBtnClick} \n          is_corporate={is_corporate} \n        />          \n        <CustomDropdown \n          onChangeValue={this.props.onChangeValue} \n          onToggle={this.props.onToggle} \n          status={status} \n          dropdownOpen={dropdownOpen} \n        />      \n        <DatePickLastCall \n          handleChangeDate={this.props.handleChangeDate} \n          handleResetCallClick={this.props.handleResetCallClick} \n          handleAddCallClick={this.props.handleAddCallClick} \n          add_call={add_call} \n          last_call={last_call} \n        />      \n        <FileDrop \n          onSelectDrop={this.props.onSelectDrop} \n          documents={documents}\n          detail={detail}\n        />\n      </div>\n    )\n    \n  }\n}","import React, { Component } from 'react'\nimport { Table } from 'reactstrap';\n\nimport { ReturnButton, EditButton } from '../../../general/Atoms/Buttons/Buttons'\nimport moment from \"moment\";\n\nexport class DetailPreviewTable extends Component {\n  render() {\n    const { text, phone, email,  \n      linkedin_profile, website, \n      correspondence, is_corporate,\n      status, is_payed,\n      last_call, documents, \n    } = this.props;\n\n    return (\n            <div className=\"mt-2 table-detail\"> \n                <Table className=\"userprofile-header\">\n                  <tbody>\n                    <tr>\n                      <th>\n                        <h2>Investor <b>{text}</b></h2>\n                      </th>\n                      <td>\n                        <ReturnButton />\n                        <EditButton\n                          onEdit={this.props.onEdit} \n                        />\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>             \n                <Table striped>\n                  <tbody>\n                    <tr>\n                      <th>Phone</th>\n                      <td>{phone}</td>\n                    </tr>\n                    <tr>\n                      <th>Email</th>\n                      <td className=\"table-correspondence__data\">{email}</td>\n                    </tr>\n                    <tr>\n                      <th>Linkedin</th>\n                      <td className=\"table-correspondence__data\"><a className=\"table-correspondence__url\" href={`${linkedin_profile}`} >{linkedin_profile}</a></td>\n                    </tr>\n                    <tr>\n                      <th>Website</th>\n                      <td className=\"table-correspondence__data\"><a className=\"table-correspondence__url\" href={`${website}`} >{website}</a></td>\n                    </tr>\n                    <tr>\n                      <th>Correspondence</th>\n                      <td className=\"table-correspondence__data\">{correspondence}</td>\n                    </tr>\n                    <tr>\n                      <th>Investor</th>\n                      <td>{is_corporate ? \"Corporate\" : \"Individual\" }</td>\n                    </tr>\n                    <tr>\n                      <th>Status</th>\n                      <td>{status}</td>\n                    </tr>\n                    <tr>\n                      <th>Payment</th>\n                      <td>{is_payed ? \"Payed\" : \"New\" }</td>\n                    </tr>\n                    <tr>\n                      <th>Calls</th>\n                      <td>{last_call ? moment(last_call).format(\"D MMM YYYY HH:mm\") : \"\"}</td>\n                    </tr>\n                    <tr>\n                      <th>Documents</th>\n                      <td>{documents ? <a className=\"table-correspondence__url\" href={`${documents}`} >{documents.split(\"/\").slice(-1)[0]}</a> : \"\"}</td>\n                    </tr>\n                  </tbody>\n                </Table>\n            </div>\n    )\n    \n  }\n}","import React, {Component} from 'react'\n\nimport * as detail from \"../../../actions/noteDetailActions\";\nimport {connect} from 'react-redux';\nimport { Form, Container, Row, FormGroup, Button,\n    Modal, ModalHeader, ModalBody, ModalFooter, } from 'reactstrap';\nimport moment from \"moment\";\n\nimport { ErrorPage } from '../../general/Organisms/ErrorPage/ErrorPage'\nimport { LoadScreen } from '../../general/Organisms/LoadScreen/LoadScreen'\nimport { SaveButton } from '../../general/Atoms/Buttons/Buttons'\nimport { InputFormNoteDetail } from '../Molecules/Forms/InputFormNoteDetail'\nimport { DetailPreviewTable } from '../Molecules/Tables/DetailPreviewTable'\nimport { handleValidation } from '../../../utils/helpers'\n\nimport './styles.scss'\n\nclass NoteDetail extends Component {\n\n    constructor(props){\n        super(props);\n  \n        this.state = {\n          text: \"\",\n          phone: \"\",\n          status: \"\",\n          email:\"\",\n          linkedin_profile: \"\",\n          website: \"\",\n          correspondence: \"\",\n          is_corporate: false,\n          is_payed: false,\n          id: null,\n          loading: true,\n          errors: {},\n          hasError: false,\n          dropdownOpen: false,\n          detail: {},\n          add_call: false,\n          last_call: \"\", \n          documents: null,\n          attached: false, \n          modal: false,     \n        }\n    }\n\n    componentDidMount(){\n      if (this.props.match){\n        const {id} = this.props.match.params\n        this.setState({\n            id: id,\n        })\n        this.props.fetchDetailNote(id)        \n      }      \n    }\n\n    componentWillReceiveProps(nextProps) {\n      const detailed = nextProps.detail\n\n      if (Object.keys(detailed).length) {\n        this.setState({\n          text: detailed.text,\n          phone: detailed.phone,\n          status: detailed.status,\n          is_corporate: detailed.is_corporate,\n          is_payed: detailed.is_payed,\n          email: detailed.email,\n          linkedin_profile: detailed.linkedin_profile,\n          website: detailed.website,\n          correspondence: detailed.correspondence,\n          last_call: moment(detailed.last_call, moment.defaultFormat).toDate(),\n          documents: detailed.documents,\n          hasError: detailed.hasError,\n          loading: detailed.loading,\n          errors: detailed.errors\n        }) \n      }        \n    }    \n    toggle = () => {\n      this.setState(prevState => ({\n        dropdownOpen: !prevState.dropdownOpen\n      }));\n    }\n    toggleModal = () => {\n      this.setState(prevState => ({\n        modal: !prevState.modal,\n      }));\n    }\n    handleChange = (e) => {\n      e.preventDefault();\n      let key = e.target.name\n      let value = e.target.value\n      this.setState({\n          [key]: value,\n          errors: {}\n      })\n    }\n    changeDate = (date) => {      \n      this.setState({last_call: date})\n    }\n\n    changeValue = (e) => {\n      this.setState({status: e.currentTarget.textContent})\n    }\n\n    getData = (documents) => {\n      // console.log(\"getData!\")\n      this.setState({\n        documents: documents[0],\n        attached: true,\n      })\n    }\n\n    onCheckboxIsCorpBtnClick = () => {\n      this.setState({\n        is_corporate: !this.state.is_corporate,\n      });\n    }\n    onCheckboxIsPayBtnClick = () => {\n      this.setState({\n        is_payed: !this.state.is_payed,\n      });\n    }\n    onAddCallClick = () => {\n      this.setState({\n        add_call: true,\n        last_call: moment(new Date(), moment.defaultFormat).toDate(),\n      });\n    }\n\n    onResetCallClick = () => {\n      this.setState({\n        add_call: false,\n        last_call: \"\",\n      });\n    }\n\n    submitNote = (e) => {\n      e.preventDefault();\n      // check validation from helper file\n      const validation_errors = handleValidation(this.state)\n      // check validation_errors dictionary is empty or has any errors\n      if (Object.keys(validation_errors).length === 0) {\n        this.props.updateDetailNote(this.state.id, this.state.text, \n          this.state.phone, this.state.status, this.state.is_corporate, \n          this.state.is_payed, this.state.email, this.state.linkedin_profile, \n          this.state.website, this.state.correspondence, this.state.last_call,\n          this.state.documents, this.state.attached,)              \n        this.toggleModal()            \n\n      } else {\n        this.setState({errors: validation_errors}); \n      }\n    }\n  renderModal() {\n      const { detail, is_staff } = this.props;\n      const { modal, \n        text, phone, email, \n        linkedin_profile, website,\n        correspondence, is_corporate,\n        status, dropdownOpen, is_payed,\n        add_call, last_call, documents,\n        errors } = this.state;\n      \n      if (this.state.modal) {\n        return (\n          <Modal isOpen={modal} toggle={this.toggleModal}>\n            <Form onSubmit={this.submitNote}>            \n\n              <ModalHeader toggle={this.toggleModal}>Edit Investor</ModalHeader>\n              <ModalBody>                    \n                <InputFormNoteDetail \n                  onInputChange={this.handleChange}\n                  handleCheckboxIsCorpBtnClick={this.onCheckboxIsCorpBtnClick}\n                  handleCheckboxIsPayBtnClick={this.onCheckboxIsPayBtnClick} \n                  onToggle={this.toggle} \n                  onChangeValue={this.changeValue}\n                  handleChangeDate={this.changeDate}\n                  handleResetCallClick={this.onResetCallClick}\n                  handleAddCallClick={this.onAddCallClick}\n                  onSelectDrop={this.getData}\n\n                  text={text} \n                  phone={phone}\n                  email={email}\n                  linkedin_profile={linkedin_profile}\n                  website={website}\n                  correspondence={correspondence}\n                  is_corporate={is_corporate}\n                  status={status}\n                  is_staff={is_staff}\n                  is_payed={is_payed}\n                  dropdownOpen={dropdownOpen}\n                  add_call={add_call}\n                  last_call={last_call}\n                  documents={documents}\n                  detail={`${detail.documents}`}\n\n                  errors={errors} \n                />                              \n              </ModalBody>\n              <ModalFooter> \n                <FormGroup row>                   \n                <SaveButton />                              \n                <Button className=\"rounded-0\" onClick={this.toggleModal}>Cancel</Button>\n                </FormGroup>\n              </ModalFooter>\n            </Form>\n          </Modal>            \n        );\n      }\n    }\n    renderNote() {\n        const { detail } = this.props;\n        const { modal, hasError, errors } = this.state;\n\n        if (!detail.detail && !hasError) {\n          return (\n                <Container fluid>\n                  <Row>\n                    {modal ? this.renderModal() : null}\n                    <DetailPreviewTable \n                      {...detail}\n                      onEdit={this.toggleModal}\n                    />\n              </Row>\n            </Container>              \n          );\n\n        } else {\n            return (\n              <ErrorPage \n                  errors={errors && errors.page}\n                /> \n            );\n        }\n    }\n    render () {\n        const {loading} = this.state\n        return(\n            <div>\n              {loading ?<LoadScreen />:this.renderNote()}\n          </div>               \n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      detail: state.detail,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      fetchDetailNote: (id) => {\n          dispatch(detail.fetchDetailNote(id));\n      },\n      updateDetailNote: (id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence, last_call, documents, attached) => {\n          dispatch(detail.updateDetailNote(id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence, last_call, documents, attached));\n      }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteDetail);","import { toast } from 'react-toastify';\nexport const fetchDetailNote = (id) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        const endpoint = `/api/investors/${id}/` \n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        \n        return fetch(endpoint, {headers, })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n               \n                } else {\n                    toast.error(\"Server Error...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'FETCH_DETAIL_NOTE', detail: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authentication Error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", detail: res.data});\n                    throw res.data;\n                } \n                else if (res.status === 404) {\n                    toast.error(\"Investor is not found...\")\n                    dispatch({type: \"INVESTOR_NOT_FOUND\", detail: res.data});\n                    throw res.data;\n                }\n            })\n            .catch(error => {                \n                console.log(\"error\", error);\n            });\n    }\n}\n\nexport const updateDetailNote = (id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence, last_call, documents, attached) => {\n    return (dispatch, getState) => {\n\n        let headers = {'Accept': 'application/json'};\n        // let headers = {\"Content-Type\": \"multipart/form-data\"};\n\n        let {token} = getState().auth;\n\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        let formData = new FormData();\n        formData.append('text', text);\n        formData.append('phone', phone);\n        formData.append('status', status);\n        formData.append('is_corporate', is_corporate);\n        formData.append('is_payed', is_payed);\n        formData.append('email', email);\n        formData.append('linkedin_profile', linkedin_profile);\n        formData.append('website', website);\n        // Not required fields\n        if (correspondence) {\n            formData.append('correspondence', correspondence);\n        }\n        //check if attached & if documents(file) is not string\n        //if documents is string don't append formData\n        if (attached && \n          !(typeof documents === 'string' || documents instanceof String)) {\n            formData.append('documents', documents);\n        }\n\n        // formData need to convert ISO format string\n        if (last_call){\n            if (String(last_call) !==\"Invalid Date\") {\n                formData.append('last_call', last_call.toISOString());\n            }            \n        } else {\n            formData.append('last_call', \"\");\n        }\n        let noteId = id;\n        return fetch(`/api/investors/${noteId}/`, {headers, method: \"PUT\", body: formData})\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    toast.error(\"Server error...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 200) {\n                    toast.info(\"Investor \"+res.data.text+\" edited\")\n                    return dispatch({type: 'UPDATE_DETAIL_NOTE', detail: res.data, id});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authentication Error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n            .catch(error => {                \n                console.log(\"error\", error);\n            });\n    }\n}\n\nexport const addDetailNote = (text, phone, status, is_corporate, email, linkedin_profile, website, correspondence) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n\n        let body = JSON.stringify({text, phone, status, is_corporate, email, linkedin_profile, website, correspondence });\n        return fetch(\"/api/investors/\", {headers, method: \"POST\", body})\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 201) {\n                    toast.info(\"Investor \"+res.data.text+\" added\")\n                    return dispatch({type: 'ADD_DETAIL_NOTE', detail: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n           .catch(error => {                \n                console.log(\"error\", error);\n            });\n    }\n}\n","import React, { Component } from 'react'\n\nimport * as Inputs from '../../Atoms/AddInputs/AddInputs'\nimport { CheckboxIsCorp } from '../../Atoms/Checkboxes/CheckboxIsCorp'\n\nexport class InputFormNoteAdd extends Component {\n  render() {\n    const { text, phone, email,  \n      linkedin_profile, website, \n      correspondence, is_corporate,\n\n      errors, \n    } = this.props;\n\n    return (\n      <div>\n        <Inputs.InputName \n          onInputChange={this.props.onInputChange} \n          text={text} \n          errors={errors} \n        />\n        <Inputs.InputPhone \n          onInputChange={this.props.onInputChange} \n          phone={phone} \n          errors={errors} \n        />\n        <Inputs.InputEmail \n          onInputChange={this.props.onInputChange} \n          email={email} \n          errors={errors} \n        />      \n        <Inputs.InputLinkedin \n          onInputChange={this.props.onInputChange} \n          linkedin_profile={linkedin_profile} \n          errors={errors} \n        />\n        <Inputs.InputWebsite \n          onInputChange={this.props.onInputChange} \n          website={website} \n          errors={errors} \n        />      \n        <Inputs.InputCorrespondence \n          onInputChange={this.props.onInputChange} \n          correspondence={correspondence} \n          errors={errors} \n        />      \n        \n        <CheckboxIsCorp \n          handleCheckboxIsCorpBtnClick={this.props.handleCheckboxIsCorpBtnClick} \n          is_corporate={is_corporate} \n        />\n\n      </div>\n    )\n    \n  }\n}","import React, {Component} from 'react'\n\nimport { Redirect } from 'react-router-dom'\nimport * as detail from \"../../../actions/noteDetailActions\";\nimport {connect} from 'react-redux';\n\nimport Form from 'reactstrap/lib/Form';\n\nimport { InputFormNoteAdd } from '../Molecules/Forms/InputFormNoteAdd'\n\nimport { ReturnButton, SaveButton, ClearButton } from '../../general/Atoms/Buttons/Buttons'\nimport { handleValidation } from '../../../utils/helpers'\n\nclass NoteNew extends Component {\n    constructor(props){\n        super(props)       \n        this.state = {\n          text: \"\",\n          phone: \"\",\n          email: \"\",\n          status: \"Candidate\",\n          linkedin_profile: \"\",\n          website: \"\",\n          correspondence: \"\",\n          is_corporate: false,\n          id: null,\n          doneLoading: false,\n          errors: {},        \n          redirectToNewPage: false          \n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n      if (this.state.redirectToNewPage) {  \n        this.setState({\n          id: nextProps.detail.id,\n        })\n      }\n    }    \n\n    resetForm = () => {\n      this.setState({text: \"\", phone: '', email:'', errors: {}, status: 'Candidate', \n        is_corporate: false, linkedin_profile: \"\", website: \"\",\n        correspondence: \"\",\n      });\n    }\n    handleChange = (e) => {\n      e.preventDefault();\n      let key = e.target.name\n      let value = e.target.value\n      this.setState({\n          [key]: value,\n          errors: {}\n      })\n    }\n    changeValue = (e) => {\n      this.setState({status: e.currentTarget.textContent})\n    }\n\n    onCheckboxIsCorpBtnClick = () => {\n      this.setState({\n        is_corporate: !this.state.is_corporate,\n      });\n    }\n\n    submitNote = (e) => {\n      e.preventDefault();\n      // check validation from helper file\n      const validation_errors = handleValidation(this.state)\n      // check validation_errors dictionary is empty or has any errors\n      if (Object.keys(validation_errors).length === 0) {\n        this.props.addDetailNote(this.state.text, this.state.phone, this.state.status, \n          this.state.is_corporate, this.state.email, this.state.linkedin_profile, \n          this.state.website, this.state.correspondence)\n          .then(this.setState({ redirectToNewPage: true }))            \n          .catch(function (error) {\n             console.log(\"error\", error);\n           });\n      } else {\n        this.setState({errors: validation_errors}); \n      }\n    }\n\n    render () {\n        const { text, phone, email, \n          linkedin_profile, website,\n          correspondence, is_corporate,\n          errors } = this.state;\n        // The part that makes the redirect happen\n        if (this.state.redirectToNewPage && this.state.id) {\n          return (\n            <Redirect to={{pathname:`/investors/${this.state.id}`}} />\n          )\n        }\n        return(\n            <div>\n              <div className=\"mt-2 mb-2\">\n                <h3>Add New</h3>\n              </div>\n              <Form onSubmit={this.submitNote} className=\"form col col-sm-4 mt-2 p-2\">\n                <InputFormNoteAdd\n                  onInputChange={this.handleChange}\n                  handleCheckboxIsCorpBtnClick={this.onCheckboxIsCorpBtnClick} \n\n                  text={text} \n                  phone={phone}\n                  email={email}\n                  linkedin_profile={linkedin_profile}\n                  website={website}\n                  correspondence={correspondence}\n                  is_corporate={is_corporate}\n\n                  errors={errors} \n                /> \n                <div>\n                  <SaveButton />\n                  <ClearButton\n                    onClear={this.resetForm} \n                  />\n                  <ReturnButton />\n                </div>\n            </Form>\n          </div>               \n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      detail: state.detail,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addDetailNote: (text, phone, status, is_corporate, email, linkedin_profile, website, correspondence) => {\n            return dispatch(detail.addDetailNote(text, phone, status, is_corporate, email, linkedin_profile, website, correspondence));\n        },\n    }\n}\n\n// export default NewNote;\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteNew);","import React, {Component} from 'react'\nimport {connect} from 'react-redux';\nimport { Link } from 'react-router-dom'\nimport { Table } from 'reactstrap';\n// import memoize from \"memoize-one\";\nimport * as lead from \"../../../actions/paymentsActions\";\nimport { LoadScreen } from '../../general/Organisms/LoadScreen/LoadScreen'\nimport { paymentsUtil } from '../../../utils/paymentsUtils'\n\nclass Payments extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {         \n        loading: true,\n        errors: {},\n        lead: {},\n      };\n    }\n\n    componentDidMount(){\n      if (this.props.match){\n        this.props.fetchPaymentsLead()\n      }\n    }\n\n    componentDidUpdate(prevProps) {\n      if (this.props.lead !== prevProps.lead) {\n        if (this.props.lead) {\n          const leads = paymentsUtil(this.props.lead.leads)\n          this.setState({leads: leads}); \n        }\n      }\n    }   \n    renderPayments() {\n      const { lead } = this.props;\n        if (lead.leads) {\n          return (\n            <div>\n              <h3>Leads View</h3>\n              <Table className=\"table text-center\" striped>\n                <thead>\n                  <tr>\n                    <th className=\"table-num__title table-payments\">#</th>\n                    <th className=\"table-payments\">Developer</th>\n                    <th className=\"table-payments\">Total Leads</th>\n                    <th className=\"table-payments\">Processed</th>\n                    <th className=\"table-payments\">Converted</th>\n                    <th className=\"table-payments\">Rejected</th>\n                    <th className=\"table-payments\">Next Payment</th>\n                  </tr>\n                </thead>  \n                <tbody>\n                  {lead.leads.length > 0 ? lead.leads.map((item,id) => (\n                    <tr key={id}>\n                        <th scope=\"row\" className=\"table-num__text\">{id+1}</th>\n                        <td>\n                          <Link className=\"info-link\" to={{pathname:`/profile/${item.id}`,\n                              state: {fromDashboard: false, prevLink: window.location.pathname}\n                              }}>{item.owner}</Link>\n                        </td>\n                        <td>{item.total}</td>\n                        <td>{item.processed}</td>\n                        <td>{item.converted}</td>\n                        <td>{item.rejected}</td>\n                        <td>{item.price}</td>\n                    </tr>\n                  )) : <tr><td colSpan=\"7\">Table is empty. Add your investors</td></tr>}\n                </tbody>                     \n              </Table>\n            </div>              \n          );\n        }\n    }\n    render () {\n      const { loading } = this.props\n      return(\n          <div>\n            { loading ? <LoadScreen /> : this.renderPayments() }\n        </div>               \n      )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      lead: state.lead,\n      loading: state.lead.loading\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      fetchPaymentsLead: () => {\n          dispatch(lead.fetchPaymentsLead());\n      },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Payments);","export const paymentsUtil = (leads) => {\n\n  // initialize newstate for reducer (to add calculated parameter lead.price)\n  let newstate = leads\n  // calculating next payment\n  newstate.forEach(item=>{\n    // get true_investors (without candidate status)\n    let true_investors = item.converted + item.processed + item.rejected\n    // get count of payed investors\n    let count_payed = item.payed\n    let price_all = 0;\n    let price_payed = 0;\n\n    // Calculating price\n    for(let key in item.prices){\n      let value = item.prices[key]\n      // Calculating price for investors without Candidate status\n      if (true_investors >=10){\n          if (true_investors>=key) {\n              price_all += 10*value\n          } else {\n              if (Math.ceil(true_investors/10) === key/10) {\n                  price_all += (true_investors+10-key)*value \n              }\n          }\n      }\n      // Get payed price\n      if (count_payed && true_investors >=10){\n          if (count_payed >= key) {\n              price_payed += 10*value\n          } else {\n              if (Math.ceil(count_payed/10) === key/10) {\n                  price_payed += (count_payed+10-key)*value \n              }\n          }\n      }\n    }\n    // output price without payed prices\n    item.price =price_all-price_payed;              \n  });\n  return newstate\n}","export const fetchPaymentsLead = () => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        const endpoint = `/api/payments/` \n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        \n        return fetch(endpoint, {headers, })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                // } else if (res.status === 404) {\n                //     dispatch({type: \"MESSAGE_NOT_FOUND\", data: res.data});\n                //     throw res.data;\n                } else {\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'FETCH_PAYMENTS_LEAD', leads: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                } else if (res.status === 404) {\n                    dispatch({type: \"ERROR_NOT_FOUND\", leads: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport RequireAuth from \"./auth/RequireAuth\";\nimport Landing from \"./Landing\";\nimport Login from \"./auth/Login\";\nimport Logout from \"./auth/Logout\";\nimport Signup from \"./auth/Signup\";\nimport SignupDone from \"./auth/SignupDone\";\nimport AccountActivation from \"./auth/AccountActivation\";\nimport UserProfile from \"./auth/Templates/UserProfile\";\nimport UserProfileDetail from \"./auth/Templates/UserProfileDetail\";\nimport UserProfileEdit from \"./auth/UserProfileEdit\";\nimport PasswordChange from \"./auth/PasswordChange\";\nimport PasswordReset from \"./auth/PasswordReset\";\nimport PasswordResetDone from \"./auth/PasswordResetDone\";\nimport PasswordResetConfirm from \"./auth/PasswordResetConfirm\";\nimport {ErrorPage} from \"./general/Organisms/ErrorPage/ErrorPage\";\n\nimport ReactifyComp from '../routingComps/ReactifyComp'\nimport PostDetail from '../reactify/PostDetail';\nimport PostCreate from '../reactify/PostCreate'\nimport Notes from './notes/Templates/Notes'\nimport NoteDetail from './notes/Templates/NoteDetail'\nimport NoteNew from './notes/Templates/NoteNew'\nimport Payments from './notes/Templates/Payments'\n\nconst MainContent = () => (\n    <div className=\"container\">\n        <Switch>\n            <Route exact path=\"/\" component={props => <Landing {...props} />} />\n            <Route path=\"/reload\" component={null} key=\"reload\" />\n            <Route path=\"/login\" component={props => <Login {...props} />} />\n            <Route path=\"/logout\" component={props => <Logout {...props} />}/>\n            <Route path=\"/signup\" component={props => <Signup {...props} />}/>\n            <Route path=\"/activation/confirm-email/:key\" component={props => <AccountActivation {...props} />}/>\n            <Route path=\"/signup_done\" component={props => <SignupDone {...props} />}/>\n            <Route path=\"/reset_password\" component={props => <PasswordReset {...props} />}/>\n            <Route path=\"/reset_password_done\" component={props => <PasswordResetDone {...props} />}/>\n            <Route path=\"/pass/reset/:uid/:token/\" component={props => <PasswordResetConfirm {...props} />}/>\n            <Route exact path=\"/profile\" component={RequireAuth(UserProfile)}/>\n            <Route path='/profile/:id' component={RequireAuth(UserProfileDetail)}/>\n            <Route path=\"/profile_edit\" component={RequireAuth(UserProfileEdit)}/>\n            <Route path=\"/change_password\" component={RequireAuth(PasswordChange)}/>\n            <Route path='/react/posts/create' component={RequireAuth(PostCreate)}/>\n            <Route path='/react/posts/:slug' component={RequireAuth(PostDetail)}/>\n            <Route path='/react/posts' component={RequireAuth(ReactifyComp)} />\n            <Route exact path='/investors' component={RequireAuth(Notes)} />\n            <Route path='/investors/add' component={RequireAuth(NoteNew)}/>\n            <Route path='/investors/:id' component={RequireAuth(NoteDetail)}/>\n            <Route exact path='/payments' component={RequireAuth(Payments)} />\n\n            <Route component={props => <ErrorPage {...props} />}/>\n        </Switch>\n    </div>\n);\n\nexport default MainContent;\n","import React, {Component} from \"react\";\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css'; \n\nimport Header from \"./Header\";\nimport MainContent from \"./MainContent\";\n\nexport default class App extends Component {\n    render() {\n        return (\n            <>                \n              <Header />\n              <div className=\"container\">\n                  <ToastContainer \n                    hideProgressBar={true} \n                    position=\"bottom-right\"\n                    autoClose={3000}\n                    removeCloseButton={true}\n                  />\n              </div>\n              <MainContent />              \n            </>\n        );\n    }\n}","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"bootstrap/dist/css/bootstrap.css\";\n\nimport \"./styles/style.scss\"\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import { Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport store from \"./store\";\n// import history from \"./utils/historyUtils\";\nimport { authLogin } from \"./actions/authActions\";\nimport App from \"./components/App\";\nimport registerServiceWorker from './registerServiceWorker';\n\n// import { syncHistoryWithStore } from 'react-router-redux'\n\n\n// const browserhistory = syncHistoryWithStore(history, store)\n\nregisterServiceWorker();\n\nconst token = localStorage.getItem(\"token\");\n\nif (token) {\n    store.dispatch(authLogin(token));\n}\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <App />\n        </Router>\n    </Provider>\n    , document.getElementById(\"root\"));\n"],"sourceRoot":""}