{"version":3,"sources":["../config/polyfills.js","reducers/notesReducer.js","constants/actionTypes.js","reducers/index.js","reducers/authReducer.js","reducers/noteDetailReducer.js","reducers/paymentsReducer.js","reducers/userDetailReducer.js","store/index.js","constants/urls.js","utils/authUtils.js","actions/authActions.js","components/general/Organisms/LoadScreen/LoadScreen.js","utils/renderUtils.js","components/general/Atoms/Links/Links.js","components/Header.js","utils/formValidators.js","components/auth/RequireAuth.js","components/general/Atoms/BackgroundContainer/BackgroundContainer.js","components/Landing.js","components/auth/Login.js","components/auth/Logout.js","components/auth/Signup.js","components/auth/SignupDone.js","components/auth/AccountActivation.js","components/general/Atoms/Buttons/Buttons.js","components/auth/Molecules/Tables/UserDetailTable.js","components/auth/Templates/UserProfile.js","components/general/Organisms/ErrorPage/ErrorPage.js","components/auth/Templates/UserProfileDetail.js","actions/userDetailActions.js","components/auth/Atoms/ImageDrop/ImageDrop.js","components/auth/UserProfileEdit.js","components/auth/PasswordChange.js","components/auth/PasswordReset.js","components/auth/PasswordResetDone.js","components/auth/PasswordResetConfirm.js","reactify/PostInline.js","reactify/Posts.js","routingComps/ReactifyComp.js","reactify/PostForm.js","reactify/PostDetail.js","reactify/PostCreate.js","actions/notesActions.js","components/notes/Organisms/Modal/Modal.js","components/notes/Atoms/AddInputs/AddInputs.js","components/notes/Atoms/Checkboxes/CheckboxIsCorp.js","components/notes/Atoms/Checkboxes/CheckboxIsPayed.js","components/notes/Atoms/Dropdown/Dropdown.js","components/notes/Molecules/Forms/InputFormNoteQuickAdd.js","components/notes/Molecules/Tables/OrderingHeaderTable/OrderingHeaderTable.js","components/notes/Molecules/Tables/OrderingBodyTable/OrderingBodyTable.js","utils/helpers.js","components/notes/Templates/Notes/Notes.js","components/notes/Atoms/DatePick/DatePickLastCall.js","components/notes/Atoms/FileDrop/FileDrop.js","components/notes/Molecules/Forms/InputFormNoteDetail.js","components/notes/Molecules/Tables/DetailPreviewTable/DetailPreviewTable.js","components/notes/Templates/NoteDetail/NoteDetail.js","actions/noteDetailActions.js","components/notes/Molecules/Forms/InputFormNoteAdd.js","components/notes/Templates/NoteNew/NoteNew.js","components/notes/Templates/Payments/Payments.js","utils/paymentsUtils.js","actions/paymentsActions.js","components/MainContent.js","components/App.js","registerServiceWorker.js","index.js"],"names":["Promise","__webpack_require__","enable","window","Object","assign","initialState","noteitems","loading","AuthTypes","LOGIN","LOGOUT","CHANGE_PASSWORD","USER_PROFILE","rootReducer","combineReducers","form","formReducer","auth","state","arguments","length","undefined","action","type","objectSpread","authenticated","token","payload","user","notes","noteList","map","a","reduce","b","concat","toConsumableArray","slice","filter","index","self","findIndex","t","created_at","id","fetching","unshift","note","selectById","indexEdit","p","noteToUpdate","text","phone","status","is_corporate","is_payed","email","linkedin_profile","website","correspondence","splice","deleteById","indexDel","nextafterdelete","next","deleted","detail","updated","hasError","errors","page","lead","leads","loaded","error","userdetail","store","logger","createLogger","middleware","applyMiddleware","thunk","compose","createStoreWithMiddleware","createStore","configureStore","ROOT_URL","HOMEPAGE_URL","require","homepage","AuthUrls","SIGNUP","RESET_PASSWORD","RESET_PASSWORD_CONFIRM","USER_ACTIVATION","getUserToken","authLogin","getUserProfile","dispatch","getState","axios","get","headers","authorization","then","response","data","catch","console","log","processedError","processServerError","SubmissionError","keys","newDict","key","push","_error","LoadScreen","react_default","createElement","className","LoadObject","props","objectclass","renderField","_ref","input","label","_ref$meta","meta","touched","renderTextAreaField","_ref2","_ref2$meta","renderError","errorMessages","JSON","stringify","toast","NavigationLink","_Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","value","_this$props","urltext","customclass","url","toLowerCase","NavItem_default","Link","to","pathname","fromDashboard","Component","NavigationUserLink","_Component2","_this$props2","avatar","src","alt","username","renderUser","LoadScreen_LoadObject","HomeButton","role","index_es","icon","faHome","color","BrandButton","Header","_this","call","toggleNavbar","setState","collapsed","Fragment","Nav","navbar","Links_NavigationLink","Links_NavigationUserLink","Navbar","dark","expand","Links_BrandButton","NavbarToggler","onClick","Collapse","isOpen","renderLinks","max","min","connect","RequireAuth","ComposedComponent","Authentication","checkAuthentication","nextProps","history","is_staff","is_superuser","BackgroundContainer","header","Landing","BackgroundContainer_BackgroundContainer","required","maxLength15","minLength5","letters","test","isurl","minValue","Login","showHide","e","preventDefault","handleSubmit","invalid","pristine","submitting","onSubmit","Field","name","component","validate","Button","disabled","reduxForm","formValues","loginUrl","post","localStorage","setItem","onChange","values","clearSubmitErrors","Logout","logoutUser","removeItem","Signup","password1","password2","signupUrl","SignupDone","AccountActivation","match","params","activateUserUrl","info","ReturnButton","Button_default","outline","context","router","goBack","faArrowLeft","contextTypes","PropTypes","object","SaveButton","faSave","ClearButton","onClear","EditButton","onEdit","faEdit","UserDetailTable","Table","first_name","last_name","Buttons_ReturnButton","Links_HomeButton","colSpan","style","backgroundImage","href","about","UserProfile","UserDetailTable_UserDetailTable","LoadScreen_LoadScreen","ErrorPage","rotation","faSpaceShuttle","UserProfileDetail","prevProps","fetchUserDetail","_this$state","ErrorPage_ErrorPage","renderNote","Content-Type","endpoint","fetch","res","json","ImageDrop","attached","handleDrop","files","_this2","_this$props$meta","classNameLabel","cbFunction","drop_class","drop_text","dist_es","onDrop","f","maxSize","getRootProps","getInputProps","defaultProps","Atoms_ImageDrop_ImageDrop","dropzone_options","multiple","accept","initialValues","formData","FormData","String","forEach","append","patch","PasswordChange","changePasswordUrl","new_password1","new_password2","PasswordReset","resetPasswordUrl","PasswordResetDone","PasswordResetConfirm","_props$match$params","uid","resetPasswordConfirmUrl","PostInline","elClass","showContent","slug","title","content","Posts","togglePostListClass","bind","assertThisInitialized","handleNewPost","loadMorePosts","posts","postsListClass","previous","author","count","loadPosts","nextEndpoint","thisComp","lookupOptions","method","csrfToken","cookie","load","responseData","results","postItemData","currentPosts","event","postItem","reactify_PostInline","ReacTifyComp","reactify_Posts","PostForm","handleInputChange","handleDraftChange","clearForm","postTitleRef","React","createRef","postContentRef","deletePost","draft","publish","moment","Date","format","X-CSRFToken","Authorization","body","credentials","newPostItemUpdated","alert","newPostItemCreated","defaultState","postCreateForm","reset","current","updatePost","createPost","target","defineProperty","cancelClass","deleteClass","ref","el","htmlFor","placeholder","checked","PostDetail","handlePostItemUpdated","doneLoading","loadPost","owner","reactify_PostForm","postItemUpdated","PostCreate","fetchNotes","ModalDelete","modaldelete","toggle","Modal","ModalHeader","ModalBody","ModalFooter","FormGroup","row","onSelectForDelete","faTrash","InputName","Label","Input","onInputChange","FormText","InputPhone","InputEmail","_Component3","_this$props3","InputLinkedin","_Component4","_this$props4","InputWebsite","_Component5","_this$props5","InputCorrespondence","_Component6","_this$props6","CheckboxIsCorp","faMale","faUsers","handleCheckboxIsCorpBtnClick","active","CheckboxIsPayed","faHandHoldingUsd","faCheckCircle","handleCheckboxIsPayBtnClick","CustomDropdown","dropdownOpen","Dropdown","onToggle","DropdownToggle","caret","DropdownMenu","DropdownItem","onChangeValue","InputFormNoteQuickAdd","updateNoteId","AddInputs_InputName","AddInputs_InputPhone","AddInputs_InputEmail","AddInputs_InputLinkedin","AddInputs_InputWebsite","AddInputs_InputCorrespondence","CheckboxIsCorp_CheckboxIsCorp","Dropdown_CustomDropdown","CheckboxIsPayed_CheckboxIsPayed","OrderingHeaderTable","_getPrototypeOf2","_len","args","Array","_key","order","is_ordering_name","searchtext","onBtnClickOrderingName","ordername","newordername","charAt","indexOf","includes","onOrderNotes","faLongArrowAltDown","faExchangeAlt","faTimes","OrderingBodyTable","scope","prevLink","location","owner_username","onSelectForEdit","onToggleModalDelete","handleValidation","fields","trim","lastAtPos","lastIndexOf","lastDotPos","Notes","resetForm","addNew","modal","resetSearch","searching","searchNotes","selectForEdit","updateNoteIndex","selectForDelete","deleteNote","prevState","toggleModal","toggleModalDelete","handleChange","_this$setState","changeValue","currentTarget","textContent","onCheckboxIsCorpBtnClick","onCheckboxIsPayBtnClick","dataFromCallback","mapped","item","join","orderNotes","submitNote","validation_errors","addNote","updateNote","isArray","nextForDelete","lastChar","parseInt","Form","InputFormNoteQuickAdd_InputFormNoteQuickAdd","_this$state2","faPlusSquare","renderModal","Modal_ModalDelete","CustomInput","inline","faSearch","striped","OrderingHeaderTable_OrderingHeaderTable","OrderingBodyTable_OrderingBodyTable","renderNotes","noteId","DatePickLastCall","handleChangeDate","date","defaultFormat","toDate","add_call","last_call","is_valid_date","isValid","handleResetCallClick","react_datepicker_es","selected","showTimeSelect","timeFormat","timeIntervals","dateFormat","timeCaption","handleAddCallClick","FileDrop","acceptedFiles","rejectedFiles","onSelectDrop","documents","split","faFileUpload","InputFormNoteDetail","DatePickLastCall_DatePickLastCall","Atoms_FileDrop_FileDrop","DetailPreviewTable","Buttons_EditButton","NoteDetail","changeDate","getData","onAddCallClick","onResetCallClick","updateDetailNote","fetchDetailNote","detailed","InputFormNoteDetail_InputFormNoteDetail","Buttons_SaveButton","Container","fluid","Row","DetailPreviewTable_DetailPreviewTable","Accept","toISOString","InputFormNoteAdd","NoteNew","addDetailNote","redirectToNewPage","Redirect","Form_default","InputFormNoteAdd_InputFormNoteAdd","Buttons_ClearButton","Payments","fetchPaymentsLead","newstate","true_investors","converted","processed","rejected","count_payed","payed","price_all","price_payed","prices","Math","ceil","price","paymentsUtil","total","renderPayments","MainContent","Switch","Route","exact","path","Landing_Landing","auth_Login","auth_Logout","auth_Signup","auth_AccountActivation","SignupDone_SignupDone","auth_PasswordReset","PasswordResetDone_PasswordResetDone","auth_PasswordResetConfirm","UserProfileEdit","ReactifyComp","App","components_Header","lib","hideProgressBar","position","autoClose","removeCloseButton","components_MainContent","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","URL","process","origin","addEventListener","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","getItem","ReactDOM","render","es","BrowserRouter","App_App","document","getElementById"],"mappings":"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","file":"js/main.6e8b00b9.chunk.js","sourcesContent":["'use strict';\n\nif (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where React gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes React's erratic future behavior.\n  require('promise/lib/rejection-tracking').enable();\n\n  window.Promise = require('promise/lib/es6-extensions.js');\n} // fetch() polyfill for making API calls.\n\n\nrequire('whatwg-fetch'); // Object.assign() is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\n\n\nObject.assign = require('object-assign'); // In tests, polyfill requestAnimationFrame since jsdom doesn't provide it yet.\n// We don't polyfill it in the browser--this is user's responsibility.\n\nif (process.env.NODE_ENV === 'test') {\n  require('raf').polyfill(global);\n}","const initialState = [{noteitems: [], \n                       loading: true\n                    }]\n\nexport default function notes(state=initialState, action) {\n    //собрать все массивы с ключами noteitems и объединить в один массив\n    let noteList = state.map(a => a.noteitems).reduce((a, b) => [...a, ...b], []).slice();\n\n    switch (action.type) {\n\n        case 'FETCH_NOTES':\n            //удаление дубликатов\n            noteList = noteList.filter((noteList, index, self) => self.findIndex(t => t.created_at === noteList.created_at && t.id === noteList.id) === index)\n            \n            return [                    \n                    {...state[state.length-1],\n                    noteitems: noteList,\n                    loading: false,\n                    fetching: false,\n                    // deleted: false\n                    // ...action.notes\n                    },\n                ];\n        case 'SEARCH_NOTES':\n        \n            return [                    \n\n                    {...state,\n                    ...action.notes,\n                    loading: false,},\n                ];\n\n        case 'ORDER_NOTES':\n       \n            return [                    \n\n                    {...state,\n                    ...action.notes,\n                    loading: false,},\n                ];\n\n\n        case 'ADD_NOTE':\n            // Добавляем заметку\n            noteList.unshift(action.note);\n            // Удаляем нижнюю\n            // if (noteList.length > 0) {\n            //     noteList.pop();\n            // }\n\n            return [\n                        //берем последний стейт и добавляем к нему общий массив\n                        {...state[state.length-1],\n                            noteitems: noteList,\n                            loading: false,},\n\n                    ];\n\n        case 'UPDATE_NOTE':\n\n            //Поиск в общем массиве элемента по id и index (2мерный массив)\n            let selectById = state[action.index].noteitems[action.id].id\n            let indexEdit = noteList.findIndex(p => p.id === selectById) \n\n            let noteToUpdate = noteList[indexEdit]\n            noteToUpdate.text = action.note.text;\n            noteToUpdate.phone = action.note.phone;\n            noteToUpdate.status = action.note.status;\n            noteToUpdate.is_corporate = action.note.is_corporate;\n            noteToUpdate.is_payed = action.note.is_payed;\n            noteToUpdate.email = action.note.email;\n            noteToUpdate.linkedin_profile = action.note.linkedin_profile;\n            noteToUpdate.website = action.note.website;\n            noteToUpdate.correspondence = action.note.correspondence;\n            noteList.splice(indexEdit, 1, noteToUpdate);\n            return [\n                    {...state[state.length-1],\n                        noteitems: noteList,\n                        loading: false,},\n                    ];\n\n        case 'DELETE_NOTE':\n            //Поиск в общем массиве элемента по id и index (2мерный массив)\n            let deleteById = state[action.id].noteitems[action.index].id\n            let indexDel = noteList.findIndex(p => p.id === deleteById)                      \n            noteList.splice(indexDel, 1);\n            return [\n                        {...state[state.length-1],\n                            noteitems: noteList,\n                            loading: false,\n                            nextafterdelete: state[0].next,\n                            deleted: true\n                        }\n                    ];\n\n        default:\n            \n    }\n    return state;\n}\n","export const AuthTypes = {\n    LOGIN: \"LOGIN\",\n    LOGOUT: \"LOGOUT\",\n    CHANGE_PASSWORD: \"CHANGE_PASSWORD\",\n    USER_PROFILE: \"USER_PROFILE\",\n    // WITH_ERROR: \"WITH_ERROR\"\n};","import {combineReducers} from \"redux\";\nimport { reducer as formReducer } from \"redux-form\";\n\nimport notesReducer from \"./notesReducer\";\nimport noteDetailReducer from \"./noteDetailReducer\";\nimport userDetailReducer from \"./userDetailReducer\";\nimport authReducer from \"./authReducer\";\nimport paymentsReducer from \"./paymentsReducer\";\n// import { routerReducer } from 'react-router-redux'\n\nconst rootReducer = combineReducers({\n    form: formReducer,\n    auth: authReducer,\n    notes: notesReducer,\n    detail: noteDetailReducer,\n    lead: paymentsReducer,\n    userdetail: userDetailReducer,\n    // routing: routerReducer\n});\n\nexport default rootReducer;\n\n\n","import { AuthTypes } from \"../constants/actionTypes\";\n\nexport default function(state = {loading: true}, action) {\n    switch(action.type) {\n        case AuthTypes.LOGIN:\n            return { ...state, authenticated: true, token: action.payload};\n        case AuthTypes.LOGOUT:\n            return { ...state, authenticated: false, token: null};\n        case AuthTypes.USER_PROFILE:\n            return { ...state, user: action.payload, loading: false};\n        // case AuthTypes.WITH_ERROR:\n        //     return { ...state, error: action.payload};\n        default:\n        \t// will NOT execute because of the line preceding the switch.\n    }\n    return state;\n}","export default function noteDetailReducer(state = {loading: true, updated: false, hasError: false, errors: {}}, action) {\n    switch(action.type) {\n\n        case 'FETCH_DETAIL_NOTE':\n            return { ...state, ...action.detail, loading: false, hasError: false, errors: {}};\n        case 'UPDATE_DETAIL_NOTE':\n            return { ...state, ...action.detail, loading: false, updated: true, hasError: false, errors: {}};\n        case 'ADD_DETAIL_NOTE':\n            return { ...state, ...action.detail, loading: false, hasError: false, errors: {}};\n\n        case 'INVESTOR_NOT_FOUND':\n            return {...state, \n                hasError: true,\n                errors: {page: \"Investor not found\"},\n                loading: false,\n            };\n        case 'AUTHENTICATION_ERROR':\n            return {...state, \n                hasError: true,\n                errors: {page: \"Authentication Error\"},\n                loading: false,\n            };\n        default:\n          // will NOT execute because of the line preceding the switch.\n    }\n    return state;\n}","export default function paymentsReducer(state = {leads: \"\", loading: true, loaded: false}, action) {\n    switch(action.type) {\n        case 'FETCH_PAYMENTS_LEAD':\n            return { ...state, leads: [...action.leads], loading: false, loaded: true }\n        case 'LEAD_NOT_FOUND':\n            return {...state, loading: false, error: \"Not found\"};\n        default:\n          // will NOT execute because of the line preceding the switch.\n    }\n    return state;\n}","export default function userDetailReducer(state = {loading: true}, action) {\n    switch(action.type) {\n\n        case 'FETCH_USER_DETAIL':\n            return { ...state, \n                ...action.userdetail, \n                hasError: false,\n                errors: {},\n                loading: false,\n            };\n        // case 'UPDATE_DETAIL_NOTE':\n        //     return { ...state, ...action.detail, loading: false, updated: true};\n        // case 'ADD_DETAIL_NOTE':\n        //     return { ...state, ...action.detail, loading: false};\n\n        case 'USER_NOT_FOUND':\n            return {...state, \n                hasError: true,\n                errors: {page: \"User not found\"},\n                loading: false,\n            };\n\n        default:\n          // will NOT execute because of the line preceding the switch.\n    }\n    return state;\n}","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from '../reducers';\n\nfunction configureStore(initialState) {\n    let createStoreWithMiddleware;\n\n    const logger = createLogger();\n    const middleware = applyMiddleware(thunk, logger);\n\n    createStoreWithMiddleware = compose(\n        middleware\n    );\n\n    return createStoreWithMiddleware(createStore)(rootReducer, initialState);\n}\n\nlet store = configureStore();\n\nexport default store;","export let ROOT_URL = \"http://localhost:8000/\";\n\n// FOR PRODUCTION URLS\nconst HOMEPAGE_URL = require('../../package.json').homepage;\n\nif (process.env.NODE_ENV === \"production\") {\n\tROOT_URL = HOMEPAGE_URL\n}\n\nexport const AuthUrls = {\n    LOGIN: `${ROOT_URL}rest-auth/login/`,\n    SIGNUP: `${ROOT_URL}rest-auth/registration/`,\n    CHANGE_PASSWORD: `${ROOT_URL}rest-auth/password/change/`,\n    RESET_PASSWORD: `${ROOT_URL}rest-auth/password/reset/`,\n    RESET_PASSWORD_CONFIRM: `${ROOT_URL}rest-auth/password/reset/confirm/`,\n    USER_ACTIVATION: `${ROOT_URL}rest-auth/registration/verify-email/`,\n    USER_PROFILE: `${ROOT_URL}rest-auth/user/`\n};","export function getUserToken(state) {\n    return state.auth.token;\n}","import axios from \"axios\";\nimport { SubmissionError } from 'redux-form';\n// import { actions as notifActions } from 'redux-notifications';\nimport { AuthTypes } from \"../constants/actionTypes\";\nimport { AuthUrls } from \"../constants/urls\";\nimport store from \"../store\";\nimport { getUserToken } from \"../utils/authUtils\";\nimport { toast } from 'react-toastify';\n\n// const { notifSend } = notifActions;\nexport function authLogin(token) {\n    return {\n        type: AuthTypes.LOGIN,\n        payload: token,\n    };\n}\n\nexport function loginUser(formValues, dispatch, props) {\n        const loginUrl = AuthUrls.LOGIN;\n\n        return axios.post(loginUrl, formValues).then((response) => {\n            // If request is good...\n            // Update state to indicate user is authenticated\n            const token = response.data.key; \n\n            dispatch(authLogin(token));\n            localStorage.setItem(\"token\", token);\n\n            // redirect to the route '/'\n            props.history.push(\"/investors\");\n            // to getUserProfile in Header\n            dispatch(getUserProfile())\n        }).catch(error => {            \n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n\nexport function logoutUser() {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"csrftoken\");\n    return {\n        type: AuthTypes.LOGOUT\n    };\n}\n\nexport function signupUser(formValues, dispatch, props) {\n    const signupUrl = AuthUrls.SIGNUP;\n\n    return axios.post(signupUrl, formValues)\n        .then((response) => {\n            // If request is good...\n            // you can login if email verification is turned off.\n            // const token = response.data.key;\n            // dispatch(authLogin(token));\n            // localStorage.setItem(\"token\", token);\n\n            // email need to be verified, so don't login and send user to signup_done page.\n            // redirect to signup done page.\n            props.history.push(\"/signup_done\");\n        })\n        .catch((error) => {\n            // If request is bad...\n            // Show an error to the user\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n\nfunction setUserProfile(payload) {\n    return {\n        type: AuthTypes.USER_PROFILE,\n        payload: payload\n    };\n}\n\nexport function getUserProfile() {\n    return function(dispatch) {\n        const token = getUserToken(store.getState());\n\n        if (token) {\n            axios.get(AuthUrls.USER_PROFILE, {\n                headers: {\n                    authorization: 'Token ' + token\n                }\n            }).then(response => {\n                dispatch(setUserProfile(response.data))\n            }).catch((error) => {\n                // If request is bad...\n                // Show an error to the user\n                console.log(error);\n                // TODO: send notification and redirect\n                const processedError = processServerError(error.response.data);\n                throw new SubmissionError(processedError);\n            });\n        }\n    };\n}\n\nexport function changePassword(formValues, dispatch, props) {\n    const changePasswordUrl = AuthUrls.CHANGE_PASSWORD;\n    const token = getUserToken(store.getState());\n\n    if (token) {\n        return axios.post(changePasswordUrl, formValues, {\n            headers: {\n                authorization: 'Token ' + token\n            }\n        })\n            .then((response) => {\n                toast.info('Password has been changed successfully')\n                // dispatch(notifSend({\n                //     message: \"Password has been changed successfully\",\n                //     kind: \"info\",\n                //     dismissAfter: 5000\n                // }));\n                // redirect to the route '/profile'\n                props.history.push(\"/profile\");\n            })\n            .catch((error) => {\n                // If request is bad...\n                // Show an error to the user\n                const processedError = processServerError(error.response.data);\n                throw new SubmissionError(processedError);\n            });\n    }\n}\n\nexport function resetPassword(formValues, dispatch, props) {\n    const resetPasswordUrl = AuthUrls.RESET_PASSWORD;\n\n    return axios.post(resetPasswordUrl, formValues)\n        .then(response => {\n            // redirect to reset done page\n            props.history.push(\"/reset_password_done\");\n        }).catch((error) => {\n            // If request is bad...\n            // Show an error to the user\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n\nexport function confirmPasswordChange(formValues, dispatch, props) {\n    const { uid, token } = props.match.params;\n    const resetPasswordConfirmUrl = AuthUrls.RESET_PASSWORD_CONFIRM;\n    const data = Object.assign(formValues, { uid, token });\n\n    return axios.post(resetPasswordConfirmUrl, data)\n        .then(response => {\n            toast.info('Password has been reset successfully, please log in')\n            props.history.push(\"/login\");\n        }).catch((error) => {\n            // If request is bad...\n            // Show an error to the user\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n\nexport function activateUserAccount(formValues, dispatch, props) {\n    const { key } = props.match.params;\n    const activateUserUrl = AuthUrls.USER_ACTIVATION;\n    const data = Object.assign(formValues, { key });\n\n    return axios.post(activateUserUrl, data)\n        .then(response => {\n            toast.info('Your account has been activated successfully, please log in')\n            props.history.push(\"/login\");\n        }).catch((error) => {\n            // If request is bad...\n            // Show an error to the user\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n\nexport function updateUserProfile(formValues, dispatch, props) {\n    const token = getUserToken(store.getState());\n\n    let object = formValues\n\n    // Fix problem with update profile without upload avatar\n    const formData = new FormData(); \n    if (typeof formValues.avatar === 'string' || \n        formValues.avatar instanceof String ||\n        formValues.avatar === null) {\n        Object.keys(object).forEach(key => \n            (key !== \"avatar\") && formData.append(key, object[key])      \n        );\n    } else {\n        Object.keys(object).forEach(key => \n            formData.append(key, object[key])      \n        );\n    }\n\n    // adding \"Content-Type\": \"multipart/form-data\", for images\n    return axios.patch(AuthUrls.USER_PROFILE, formData, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\",\n                authorization: 'Token ' + token\n            }\n        })\n        .then(response => {\n            toast.info('Your profile has been updated successfully')\n            props.history.push(\"/profile\");\n        }).catch((error) => {\n            // If request is bad...\n            // Show an error to the user\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n// util functions\nfunction processServerError(error) {\n\n    return  Object.keys(error).reduce(function(newDict, key) {\n        if (key === \"non_field_errors\") {\n            newDict[\"_error\"].push(error[key]);\n        } else if (key === \"token\") {\n            // token sent with request is invalid\n            newDict[\"_error\"].push(\"The link is not valid any more.\");\n        } else {\n            newDict[key] = error[key];\n        }\n        return newDict\n    }, {\"_error\": []});\n}","import React from \"react\";\nimport './styles.scss'\n\nexport const LoadScreen = () => (\n  <div className=\"loadscreen\">\n    <div className=\"load-9\">\n      <div className=\"spinner\">\n        <div className=\"bubble-1\"></div>\n        <div className=\"bubble-2\"></div>\n      </div>\n    </div>\n  </div>\n)\n\nexport const LoadObject = (props) => (\n  <div className={`${props.objectclass}`}>\n    <div className=\"load-3\">\n    <div className=\"line\"></div>\n    <div className=\"line\"></div>\n    <div className=\"line\"></div>\n    </div>\n  </div>\n)\n","import React from \"react\";\nimport { toast } from 'react-toastify';\n\nexport const renderUser = (user) => {\n  if (user) {\n      return (\n        <div className=\"user\">\n            {user.avatar ? <img src={`${user.avatar}`} className=\"user-avatar\" alt=\"Avatar\" /> : \"\"}            \n            <span className=\"user-username\">{user.username}</span>\n        </div>\n      );\n  }\n};\n\nexport const renderField = ({ input, label, type, meta: { touched, error } }) => (\n    <div>\n        <label>{label}</label>\n        <div>\n            <input className=\"form-control\" {...input} type={type}/>\n        </div>\n        {touched && ((error && <div className=\"alert alert-danger p-1\"><small>{error}</small></div>))}\n    </div>\n);\n\nexport const renderTextAreaField = ({ input, label, type, meta: { touched, error } }) => (\n    <div>\n        <label>{label}</label>\n        <div>\n            <textarea className=\"form-control\" {...input} type={type} />\n        </div>\n        {touched && ((error && <div className=\"alert alert-danger p-1\"><small>{error}</small></div>))}\n    </div>\n);\nexport const renderImageField = ({ input, label, type, meta: { touched, error } }) => (\n    <div>\n        <label>{label}</label>\n        <div>\n            <input className=\"form-control\" {...input} type={type}/>\n        </div>\n        {touched && ((error && <div className=\"alert alert-danger p-1\"><small>{error}</small></div>))}\n    </div>\n);\nexport const renderError = (errorMessages) => {\n    if ( errorMessages ) {\n        if (JSON.stringify(errorMessages)!==\"[]\") {\n            toast.error(errorMessages[0][0])          \n        } else {\n            toast.error(\"Error...\")\n        }  \n    } \n};\n","import React, { Component } from 'react'\nimport { Link } from \"react-router-dom\";\nimport NavItem from 'reactstrap/lib/NavItem';\nimport { LoadObject } from '../../Organisms/LoadScreen/LoadScreen'\nimport { renderUser } from \"../../../../utils/renderUtils\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\n\nexport class NavigationLink extends Component {\n\n  render() {\n  \tconst { urltext, customclass } = this.props;\n  \tconst url = urltext.toLowerCase()\n    return (               \n    \t\t<NavItem key={`/${url}`}>\n    \t\t\t<Link className={`nav-link ${customclass}`} \n    \t\t\t  to={{\n\t\t\t    \t  pathname: `/${url}`,\n      \t\t\t\t  state: {fromDashboard: false}\n      \t\t\t  }}>\n      \t\t\t  \t{ urltext }\n    \t\t\t</Link>\n    \t\t</NavItem>\n        )    \n  }\n}\n\nexport class NavigationUserLink extends Component {\n\n  render() {\n  \tconst { urltext, customclass, user } = this.props;\n  \tconst url = urltext.toLowerCase()\n\n    return (               \n    \t\t<NavItem key={`/${url}`}>\n    \t\t\t<Link className={`nav-link ${customclass}`} \n    \t\t\t  to={{\n\t\t\t    \t  pathname: `/${url}`,\n      \t\t\t\t  state: {fromDashboard: false}\n      \t\t\t  }}>\n      \t\t\t  \t{user ? renderUser(user) : <LoadObject objectclass=\"loaduser\"/>}\n    \t\t\t</Link>\n    \t\t</NavItem>\n        )    \n  }\n}\n\nexport const HomeButton = () => (\n\t<Link className=\"btn btn-outline-info rounded-0 button-icon\"\n\t\trole=\"button\" \n\t\tto={{\n\t\t  \tpathname: `/investors`,\n\t\t\tstate: {fromDashboard: false}\n\t\t  }}>\n\t\t  \t<FontAwesomeIcon icon={faHome} color=\"info\"/>\n\t</Link>\n);\n\nexport const BrandButton = () => (\n    <Link className=\"navbar-brand\"\n      to={{\n          pathname: `/`,\n          state: {fromDashboard: false}\n      }}>\n        Lead Platform\n    </Link>\n\n);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n// import { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  Nav,\n    } from 'reactstrap';\n\nimport { NavigationLink, NavigationUserLink, BrandButton } from './general/Atoms/Links/Links'\nimport { getUserProfile } from \"../actions/authActions\";\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            collapsed: true\n        };\n    }\n    toggleNavbar = () => {\n        this.setState({\n            collapsed: !this.state.collapsed\n        });\n    }\n\n    static propTypes = {\n        authenticated: PropTypes.bool,\n        getUserProfile: PropTypes.func.isRequired,\n        user: PropTypes.object\n    };\n    componentWillMount() {\n        this.props.getUserProfile();\n    } \n\n    renderLinks() {\n        if (this.props.authenticated) {\n            const { user } = this.props\n            return (\n                <>\n                    <Nav navbar className=\"navbar-links\">\n                        <NavigationLink\n                          urltext=\"Investors\"\n                          customclass=\"nav-links__link\"\n                        />\n                        <NavigationLink\n                          urltext=\"Payments\"\n                          customclass=\"nav-links__link\"\n                        />\n                    </Nav>\n                    <Nav navbar className=\"navbar-profile\">\n                        <NavigationUserLink\n                            urltext=\"profile\"\n                            user={user}\n                            customclass=\"nav-user\"\n                        />\n                        <NavigationLink\n                            urltext=\"Logout\"\n                            customclass=\"nav-logout\"\n                        />\n                    </Nav>  \n                </>              \n            );\n        } else {\n            return (\n                    <Nav className=\"ml-auto\" navbar>\n                        <NavigationLink\n                          urltext=\"Login\"\n                          customclass=\"nav-links__link\"\n                        />\n                       <NavigationLink\n                          urltext=\"SignUp\"\n                          customclass=\"nav-links__link\"\n                        />\n                    </Nav>\n            );\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"content-navbar\">\n                <Navbar color=\"secondary\" dark expand=\"md\">\n                    <BrandButton />\n                    <NavbarToggler onClick={this.toggleNavbar} />\n                      <Collapse isOpen={!this.state.collapsed} navbar>                    \n                            {this.renderLinks()}\n                      </Collapse>\n                </Navbar>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        authenticated: state.auth.authenticated,\n        user: state.auth.user\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getUserProfile: () => {\n            return dispatch(getUserProfile());\n        }\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","export const multipleValidations = (value, validations) => {\n  const checks = validations.map(validation => validation(value))\n  const failedChecks = checks.filter(check => !!check)\n\n  return failedChecks.length === 0 ? undefined : failedChecks.join(\", \")\n}\nexport const required = value => !value || value === \"\" ? 'This field is required.' : undefined\nexport const matchPasswords = (value, allValues, props, name) => {\n  if (allValues['password']) {\n    return value !== allValues['password'] ? \"Passwords Don't Match\" : undefined\n  } else {\n    return undefined\n  }\n}\nexport const maxLength = max => value =>\n  value && value.length > max ? `Must be ${max} characters or less` : undefined\nexport const maxLength15 = maxLength(15)\nexport const minLength = min => value =>\n  value && value.length < min ? `Must be ${min} characters or more` : undefined\nexport const minLength5 = minLength(5)\nexport const letters = value =>\n  value && !/^[a-zA-Z]+$/i.test(value)\n    ? 'Must consists only letters'\n    : undefined\nexport const isurl = value =>\n  value && !/^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w.-]+)+[\\w\\-._~:/?#[\\]@!$&'()*+,;=.]+$/.test(value)\n    ? 'URL is not valid, your URL must be like \"https://example.com/\"'\n    : undefined\nexport const number = value =>\n  value && isNaN(Number(value)) ? 'Must be a number' : undefined\nexport const minValue = min => value =>\n  value && value < min ? `Must be at least ${min}` : undefined\nexport const minValue18 = minValue(18)\nexport const email = value =>\n  value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)\n    ? 'Invalid email address'\n    : undefined\nexport const tooOld = value =>\n  value && value > 65 ? 'You might be too old for this' : undefined\nexport const aol = value =>\n  value && /.+@aol\\.com/.test(value)\n    ? 'Really? You still use AOL for your email?'\n    : undefined\nexport const alphaNumeric = value =>\n  value && /[^a-zA-Z0-9 ]/i.test(value)\n    ? 'Only alphanumeric characters'\n    : undefined\nexport const phoneNumber = value =>\n  value && !/^(0|[1-9][0-9]{9})$/i.test(value)\n    ? 'Invalid phone number, must be 10 digits'\n    : undefined","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n// import {withRouter} from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nexport default function(ComposedComponent) {\n    class Authentication extends Component {\n\n        static propTypes = {\n            history: PropTypes.object\n        };\n\n        componentWillMount() {\n            this.checkAuthentication(this.props);\n\n        }\n\n        componentWillUpdate(nextProps) {\n            this.checkAuthentication(nextProps);\n        }\n\n        checkAuthentication(props) {\n            if (!props.authenticated) {\n                this.props.history.push(\"/login\");\n            }\n        }\n\n        render() {\n            return <ComposedComponent {...this.props} />\n        }\n    }\n\n    function mapStateToProps(state) {\n\n        // provide is_staff to props\n        let is_staff = false;\n        if (state.auth.user && (state.auth.user.is_staff || state.auth.user.is_superuser)) {\n            is_staff = true;\n        }\n        return { authenticated: state.auth.authenticated, \n                is_staff: is_staff, \n            }\n    }\n    // return withRouter(connect(mapStateToProps)(Authentication));\n    return connect(mapStateToProps)(Authentication);\n}\n","import React from 'react'\nimport './styles.scss'\n\nexport const BackgroundContainer = props => (\n\t<div className=\"main-wrapper text-center\">\n\t  <h2 className=\"main-wrapper__text\">{props.header}</h2>\n\t  <img className=\"main-wrapper__image\" src='/static/bundles/building.jpeg' alt=\"logo\" />  \n\t</div>\n);","import React from 'react'\nimport { BackgroundContainer } from './general/Atoms/BackgroundContainer/BackgroundContainer'\n\nexport const Landing = () => (\n    <BackgroundContainer header=\"Lead Platform based on DRF+React+Redux\"/>\n)\n\n","import React, { Component } from \"react\";\n\nimport { reduxForm, Field, clearSubmitErrors, propTypes } from \"redux-form\";\nimport { Link } from \"react-router-dom\";\nimport { Button, } from 'reactstrap';\n\nimport { renderField, renderError} from \"../../utils/renderUtils\";\nimport { loginUser } from \"../../actions/authActions\";\nimport { BackgroundContainer } from '../general/Atoms/BackgroundContainer/BackgroundContainer'\nimport { email, required } from '../../utils/formValidators'\n\n\nclass Login extends Component {\n    static propTypes = {\n        ...propTypes\n    };\n    state = { type: \"password\"}\n\n    showHide = (e) => {\n        e.preventDefault();\n\n        this.setState({\n          type: this.state.type === 'password' ? 'input' : 'password'\n        })  \n    }\n    render() {\n        const { handleSubmit, error, invalid, pristine, submitting } = this.props;\n        const { type } = this.state;\n\n        return (\n            <>\n            <BackgroundContainer header=\"\" />\n            <div className=\"row justify-content-center\">\n\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Please Log In</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"email\" label=\"Email\" component={renderField}\n                               type=\"text\" validate={[email, required]}\n                        />\n                    </fieldset>\n\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"password\" label=\"Password\" component={renderField}\n                               type={type} validate={[required]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        { renderError(error) }\n                        <div className=\"form-button\">\n                            <Link role=\"button\" to=\"/signup\" className=\"btn btn-outline-secondary rounded-0 form-button__part\">SignUp</Link>\n                            <Button action=\"submit\" color=\"secondary\" className=\"rounded-0 form-button__part\" disabled={invalid || pristine || submitting}>Login</Button>\n                        </div>\n                    </fieldset>\n\n                    <Link to=\"/reset_password\" className=\"text-center info-link\">forgot password?</Link>\n                </form>\n            </div>\n            </>\n        )\n    }\n}\n// {passfield ? \n//   <span className=\"password__show\" onClick={this.props.showHide}>{type === 'password' ? 'Show' : 'Hide'}</span>\n// : null    \n// }\nexport default reduxForm({\n    form: \"login\",\n    onSubmit: loginUser,\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('login'));\n    },\n})(Login);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport { BackgroundContainer } from '../general/Atoms/BackgroundContainer/BackgroundContainer'\n\nclass Logout extends Component {\n\n    static propTypes = {\n        logoutUser: PropTypes.func.isRequired\n    };\n\n    componentWillMount() {\n        this.props.logoutUser();\n    }\n\n    render() {\n        return (\n            <BackgroundContainer header=\"Welcome to Lead Platform. Please Login or Signup...\" />\n        );\n    }\n}\n\nexport default connect(null, { logoutUser })(Logout);","import React, { Component } from \"react\";\n// import PropTypes from \"prop-types\";\nimport { reduxForm, Field, propTypes, clearSubmitErrors } from \"redux-form\";\n// import { required } from \"redux-form-validators\"\nimport { renderField, renderError } from \"../../utils/renderUtils\";\nimport { signupUser } from \"../../actions/authActions\";\nimport { Link } from \"react-router-dom\";\nimport { Button, } from 'reactstrap';\nimport { BackgroundContainer } from '../general/Atoms/BackgroundContainer/BackgroundContainer'\nimport { email, maxLength15, minLength5, required } from '../../utils/formValidators'\n\nclass Signup extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n\n    render() {\n        const { handleSubmit, error, invalid, pristine, submitting } = this.props;\n\n        return (\n            <>\n            <BackgroundContainer header=\"\" />\n            <div className=\"row justify-content-center\">\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Sign Up</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"email\" label=\"Email\" component={renderField}\n                               type=\"text\" validate={[email, required]} />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"username\" label=\"Username\" component={renderField}\n                               type=\"text\" validate={[maxLength15, minLength5, required]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"password1\" label=\"Password\" component={renderField}\n                               type=\"password\" validate={[required,]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"password2\" label=\"Confirm Password\" component={renderField}\n                               type=\"password\" validate={[required,]}\n                        />\n                    </fieldset>\n\n                    { renderError(error) }\n\n                    <fieldset className=\"form-group\">\n                        <div className=\"form-button\">\n                            <Link role=\"button\" to=\"/login\" className=\"btn btn-outline-secondary rounded-0 form-button__part\">Login</Link>\n                            <Button action=\"submit\" color=\"secondary\" className=\"rounded-0 form-button__part\" disabled={invalid || pristine || submitting}>Sign Up</Button>\n                        </div>\n                    </fieldset>\n                </form>\n            </div>\n            </>\n        );\n    }\n}\n\n// Sync field level validation for password match\nconst validateForm = values => {\n    const errors = {};\n    const { password1, password2 } = values;\n    \n    if (password1 !== password2) {\n        errors.password2 = \"Password does not match.\"\n    }\n    return errors;\n};\n\nexport default reduxForm({\n    form: \"signup\",\n    validate: validateForm,\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('signup'));\n    },\n    onSubmit: signupUser\n})(Signup);\n","import React, { Component } from \"react\";\nimport { BackgroundContainer } from '../general/Atoms/BackgroundContainer/BackgroundContainer'\n\nexport default class SignupDone extends Component {\n    render() {\n        return (\n            <BackgroundContainer header=\"Thanks for your registration, please follow the link sent to your provided email to activate your account.\" />\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { reduxForm, propTypes, clearSubmitErrors } from \"redux-form\";\nimport { activateUserAccount } from \"../../actions/authActions\";\nimport { renderError } from \"../../utils/renderUtils\";\n\nclass AccountActivation extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Please click the button below to activate your account</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group text-center\">\n                        {renderError(error)}\n                        <button action=\"submit\" className=\"btn btn-info rounded-0\">Activate</button>\n                    </fieldset>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default reduxForm({\n    form: \"user_account_activation\",\n    onSubmit: activateUserAccount,\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('user_account_activation'));\n    },\n})(AccountActivation);\n","import React, { Component } from 'react'\nimport PropTypes from \"prop-types\";\nimport Button from 'reactstrap/lib/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowLeft, faSave, faEdit } from '@fortawesome/free-solid-svg-icons'\n\nexport class ReturnButton extends Component {\n  static contextTypes = {\n    router: PropTypes.object\n  }\n\n  render() {\n    return (               \n        <Button color=\"info\" outline className=\"rounded-0 button-icon\" role=\"button\"\n          onClick={this.context.router.history.goBack}>\n          <FontAwesomeIcon icon={faArrowLeft} color=\"secondary\"/>\n        </Button>   \n        )    \n  }\n}\n\nexport const SaveButton = () => (\n    <Button color=\"info\" className=\"rounded-0\" type=\"submit\">\n      <FontAwesomeIcon icon={faSave} color=\"secondary\"/>\n    </Button>\n);\n\nexport const ClearButton = props => (\n    <Button outline className=\"rounded-0\" type=\"button\"\n      onClick={props.onClear}\n    >\n      Clear\n    </Button>\n);\n\nexport const EditButton = props => (\n    <Button color=\"info\" outline className=\"rounded-0 button-icon\" type=\"button\"\n      onClick={props.onEdit}\n    >\n      <FontAwesomeIcon icon={faEdit} color=\"secondary\"/>\n    </Button>\n);","import React from 'react'\nimport { Table } from 'reactstrap';\n\nimport { ReturnButton } from '../../../general/Atoms/Buttons/Buttons'\nimport { HomeButton } from '../../../general/Atoms/Links/Links'\nimport './styles.scss'\n\nexport const UserDetailTable = (userdetail) => {\n  if (userdetail) {\n    return (\n      <div className=\"mx-2 mt-2\">\n        <Table className=\"userprofile-header\">\n          <tbody>\n            <tr>\n              <th>\n                <h2>{userdetail.first_name}{\" \"}{userdetail.last_name}</h2>\n              </th>\n              <td>\n                <ReturnButton />\n                <HomeButton />\n              </td>\n            </tr>\n          </tbody>\n        </Table>\n        <Table className=\"table-userprofile\">\n          <thead>\n            <tr>\n              <td colSpan=\"2\">\n                <div className=\"avatar\"\n                    style={{ backgroundImage: `url(${userdetail.avatar})` }}>\n                </div>\n              </td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <th>Profile:</th>\n              <td>\n                {userdetail.username}\n              </td>\n            </tr>\n\n            <tr>\n              <th>Email:</th>\n              <td>{userdetail.email}</td>\n            </tr>\n            <tr>\n              <th>Website:</th>\n              <td><a className=\"table-correspondence__url\" href={`${userdetail.website}`} >{userdetail.website}</a></td>\n            </tr>                    \n            <tr>\n              <th>About:</th>\n              <td>{userdetail.about}</td>\n            </tr>\n          </tbody>\n        </Table>\n      </div>\n    )\n  } \n  return null\n\n\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getUserProfile } from \"../../../actions/authActions\";\n\nimport { LoadScreen } from '../../general/Organisms/LoadScreen/LoadScreen'\nimport { UserDetailTable } from '../Molecules/Tables/UserDetailTable'\n\nclass UserProfile extends Component {\n\n    static propTypes = {\n        getUserProfile: PropTypes.func.isRequired,\n        user: PropTypes.object,\n        loading: PropTypes.bool\n    };\n    static contextTypes = {\n        router: PropTypes.object\n    }\n    componentWillMount() {\n        this.props.getUserProfile();\n    }\n\n    renderUser() {\n        const { user } = this.props;\n\n        if (user) {\n            return (\n                <UserDetailTable \n                    {...user}\n                  />  \n            );\n        }\n        return null;\n    }\n\n    render() {\n        const {loading} = this.props\n\n        return(\n            <div>\n              {loading ?\n                <LoadScreen />\n              :\n                <div>\n                    {this.renderUser()}\n                    <hr />                \n                    <fieldset className=\"form-group\">\n                        <div className=\"form-button\">\n                            <Link to=\"/profile_edit\" className=\"btn btn-info rounded-0 form-button__part\">Update Profile</Link>\n                            <Link to=\"/change_password\" className=\"btn btn-outline-info rounded-0 form-button__part\">Change Password</Link>\n                        </div>\n                    </fieldset>\n                </div>\n              }\n          </div>               \n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        user: state.auth.user,\n        loading: state.auth.loading\n    }\n}\n\nexport default connect(mapStateToProps, { getUserProfile } )(UserProfile);","import React from 'react'\nimport { HomeButton } from '../../Atoms/Links/Links'\nimport './styles.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSpaceShuttle } from '@fortawesome/free-solid-svg-icons'\n\nexport const ErrorPage = ({errors}) => (\n    <div className=\"error-page\">\n      <div className=\"wrapper-error\"> \n        <h1>Error</h1>     \n        {errors ?  \n            <p>{errors}</p> \n          : \n            <p>Sorry, the page you are looking for doesn't exist.</p>\n        }\n        <h2>Return to <HomeButton /></h2>\n      </div>  \n      <div className=\"space\">\n        <div className=\"blackhole\"></div>\n        <FontAwesomeIcon rotation={180} className=\"ship\" icon={faSpaceShuttle} color=\"info\"/>\n      </div>\n    </div>\n)","import React, {Component} from 'react'\nimport {connect} from 'react-redux';\nimport { LoadScreen } from '../../general/Organisms/LoadScreen/LoadScreen'\nimport { ErrorPage } from '../../general/Organisms/ErrorPage/ErrorPage'\nimport * as userdetail from \"../../../actions/userDetailActions\";\nimport { UserDetailTable } from '../Molecules/Tables/UserDetailTable'\n\nclass UserProfileDetail extends Component {\n    constructor(props){\n        super(props);  \n        this.state = {\n        \tuserdetail: {},\n        \tloading: true,\n        \thasError: false      \n        }\n    }\n\n    componentDidUpdate(prevProps) {\n      if (this.props.userdetail !== prevProps.userdetail) {\n\t\tthis.setState({\n\t\t\t\tuserdetail : this.props.userdetail,\n\t\t\t\tloading: this.props.userdetail.loading,\n\t\t\t\thasError: this.props.userdetail.hasError,\n\t\t\t\terrors: this.props.userdetail.errors,\n\t\t\t\t});\n      }\n    } \n    componentDidMount(){\n      if (this.props.match){\n        const {id} = this.props.match.params\n        this.setState({\n            id: id,\n        })\n        this.props.fetchUserDetail(id)        \n      }      \n    }\n\n    renderNote() {\n        const { userdetail } = this.props;\n        const { hasError, errors } = this.state;\n\n        if (!hasError) {\n          return (\n                  <UserDetailTable \n                    {...userdetail}\n                  />             \n          );\n\n        } else {\n            return (\n                <ErrorPage \n                    errors={errors && errors.page}\n                  /> \n            );\n        }\n    }\n    render () {\n        const {loading} = this.state\n        return(\n            <div>\n              {loading ?<LoadScreen />:this.renderNote()}\n          </div>               \n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      userdetail: state.userdetail,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      fetchUserDetail: (id) => {\n          dispatch(userdetail.fetchUserDetail(id));\n      },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserProfileDetail);","import { toast } from 'react-toastify';\nexport const fetchUserDetail = (id) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        const endpoint = `/api/user/${id}/` \n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        \n        return fetch(endpoint, {headers, })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n               \n                } else {\n                    toast.error(\"Server Error...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'FETCH_USER_DETAIL', userdetail: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authentication Error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", userdetail: res.data});\n                    throw res.data;\n                } \n                else if (res.status === 404) {\n                    toast.error(\"User is not found...\")\n                    dispatch({type: \"USER_NOT_FOUND\"});\n                } else {\n                    throw res.data\n                }\n            })\n            .catch(error => {                \n                //error.redirect('/404');\n                //Handle error\n                console.log(\"error\", error);\n                // return dispatch({type: \"MESSAGE_NOT_FOUND\", detail: error});\n                // dispatch({type: \"MESSAGE_NOT_FOUND\", detail: error});\n            });\n    }\n}\n","import React, {Component} from 'react';\nimport Dropzone from 'react-dropzone';\nimport PropTypes from \"prop-types\";\n// import { Form } from 'elements';\nimport { Field } from 'redux-form';\nimport './styles.scss'\n\nconst imageMaxSize = 1000000; //bytes\n\nclass ImageDrop extends Component {\n  static propTypes = {\n    dropzone_options: PropTypes.object,\n    meta: PropTypes.object,\n    label: PropTypes.string,\n    classNameLabel: PropTypes.string,\n    input: PropTypes.object,\n    className: PropTypes.string,\n    // children: PropTypes.node,\n\t//    children: PropTypes.oneOfType([\n\t//      PropTypes.node,\n\t//   PropTypes.object,\n\t//   PropTypes.func,\n\t// ]),\n    cbFunction: PropTypes.func,\n  };\n\n  static defaultProps = {\n    className: '',\n    cbFunction: () => {},\n  };\n  state = { attached: false };\n  handleDrop = (files) => {\n\tthis.setState({attached: true})\n  }\n  render() {\n    const { className, input: { onChange }, meta: { error, touched }, label, classNameLabel, name, cbFunction } = this.props;\n\n\tlet drop_class = \"dropimage-field dropimage-field__default avatar\"\n\tlet drop_text = \"\"\n\n\tif (this.props.input.value && this.state.attached) {\n\t\tdrop_class = \"dropimage-field dropimage-field__success\";\n\t\tdrop_text = \"Press Save to Add\";\n\t} else {\n\t\tdrop_class = \"dropimage-field dropimage-field__default avatar\";\n\t\t// drop_text = \"Add Document\"\n\t} \n    return (\n      <div className={`${className}` + (error && touched ? ' has-error ' : '')}>\n        {label && <p className={classNameLabel || ''}>{label}</p>}\n        <Dropzone\n          onDrop={(f) => {\n            cbFunction(f);\n            this.handleDrop(f);\n            return onChange(f[0]);\n          }}\n          name={name}\n          maxSize={imageMaxSize}\n        >\n            {({getRootProps, getInputProps}) => (\n                <div {...getRootProps()} className={`${drop_class}`} \n                  style={{ backgroundImage: `url(${this.props.input.value})`}}>\n                    <input {...getInputProps()} />\n                    <span className=\"dropimage-field__text\">{`${drop_text}`}</span>\n                </div>\n            )}\n        </Dropzone>\n        {error && touched ? <div className=\"alert alert-danger p-1\"><small>{error}</small></div> : ''}\n      </div>\n    );\n  }\n}\nexport default props => <Field {...props} component={ImageDrop} />;","import React, { Component } from \"react\";\nimport { reduxForm, Field, propTypes, clearSubmitErrors } from \"redux-form\";\nimport { connect } from 'react-redux'\nimport { Link } from \"react-router-dom\";\n\nimport { renderField, renderTextAreaField,\n    renderError} from \"../../utils/renderUtils\";\nimport { updateUserProfile } from \"../../actions/authActions\";\nimport ImageDrop from './Atoms/ImageDrop/ImageDrop'\nimport { maxLength15, minLength5, required, letters, isurl } from '../../utils/formValidators'\n\nclass Login extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error, invalid, pristine, submitting } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Edit Profile</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"username\" label=\"Username\" component={renderField}\n                               type=\"text\" validate={[maxLength15, minLength5, required]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"first_name\" label=\"First Name\" component={renderField}\n                               type=\"text\" validate={[maxLength15, letters]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"last_name\" label=\"Last Name\" component={renderField}\n                               type=\"text\" validate={[maxLength15, letters]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"website\" label=\"Website\" component={renderField}\n                               type=\"text\" validate={[isurl]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"about\" label=\"About Yourself\" component={renderTextAreaField}\n                               type=\"text\"\n                        />\n                    </fieldset>\n                    <fieldset className=\"form-group\">\n                        <ImageDrop\n                         name=\"avatar\"\n                         label=\"Avatar:\"\n                          classNameLabel=\"file-input-label\"\n                          className=\"file-input\"\n                          dropzone_options={{\n                            multiple: false,\n                            accept: 'image/*'\n                          }}\n                        >\n                          <span>Add more</span>\n                        </ImageDrop>\n                    </fieldset>\n                    <fieldset className=\"form-group\">\n                        {renderError(error)}\n                        <div className=\"form-button\">\n                            <Link to=\"/profile\" className=\"btn btn-outline-info rounded-0 form-button__part\">Cancel</Link>\n                            <button action=\"submit\" className=\"btn btn-info rounded-0 form-button__part\" disabled={invalid || pristine || submitting}>Save</button>\n                        </div>\n                    </fieldset>\n\n                </form>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        initialValues: state.auth.user\n    }\n}\n\nexport default connect(mapStateToProps)(reduxForm({\n    form: \"update_user_profile\",\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('update_user_profile'));\n    },\n    onSubmit: updateUserProfile\n})(Login));","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, } from 'reactstrap';\nimport { reduxForm, Field, propTypes, clearSubmitErrors } from \"redux-form\";\n\nimport { changePassword } from \"../../actions/authActions\";\nimport { renderField, renderError } from \"../../utils/renderUtils\";\nimport { BackgroundContainer } from '../general/Atoms/BackgroundContainer/BackgroundContainer'\nimport { required } from '../../utils/formValidators'\n\nclass PasswordChange extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error, pristine, invalid, submitting } = this.props;\n\n        return (\n            <>\n            <BackgroundContainer header=\"\" />\n            <div className=\"row justify-content-center\">\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Change Password</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"old_password\" label=\"Old Password\" component={renderField}\n                               type=\"password\" validate={[required]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"new_password1\" label=\"New Password\" component={renderField}\n                               type=\"password\" validate={[required]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"new_password2\" label=\"Confirm New Password\" component={renderField}\n                               type=\"password\" validate={[required]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        {renderError(error)}\n                        <div className=\"form-button\">\n                            <Link to=\"/profile\" className=\"btn btn-outline-secondary rounded-0 form-button__part\">Cancel</Link>\n                            <Button action=\"submit\" color=\"secondary\" className=\"rounded-0 form-button__part\" disabled={invalid || pristine || submitting}>Submit</Button>\n                        </div>\n                    </fieldset>\n                </form>\n            </div>\n            </>\n        );\n    }\n}\n\n// Sync field level validation for password match\nconst validateForm = values => {\n    const errors = {};\n    const { new_password1, new_password2 } = values;\n    if (new_password1 !== new_password2) {\n        errors.new_password2 = \"Password does not match.\"\n    }\n    return errors;\n};\n\nexport default reduxForm({\n    form: \"change_password\",\n    onSubmit: changePassword,\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('change_password'));\n    },\n    validate: validateForm\n})(PasswordChange);\n","import React, { Component } from \"react\";\nimport { reduxForm, Field, propTypes, clearSubmitErrors } from \"redux-form\";\n\nimport { renderField, renderError} from \"../../utils/renderUtils\";\nimport { resetPassword } from \"../../actions/authActions\";\nimport { BackgroundContainer } from '../general/Atoms/BackgroundContainer/BackgroundContainer'\n\nimport { email, required } from '../../utils/formValidators'\nclass PasswordReset extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error, pristine, invalid, submitting } = this.props;\n\n        return (\n            <>\n            <BackgroundContainer header=\"\" />\n            <div className=\"row justify-content-center\">\n\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Reset Your Password</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"email\" label=\"Please enter your email\" component={renderField}\n                               type=\"text\" validate={[email, required]}\n                        />\n                    </fieldset>\n                    <fieldset className=\"form-group text-center\">\n                        {renderError(error)}\n                        <button action=\"submit\" className=\"btn btn-secondary rounded-0\" disabled={invalid || pristine || submitting}>Submit</button>\n                    </fieldset>\n                </form>\n            </div>\n            </>\n        )\n    }\n}\n\nexport default reduxForm({\n    form: \"password_reset\",\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('password_reset'));\n    },\n    onSubmit: resetPassword,\n})(PasswordReset);\n","import React, { Component } from \"react\";\nimport { BackgroundContainer } from '../general/Atoms/BackgroundContainer/BackgroundContainer'\n\nexport default class PasswordResetDone extends Component {\n    render() {\n        return (\n            <BackgroundContainer header=\"An password reset email has been sent to your email. Please follow the link to reset your password.\" />\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { reduxForm, Field, propTypes, clearSubmitErrors } from \"redux-form\";\n\nimport { confirmPasswordChange } from \"../../actions/authActions\";\nimport { renderField, renderError } from \"../../utils/renderUtils\";\nimport { BackgroundContainer } from '../general/Atoms/BackgroundContainer/BackgroundContainer';\nimport { required } from '../../utils/formValidators'\n\nclass PasswordResetConfirm extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error, invalid, pristine, submitting } = this.props;\n\n        return (\n            <>\n            <BackgroundContainer header=\"\" />\n            <div className=\"row justify-content-center\">\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Create New Password</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"new_password1\" label=\"New Password\" component={renderField}\n                               type=\"password\" validate={[required]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"new_password2\" label=\"Confirm New Password\" component={renderField}\n                               type=\"password\" validate={[required]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group text-center\">\n                        {renderError(error)}\n                        <button action=\"submit\" className=\"btn btn-info rounded-0\" disabled={invalid || pristine || submitting}>Submit</button>\n                    </fieldset>\n                </form>\n            </div>\n            </>\n        );\n    }\n}\n\n// Sync field level validation for password match\nconst validateForm = values => {\n    const errors = {};\n    const { new_password1, new_password2 } = values;\n    if (new_password1 !== new_password2) {\n        errors.new_password2 = \"Password does not match.\"\n    }\n    return errors;\n};\n\nexport default reduxForm({\n    form: \"password_reset_confirm\",\n    onSubmit: confirmPasswordChange,\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('password_reset_confirm'));\n    },\n    validate: validateForm\n})(PasswordResetConfirm);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\n\nclass PostInline extends Component {\n  // {post !== undefined ? <div className={elClass}>\n  //    <h1><Link maintainScrollPosition={false} to={{\n  //        pathname:`/react/posts/${post.slug}`,\n  //        state: {fromDashboard: false}\n  //    }}>{post.title}</Link></h1>\n\n  //   <p className={showContent}>{post.content}</p>\n  //   </div>\n  //   : \"\"}\n  render() {\n      const {post} = this.props\n      const {elClass} = this.props\n      const showContent = elClass === 'card' ? 'd-block' : 'd-none'\n    return (\n      <div>\n          {post !== undefined ? \n            <div className={elClass}>\n            <Link \n              to={{pathname:`/react/posts/${post.slug}`,\n              state: {fromDashboard: false}\n            }}>\n                <h1>{post.title}</h1>\n            </Link>\n                  <p className={showContent}>{post.content}</p>\n            </div>\n          : ''}\n      </div>\n    );\n  }\n}\n\nexport default PostInline;\n","import React, { Component } from 'react';\nimport 'whatwg-fetch'\nimport cookie from 'react-cookies'\nimport { Link } from 'react-router-dom'\nimport PostInline from './PostInline'\n// import PostCreate from './PostCreate'\n// import PostForm from './PostForm'\nimport { connect } from 'react-redux'\n\nimport store from \"../store\";\nimport { getUserToken } from \"../utils/authUtils\";\n\nclass Posts extends Component {\n\n  constructor(props){\n      super(props)\n      this.togglePostListClass = this.togglePostListClass.bind(this)\n      this.handleNewPost = this.handleNewPost.bind(this)\n      this.loadMorePosts =this.loadMorePosts.bind(this)\n      this.state = {\n          posts: [],\n          postsListClass: \"card\",\n          next: null,\n          previous: null,\n          author: false,\n          count: 0,\n          authenticated: false, //adding redux-props\n      }\n  }\n\n  loadMorePosts(){\n      const {next} = this.state \n      if (next !== null || next !== undefined) {\n           this.props.loadPosts(next)\n      }\n     \n  }\n    \n  loadPosts(nextEndpoint){\n      let endpoint = '/api/posts/' \n      if (nextEndpoint !== undefined) {\n          endpoint = nextEndpoint\n      }\n      let thisComp = this\n      let lookupOptions = {\n          method: \"GET\",\n          headers: {\n              'Content-Type': 'application/json'\n          }\n      }\n      const csrfToken = cookie.load('csrftoken')\n      const token = getUserToken(store.getState());\n      console.log('token', token);\n      console.log('csrftoken', csrfToken);\n\n      if (csrfToken !== undefined) {\n          lookupOptions['credentials'] = 'include'\n          lookupOptions['headers']['X-CSRFToken'] = csrfToken\n       } \n\n      fetch(endpoint, lookupOptions)\n      .then(function(response){\n          return response.json()\n      }).then(function(responseData){\n          console.log(responseData)\n          // let currentPosts = thisComp.state.posts\n          // let newPosts = currentPosts.concat(responseData.results)\n          // console.log(currentPosts)\n           thisComp.setState({\n                  posts: thisComp.state.posts.concat(responseData.results),\n                  next: responseData.next,\n                  previous: responseData.previous,\n                  author: responseData.author,\n                  count: responseData.count,\n                  authenticated: thisComp.props.state.auth.authenticated //adding redux-props\n              })\n      }).catch(function(error){\n          console.log(\"error\", error)\n      })\n  }\n\n  handleNewPost(postItemData){\n      // console.log(postItemData)\n      let currentPosts = this.state.posts\n      currentPosts.unshift(postItemData) // unshift\n      this.setState({\n          posts: currentPosts\n      })\n  }\n\n  \n\n  togglePostListClass(event){\n      event.preventDefault()\n      let currentListClass = this.state.postsListClass\n      if (currentListClass === \"\"){\n          this.setState({\n              postsListClass: \"card\",\n          })\n      } else {\n          this.setState({\n              postsListClass: \"\",\n          })\n      }\n      \n  }\n\n  componentDidMount(){\n      this.setState({\n          posts: [],\n          postsListClass: \"card\",\n          next: null,\n          previous: null,\n          author: false,\n          count: 0,\n          authenticated: false,\n      })\n      this.loadPosts()\n  }\n  // {author === true ? <Link className='mr-2' maintainScrollPosition={false} to={{\n  //           pathname: `/posts/create/`,\n  //           state: { fromDashboard: false }\n  //         }}>Create Post</Link> : \"\"}\n  \n  // <button onClick={this.togglePostListClass}>Toggle Class</button>\n  // {posts.length > 0 ? posts.map((postItem, index)=>{\n  //     return (\n  //             <PostInline post={postItem} elClass={postsListClass} />\n  //     )\n  // }) : <p>No Posts Found</p>}\n  // {next !== null ? <button onClick={this.loadMorePosts}>Load more</button> : ''}\n  render() {\n      const {posts} = this.state\n      const {postsListClass} = this.state\n      // const {author} = this.state\n      const {next} = this.state \n      // const {auth} = this.props.state.auth.authenticated\n      const {authenticated} = this.state //adding redux-props\n      // const csrfToken = cookie.load('csrftoken')\n    return (\n      <div>\n        {authenticated === true ?\n          <Link className='mr-2' to={{\n            pathname: `/react/posts/create/`,\n            state: { fromDashboard: false }\n          }}>Create Post</Link>\n        : ''}\n          <button onClick={this.togglePostListClass}>Toggle Class</button>\n          {posts.length > 0 ? posts.map((postItem, index)=>{\n            return (\n              <PostInline post={postItem} key={`post-list-key ${index}`} elClass={postsListClass} />\n            )\n          }) : <p>No Posts Found</p>}\n        {next !== null ? <button onClick={this.loadMorePosts}>Load more</button> : ''}\n\n      </div>\n    );\n  }\n}\n\n// export default Posts;\n\n\nconst mapStateToProps = (state) => {\n  return {\n    state: state\n  }\n}\n\nexport default connect(mapStateToProps)(Posts);\n// {(csrfToken !== 'undefined' && csrfToken !== null) ?\n// <div className='my-5'>\n//   <PostForm newPostItemCreated={this.handleNewPost} />\n// </div>\n// : ''}","import React, { Component } from 'react'\n\nimport { Link } from 'react-router-dom'\nimport Posts from '../reactify/Posts';\n\nclass ReacTifyComp extends Component {\n  componentDidMount () {\n\n  }\n\n  render () {\n    return (\n      <div>\n        <Link className='some-link' to='/about/'>Static Page</Link>\n        <Posts />\n      </div>\n      \n    )\n  }\n}\n\nexport default ReacTifyComp","import React, {Component} from 'react'\nimport 'whatwg-fetch'\nimport cookie from 'react-cookies'\nimport moment from 'moment'\n// import { Redirect } from 'react-router-dom'\n\nimport store from \"../store\";\nimport { getUserToken } from \"../utils/authUtils\";\n\n\nclass PostForm extends Component {\n    constructor(props){\n        super(props)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleInputChange = this.handleInputChange.bind(this)\n        this.handleDraftChange = this.handleDraftChange.bind(this)\n        this.clearForm = this.clearForm.bind(this)\n        this.postTitleRef = React.createRef()\n        this.postContentRef = React.createRef()\n        this.deletePost= this.deletePost.bind(this)\n        this.state = {\n            draft: false,\n            title: null,\n            slug: null,\n            content: null,\n            publish: moment(new Date()).format('YYYY-MM-DD'),\n            errors: {}\n        }\n    }\n\n    updatePost(data){\n      const {post} = this.props\n      const endpoint = `/api/posts/${post.slug}/` \n      const csrfToken = cookie.load('csrftoken')\n      const token = getUserToken(store.getState());\n      console.log('token', token);\n      console.log('csrftoken', csrfToken);\n      let thisComp = this\n      if (csrfToken !== undefined) {\n          let lookupOptions = {\n              method: \"PUT\",\n              headers: {\n                  'Content-Type': 'application/json',\n                  'X-CSRFToken': csrfToken,\n                  'Authorization': 'Token ' + token\n              },\n              body: JSON.stringify(data),\n              credentials: 'include'\n          }\n\n          fetch(endpoint, lookupOptions)\n          .then(function(response){\n              return response.json()\n          }).then(function(responseData){\n              console.log(responseData)\n              if (thisComp.props.newPostItemUpdated){\n                  thisComp.props.newPostItemUpdated(responseData)\n              }\n              thisComp.clearForm()\n          }).catch(function(error){\n              console.log(\"error\", error)\n              alert(\"An error occured, please try again later.\")\n          })\n      } \n      \n  \t} \n    createPost(data){\n      const endpoint = '/api/posts/' \n      const csrfToken = cookie.load('csrftoken')\n      let thisComp = this\n      console.log('csrf', csrfToken)\n      if (csrfToken !== undefined) {\n          let lookupOptions = {\n              method: \"POST\",\n              headers: {\n                  'Content-Type': 'application/json',\n                  'X-CSRFToken': csrfToken\n              },\n              body: JSON.stringify(data),\n              credentials: 'include'\n          }\n\n          fetch(endpoint, lookupOptions)\n          .then(function(response){              \n              return response.json()\n          }).then(function(responseData){\n              console.log(responseData)\n              if (thisComp.props.newPostItemCreated){\n                  thisComp.props.newPostItemCreated(responseData)\n              }\n              thisComp.clearForm()\n              thisComp.defaultState()\n          }).catch(function(error){\n              console.log(\"error\", error)\n              alert(\"An error occured, please try again later.\")\n          })\n      } \n      \n    }\n    deletePost(event) {\n      event.preventDefault();\n      const {post} = this.props\n      const endpoint = `/api/posts/${post.slug}/` \n      const csrfToken = cookie.load('csrftoken')\n      console.log(post)\n      return fetch(endpoint, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': csrfToken\n            },\n            credentials: 'include'\n        }).then(function(response){\n          return response\n        }).then(data => {\n          if(data.status === 204){\n            // this.UpdateRoute();\n            console.log('Successfully Delete');\n          }   \n        }).catch(function(error){\n            console.log(\"error\", error)\n            alert(\"An error occured, please try again later.\")\n        })\n    };\n\n  \tclearForm(event){\n      if (event){\n        event.preventDefault()\n      }\n      this.postCreateForm.reset()\n      \n    } \n    clearFormRefs(){\n      this.postTitleRef.current=''\n      this.postContentRef.current=''\n    }  \t\n\thandleSubmit(event){      \n\t    event.preventDefault()\n\t    let data = this.state\n      const {post} = this.props\n      if (post !== undefined) {\n        this.updatePost(data)\n      } else {\n        this.createPost(data)\n      }\n\t    \n      console.log({post})\n\t}\n\thandleInputChange(event){\n        event.preventDefault()\n        let key = event.target.name\n        let value = event.target.value\n\n        if (key === 'title'){\n            if (value.length > 120){\n                alert(\"This title is too long\")\n            }\n        }\n        this.setState({\n            [key]: value\n\n        })\n    }\n  //fix doubleclick checkbox\n  handleDraftChange(event){\n    this.setState({\n      draft: !this.state.draft\n    })\n  }\n  defaultState(){\n    this.setState({\n        draft: false,\n        title: null,\n        content: null,\n        slug: null,\n        publish: moment(new Date()).format('YYYY-MM-DD'),\n    })   \n  }\n  componentDidMount(){\n    const {post} = this.props\n    // this.loginCheck()\n    if (post !== undefined) {\n      this.setState({\n          draft: post.draft,\n          title: post.title,\n          content: post.content,\n          slug: post.slug,\n          publish: moment(post.publish).format('YYYY-MM-DD'),\n      })\n    } else {\n      this.defaultState()\n    }\n    // this.postTitleRef.current.focus()\n  }\n\trender(){\n\t\tconst {publish} = this.state\n    const {title} = this.state\n    const {content} = this.state\n    const {slug} = this.state\n    const cancelClass = this.props.post !== undefined ? \"d-none\" : \"\"\n    const deleteClass = this.props.post === undefined ? \"d-none\" : \"\"\n\t\treturn (\n\t\t  <div>\n\t\t    <form onSubmit={this.handleSubmit} ref={(el)=> this.postCreateForm = el}>\n\t\t        <div className=\"form-group\">\n\t\t\t\t\t<label htmlFor='blogTitle'>Title</label>\n\t\t\t\t\t<input \n\t\t\t\t\t  type='text' \n\t\t\t\t\t  id='blogTitle' \n\t\t\t\t\t  name='title' \n\t\t\t\t\t  className='form-control' \n\t\t\t\t\t  placeholder='Blog post title'\n            value={title || ''}            \n\t\t\t\t\t  ref={this.postTitleRef} \n\t\t\t\t\t  onChange={this.handleInputChange} \n\t\t\t\t\t  required='required' />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label htmlFor='content'>Content</label>\n\t\t\t\t\t<textarea \n\t\t\t\t\t  id='content' \n\t\t\t\t\t  name='content' \n\t\t\t\t\t  className='form-control' \n\t\t\t\t\t  placeholder='Post content'\n            value={content || ''}\n\t\t\t\t\t  ref={this.postContentRef} \n\t\t\t\t\t  onChange={this.handleInputChange} \n\t\t\t\t\t  required='required' />\n\t\t\t\t</div>\n\t\t\t\t<div className='form-group'>\n                    <label htmlFor='slug'>Slug</label>\n                    <input \n                      type='text' \n                      id='slug' \n                      name='slug' \n                      className='form-control'\n                      placeholder='Type Slug'\n                      value={slug || ''}  \n                      onChange={this.handleInputChange} \n                      required='required'/>\n                </div>\n\t\t        <div className=\"form-group\">\n\t\t\t\t\t<label htmlFor='draft'>\n\t\t\t\t\t\t<input \n\t\t\t\t\t\t  type='checkbox' \n\t\t\t\t\t\t  id='draft' \n\t\t\t\t\t\t  name='draft' \n\t\t\t\t\t\t  className='mr-2' \n\t\t\t\t\t\t  onChange={this.handleDraftChange} \n\t\t\t\t\t\t  checked={this.state.draft}\n\t\t\t\t\t\t  />\n\t\t\t\t\tDraft</label>\n                <button onClick={(event)=>{event.preventDefault();this.handleDraftChange()}}>Toggle Draft</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label htmlFor='publish'>Publish Date</label>\n\t\t\t\t\t<input \n\t\t\t\t\t  type='date' \n\t\t\t\t\t  id='publish' \n\t\t\t\t\t  name='publish' \n\t\t\t\t\t  className='form-control' \n\t\t\t\t\t  onChange={this.handleInputChange} \n\t\t\t\t\t  required='required'\n\t\t\t\t\t  value={publish}\n\t\t\t\t\t   />\n\t\t\t\t</div>\n\t\t\t\t<button type='submit' className='btn btn-primary '>Save</button>\n\t\t\t\t<button className={`btn btn-secondary ${cancelClass}`} onClick={this.clearForm}>Clear</button>\n        <button className={`btn btn-danger' ${deleteClass}`} onClick={this.deletePost}>Delete</button>\n\n\t\t    </form>\n\t\t  </div>\n\t\t)\n\t}\n\n}\n\nexport default PostForm\n","import React, {Component} from 'react'\nimport 'whatwg-fetch'\nimport cookie from 'react-cookies'\nimport { Link } from 'react-router-dom'\n\nimport PostForm from './PostForm'\n\nclass PostDetail extends Component {\n    constructor(props){\n        super(props)\n        this.handlePostItemUpdated= this.handlePostItemUpdated.bind(this)        \n        this.state = {\n             slug: null,\n             post: null,\n             doneLoading: false,\n        }\n    }\n\n    handlePostItemUpdated(postItemData){\n        this.setState({\n            post: postItemData\n        })\n    }\n    loadPost(slug){\n      const endpoint = `/api/posts/${slug}/` \n      let thisComp = this\n      let lookupOptions = {\n          method: \"GET\",\n          headers: {\n              'Content-Type': 'application/json'\n          }\n      }\n\n      const csrfToken = cookie.load('csrftoken')\n      if (csrfToken !== undefined) {\n          lookupOptions['credentials'] = 'include'\n          lookupOptions['headers']['X-CSRFToken'] = csrfToken\n       }\n\n      fetch(endpoint, lookupOptions)\n      .then(function(response){\n          if (response.status === 404){\n              console.log('Page not found')\n          }\n          return response.json()\n      }).then(function(responseData){\n          if (responseData.detail){\n              thisComp.setState({\n                  doneLoading: true,\n                  post: null\n              })\n          } else {\n           thisComp.setState({\n                  doneLoading: true,\n                  post: responseData\n              })\n          }\n      }).catch(function(error){\n          console.log(\"error\", error)\n      })\n  }\n\n    componentDidMount(){\n        this.setState({\n                slug: null,\n                post: null\n            })\n        if (this.props.match){\n            const {slug} = this.props.match.params\n            this.setState({\n                slug: slug,\n                doneLoading: false\n            })\n            this.loadPost(slug)\n        }\n    }\n    // const {doneLoading} = this.state\n    //     const {post} = this.state\n    //     return(\n    //         <p>{(doneLoading === true) ? <div>\n    //             {post === null ? \"Not Found\": \n    //             <div>\n    //             <h1>{post.title}</h1>\n    //             {post.slug}\n\n    //             <p className='lead'>\n    //             <Link maintainScrollPosition={false} to={{\n    //                 pathname: `/react/posts`,\n    //                 state: { fromDashboard: false }\n    //               }}>Posts</Link>\n\n    //               {post.owner === true ? <Link maintainScrollPosition={false} to={{\n    //                 pathname: `/react/posts/create/`,\n    //                 state: { fromDashboard: false }\n    //               }}>Create Post</Link> : \"\" }\n    //            </p>\n\n    //               {post.owner === true ? <PostForm post={post} postItemUpdated={this.handlePostItemUpdated} /> : \"\"}\n    //             </div>\n    //            }\n    //        </div> : \"Loading...\"}</p>\n    //     )\n    // }\n    render(){\n        const {doneLoading} = this.state\n        // const {slug} = this.state\n        const {post} = this.state\n        return(\n          <div>\n            {(doneLoading === true) ? <div>\n              {(post === null) ? \"Not Found\": \n                <div> \n                  <p className=\"lead\"><Link \n                      to={{pathname:`/react/posts/`,\n                      state: {fromDashboard: false}\n                    }}>\n                      BACK\n                    </Link>\n                    {post.owner === true ? <Link to={{\n                      pathname: `/react/posts/create/`,\n                      state: { fromDashboard: false }\n                    }}>Create Post</Link> : \"\"}\n                  </p>                 \n                  <h1>{post.slug}</h1>\n                  <h1>{post.title}</h1>\n                  {post.owner === true ? <PostForm post={post} postItemUpdated={this.handlePostItemUpdated} /> : \"\"}\n                </div>\n              }\n\n            </div> : \"Loading...\"}\n          </div>               \n        )\n    }\n}\n\nexport default PostDetail","import React, {Component} from 'react'\nimport { Link } from 'react-router-dom'\nimport PostForm from './PostForm'\n\nclass PostCreate extends Component {\n\n  render(){\n    return (\n      <div>\n      \t<Link \n          to={{pathname:`/react/posts/`,\n          state: {fromDashboard: false}\n        }}>\n          BACK\n        </Link>\n      \t<h1>Create Post</h1>\n        \t<PostForm />\n      </div>\n    )\n  }\n\n}\n\nexport default PostCreate\n// // left for reference\n\n\n\n\n// // import React, {Component} from 'react'\n// // import 'whatwg-fetch'\n// // import cookie from 'react-cookies'\n// // import moment from 'moment'\n\n// // class PostCreate extends Component {\n// //     constructor(props){\n// //         super(props)\n// //         this.handleSubmit = this.handleSubmit.bind(this)\n// //         this.handleInputChange = this.handleInputChange.bind(this)\n// //         this.handleDraftChange = this.handleDraftChange.bind(this)\n// //         this.clearForm = this.clearForm.bind(this)\n// //         this.postTitleRef = React.createRef()\n// //         this.postContentRef = React.createRef()\n// //         this.state = {\n// //             draft: false,\n// //             title: null,\n// //             content: null,\n// //             publish: null,\n// //             errors: {}\n// //         }\n// //     }\n// //     createPost(data){\n// //       const endpoint = '/api/posts/' \n// //       const csrfToken = cookie.load('csrftoken')\n// //       let thisComp = this\n// //       if (csrfToken !== undefined) {\n// //           let lookupOptions = {\n// //               method: \"POST\",\n// //               headers: {\n// //                   'Content-Type': 'application/json',\n// //                   'X-CSRFToken': csrfToken\n// //               },\n// //               body: JSON.stringify(data),\n// //               credentials: 'include'\n// //           }\n\n// //           fetch(endpoint, lookupOptions)\n// //           .then(function(response){\n// //               return response.json()\n// //           }).then(function(responseData){\n// //               console.log(responseData)\n// //               if (thisComp.props.newPostItemCreated){\n// //                   thisComp.props.newPostItemCreated(responseData)\n// //               }\n// //               thisComp.clearForm()\n// //           }).catch(function(error){\n// //               console.log(\"error\", error)\n// //               alert(\"An error occured, please try again later.\")\n// //           })\n// //       } \n      \n// //   }\n\n// //     handleSubmit(event){\n// //         event.preventDefault()\n// //         let data = this.state\n// //         this.createPost(data)\n// //     }\n\n// //     handleInputChange(event){\n// //         event.preventDefault()\n// //         let key = event.target.name\n// //         let value = event.target.value\n// //         if (key === 'title'){\n// //             if (value.length > 120){\n// //                 alert(\"This title is too long\")\n// //             }\n// //         }\n// //         this.setState({\n// //             [key]: value\n// //         })\n// //     }\n\n// //     handleDraftChange(event){\n// //       this.setState({\n// //         draft: !this.state.draft\n// //       })\n// //     }\n\n// //     clearForm(event){\n// //       if (event){\n// //         event.preventDefault()\n// //       }\n// //       this.postCreateForm.reset()\n// //     }\n\n\n// //     clearFormRefs(){\n// //       this.postTitleRef.current=''\n// //       this.postContentRef.current=''\n// //     }\n\n\n// //     componentDidMount(){\n// //         this.setState({\n// //             draft: false,\n// //             title: null,\n// //             content: null,\n// //             publish: moment(new Date()).format('YYYY-MM-DD'),\n// //         })\n// //         this.postTitleRef.current.focus()\n// //     }\n\n// //     render(){\n// //         const {publish} = this.state\n// //         let thisComp = this\n// //         return (\n// //             <form onSubmit={this.handleSubmit} ref={(el) => this.postCreateForm = el}>\n// //                 <div className='form-group'>\n// //                     <label for='title'>Post title</label>\n// //                     <input \n// //                       type='text' \n// //                       id='title' \n// //                       name='title' \n// //                       className='form-control'\n// //                       placeholder='Blog post title' \n// //                       ref = {this.postTitleRef}\n// //                       onChange={this.handleInputChange} \n// //                       required='required'/>\n// //                 </div>\n// //                  <div className='form-group'>\n// //                     <label for='content'>Content</label>\n// //                     <textarea id='content' ref = {this.postContentRef} name='content' className='form-control' placeholder='Post content' onChange={this.handleInputChange} required='required'/>\n                   \n// //                 </div>\n// //                 <div className='form-group'>\n// //                     <label for='draft'>\n// //                     <input type='checkbox' checked={this.state.draft} id='draft' name='draft' className='mr-2' onChange={this.handleDraftChange}/>\n// //                      Draft </label>\n// //                      <button onClick={(event)=>{event.preventDefault();this.handleDraftChange()}}>Toggle Draft</button>\n// //                 </div>\n// //                 <div className='form-group'>\n// //                     <label for='publish'>Publish Date</label>\n// //                     <input \n// //                     type='date' \n// //                     id='publish' \n// //                     name='publish' \n// //                     className='form-control' \n// //                     onChange={this.handleInputChange}\n// //                      value={publish}\n// //                      required='required'/>\n// //                 </div>\n// //                 <button type='submit' className='btn btn-primary'>Save</button>\n// //                 <button className='btn btn-secondary' onClick={this.clearForm}>Cancel</button>\n// //             </form>\n// //         )\n// //     }\n\n// // }\n\n// // export default PostCreate","import { toast } from 'react-toastify';\n\nexport const fetchNotes = (nextEndpoint) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        let endpoint = '/api/investors/' \n\n        if (nextEndpoint !== undefined && nextEndpoint !== null) {\n          endpoint = nextEndpoint\n        }\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        let {notes} = getState();\n        return fetch(endpoint, {headers, })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    toast.error(\"Error! Can't load investors...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            // getState().notes[0].concat(res.data)}\n            .then(res => {\n                if (res.status === 200) {               \n                    return dispatch({type: 'FETCH_NOTES', notes: notes.push(res.data), loading: false});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authetication error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\nexport const searchNotes = (searchtext) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        let endpoint = '/api/investors/' \n        if (searchtext !== undefined && searchtext !== null) {\n          endpoint = `/api/investors/?search=${searchtext}`\n        }\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        return fetch(endpoint, {headers, method: \"GET\", })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        // console.log(res)\n                        return {status: res.status, data};\n                    })\n                } else {\n                    toast.error(\"Error! Can't load investors...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'SEARCH_NOTES', notes: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authetication error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\nexport const orderNotes = (order) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        let endpoint = '/api/investors/' \n        if (order !== undefined && order !== null) {\n          endpoint = `/api/investors/?ordering=${order}`\n        }\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        return fetch(endpoint, {headers, method: \"GET\", })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        // console.log(res)\n                        return {status: res.status, data};\n                    })\n                } else {\n                    toast.error(\"Error! Can't load investors...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'ORDER_NOTES', notes: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authetication error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\nexport const addNote = (text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n\n        let body = JSON.stringify({text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence });\n        return fetch(\"/api/investors/\", {headers, method: \"POST\", body})\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    toast.error(\"Error! Can't load investors...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 201) {\n                    toast.info(\"Investor \"+res.data.text+\" added\")\n                    return dispatch({type: 'ADD_NOTE', note: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authetication error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\n\nexport const updateNote = (index, id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence) => {\n    return (dispatch, getState) => {\n\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n\n        let body = JSON.stringify({text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence });\n        // console.log(\"id\", id, \"index\", index)\n        let noteId = getState().notes[index].noteitems[id].id;\n\n        return fetch(`/api/investors/${noteId}/`, {headers, method: \"PUT\", body})\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    toast.error(\"Error! Can't load investors...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 200) {\n                    toast.info(\"Investor \"+res.data.text+\" edited\")\n                    return dispatch({type: 'UPDATE_NOTE', note: res.data, index, id});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authetication error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\n\nexport const deleteNote = (id, index) => {\n    return (dispatch, getState) => {\n\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        let noteId = getState().notes[id].noteitems[index].id;\n\n        return fetch(`/api/investors/${noteId}/`, {headers, method: \"DELETE\"})\n            .then(res => {\n                if (res.status === 204) {\n                    toast.info(\"Investor deleted\")\n                    return {status: res.status, data: {}};\n                } else if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 204) {\n                    // toast.info(\"Investor deleted\")\n                    return dispatch({type: 'DELETE_NOTE', id, index});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authetication error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n            .then(res => {dispatch(fetchNotes())})\n    }\n}\n","import React, { Component } from 'react'\nimport {   \n  FormGroup, Button, Modal, \n  ModalHeader, ModalBody, \n  ModalFooter, } from 'reactstrap';\nimport './styles.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\n\nexport class ModalDelete extends Component {\n  render() {\n    const { modaldelete, text, index, id, toggle} = this.props;\n\n    return (\n      <div>\n        <Modal isOpen={modaldelete} toggle={toggle}>\n            <ModalHeader color=\"info\">Are you sure?</ModalHeader>           \n            <ModalBody>Delete <b>{text}</b> Investor?</ModalBody>\n            <ModalFooter> \n              <FormGroup row>                   \n              <Button className=\"rounded-0\" color=\"info\" onClick={() => this.props.onSelectForDelete(index, id)}><FontAwesomeIcon icon={faTrash} color=\"white\"/></Button>              \n              <Button className=\"rounded-0\" onClick={toggle}>Cancel</Button>\n              </FormGroup>\n            </ModalFooter>\n        </Modal> \n      </div>\n    )\n    \n  }\n}\n","import React, { Component } from 'react'\nimport { FormText,  \n  FormGroup, Label, Input,  } from 'reactstrap';\n\n// REQUIRED FIELDS\nexport class InputName extends Component {\n  render() {\n    const { text, errors } = this.props;\n    return (\n      <div>\n        <FormGroup>\n          <Label>Name <span className=\"text-danger\">*</span></Label>\n          <Input\n            name=\"text\"\n            value={text || ''}\n            placeholder=\"Enter name...\"\n            onChange={this.props.onInputChange}\n            required />\n            {errors.text ? <FormText color=\"danger\">{errors.text}</FormText>: \"\"}\n        </FormGroup>\n      </div>\n    )\n    \n  }\n}\nexport class InputPhone extends Component {\n  render() {\n    const { phone, errors } = this.props;\n    return (\n      <div>\n        <FormGroup>\n          <Label>Phone <span className=\"text-danger\">*</span></Label>\n          <Input\n            name=\"phone\"\n            value={phone || ''}\n            placeholder=\"Enter phone...\"\n            onChange={this.props.onInputChange}\n            required />\n            {errors.phone ? <FormText color=\"danger\">{errors.phone}</FormText>: \"\"}\n        </FormGroup>\n      </div>\n    )\n    \n  }\n}\nexport class InputEmail extends Component {\n  render() {\n    const { email, errors } = this.props;\n    return (\n      <div>\n        <FormGroup>\n          <Label>Email <span className=\"text-danger\">*</span></Label>\n          <Input\n            name=\"email\"\n            value={email || ''}\n            placeholder=\"Enter email...\"\n            onChange={this.props.onInputChange}\n            required />\n            {errors.email ? <FormText color=\"danger\">{errors.email}</FormText>: \"\"}\n        </FormGroup>\n      </div>\n    )    \n  }\n}\nexport class InputLinkedin extends Component {\n  render() {\n    const { linkedin_profile, errors } = this.props;\n    return (\n      <div>\n        <FormGroup>\n          <Label>Linkedin <span className=\"text-danger\">*</span></Label>\n          <Input\n            name=\"linkedin_profile\"\n            value={linkedin_profile || ''}\n            placeholder=\"Enter linkedin url...\"\n            onChange={this.props.onInputChange}\n            required />\n            {errors.linkedin_profile ? <FormText color=\"danger\">{errors.linkedin_profile}</FormText>: \"\"}\n        </FormGroup>\n      </div>\n    )    \n  }\n}\n// NOT REQUIRED FIELDS\nexport class InputWebsite extends Component {\n  render() {\n    const { website, errors } = this.props;\n    return (\n      <div>\n        <FormGroup>\n          <Label>Website</Label>\n          <Input\n            name=\"website\"\n            value={website || ''}\n            placeholder=\"Enter website url...\"\n            onChange={this.props.onInputChange}\n            />\n            {errors.website ? <FormText color=\"danger\">{errors.website}</FormText>: \"\"}\n        </FormGroup>\n      </div>\n    )    \n  }\n}\nexport class InputCorrespondence extends Component {\n  render() {\n    const { correspondence, errors } = this.props;\n    return (\n      <div>\n        <FormGroup>\n          <Label>Correspondence</Label>\n          <Input\n            name=\"correspondence\"\n            value={correspondence || ''}\n            placeholder=\"Enter correspondence...\"\n            onChange={this.props.onInputChange}\n            type='textarea'\n            />\n            {errors.correspondence ? <FormText color=\"danger\">{errors.correspondence}</FormText>: \"\"}\n        </FormGroup>\n      </div>\n    )    \n  }\n}","import React, { Component } from 'react'\nimport { Button, \n  FormGroup, Label, } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMale, faUsers, \n       } from '@fortawesome/free-solid-svg-icons'\n\n// Checkbox is corporate\nexport class CheckboxIsCorp extends Component {\n  render() {\n    const { is_corporate } = this.props;\n    return (\n      <div>\n        <FormGroup>\n            <Label>Individual <FontAwesomeIcon icon={faMale} color={!is_corporate ? \"black\": \"grey\"}/> / Corporate <FontAwesomeIcon icon={faUsers} color={is_corporate ? \"black\": \"grey\"}/></Label>\n            <Button className=\"btn btn-block\" onClick={this.props.handleCheckboxIsCorpBtnClick} active={is_corporate}>{is_corporate ? 'Change to Individual' : 'Change to Corporate'}</Button>\n        </FormGroup>\n      </div>\n    )    \n  }\n}","import React, { Component } from 'react'\nimport { Button, \n  FormGroup, Label, } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHandHoldingUsd, faCheckCircle, \n       } from '@fortawesome/free-solid-svg-icons'\n\n// Checkbox is corporate\nexport class CheckboxIsPayed extends Component {\n  render() {\n    const { status, is_staff, is_payed } = this.props;\n    return (\n      <div>\n        {status !== \"Candidate\" && is_staff ?\n          <FormGroup>\n              <Label>New <FontAwesomeIcon icon={faHandHoldingUsd} color={!is_payed ? \"black\": \"grey\"}/> / Payed <FontAwesomeIcon icon={faCheckCircle} color={is_payed ? \"black\": \"grey\"}/></Label>\n              <Button className=\"btn btn-block\" onClick={this.props.handleCheckboxIsPayBtnClick} active={is_payed}>{is_payed ? 'Change to New' : 'Change to Payed'}</Button>\n          </FormGroup>\n          : null} \n      </div>\n    )    \n  }\n}","import React, { Component } from 'react'\nimport { \n  FormGroup, Label, Dropdown, \n  DropdownToggle, \n  DropdownMenu, DropdownItem, } from 'reactstrap';\n\n// Checkbox is corporate\nexport class CustomDropdown extends Component {\n  render() {\n    const { status, dropdownOpen } = this.props;\n    return (\n      <div>\n        <FormGroup>\n          <Label>Status</Label>\n          <Dropdown className=\"form-group\" isOpen={dropdownOpen} toggle={this.props.onToggle}>\n            <DropdownToggle className=\"btn-block\" caret>\n              {status || ''}\n            </DropdownToggle>\n            <DropdownMenu className=\"btn-block\">\n              <DropdownItem onClick={this.props.onChangeValue}>Candidate</DropdownItem>\n              <DropdownItem onClick={this.props.onChangeValue}>Processed</DropdownItem>\n              <DropdownItem onClick={this.props.onChangeValue}>Converted</DropdownItem>\n              <DropdownItem onClick={this.props.onChangeValue}>Rejected</DropdownItem>\n            </DropdownMenu>\n          </Dropdown>\n        </FormGroup>\n      </div>\n    )    \n  }\n}","import React, { Component } from 'react'\n\nimport * as Inputs from '../../Atoms/AddInputs/AddInputs'\nimport { CheckboxIsCorp } from '../../Atoms/Checkboxes/CheckboxIsCorp'\nimport { CheckboxIsPayed } from '../../Atoms/Checkboxes/CheckboxIsPayed'\nimport { CustomDropdown } from '../../Atoms/Dropdown/Dropdown'\n// import { DatePickLastCall } from '../../Atoms/DatePick/DatePickLastCall'\n// import FileDrop from '../../Atoms/FileDrop/FileDrop'\n\nexport class InputFormNoteQuickAdd extends Component {\n  render() {\n    const { text, phone, email,  \n      linkedin_profile, website, \n      correspondence, is_corporate,\n      is_staff, is_payed, dropdownOpen,\n      status, updateNoteId,\n      errors, \n    } = this.props;\n\n    return (\n      <div>\n        <Inputs.InputName \n          onInputChange={this.props.onInputChange} \n          text={text} \n          errors={errors} \n        />\n        <Inputs.InputPhone \n          onInputChange={this.props.onInputChange} \n          phone={phone} \n          errors={errors} \n        />\n        <Inputs.InputEmail \n          onInputChange={this.props.onInputChange} \n          email={email} \n          errors={errors} \n        />      \n        <Inputs.InputLinkedin \n          onInputChange={this.props.onInputChange} \n          linkedin_profile={linkedin_profile} \n          errors={errors} \n        />\n        <Inputs.InputWebsite \n          onInputChange={this.props.onInputChange} \n          website={website} \n          errors={errors} \n        />      \n        <Inputs.InputCorrespondence \n          onInputChange={this.props.onInputChange} \n          correspondence={correspondence} \n          errors={errors} \n        />      \n        \n        <CheckboxIsCorp \n          handleCheckboxIsCorpBtnClick={this.props.handleCheckboxIsCorpBtnClick} \n          is_corporate={is_corporate} \n        />\n        {updateNoteId !== null ?\n        <CustomDropdown \n          onChangeValue={this.props.onChangeValue} \n          onToggle={this.props.onToggle} \n          status={status} \n          dropdownOpen={dropdownOpen} \n        />:null}\n        {updateNoteId !== null && status!==\"Candidate\" && is_staff ?\n          <CheckboxIsPayed \n            handleCheckboxIsPayBtnClick={this.props.handleCheckboxIsPayBtnClick} \n            status={status} \n            is_staff={is_staff} \n            is_payed={is_payed}\n          />\n        : null}      \n         \n      </div>\n    )\n    \n  }\n}","import React, { Component } from 'react'\nimport { Button } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMale, \n  faUsers, faExchangeAlt, faLongArrowAltDown,\n  faTimes } from '@fortawesome/free-solid-svg-icons'\nimport './styles.scss'\n\nexport class OrderingHeaderTable extends Component {\n\n  state = { order: [], is_ordering_name: false, searchtext: \"\" }\n\n  onBtnClickOrderingName = (ordername) => {\n    // Create a new array based on current state:\n    let order = [...this.state.order];\n    let newordername = \"-\"+ordername\n    let is_ordering_name = false\n\n    // if ordername starts from \"C\"-character - clear that order!\n    if (ordername.charAt(0) === \"C\"){\n      let index = order.indexOf(ordername.slice(1, ordername.length))\n      // Clear ordername (remove from array)\n      if (index !== -1) {\n        order.splice(index, 1);\n      }\n    } else {\n      // Add or remove item to it\n      if (order.includes(ordername)){\n        let index = order.indexOf(ordername)\n        if (index !== -1) {          \n          order.splice(index, 1);\n          order.splice(index, 0, newordername);         \n        }\n      } else if (order.includes(newordername)) {\n        let index = order.indexOf(newordername)\n        if (index !== -1) {\n          order.splice(index, 1);\n          order.splice(index, 0, ordername);\n        }\n      } else {\n        order.push(ordername);\n\n      }\n    }\n    if (order.length > 0) {\n      is_ordering_name = true\n    } \n\n    // FIX BUG with \"owner\" negative ordering\n    if (order.includes(\"-owner\")&&order.length===1) {\n      // adding \"-id\" field to multiply filter\n      // if has only \"-owner\" field\n      order.push(\"-id\");\n    } else {\n      // remove \"-id\" in all other variants\n      let index = order.indexOf(\"-id\")\n      if (index !== -1) {        \n        order.splice(index, 1);\n      }      \n    }\n\n    // Set state\n    this.setState({is_ordering_name: is_ordering_name, searchtext: \"\", order}, function () {\n        // console.log(this.state)\n        this.props.onOrderNotes(this.state);\n    });\n  }\n\n  render() {\n\n    const {order} = this.state;\n\n    return (\n          <thead>\n            <tr>\n              <th className=\"table-num__title\">#</th>\n              <th className=\"table-investor__title\"><FontAwesomeIcon icon={faMale} color=\"black\"/> / <FontAwesomeIcon icon={faUsers} color=\"black\"/></th>\n              <th>\n                <div className=\"table-investor__ordering\">\n                  <span>Name </span>\n                  <div className=\"table-investor__ordering--control\">\n                    <Button color=\"link\" onClick={() => this.onBtnClickOrderingName(\"text\")}>\n                    {order.includes(\"text\") ? <FontAwesomeIcon icon={faLongArrowAltDown} color=\"black\"/>\n                    :order.includes(\"-text\") ? <FontAwesomeIcon rotation={180} icon={faLongArrowAltDown} color=\"black\"/>\n                    :<FontAwesomeIcon rotation={90} icon={faExchangeAlt} color=\"grey\"/>}</Button>\n                    {order.includes(\"text\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"Ctext\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                    :order.includes(\"-text\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"C-text\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                    :\"\"}\n                  </div>\n                </div>\n              </th>\n              <th>\n                <div className=\"table-investor__ordering\">                  \n                  <span>Dev </span>\n                  <div className=\"table-investor__ordering--control\">\n                    <Button color=\"link\" onClick={() => this.onBtnClickOrderingName(\"owner\")}>\n                    {order.includes(\"owner\") ? <FontAwesomeIcon icon={faLongArrowAltDown} color=\"black\"/>\n                    :order.includes(\"-owner\") ? <FontAwesomeIcon rotation={180} icon={faLongArrowAltDown} color=\"black\"/>\n                    :<FontAwesomeIcon rotation={90} icon={faExchangeAlt} color=\"grey\"/>}</Button>\n                    {order.includes(\"owner\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"Cowner\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                    :order.includes(\"-owner\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"C-owner\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                    :\"\"}\n                  </div>\n                </div>\n              </th>\n              <th className=\"table-phone__title\">Phone</th>\n              <th>\n                <div className=\"table-investor__ordering\">                  \n                  <span>Status </span>\n                  <div className=\"table-investor__ordering--control\">\n                    <Button color=\"link\" onClick={() => this.onBtnClickOrderingName(\"status\")}>\n                    {order.includes(\"status\") ? <FontAwesomeIcon icon={faLongArrowAltDown} color=\"black\"/>\n                    :order.includes(\"-status\") ? <FontAwesomeIcon rotation={180} icon={faLongArrowAltDown} color=\"black\"/>\n                    :<FontAwesomeIcon rotation={90} icon={faExchangeAlt} color=\"grey\"/>}</Button>\n                    {order.includes(\"status\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"Cstatus\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                    :order.includes(\"-status\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"C-status\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                    :\"\"}\n                  </div>\n                </div>\n              </th>\n              <th>\n                <div className=\"table-investor__ordering \">                  \n                  <span className=\"table-investor__ordering--payment\">Payment </span>\n                  <div className=\"table-investor__ordering--control\">\n                    <Button color=\"link\" onClick={() => this.onBtnClickOrderingName(\"is_payed\")}>\n                    {order.includes(\"is_payed\") ? <FontAwesomeIcon icon={faLongArrowAltDown} color=\"black\"/>\n                    :order.includes(\"-is_payed\") ? <FontAwesomeIcon rotation={180} icon={faLongArrowAltDown} color=\"black\"/>\n                    :<FontAwesomeIcon rotation={90} icon={faExchangeAlt} color=\"grey\"/>}</Button>\n                    {order.includes(\"is_payed\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"Cis_payed\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                    :order.includes(\"-is_payed\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"C-is_payed\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                    :\"\"}\n                  </div>\n                </div>\n              </th>\n              <th>Manage</th>\n            </tr>\n          </thead>\n    )\n    \n  }\n}","import React, { Component } from 'react'\nimport { Button } from 'reactstrap';\nimport { Link } from 'react-router-dom'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMale, faUsers, faEdit, \n  faCheckCircle, faHandHoldingUsd, faTrash } from '@fortawesome/free-solid-svg-icons'\nimport './styles.scss'\n\nexport class OrderingBodyTable extends Component {\n\n  render() { \n    const { post, index } = this.props\n\n    return (\n        <tbody key={index}>\n          {post.noteitems !== undefined && post.noteitems.length > 0 ? post.noteitems.map((note, id) => {\n            return (                                    \n                <tr key={id}>\n                    <th scope=\"row\" className=\"table-num__text\">{id+1}</th>\n                    <td className=\"table-investor__text\">{note.is_corporate ? <FontAwesomeIcon icon={faUsers} color=\"black\"/> : <FontAwesomeIcon icon={faMale} color=\"black\"/>}</td>\n                    <td>\n                      <Link className=\"info-link\" to={{pathname:`/investors/${note.id}`,\n                            state: {fromDashboard: false, prevLink: window.location.pathname}\n                            }}>{note.text}</Link>\n                    </td>\n                    <td>\n                      <Link className=\"info-link\" to={{pathname:`/profile/${note.owner}`,\n                            state: {fromDashboard: false, prevLink: window.location.pathname}\n                            }}>{note.owner_username}</Link></td>\n                    <td className=\"table-phone__text\">{note.phone}</td>\n                    <td>{note.status}</td>\n                    <td>{note.is_payed ? <FontAwesomeIcon icon={faCheckCircle} color=\"black\"/> : <FontAwesomeIcon icon={faHandHoldingUsd} color=\"black\"/>}</td>\n                    <td>\n                      <Button className=\"rounded-0\" color=\"info\" title=\"edit\" onClick={() => this.props.onSelectForEdit(index, id)}><FontAwesomeIcon icon={faEdit} /></Button>\n                      <Button className=\"rounded-0\" color=\"secondary\" onClick={() => this.props.onToggleModalDelete(index, id)} title=\"delete\"><FontAwesomeIcon icon={faTrash} /></Button>\n                    </td>\n                </tr>                                        \n              )\n            }\n          ) : null}\n        </tbody>\n      )    \n  }\n}\n","export const handleValidation = (fields) => {\n  // let fields = this.state;\n  let errors = {};\n\n  //Name\n  if(fields[\"text\"].trim() === \"\"){\n     errors[\"text\"] = \"Cannot be empty\";\n  } else {\n    if(typeof fields[\"text\"] !== \"undefined\"){\n       if(!fields[\"text\"].match(/^[a-zA-Z]+$/)){\n          errors[\"text\"] = \"Name must be only letters\";\n       } else if (fields[\"text\"].length > 15) {\n          errors[\"text\"] = \"Your name is too long\";\n       }        \n    }\n  }\n\n  //Phone\n  if(fields[\"phone\"].trim() === \"\"){\n     errors[\"phone\"] = \"Phone cannot be empty\";\n  } else {\n    if(typeof fields[\"phone\"] !== \"undefined\"){\n      if(!fields[\"phone\"].match(/^[0-9\\-\\\\+]{9,15}$/)){\n        errors[\"phone\"] = \"Not phone number\";\n      }      \n    }\n  }\n  // Email\n  if(fields[\"email\"].trim() === \"\"){\n    errors[\"email\"] = \"Cannot be empty\";\n  } else {\n    if(typeof fields[\"email\"] !== \"undefined\"){\n      let lastAtPos = fields[\"email\"].lastIndexOf('@');\n      let lastDotPos = fields[\"email\"].lastIndexOf('.');\n      if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"email\"].indexOf('@@') === -1 && lastDotPos > 2 && (fields[\"email\"].length - lastDotPos) > 2)) {\n        errors[\"email\"] = \"Email is not valid\";\n      }\n    }\n  }\n  // Linkedin profile\n  if(fields[\"linkedin_profile\"].trim() === \"\"){\n    errors[\"linkedin_profile\"] = \"Cannot be empty\";\n  } else {\n    if(typeof fields[\"linkedin_profile\"] !== \"undefined\"){\n      let re=/^((https?|ftp|smtp):\\/\\/)+(www.)?[a-z0-9]+(\\.[a-z]{2,}){1,3}(#?\\/?[a-zA-Z0-9-_#]+)*\\/?(\\?[a-zA-Z0-9-_]+=[a-zA-Z0-9-%]+&?)?$/;\n      if (!re.test(fields[\"linkedin_profile\"])) {\n        errors[\"linkedin_profile\"] = \"Not Linkedin URL\";\n      }\n    }\n  }\n  // Website\n  if(fields[\"website\"].trim() === \"\"){\n  } else {\n    if(typeof fields[\"website\"] !== \"undefined\"){\n      let re=/^((https?|ftp|smtp):\\/\\/)+(www.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_+.~#?&//=]*)?$/;\n      if (!re.test(fields[\"website\"])) {\n        errors[\"website\"] = \"URL is not valid\";\n      }\n    }\n  }\n\n  return errors;\n}\n\n// export const validateEmailForm = (values) => {\n//   const errors = {};\n//   const { email } = values;\n//   if (!email) {\n//       errors.email = 'This field is required.'\n//   } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\n//       errors.email = 'Invalid email address'\n//   }  \n//   return errors;\n// }","import React, { Component } from 'react'\n\nimport {connect} from 'react-redux';\nimport { Link } from 'react-router-dom'\nimport { Form, FormText,  \n  FormGroup, Button,\n  Table, CustomInput,\n  Modal, ModalHeader, ModalBody, ModalFooter, } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlusSquare, \n  faSearch, faSave, faTimes,  } from '@fortawesome/free-solid-svg-icons'\n\nimport * as notes from \"../../../../actions/notesActions\";\nimport { LoadScreen, LoadObject } from '../../../general/Organisms/LoadScreen/LoadScreen'\nimport { ModalDelete } from '../../Organisms/Modal/Modal'\nimport { InputFormNoteQuickAdd } from '../../Molecules/Forms/InputFormNoteQuickAdd'\nimport { OrderingHeaderTable } from '../../Molecules/Tables/OrderingHeaderTable/OrderingHeaderTable'\nimport { OrderingBodyTable } from '../../Molecules/Tables/OrderingBodyTable/OrderingBodyTable'\nimport { handleValidation } from '../../../../utils/helpers'\nimport './styles.scss'\n\nclass Notes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: \"\",\n      phone: \"\",\n      status: 'Candidate',\n      email: \"\",\n      linkedin_profile: \"\",\n      website: \"\",\n      correspondence: \"\",\n      is_corporate: false,\n      is_payed: false,\n      searchtext: \"\",\n      updateNoteId: null,\n      updateNoteIndex: null,\n      dropdownOpen: false,\n      is_ordering_name: false,\n      modal: false,\n      modaldelete: false,\n      is_staff: false,\n      loading: true,\n      fetching: true,\n      nextafterdelete: \"\",\n      deleted: false,\n      order: [],\n      errors: {},\n      notes: [\n          {\n            count: null,\n            next: null,\n            previous: null,\n            noteitems: []\n          },\n        ],\n      }\n  }\n\n  // // END FETCH DATA AFTER PROPS\n  componentDidMount () {\n    // Check if was ordering\n    if (!(Array.isArray(this.props.notes[0].noteitems) && this.props.notes[0].noteitems.length)) {\n      // array exists and is not empty\n      this.props.fetchNotes()\n    } else {\n      this.props.orderNotes(\"\")\n    }\n\n  }\n\n  resetForm = () => {\n    this.setState({text: \"\", phone: '', email:'', errors: {}, \n      updateNoteId: null, status: 'Candidate', is_corporate: false, \n      is_payed: false, linkedin_profile: \"\", website: \"\",\n      correspondence: \"\", });\n  }\n  addNew = () => {\n    this.setState({text: \"\", phone: '', email:'', errors: {}, \n      updateNoteId: null, status: 'Candidate', is_corporate: false, \n      is_payed: false, linkedin_profile: \"\", website: \"\", \n      modal: true, correspondence: \"\", });\n  }\n  resetSearch = () => {\n    if (this.state.searching) {\n        this.props.searchNotes(\"\") \n        this.setState({\n          is_ordering_name: false,\n          order: [],\n          searching: false\n        });             \n    }    \n    this.setState({ searchtext: \"\" });\n  }\n \n  selectForEdit = (index, id) => {\n    let note = this.props.notes[index].noteitems[id];\n    this.setState({text: note.text, phone: note.phone, \n      status: note.status, is_payed: note.is_payed, \n      is_corporate: note.is_corporate, email: note.email, \n      linkedin_profile: note.linkedin_profile, \n      website: note.website, correspondence:note.correspondence,\n      updateNoteId: id, updateNoteIndex: index, modal: true, });\n  }\n\n  selectForDelete = (index, id) => {\n    this.props.deleteNote(index, id)\n    this.setState({\n      modaldelete: false,\n    })     \n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.notes !== prevProps.notes) {\n      this.setState({\n        loading: this.props.notes[0].loading,\n        fetching: this.props.notes[0].fetching,\n      }) \n      // если длина массива меньше чем предыдущая длина (один элемент удален)\n      // то пересчитываем эндпоинт для фетча (вычитаем из последнего символа next\n      // число \"1\" чтобы получить текущий фетч), если в нексте на конце \"1\", то обрезаем\n      // до знака \"?\"\n      let nextForDelete = \"\";\n      if(this.props.notes[0].deleted && this.props.notes[0].next) {\n        nextForDelete = this.props.notes[0].next\n        // console.log(nextForDelete)\n        let lastChar = parseInt(nextForDelete.slice(-1), 10)\n        if ((lastChar-1) >= 2) {\n          nextForDelete = nextForDelete.slice(0, -1)+(lastChar-1);\n          // console.log(nextForDelete)\n        }\n        \n        //add flag nextafterdelete to correctly fetch\n        this.setState({nextafterdelete: nextForDelete,\n          deleted: false})\n      }\n      // if (this.props.lead) {\n      //   const leads = paymentsUtil(this.props.lead.leads)\n      //   this.setState({leads: leads}); \n      // }\n\n    }\n  }   \n    \n  toggle = () => {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  }\n  toggleModal = () => {\n    this.setState(prevState => ({\n      modal: !prevState.modal,\n    }));\n  }\n  toggleModalDelete = (index, id) => {\n    let text = \"\"\n    if (id !== undefined) {\n      text = this.props.notes[index].noteitems[id].text\n    }\n    this.setState(prevState => ({\n      modaldelete: !prevState.modaldelete,\n      index: index,\n      id: id,\n      text: text\n    }));\n  }\n\n  handleChange = (e) => {\n    e.preventDefault();\n    let key = e.target.name\n    let value = e.target.value\n\n    this.setState({\n        [key]: value,\n        errors: {}\n    })\n\n  }\n\n  changeValue = (e) => {\n    this.setState({status: e.currentTarget.textContent})\n  }\n  loadMorePosts = () => {\n    const {next} = this.props.notes[this.props.notes.length - 1]\n    this.setState({\n      fetching: true,\n    });\n    // Check if investor is after delete to correct fetch \n    if (this.state.nextafterdelete) {\n      this.props.fetchNotes(this.state.nextafterdelete)\n      //clear flag nextafterdelete\n      this.setState({nextafterdelete: \"\"})\n    } else {\n      if (next !== null || next !== undefined) {\n        // checking with timeout function\n        // setTimeout( () => {this.props.fetchNotes(next)}, 5000 )\n        this.props.fetchNotes(next)             \n      }\n    }\n     \n  }\n  searchNotes = () => {\n      const {searchtext} = this.state\n      if (searchtext !== null || searchtext !== undefined) {\n          this.props.searchNotes(searchtext) \n          this.setState({\n            is_ordering_name: false,\n            order: [],\n            searching: true,\n          });             \n      }  \n  }\n\n  onCheckboxIsCorpBtnClick = () => {\n    this.setState({\n      is_corporate: !this.state.is_corporate,\n    });\n  }\n  onCheckboxIsPayBtnClick = () => {\n    this.setState({\n      is_payed: !this.state.is_payed,\n    });\n  }\n\n  onOrderNotes = (dataFromCallback) => {\n    // Array to string with ','\n    \n    if (dataFromCallback && dataFromCallback.order.length) {\n      let mapped = dataFromCallback.order.map((item)=>(item)).join(\",\");\n      this.setState({...dataFromCallback});      \n      this.props.orderNotes(mapped)              \n    } else {\n      this.setState({order: []});\n      this.props.orderNotes(\"\")   \n    }    \n  }\n  submitNote = (e) => {\n      e.preventDefault();\n      // check validation from helper file\n      const validation_errors = handleValidation(this.state)\n      // check validation_errors dictionary is empty or has any errors\n      if (Object.keys(validation_errors).length === 0) {\n        // Check what do you want add or edit?\n        if (this.state.updateNoteId === null) {\n            this.props.addNote(this.state.text, this.state.phone, this.state.status, \n              this.state.is_corporate, this.state.is_payed, this.state.email, \n              this.state.linkedin_profile, this.state.website, this.state.correspondence,)\n              .then(this.resetForm)\n              .then(this.toggleModal)            \n              .catch(function (error) {\n                 console.log(\"error\", error);\n               });\n        } else {\n            this.props.updateNote(this.state.updateNoteIndex, this.state.updateNoteId, \n              this.state.text, this.state.phone, this.state.status, this.state.is_corporate, \n              this.state.is_payed, this.state.email, this.state.linkedin_profile, \n              this.state.website, this.state.correspondence)\n              .then(this.resetForm)\n              .then(this.toggleModal)              \n              .catch(function (error) {\n                 console.log(\"error\", error);\n               });\n        }\n      } else {\n        this.setState({errors: validation_errors}); \n      }\n  }\n  renderModal() {\n      const { modal, \n        text, phone, email, linkedin_profile,\n        website, correspondence, is_corporate,\n        status, is_payed, dropdownOpen,\n        updateNoteId,\n        errors } = this.state;\n      const { is_staff } = this.props;\n      \n      if (this.state.modal) {\n        return (\n          <Modal isOpen={modal} toggle={this.toggleModal}>\n            <Form onSubmit={this.submitNote}>            \n\n              <ModalHeader toggle={this.toggleModal}>{updateNoteId === null ? \"New Investor\" : \"Edit Investor\"}</ModalHeader>\n              <ModalBody>                    \n                <InputFormNoteQuickAdd\n                  onInputChange={this.handleChange}\n                  handleCheckboxIsCorpBtnClick={this.onCheckboxIsCorpBtnClick}\n                  handleCheckboxIsPayBtnClick={this.onCheckboxIsPayBtnClick} \n                  onToggle={this.toggle} \n                  onChangeValue={this.changeValue}\n\n                  text={text} \n                  phone={phone}\n                  email={email}\n                  linkedin_profile={linkedin_profile}\n                  website={website}\n                  correspondence={correspondence}\n                  is_corporate={is_corporate}\n                  is_staff={is_staff}\n                  status={status}\n                  is_payed={is_payed}\n                  dropdownOpen={dropdownOpen}\n                  updateNoteId={updateNoteId}\n\n                  errors={errors} \n                />                              \n              </ModalBody>\n              <ModalFooter> \n                <FormGroup row>                   \n                <Button className=\"rounded-0\" color=\"info\" type=\"submit\"><FontAwesomeIcon icon={faSave} color=\"white\"/></Button>              \n                {updateNoteId === null ? <Button className=\"rounded-0\" outline onClick={this.resetForm}>Clear</Button> : null}\n                <Button className=\"rounded-0\" onClick={this.toggleModal}>Cancel</Button>\n                </FormGroup>\n              </ModalFooter>\n            </Form>\n          </Modal>            \n        );\n      }\n    }\n\n  renderNotes () {\n    const { notes } = this.props\n    const { errors, modal, searchtext, modaldelete, index, id, text, fetching } = this.state;\n    const { next } = this.props.notes[this.props.notes.length - 1];\n\n    return (\n      <div>\n        <div className=\"centering notes-header mt-2\"> \n          <div className=\"centering-left\"> \n            <Button className=\"rounded-0\" color=\"info\" onClick={this.addNew}><FontAwesomeIcon icon={faPlusSquare} color=\"white\"/><span className=\"btn-quick__text\"> Quick Add</span></Button>\n          </div>\n          <div className=\"centering-center\">\n          {modal ? this.renderModal() : null}\n          {modaldelete ? \n            <ModalDelete \n              modaldelete={modaldelete} \n              index={index} \n              id={id} \n              text={text}\n              toggle={this.toggleModalDelete}\n              onSelectForDelete={this.selectForDelete}\n            /> \n          : null}\n            <FormGroup row>\n              <CustomInput inline\n                id=\"searchtext\"\n                type=\"text\" \n                name=\"searchtext\"\n                value={searchtext || ''}\n                placeholder=\"Search by Name...\"\n                onChange={this.handleChange}\n                \n                />\n                {errors.searchtext ? <FormText color=\"danger\">{errors.searchtext}</FormText>: \"\"}\n              <Button className=\"rounded-0\" onClick={this.searchNotes}><FontAwesomeIcon icon={faSearch} color=\"white\"/></Button>\n              {searchtext !== \"\" ? \n                <Button outline className=\"rounded-0 btn-sort__clear\" onClick={this.resetSearch}>\n                  <FontAwesomeIcon rotation={90} icon={faTimes}/>\n                </Button> \n              : null}          \n            </FormGroup>\n          </div>\n          <div className=\"centering-right\"> \n            <Link to={\"/investors/add\"}><Button className=\"rounded-0 btn-add\" color=\"info\">Add New</Button></Link>\n          </div>\n        </div>          \n        <div className=\"centering\"> \n          <div className=\"centering-left\"></div>\n          <h3 className=\"centering-center\">Leads</h3>\n          <div className=\"centering-right centering-right__tablepreffix\">\n          </div>\n        </div>\n        <Table className=\"table text-center table-investors\" striped>\n          <OrderingHeaderTable\n            onOrderNotes={this.onOrderNotes} \n          />\n          {notes !== undefined ? notes.map((post, index)=>{\n            return (\n              <OrderingBodyTable\n                  post={post}\n                  key={`${index}`}\n                  index={index}\n\n                  onSelectForEdit={this.selectForEdit}\n                  onToggleModalDelete={this.toggleModalDelete}\n                />\n              )\n          })\n        :null}   \n        </Table>\n        <div className=\"text-center\">\n          {next !== null && !fetching ? \n            <Button className=\"rounded-0\" onClick={this.loadMorePosts}>Load more</Button> \n          : ''}\n          {fetching && <LoadObject objectclass=\"loadnotes\" />}\n        </div>\n      </div>\n    )\n  }\n  render () {\n    const { loading } = this.state\n    return(\n      <div>\n        { loading ? <LoadScreen /> : this.renderNotes() }\n      </div>      \n    )\n  }\n}\n\nconst mapStateToProps = state => {\n    return {\n      notes: state.notes,\n      deleted: state.deleted,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchNotes: (next) => {\n            dispatch(notes.fetchNotes(next));\n        },\n        addNote: (text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence) => {\n            return dispatch(notes.addNote(text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence));\n        },\n        updateNote: (index, id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence) => {\n            return dispatch(notes.updateNote(index, id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence));\n        },\n        deleteNote: (index, id) => {\n            dispatch(notes.deleteNote(index, id));\n        },\n        searchNotes: (searchtext) => {\n            dispatch(notes.searchNotes(searchtext));\n        },\n        orderNotes: (order) => {\n            dispatch(notes.orderNotes(order));\n        },\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notes);","import React, { Component } from 'react'\nimport { Button, \n  FormGroup, Label, } from 'reactstrap';\nimport DatePicker from \"react-datepicker\";\nimport moment from \"moment\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './styles.scss'\n\n// Checkbox is corporate\nexport class DatePickLastCall extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      add_call: false,\n      last_call: \"\",      \n    }\n  }\n  handleChangeDate = (date) => {\n    if (date) {\n      this.props.handleChangeDate(moment(date, moment.defaultFormat).toDate());\n    } else {\n      this.props.handleChangeDate(null);\n    }\n    \n  }\n\n  render() {\n    // const { last_call } = this.state;\n    const { last_call } = this.props;\n    const is_valid_date = moment(last_call).isValid()\n\n    return ( \n      <div>\n        <FormGroup>\n          <Label>Last Call {is_valid_date ? <Button className=\"btn\" onClick={this.props.handleResetCallClick}>Reset</Button>: \"\"}</Label>\n          {is_valid_date ?\n          <div>\n            <DatePicker     \n              selected={is_valid_date ? moment(last_call, moment.defaultFormat).toDate() : moment(this.state.last_call, moment.defaultFormat).toDate()}\n              onChange={this.handleChangeDate}\n              showTimeSelect\n              timeFormat=\"HH:mm\"\n              timeIntervals={15}\n              dateFormat=\"d MMMM yyyy HH:mm\"\n              timeCaption=\"time\"\n            />\n          </div>\n          :                     \n            <Button className=\"btn btn-block\" onClick={this.props.handleAddCallClick}>Add Last Call</Button>\n          }\n        </FormGroup>\n      </div>\n    )    \n  }\n}","import React, { Component } from 'react'\nimport Dropzone from 'react-dropzone'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFileUpload } from '@fortawesome/free-solid-svg-icons'\nimport './styles.scss'\n\nconst imageMaxSize = 10000000; //bytes\n\nclass FileDrop extends Component {\n\n\tonDrop = (acceptedFiles, rejectedFiles) => {\n\t\t// console.log(acceptedFiles, rejectedFiles)\n\t\tthis.props.onSelectDrop(acceptedFiles);\n\t}\n\trender () {\n\t\t\n\t\tconst { documents, detail } = this.props;\n\t\tlet drop_class\n\t\tlet drop_text\n\n\t\tif (documents) {\n\t\t\tif (detail) {\n\t\t\t\tif (documents === detail) {\n\t\t\t\t  drop_class = \"dropzone-field dropzone-field__default\"\n\t\t\t\t  drop_text = \"  Replace Document\"\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t  drop_class = \"dropzone-field dropzone-field__success\";\n\t\t\t  \t  drop_text = \"  Save to Attach\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdrop_class = \"dropzone-field dropzone-field__success\";\n\t\t\t\tdrop_text = \"  Save to Attach\";\n\t\t\t}\n\t\t} else {\n\t\t\tdrop_class = \"dropzone-field dropzone-field__default\";\n\t\t\tdrop_text = \"  Add Document\"\n\t\t} \n\n\t\treturn (\n\t\t  <div>Documents:\n            <span className=\"document-title\">{detail !== \"null\" ? \" (\"+detail.split(\"/\").slice(-1)[0]+\")\" : \"\"}</span>\n\t\t    <Dropzone\n\t            onDrop={this.onDrop}\t\t            \n\t            multiple={false}\n\t            maxSize={imageMaxSize}\n\t            >\n\t                {({getRootProps, getInputProps}) => (\n\t                    <div {...getRootProps()} className={`${drop_class}`}>\n\t                        <input {...getInputProps()} />\n\t                       \t<div>\n\t                       \t\t<FontAwesomeIcon icon={faFileUpload} color=\"white\"/>\n\t                       \t\t\t<span className=\"dropzone-field__text\">{`${drop_text}`}</span>\n\t\t\t\t\t\t\t</div>\n\t                    </div>\n\t                )}\n\t\t\t</Dropzone>﻿\n\t\t  </div>\n\t\t  )\n\t}\n}\nexport default FileDrop","import React, { Component } from 'react'\n\nimport * as Inputs from '../../Atoms/AddInputs/AddInputs'\nimport { CheckboxIsCorp } from '../../Atoms/Checkboxes/CheckboxIsCorp'\nimport { CheckboxIsPayed } from '../../Atoms/Checkboxes/CheckboxIsPayed'\nimport { CustomDropdown } from '../../Atoms/Dropdown/Dropdown'\nimport { DatePickLastCall } from '../../Atoms/DatePick/DatePickLastCall'\nimport FileDrop from '../../Atoms/FileDrop/FileDrop'\n\nexport class InputFormNoteDetail extends Component {\n  render() {\n    const { text, phone, email,  \n      linkedin_profile, website, \n      correspondence, is_corporate,\n      status, dropdownOpen, is_payed,\n      is_staff, add_call, last_call,\n      documents, detail,\n      errors, } = this.props;\n      \n    return (\n      <div>        \n        <Inputs.InputName \n          onInputChange={this.props.onInputChange} \n          text={text} \n          errors={errors} \n        />\n        <Inputs.InputPhone \n          onInputChange={this.props.onInputChange} \n          phone={phone} \n          errors={errors} \n        />\n        <Inputs.InputEmail \n          onInputChange={this.props.onInputChange} \n          email={email} \n          errors={errors} \n        />      \n        <Inputs.InputLinkedin \n          onInputChange={this.props.onInputChange} \n          linkedin_profile={linkedin_profile} \n          errors={errors} \n        />\n        <Inputs.InputWebsite \n          onInputChange={this.props.onInputChange} \n          website={website} \n          errors={errors} \n        />      \n        <Inputs.InputCorrespondence \n          onInputChange={this.props.onInputChange} \n          correspondence={correspondence} \n          errors={errors} \n        />        \n        <CheckboxIsPayed \n          handleCheckboxIsPayBtnClick={this.props.handleCheckboxIsPayBtnClick} \n          status={status} \n          is_staff={is_staff} \n          is_payed={is_payed}\n        />                \n        <CheckboxIsCorp \n          handleCheckboxIsCorpBtnClick={this.props.handleCheckboxIsCorpBtnClick} \n          is_corporate={is_corporate} \n        />          \n        <CustomDropdown \n          onChangeValue={this.props.onChangeValue} \n          onToggle={this.props.onToggle} \n          status={status} \n          dropdownOpen={dropdownOpen} \n        />      \n        <DatePickLastCall \n          handleChangeDate={this.props.handleChangeDate} \n          handleResetCallClick={this.props.handleResetCallClick} \n          handleAddCallClick={this.props.handleAddCallClick} \n          add_call={add_call} \n          last_call={last_call} \n        />      \n        <FileDrop \n          onSelectDrop={this.props.onSelectDrop} \n          documents={documents}\n          detail={detail}\n        />\n      </div>\n    )\n    \n  }\n}","import React, { Component } from 'react'\nimport { Table } from 'reactstrap';\n\nimport { ReturnButton, EditButton } from '../../../../general/Atoms/Buttons/Buttons'\nimport moment from \"moment\";\nimport './styles.scss'\n\nexport class DetailPreviewTable extends Component {\n  render() {\n    const { text, phone, email,  \n      linkedin_profile, website, \n      correspondence, is_corporate,\n      status, is_payed,\n      last_call, documents, \n    } = this.props;\n\n    return (\n            <div className=\"mt-2 table-detail\"> \n                <Table className=\"userprofile-header\">\n                  <tbody>\n                    <tr>\n                      <th>\n                        <h2>Investor <b>{text}</b></h2>\n                      </th>\n                      <td>\n                        <ReturnButton />\n                        <EditButton\n                          onEdit={this.props.onEdit} \n                        />\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>             \n                <Table striped>\n                  <tbody>\n                    <tr>\n                      <th>Phone</th>\n                      <td>{phone}</td>\n                    </tr>\n                    <tr>\n                      <th>Email</th>\n                      <td className=\"table-correspondence__data\">{email}</td>\n                    </tr>\n                    <tr>\n                      <th>Linkedin</th>\n                      <td className=\"table-correspondence__data\"><a className=\"table-correspondence__url\" href={`${linkedin_profile}`} >{linkedin_profile}</a></td>\n                    </tr>\n                    <tr>\n                      <th>Website</th>\n                      <td className=\"table-correspondence__data\"><a className=\"table-correspondence__url\" href={`${website}`} >{website}</a></td>\n                    </tr>\n                    <tr>\n                      <th>Correspondence</th>\n                      <td className=\"table-correspondence__data\">{correspondence}</td>\n                    </tr>\n                    <tr>\n                      <th>Investor</th>\n                      <td>{is_corporate ? \"Corporate\" : \"Individual\" }</td>\n                    </tr>\n                    <tr>\n                      <th>Status</th>\n                      <td>{status}</td>\n                    </tr>\n                    <tr>\n                      <th>Payment</th>\n                      <td>{is_payed ? \"Payed\" : \"New\" }</td>\n                    </tr>\n                    <tr>\n                      <th>Calls</th>\n                      <td>{last_call ? moment(last_call).format(\"D MMM YYYY HH:mm\") : \"\"}</td>\n                    </tr>\n                    <tr>\n                      <th>Documents</th>\n                      <td>{documents ? <a className=\"table-correspondence__url\" href={`${documents}`} >{documents.split(\"/\").slice(-1)[0]}</a> : \"\"}</td>\n                    </tr>\n                  </tbody>\n                </Table>\n            </div>\n    )\n    \n  }\n}","import React, {Component} from 'react'\n\nimport * as detail from \"../../../../actions/noteDetailActions\";\nimport {connect} from 'react-redux';\nimport { Form, Container, Row, FormGroup, Button,\n    Modal, ModalHeader, ModalBody, ModalFooter, } from 'reactstrap';\nimport moment from \"moment\";\n\nimport { ErrorPage } from '../../../general/Organisms/ErrorPage/ErrorPage'\nimport { LoadScreen } from '../../../general/Organisms/LoadScreen/LoadScreen'\nimport { SaveButton } from '../../../general/Atoms/Buttons/Buttons'\nimport { InputFormNoteDetail } from '../../Molecules/Forms/InputFormNoteDetail'\nimport { DetailPreviewTable } from '../../Molecules/Tables/DetailPreviewTable/DetailPreviewTable'\nimport { handleValidation } from '../../../../utils/helpers'\n\nimport './styles.scss'\n\nclass NoteDetail extends Component {\n\n    constructor(props){\n        super(props);\n  \n        this.state = {\n          text: \"\",\n          phone: \"\",\n          status: \"\",\n          email:\"\",\n          linkedin_profile: \"\",\n          website: \"\",\n          correspondence: \"\",\n          is_corporate: false,\n          is_payed: false,\n          id: null,\n          loading: true,\n          errors: {},\n          hasError: false,\n          dropdownOpen: false,\n          detail: {},\n          add_call: false,\n          last_call: \"\", \n          documents: null,\n          attached: false, \n          modal: false,     \n        }\n    }\n\n    componentDidMount(){\n      if (this.props.match){\n        const {id} = this.props.match.params\n        this.setState({\n            id: id,\n        })\n        this.props.fetchDetailNote(id)        \n      }      \n    }\n\n    componentWillReceiveProps(nextProps) {\n      const detailed = nextProps.detail\n\n      if (Object.keys(detailed).length) {\n        this.setState({\n          text: detailed.text,\n          phone: detailed.phone,\n          status: detailed.status,\n          is_corporate: detailed.is_corporate,\n          is_payed: detailed.is_payed,\n          email: detailed.email,\n          linkedin_profile: detailed.linkedin_profile,\n          website: detailed.website,\n          correspondence: detailed.correspondence,\n          last_call: moment(detailed.last_call, moment.defaultFormat).toDate(),\n          documents: detailed.documents,\n          hasError: detailed.hasError,\n          loading: detailed.loading,\n          errors: detailed.errors\n        }) \n      }        \n    }    \n    toggle = () => {\n      this.setState(prevState => ({\n        dropdownOpen: !prevState.dropdownOpen\n      }));\n    }\n    toggleModal = () => {\n      this.setState(prevState => ({\n        modal: !prevState.modal,\n      }));\n    }\n    handleChange = (e) => {\n      e.preventDefault();\n      let key = e.target.name\n      let value = e.target.value\n      this.setState({\n          [key]: value,\n          errors: {}\n      })\n    }\n    changeDate = (date) => {      \n      this.setState({last_call: date})\n    }\n\n    changeValue = (e) => {\n      this.setState({status: e.currentTarget.textContent})\n    }\n\n    getData = (documents) => {\n      // console.log(\"getData!\")\n      this.setState({\n        documents: documents[0],\n        attached: true,\n      })\n    }\n\n    onCheckboxIsCorpBtnClick = () => {\n      this.setState({\n        is_corporate: !this.state.is_corporate,\n      });\n    }\n    onCheckboxIsPayBtnClick = () => {\n      this.setState({\n        is_payed: !this.state.is_payed,\n      });\n    }\n    onAddCallClick = () => {\n      this.setState({\n        add_call: true,\n        last_call: moment(new Date(), moment.defaultFormat).toDate(),\n      });\n    }\n\n    onResetCallClick = () => {\n      this.setState({\n        add_call: false,\n        last_call: \"\",\n      });\n    }\n\n    submitNote = (e) => {\n      e.preventDefault();\n      // check validation from helper file\n      const validation_errors = handleValidation(this.state)\n      // check validation_errors dictionary is empty or has any errors\n      if (Object.keys(validation_errors).length === 0) {\n        this.props.updateDetailNote(this.state.id, this.state.text, \n          this.state.phone, this.state.status, this.state.is_corporate, \n          this.state.is_payed, this.state.email, this.state.linkedin_profile, \n          this.state.website, this.state.correspondence, this.state.last_call,\n          this.state.documents, this.state.attached,)              \n        this.toggleModal()            \n\n      } else {\n        this.setState({errors: validation_errors}); \n      }\n    }\n  renderModal() {\n      const { detail, is_staff } = this.props;\n      const { modal, \n        text, phone, email, \n        linkedin_profile, website,\n        correspondence, is_corporate,\n        status, dropdownOpen, is_payed,\n        add_call, last_call, documents,\n        errors } = this.state;\n      \n      if (this.state.modal) {\n        return (\n          <Modal isOpen={modal} toggle={this.toggleModal}>\n            <Form onSubmit={this.submitNote}>            \n\n              <ModalHeader toggle={this.toggleModal}>Edit Investor</ModalHeader>\n              <ModalBody>                    \n                <InputFormNoteDetail \n                  onInputChange={this.handleChange}\n                  handleCheckboxIsCorpBtnClick={this.onCheckboxIsCorpBtnClick}\n                  handleCheckboxIsPayBtnClick={this.onCheckboxIsPayBtnClick} \n                  onToggle={this.toggle} \n                  onChangeValue={this.changeValue}\n                  handleChangeDate={this.changeDate}\n                  handleResetCallClick={this.onResetCallClick}\n                  handleAddCallClick={this.onAddCallClick}\n                  onSelectDrop={this.getData}\n\n                  text={text} \n                  phone={phone}\n                  email={email}\n                  linkedin_profile={linkedin_profile}\n                  website={website}\n                  correspondence={correspondence}\n                  is_corporate={is_corporate}\n                  status={status}\n                  is_staff={is_staff}\n                  is_payed={is_payed}\n                  dropdownOpen={dropdownOpen}\n                  add_call={add_call}\n                  last_call={last_call}\n                  documents={documents}\n                  detail={`${detail.documents}`}\n\n                  errors={errors} \n                />                              \n              </ModalBody>\n              <ModalFooter> \n                <FormGroup row>                   \n                <SaveButton />                              \n                <Button className=\"rounded-0\" onClick={this.toggleModal}>Cancel</Button>\n                </FormGroup>\n              </ModalFooter>\n            </Form>\n          </Modal>            \n        );\n      }\n    }\n    renderNote() {\n        const { detail } = this.props;\n        const { modal, hasError, errors } = this.state;\n\n        if (!detail.detail && !hasError) {\n          return (\n                <Container fluid>\n                  <Row>\n                    {modal ? this.renderModal() : null}\n                    <DetailPreviewTable \n                      {...detail}\n                      onEdit={this.toggleModal}\n                    />\n              </Row>\n            </Container>              \n          );\n\n        } else {\n            return (\n              <ErrorPage \n                  errors={errors && errors.page}\n                /> \n            );\n        }\n    }\n    render () {\n        const {loading} = this.state\n        return(\n            <div>\n              {loading ?<LoadScreen />:this.renderNote()}\n          </div>               \n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      detail: state.detail,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      fetchDetailNote: (id) => {\n          dispatch(detail.fetchDetailNote(id));\n      },\n      updateDetailNote: (id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence, last_call, documents, attached) => {\n          dispatch(detail.updateDetailNote(id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence, last_call, documents, attached));\n      }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteDetail);","import { toast } from 'react-toastify';\nexport const fetchDetailNote = (id) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        const endpoint = `/api/investors/${id}/` \n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        \n        return fetch(endpoint, {headers, })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n               \n                } else {\n                    toast.error(\"Server Error...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'FETCH_DETAIL_NOTE', detail: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authentication Error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", detail: res.data});\n                    throw res.data;\n                } \n                else if (res.status === 404) {\n                    toast.error(\"Investor is not found...\")\n                    dispatch({type: \"INVESTOR_NOT_FOUND\", detail: res.data});\n                    throw res.data;\n                }\n            })\n            .catch(error => {                \n                console.log(\"error\", error);\n            });\n    }\n}\n\nexport const updateDetailNote = (id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence, last_call, documents, attached) => {\n    return (dispatch, getState) => {\n\n        let headers = {'Accept': 'application/json'};\n        // let headers = {\"Content-Type\": \"multipart/form-data\"};\n\n        let {token} = getState().auth;\n\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        let formData = new FormData();\n        formData.append('text', text);\n        formData.append('phone', phone);\n        formData.append('status', status);\n        formData.append('is_corporate', is_corporate);\n        formData.append('is_payed', is_payed);\n        formData.append('email', email);\n        formData.append('linkedin_profile', linkedin_profile);\n        formData.append('website', website);\n        // Not required fields\n        if (correspondence) {\n            formData.append('correspondence', correspondence);\n        }\n        //check if attached & if documents(file) is not string\n        //if documents is string don't append formData\n        if (attached && \n          !(typeof documents === 'string' || documents instanceof String)) {\n            formData.append('documents', documents);\n        }\n\n        // formData need to convert ISO format string\n        if (last_call){\n            if (String(last_call) !==\"Invalid Date\") {\n                formData.append('last_call', last_call.toISOString());\n            }            \n        } else {\n            formData.append('last_call', \"\");\n        }\n        let noteId = id;\n        return fetch(`/api/investors/${noteId}/`, {headers, method: \"PUT\", body: formData})\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    toast.error(\"Server error...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 200) {\n                    toast.info(\"Investor \"+res.data.text+\" edited\")\n                    return dispatch({type: 'UPDATE_DETAIL_NOTE', detail: res.data, id});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authentication Error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n            .catch(error => {                \n                console.log(\"error\", error);\n            });\n    }\n}\n\nexport const addDetailNote = (text, phone, status, is_corporate, email, linkedin_profile, website, correspondence) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n\n        let body = JSON.stringify({text, phone, status, is_corporate, email, linkedin_profile, website, correspondence });\n        return fetch(\"/api/investors/\", {headers, method: \"POST\", body})\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 201) {\n                    toast.info(\"Investor \"+res.data.text+\" added\")\n                    return dispatch({type: 'ADD_DETAIL_NOTE', detail: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n           .catch(error => {                \n                console.log(\"error\", error);\n            });\n    }\n}\n","import React, { Component } from 'react'\n\nimport * as Inputs from '../../Atoms/AddInputs/AddInputs'\nimport { CheckboxIsCorp } from '../../Atoms/Checkboxes/CheckboxIsCorp'\n\nexport class InputFormNoteAdd extends Component {\n  render() {\n    const { text, phone, email,  \n      linkedin_profile, website, \n      correspondence, is_corporate,\n\n      errors, \n    } = this.props;\n\n    return (\n      <div>\n        <Inputs.InputName \n          onInputChange={this.props.onInputChange} \n          text={text} \n          errors={errors} \n        />\n        <Inputs.InputPhone \n          onInputChange={this.props.onInputChange} \n          phone={phone} \n          errors={errors} \n        />\n        <Inputs.InputEmail \n          onInputChange={this.props.onInputChange} \n          email={email} \n          errors={errors} \n        />      \n        <Inputs.InputLinkedin \n          onInputChange={this.props.onInputChange} \n          linkedin_profile={linkedin_profile} \n          errors={errors} \n        />\n        <Inputs.InputWebsite \n          onInputChange={this.props.onInputChange} \n          website={website} \n          errors={errors} \n        />      \n        <Inputs.InputCorrespondence \n          onInputChange={this.props.onInputChange} \n          correspondence={correspondence} \n          errors={errors} \n        />      \n        \n        <CheckboxIsCorp \n          handleCheckboxIsCorpBtnClick={this.props.handleCheckboxIsCorpBtnClick} \n          is_corporate={is_corporate} \n        />\n\n      </div>\n    )\n    \n  }\n}","import React, {Component} from 'react'\nimport { Redirect } from 'react-router-dom'\nimport {connect} from 'react-redux';\n\nimport Form from 'reactstrap/lib/Form';\n\nimport * as detail from \"../../../../actions/noteDetailActions\";\nimport { InputFormNoteAdd } from '../../Molecules/Forms/InputFormNoteAdd'\nimport { ReturnButton, SaveButton, ClearButton } from '../../../general/Atoms/Buttons/Buttons'\nimport { handleValidation } from '../../../../utils/helpers'\n\nclass NoteNew extends Component {\n    constructor(props){\n        super(props)       \n        this.state = {\n          text: \"\",\n          phone: \"\",\n          email: \"\",\n          status: \"Candidate\",\n          linkedin_profile: \"\",\n          website: \"\",\n          correspondence: \"\",\n          is_corporate: false,\n          id: null,\n          doneLoading: false,\n          errors: {},        \n          redirectToNewPage: false          \n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n      if (this.state.redirectToNewPage) {  \n        this.setState({\n          id: nextProps.detail.id,\n        })\n      }\n    }    \n\n    resetForm = () => {\n      this.setState({text: \"\", phone: '', email:'', errors: {}, status: 'Candidate', \n        is_corporate: false, linkedin_profile: \"\", website: \"\",\n        correspondence: \"\",\n      });\n    }\n    handleChange = (e) => {\n      e.preventDefault();\n      let key = e.target.name\n      let value = e.target.value\n      this.setState({\n          [key]: value,\n          errors: {}\n      })\n    }\n    changeValue = (e) => {\n      this.setState({status: e.currentTarget.textContent})\n    }\n\n    onCheckboxIsCorpBtnClick = () => {\n      this.setState({\n        is_corporate: !this.state.is_corporate,\n      });\n    }\n\n    submitNote = (e) => {\n      e.preventDefault();\n      // check validation from helper file\n      const validation_errors = handleValidation(this.state)\n      // check validation_errors dictionary is empty or has any errors\n      if (Object.keys(validation_errors).length === 0) {\n        this.props.addDetailNote(this.state.text, this.state.phone, this.state.status, \n          this.state.is_corporate, this.state.email, this.state.linkedin_profile, \n          this.state.website, this.state.correspondence)\n          .then(this.setState({ redirectToNewPage: true }))            \n          .catch(function (error) {\n             console.log(\"error\", error);\n           });\n      } else {\n        this.setState({errors: validation_errors}); \n      }\n    }\n\n    render () {\n        const { text, phone, email, \n          linkedin_profile, website,\n          correspondence, is_corporate,\n          errors } = this.state;\n        // The part that makes the redirect happen\n        if (this.state.redirectToNewPage && this.state.id) {\n          return (\n            <Redirect to={{pathname:`/investors/${this.state.id}`}} />\n          )\n        }\n        return(\n            <div>\n              <div className=\"mt-2 mb-2\">\n                <h3>Add New</h3>\n              </div>\n              <Form onSubmit={this.submitNote} className=\"form col col-sm-4 mt-2 p-2\">\n                <InputFormNoteAdd\n                  onInputChange={this.handleChange}\n                  handleCheckboxIsCorpBtnClick={this.onCheckboxIsCorpBtnClick} \n\n                  text={text} \n                  phone={phone}\n                  email={email}\n                  linkedin_profile={linkedin_profile}\n                  website={website}\n                  correspondence={correspondence}\n                  is_corporate={is_corporate}\n\n                  errors={errors} \n                /> \n                <div>\n                  <SaveButton />\n                  <ClearButton\n                    onClear={this.resetForm} \n                  />\n                  <ReturnButton />\n                </div>\n            </Form>\n          </div>               \n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      detail: state.detail,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addDetailNote: (text, phone, status, is_corporate, email, linkedin_profile, website, correspondence) => {\n            return dispatch(detail.addDetailNote(text, phone, status, is_corporate, email, linkedin_profile, website, correspondence));\n        },\n    }\n}\n\n// export default NewNote;\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteNew);","import React, {Component} from 'react'\nimport {connect} from 'react-redux';\nimport { Link } from 'react-router-dom'\nimport { Table } from 'reactstrap';\n\nimport * as lead from \"../../../../actions/paymentsActions\";\nimport { LoadScreen } from '../../../general/Organisms/LoadScreen/LoadScreen'\nimport { paymentsUtil } from '../../../../utils/paymentsUtils'\nimport './styles.scss'\n\nclass Payments extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {         \n        loading: true,\n        errors: {},\n        lead: {},\n      };\n    }\n\n    componentDidMount(){\n      if (this.props.match){\n        this.props.fetchPaymentsLead()\n      }\n    }\n\n    componentDidUpdate(prevProps) {\n      if (this.props.lead !== prevProps.lead) {\n        if (this.props.lead) {\n          const leads = paymentsUtil(this.props.lead.leads)\n          this.setState({leads: leads}); \n        }\n      }\n    }   \n    renderPayments() {\n      const { lead } = this.props;\n        if (lead.leads) {\n          return (\n            <div>\n              <h3>Leads View</h3>\n              <Table className=\"table text-center\" striped>\n                <thead>\n                  <tr>\n                    <th className=\"table-num__title table-payments\">#</th>\n                    <th className=\"table-payments\">Developer</th>\n                    <th className=\"table-payments\">Total Leads</th>\n                    <th className=\"table-payments\">Processed</th>\n                    <th className=\"table-payments\">Converted</th>\n                    <th className=\"table-payments\">Rejected</th>\n                    <th className=\"table-payments\">Next Payment</th>\n                  </tr>\n                </thead>  \n                <tbody>\n                  {lead.leads.length > 0 ? lead.leads.map((item,id) => (\n                    <tr key={id}>\n                        <th scope=\"row\" className=\"table-num__text\">{id+1}</th>\n                        <td>\n                          <Link className=\"info-link\" to={{pathname:`/profile/${item.id}`,\n                              state: {fromDashboard: false, prevLink: window.location.pathname}\n                              }}>{item.owner}</Link>\n                        </td>\n                        <td>{item.total}</td>\n                        <td>{item.processed}</td>\n                        <td>{item.converted}</td>\n                        <td>{item.rejected}</td>\n                        <td>{item.price}</td>\n                    </tr>\n                  )) : <tr><td colSpan=\"7\">Table is empty. Add your investors</td></tr>}\n                </tbody>                     \n              </Table>\n            </div>              \n          );\n        }\n    }\n    render () {\n      const { loading } = this.props\n      return(\n          <div>\n            { loading ? <LoadScreen /> : this.renderPayments() }\n        </div>               \n      )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      lead: state.lead,\n      loading: state.lead.loading\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      fetchPaymentsLead: () => {\n          dispatch(lead.fetchPaymentsLead());\n      },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Payments);","export const paymentsUtil = (leads) => {\n\n  // initialize newstate for reducer (to add calculated parameter lead.price)\n  let newstate = leads\n  // calculating next payment\n  newstate.forEach(item=>{\n    // get true_investors (without candidate status)\n    let true_investors = item.converted + item.processed + item.rejected\n    // get count of payed investors\n    let count_payed = item.payed\n    let price_all = 0;\n    let price_payed = 0;\n\n    // Calculating price\n    for(let key in item.prices){\n      let value = item.prices[key]\n      // Calculating price for investors without Candidate status\n      if (true_investors >=10){\n          if (true_investors>=key) {\n              price_all += 10*value\n          } else {\n              if (Math.ceil(true_investors/10) === key/10) {\n                  price_all += (true_investors+10-key)*value \n              }\n          }\n      }\n      // Get payed price\n      if (count_payed && true_investors >=10){\n          if (count_payed >= key) {\n              price_payed += 10*value\n          } else {\n              if (Math.ceil(count_payed/10) === key/10) {\n                  price_payed += (count_payed+10-key)*value \n              }\n          }\n      }\n    }\n    // output price without payed prices\n    item.price =price_all-price_payed;              \n  });\n  return newstate\n}","export const fetchPaymentsLead = () => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        const endpoint = `/api/payments/` \n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        \n        return fetch(endpoint, {headers, })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                // } else if (res.status === 404) {\n                //     dispatch({type: \"MESSAGE_NOT_FOUND\", data: res.data});\n                //     throw res.data;\n                } else {\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'FETCH_PAYMENTS_LEAD', leads: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                } else if (res.status === 404) {\n                    dispatch({type: \"ERROR_NOT_FOUND\", leads: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport RequireAuth from \"./auth/RequireAuth\";\nimport { Landing } from \"./Landing\";\nimport Login from \"./auth/Login\";\nimport Logout from \"./auth/Logout\";\nimport Signup from \"./auth/Signup\";\nimport SignupDone from \"./auth/SignupDone\";\nimport AccountActivation from \"./auth/AccountActivation\";\nimport UserProfile from \"./auth/Templates/UserProfile\";\nimport UserProfileDetail from \"./auth/Templates/UserProfileDetail\";\nimport UserProfileEdit from \"./auth/UserProfileEdit\";\nimport PasswordChange from \"./auth/PasswordChange\";\nimport PasswordReset from \"./auth/PasswordReset\";\nimport PasswordResetDone from \"./auth/PasswordResetDone\";\nimport PasswordResetConfirm from \"./auth/PasswordResetConfirm\";\nimport {ErrorPage} from \"./general/Organisms/ErrorPage/ErrorPage\";\n\nimport ReactifyComp from '../routingComps/ReactifyComp'\nimport PostDetail from '../reactify/PostDetail';\nimport PostCreate from '../reactify/PostCreate'\nimport Notes from './notes/Templates/Notes/Notes'\nimport NoteDetail from './notes/Templates/NoteDetail/NoteDetail'\nimport NoteNew from './notes/Templates/NoteNew/NoteNew'\nimport Payments from './notes/Templates/Payments/Payments'\n\nconst MainContent = () => (\n    <div className=\"container\">\n        <Switch>\n            <Route exact path=\"/\" component={props => <Landing {...props} />} />\n            <Route path=\"/reload\" component={null} key=\"reload\" />\n            <Route path=\"/login\" component={props => <Login {...props} />} />\n            <Route path=\"/logout\" component={props => <Logout {...props} />}/>\n            <Route path=\"/signup\" component={props => <Signup {...props} />}/>\n            <Route path=\"/activation/confirm-email/:key\" component={props => <AccountActivation {...props} />}/>\n            <Route path=\"/signup_done\" component={props => <SignupDone {...props} />}/>\n            <Route path=\"/reset_password\" component={props => <PasswordReset {...props} />}/>\n            <Route path=\"/reset_password_done\" component={props => <PasswordResetDone {...props} />}/>\n            <Route path=\"/pass/reset/:uid/:token/\" component={props => <PasswordResetConfirm {...props} />}/>\n            <Route exact path=\"/profile\" component={RequireAuth(UserProfile)}/>\n            <Route path='/profile/:id' component={RequireAuth(UserProfileDetail)}/>\n            <Route path=\"/profile_edit\" component={RequireAuth(UserProfileEdit)}/>\n            <Route path=\"/change_password\" component={RequireAuth(PasswordChange)}/>\n            <Route path='/react/posts/create' component={RequireAuth(PostCreate)}/>\n            <Route path='/react/posts/:slug' component={RequireAuth(PostDetail)}/>\n            <Route path='/react/posts' component={RequireAuth(ReactifyComp)} />\n            <Route exact path='/investors' component={RequireAuth(Notes)} />\n            <Route path='/investors/add' component={RequireAuth(NoteNew)}/>\n            <Route path='/investors/:id' component={RequireAuth(NoteDetail)}/>\n            <Route exact path='/payments' component={RequireAuth(Payments)} />\n\n            <Route component={props => <ErrorPage {...props} />}/>\n        </Switch>\n    </div>\n);\n\nexport default MainContent;\n","import React, {Component} from \"react\";\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css'; \n\nimport Header from \"./Header\";\nimport MainContent from \"./MainContent\";\n\nexport default class App extends Component {\n    render() {\n        return (\n            <>                \n              <Header />\n              <div className=\"container\">\n                  <ToastContainer \n                    hideProgressBar={true} \n                    position=\"bottom-right\"\n                    autoClose={3000}\n                    removeCloseButton={true}\n                  />\n              </div>\n              <MainContent />              \n            </>\n        );\n    }\n}","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"bootstrap/dist/css/bootstrap.css\";\n\nimport \"./styles/style.scss\"\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import { Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport store from \"./store\";\n// import history from \"./utils/historyUtils\";\nimport { authLogin } from \"./actions/authActions\";\nimport App from \"./components/App\";\nimport registerServiceWorker from './registerServiceWorker';\n\n// import { syncHistoryWithStore } from 'react-router-redux'\n\n\n// const browserhistory = syncHistoryWithStore(history, store)\n\nregisterServiceWorker();\n\nconst token = localStorage.getItem(\"token\");\n\nif (token) {\n    store.dispatch(authLogin(token));\n}\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <App />\n        </Router>\n    </Provider>\n    , document.getElementById(\"root\"));\n"],"sourceRoot":""}