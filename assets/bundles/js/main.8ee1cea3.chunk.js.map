{"version":3,"sources":["../config/polyfills.js","reducers/notesReducer.js","constants/actionTypes.js","reducers/index.js","reducers/authReducer.js","reducers/noteDetailReducer.js","reducers/paymentsReducer.js","store/index.js","constants/urls.js","utils/authUtils.js","actions/authActions.js","components/Header.js","utils/noteUtils.js","components/auth/RequireAuth.js","posts/PostDetail.js","posts/PostList.js","components/Landing.js","utils/renderUtils.js","components/auth/Login.js","components/auth/Logout.js","components/auth/Signup.js","components/auth/SignupDone.js","components/auth/AccountActivation.js","components/auth/UserProfile.js","components/auth/UserProfileEdit.js","components/auth/PasswordChange.js","components/auth/PasswordReset.js","components/auth/PasswordResetDone.js","components/auth/PasswordResetConfirm.js","components/NoMatch.js","reactify/PostInline.js","reactify/Posts.js","routingComps/ReactifyComp.js","reactify/PostForm.js","reactify/PostDetail.js","reactify/PostCreate.js","actions/notesActions.js","components/notes/LoadScreen/LoadScreen.js","components/notes/InputForm.js","components/notes/FileDrop/FileDrop.js","components/notes/NoteDetail.js","actions/noteDetailActions.js","components/notes/NewNote.js","components/notes/Payments.js","actions/paymentsActions.js","components/MainContent.js","components/App.js","registerServiceWorker.js","index.js"],"names":["Promise","__webpack_require__","enable","window","Object","assign","initialState","noteitems","loading","AuthTypes","LOGIN","LOGOUT","CHANGE_PASSWORD","USER_PROFILE","rootReducer","combineReducers","form","formReducer","notifications","auth","state","arguments","length","undefined","action","type","objectSpread","authenticated","token","payload","user","notes","noteList","map","a","reduce","b","concat","toConsumableArray","slice","filter","index","self","findIndex","t","created_at","id","unshift","note","selectById","indexEdit","p","noteToUpdate","text","phone","status","is_corporate","is_payed","email","linkedin_profile","website","correspondence","splice","deleteById","indexDel","nextafterdelete","next","deleted","detail","hasError","errors","page","lead","leads","newstate","forEach","item","true_investors","converted","processed","rejected","count_payed","payed","price_all","price_payed","key","prices","value","Math","ceil","price","error","store","logger","createLogger","middleware","applyMiddleware","thunk","compose","createStoreWithMiddleware","createStore","configureStore","ROOT_URL","AuthUrls","SIGNUP","RESET_PASSWORD","RESET_PASSWORD_CONFIRM","USER_ACTIVATION","getUserToken","notifSend","notifActions","authLogin","getUserProfile","dispatch","getState","axios","get","headers","authorization","then","response","data","catch","console","log","processServerError","keys","newDict","push","_error","Header","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleNavbar","setState","collapsed","react_default","createElement","Nav","className","navbar","NavItem","NavLink","onClick","forceUpdate","href","username","renderUser","Navbar","color","dark","expand","NavbarBrand","NavbarToggler","Collapse","isOpen","renderLinks","Component","connect","RequireAuth","ComposedComponent","Authentication","_Component","apply","inherits","createClass","checkAuthentication","nextProps","history","is_staff","is_superuser","PostDetail","titleWasClicked","bind","assertThisInitialized","toggleContent","removeContent","showContent","postItem","event","preventDefault","dataCallback","newPostItem","post","didHandleRemove","prevProps","prevState","snapshop","setPostStateOnProps","Row","Col","xs","md","Card","CardImg","top","width","src","image","CardBody","CardTitle","title","CardText","description","Link","to","slug","PostList","items","isOldestFirst","isLoading","handleDataCallback","handlePostRemove","toggleListReverse","toggleSortId","newPostList","sort","sortById","reverse","currentPostList","updateBackend","pop","getItems","_this2","fetch","results","json","_this3","_this$state","posts_PostDetail","Landing","posts_PostList","renderField","_ref","input","label","_ref$meta","meta","touched","renderTextAreaField","_ref2","_ref2$meta","renderError","errorMessages","Login","_this$props","handleSubmit","onSubmit","Field","name","component","validate","required","message","reduxForm","formValues","loginUrl","localStorage","setItem","processedError","SubmissionError","Logout","logoutUser","removeItem","Signup","values","password1","password2","signupUrl","SignupDone","AccountActivation","match","params","activateUserUrl","kind","dismissAfter","UserProfile","first_name","last_name","about","withRouter","initialValues","patch","PasswordChange","changePasswordUrl","new_password1","new_password2","PasswordReset","resetPasswordUrl","PasswordResetDone","PasswordResetConfirm","_props$match$params","uid","resetPasswordConfirmUrl","NoMatch","PostInline","elClass","pathname","fromDashboard","content","Posts","togglePostListClass","handleNewPost","loadMorePosts","posts","postsListClass","previous","author","count","loadPosts","nextEndpoint","endpoint","thisComp","lookupOptions","method","Content-Type","csrfToken","cookie","load","responseData","postItemData","currentPosts","reactify_PostInline","ReacTifyComp","reactify_Posts","PostForm","handleInputChange","handleDraftChange","clearForm","postTitleRef","React","createRef","postContentRef","deletePost","draft","publish","moment","Date","format","X-CSRFToken","Authorization","body","JSON","stringify","credentials","newPostItemUpdated","alert","newPostItemCreated","defaultState","postCreateForm","reset","current","updatePost","createPost","target","defineProperty","cancelClass","deleteClass","ref","el","htmlFor","placeholder","onChange","checked","handlePostItemUpdated","doneLoading","loadPost","owner","reactify_PostForm","postItemUpdated","PostCreate","fetchNotes","res","LoadScreen","InputForm","resetForm","updateNoteId","addNew","modal","resetSearch","searchtext","resetSort","order","handleOrderNotes","selectForEdit","updateNoteIndex","selectForDelete","deleteNote","modaldelete","toggle","dropdownOpen","toggleModal","toggleModalDelete","handleValidation","fields","formIsValid","trim","lastAtPos","lastIndexOf","lastDotPos","indexOf","test","handleChange","e","_this$setState","changeValue","currentTarget","textContent","searchNotes","is_ordering_name","onCheckboxIsCorpBtnClick","onCheckboxIsPayBtnClick","onBtnClickOrderingName","ordername","newordername","charAt","includes","mapped","join","orderNotes","submitNote","addNote","updateNote","nextForDelete","lastChar","parseInt","Modal","Form","ModalHeader","ModalBody","FormGroup","Label","Input","FormText","index_es","icon","faMale","faUsers","Button","active","Dropdown","DropdownToggle","caret","DropdownMenu","DropdownItem","faHandHoldingUsd","faCheckCircle","ModalFooter","row","faSave","faTrash","faPlusSquare","renderModal","renderModalDelete","CustomInput","inline","faSearch","outline","disabled","Table","striped","faLongArrowAltDown","rotation","faExchangeAlt","faTimes","scope","owner_username","faEdit","LoadScreen_LoadScreen","renderNotes","noteId","FileDrop","onDrop","acceptedFiles","rejectedFiles","onSelectDrop","dist_es","multiple","maxSize","getRootProps","getInputProps","faFileUpload","documents","NoteDetail","changeDate","date","last_call","getData","attached","onAddCallClick","add_call","defaultFormat","toDate","onResetCallClick","updateDetailNote","fetchDetailNote","detailed","Container","fluid","isValid","react_datepicker_es","selected","showTimeSelect","timeFormat","timeIntervals","dateFormat","timeCaption","split","notes_FileDrop_FileDrop","size","faUndoAlt","renderNote","Accept","formData","FormData","append","String","toISOString","NewNote","onCheckboxBtnClick","addDetailNote","redirectToNewPage","Redirect","Payments","fetchPaymentsLead","total","colspan","renderPayments","MainContent","Switch","Route","exact","path","components_Landing","auth_Login","auth_Logout","auth_Signup","auth_AccountActivation","SignupDone_SignupDone","auth_PasswordReset","PasswordResetDone_PasswordResetDone","auth_PasswordResetConfirm","UserProfileEdit","ReactifyComp","components_NoMatch","App","components_Header","components_MainContent","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","URL","process","origin","addEventListener","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","getItem","ReactDOM","render","es","BrowserRouter","App_App","document","getElementById"],"mappings":"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","file":"js/main.8ee1cea3.chunk.js","sourcesContent":["'use strict';\n\nif (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where React gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes React's erratic future behavior.\n  require('promise/lib/rejection-tracking').enable();\n\n  window.Promise = require('promise/lib/es6-extensions.js');\n} // fetch() polyfill for making API calls.\n\n\nrequire('whatwg-fetch'); // Object.assign() is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\n\n\nObject.assign = require('object-assign'); // In tests, polyfill requestAnimationFrame since jsdom doesn't provide it yet.\n// We don't polyfill it in the browser--this is user's responsibility.\n\nif (process.env.NODE_ENV === 'test') {\n  require('raf').polyfill(global);\n}","const initialState = [{noteitems: [], \n                       loading: true\n                    }]\n\nexport default function notes(state=initialState, action) {\n    //собрать все массивы с ключами noteitems и объединить в один массив\n    let noteList = state.map(a => a.noteitems).reduce((a, b) => [...a, ...b], []).slice();\n\n    switch (action.type) {\n\n        case 'FETCH_NOTES':\n            //удаление дубликатов\n            noteList = noteList.filter((noteList, index, self) => self.findIndex(t => t.created_at === noteList.created_at && t.id === noteList.id) === index)\n            \n            return [                    \n                    {...state[state.length-1],\n                    noteitems: noteList,\n                    loading: false,\n                    // deleted: false\n                    // ...action.notes\n                    },\n                ];\n        case 'SEARCH_NOTES':\n            noteList = action.notes\n        \n            return [                    \n\n                    {...state,\n                    ...action.notes,\n                    loading: false,},\n                ];\n\n        case 'ORDER_NOTES':\n            noteList = action.notes\n       \n            return [                    \n\n                    {...state,\n                    ...action.notes,\n                    loading: false,},\n                ];\n\n\n        case 'ADD_NOTE':\n            // Добавляем заметку\n            noteList.unshift(action.note);\n            // Удаляем нижнюю\n            // if (noteList.length > 0) {\n            //     noteList.pop();\n            // }\n\n            return [\n                        //берем последний стейт и добавляем к нему общий массив\n                        {...state[state.length-1],\n                            noteitems: noteList,\n                            loading: false,},\n\n                    ];\n\n        case 'UPDATE_NOTE':\n\n            //Поиск в общем массиве элемента по id и index (2мерный массив)\n            let selectById = state[action.index].noteitems[action.id].id\n            let indexEdit = noteList.findIndex(p => p.id === selectById) \n\n            let noteToUpdate = noteList[indexEdit]\n            noteToUpdate.text = action.note.text;\n            noteToUpdate.phone = action.note.phone;\n            noteToUpdate.status = action.note.status;\n            noteToUpdate.is_corporate = action.note.is_corporate;\n            noteToUpdate.is_payed = action.note.is_payed;\n            noteToUpdate.email = action.note.email;\n            noteToUpdate.linkedin_profile = action.note.linkedin_profile;\n            noteToUpdate.website = action.note.website;\n            noteToUpdate.correspondence = action.note.correspondence;\n            noteList.splice(indexEdit, 1, noteToUpdate);\n            return [\n                    {...state[state.length-1],\n                        noteitems: noteList,\n                        loading: false,},\n                    ];\n\n        case 'DELETE_NOTE':\n            //Поиск в общем массиве элемента по id и index (2мерный массив)\n            let deleteById = state[action.id].noteitems[action.index].id\n            let indexDel = noteList.findIndex(p => p.id === deleteById)                      \n            noteList.splice(indexDel, 1);\n            return [\n                        {...state[state.length-1],\n                            noteitems: noteList,\n                            loading: false,\n                            nextafterdelete: state[0].next,\n                            deleted: true\n                        }\n                    ];\n\n        default:\n            \n    }\n    return state;\n}\n","export const AuthTypes = {\n    LOGIN: \"LOGIN\",\n    LOGOUT: \"LOGOUT\",\n    CHANGE_PASSWORD: \"CHANGE_PASSWORD\",\n    USER_PROFILE: \"USER_PROFILE\"\n};","import {combineReducers} from \"redux\";\nimport { reducer as formReducer } from \"redux-form\";\nimport { reducer as notifications } from 'react-notification-system-redux';\n\nimport notesReducer from \"./notesReducer\";\nimport noteDetailReducer from \"./noteDetailReducer\";\nimport authReducer from \"./authReducer\";\nimport paymentsReducer from \"./paymentsReducer\";\n// import { routerReducer } from 'react-router-redux'\n\nconst rootReducer = combineReducers({\n    form: formReducer,\n    notifications,\n    auth: authReducer,\n    notes: notesReducer,\n    detail: noteDetailReducer,\n    lead: paymentsReducer,\n    // routing: routerReducer\n});\n\nexport default rootReducer;\n\n\n","import { AuthTypes } from \"../constants/actionTypes\";\n\nexport default function(state = {}, action) {\n    switch(action.type) {\n        case AuthTypes.LOGIN:\n            return { ...state, authenticated: true, token: action.payload};\n        case AuthTypes.LOGOUT:\n            return { ...state, authenticated: false, token: null};\n        case AuthTypes.USER_PROFILE:\n            return { ...state, user: action.payload};\n        default:\n        \t// will NOT execute because of the line preceding the switch.\n    }\n    return state;\n}","export default function noteDetailReducer(state = {loading: true}, action) {\n    switch(action.type) {\n\n        case 'FETCH_DETAIL_NOTE':\n            return { ...state, ...action.detail, loading: false};\n        case 'UPDATE_DETAIL_NOTE':\n            return { ...state, ...action.detail, loading: false};\n        case 'ADD_DETAIL_NOTE':\n            return { ...state, ...action.detail, loading: false};\n\n        case 'MESSAGE_NOT_FOUND':\n            return {...state, \n                hasError: true,\n                errors: {page: \"Page not found\"},\n                loading: false,\n            };\n\n        default:\n          // will NOT execute because of the line preceding the switch.\n    }\n    return state;\n}","export default function paymentsReducer(state = {leads: \"\", loading: true}, action) {\n    switch(action.type) {\n\n        case 'FETCH_PAYMENTS_LEAD':\n            // initialize newstate for reducer (to add calculated parameter lead.price)\n            let newstate =  [...action.leads];\n            // calculating next payment\n            newstate.forEach(item=>{\n              // get true_investors (without candidate status)\n              let true_investors = item.converted + item.processed + item.rejected\n              // get count of payed investors\n              let count_payed = item.payed\n              let price_all = 0;\n              let price_payed = 0;\n\n              // Calculating price\n              for(let key in item.prices){\n                let value = item.prices[key]\n                // Calculating price for investors without Candidate status\n                if (true_investors >=10){\n                    if (true_investors>=key) {\n                        price_all += 10*value\n                    } else {\n                        if (Math.ceil(true_investors/10) === key/10) {\n                            price_all += (true_investors+10-key)*value \n                        }\n                    }\n                }\n                // Get payed price\n                if (count_payed && true_investors >=10){\n                    if (count_payed >= key) {\n                        price_payed += 10*value\n                    } else {\n                        if (Math.ceil(count_payed/10) === key/10) {\n                            price_payed += (count_payed+10-key)*value \n                        }\n                    }\n                }\n              }\n              // output price without payed prices\n              item.price =price_all-price_payed;              \n            });\n            return { ...state, leads: [...newstate], loading: false }\n        case 'LEAD_NOT_FOUND':\n            return {...state, loading: false, error: \"Not found\"};\n        default:\n          // will NOT execute because of the line preceding the switch.\n    }\n    return state;\n}","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from '../reducers';\n\nfunction configureStore(initialState) {\n    let createStoreWithMiddleware;\n\n    const logger = createLogger();\n    const middleware = applyMiddleware(thunk, logger);\n\n    createStoreWithMiddleware = compose(\n        middleware\n    );\n\n    return createStoreWithMiddleware(createStore)(rootReducer, initialState);\n}\n\nlet store = configureStore();\n\nexport default store;","const ROOT_URL = \"http://localhost:8000/\";\n\nexport const AuthUrls = {\n    LOGIN: `${ROOT_URL}rest-auth/login/`,\n    SIGNUP: `${ROOT_URL}rest-auth/registration/`,\n    CHANGE_PASSWORD: `${ROOT_URL}rest-auth/password/change/`,\n    RESET_PASSWORD: `${ROOT_URL}rest-auth/password/reset/`,\n    RESET_PASSWORD_CONFIRM: `${ROOT_URL}rest-auth/password/reset/confirm/`,\n    USER_ACTIVATION: `${ROOT_URL}rest-auth/registration/verify-email/`,\n    USER_PROFILE: `${ROOT_URL}rest-auth/user/`\n};","export function getUserToken(state) {\n    return state.auth.token;\n}","import axios from \"axios\";\nimport { SubmissionError } from 'redux-form';\nimport { actions as notifActions } from 'redux-notifications';\nimport { AuthTypes } from \"../constants/actionTypes\";\nimport { AuthUrls } from \"../constants/urls\";\nimport store from \"../store\";\nimport { getUserToken } from \"../utils/authUtils\";\n\n\nconst { notifSend } = notifActions;\nexport function authLogin(token) {\n    return {\n        type: AuthTypes.LOGIN,\n        payload: token,\n    };\n}\n\nexport function loginUser(formValues, dispatch, props) {\n        const loginUrl = AuthUrls.LOGIN;\n\n        return axios.post(loginUrl, formValues).then((response) => {\n            // If request is good...\n            // Update state to indicate user is authenticated\n            const token = response.data.key; \n\n            dispatch(authLogin(token));\n            localStorage.setItem(\"token\", token);\n\n            // redirect to the route '/'\n            props.history.push(\"/\");\n            // to getUserProfile in Header\n            dispatch(getUserProfile())\n        }).catch(error => {\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n\nexport function logoutUser() {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"csrftoken\");\n    return {\n        type: AuthTypes.LOGOUT\n    };\n}\n\nexport function signupUser(formValues, dispatch, props) {\n    const signupUrl = AuthUrls.SIGNUP;\n\n    return axios.post(signupUrl, formValues)\n        .then((response) => {\n            // If request is good...\n            // you can login if email verification is turned off.\n            // const token = response.data.key;\n            // dispatch(authLogin(token));\n            // localStorage.setItem(\"token\", token);\n\n            // email need to be verified, so don't login and send user to signup_done page.\n            // redirect to signup done page.\n            props.history.push(\"/signup_done\");\n        })\n        .catch((error) => {\n            // If request is bad...\n            // Show an error to the user\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n\nfunction setUserProfile(payload) {\n    return {\n        type: AuthTypes.USER_PROFILE,\n        payload: payload\n    };\n}\n\nexport function getUserProfile() {\n    return function(dispatch) {\n        const token = getUserToken(store.getState());\n\n        if (token) {\n            axios.get(AuthUrls.USER_PROFILE, {\n                headers: {\n                    authorization: 'Token ' + token\n                }\n            }).then(response => {\n                dispatch(setUserProfile(response.data))\n            }).catch((error) => {\n                // If request is bad...\n                // Show an error to the user\n                console.log(error);\n                // TODO: send notification and redirect\n            });\n        }\n    };\n}\n\nexport function changePassword(formValues, dispatch, props) {\n    const changePasswordUrl = AuthUrls.CHANGE_PASSWORD;\n    const token = getUserToken(store.getState());\n\n    if (token) {\n        return axios.post(changePasswordUrl, formValues, {\n            headers: {\n                authorization: 'Token ' + token\n            }\n        })\n            .then((response) => {\n                dispatch(notifSend({\n                    message: \"Password has been changed successfully\",\n                    kind: \"info\",\n                    dismissAfter: 5000\n                }));\n                // redirect to the route '/profile'\n                props.history.push(\"/profile\");\n            })\n            .catch((error) => {\n                // If request is bad...\n                // Show an error to the user\n                const processedError = processServerError(error.response.data);\n                throw new SubmissionError(processedError);\n            });\n    }\n}\n\nexport function resetPassword(formValues, dispatch, props) {\n    const resetPasswordUrl = AuthUrls.RESET_PASSWORD;\n\n    return axios.post(resetPasswordUrl, formValues)\n        .then(response => {\n            // redirect to reset done page\n            props.history.push(\"/reset_password_done\");\n        }).catch((error) => {\n            // If request is bad...\n            // Show an error to the user\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n\nexport function confirmPasswordChange(formValues, dispatch, props) {\n    const { uid, token } = props.match.params;\n    const resetPasswordConfirmUrl = AuthUrls.RESET_PASSWORD_CONFIRM;\n    const data = Object.assign(formValues, { uid, token });\n\n    return axios.post(resetPasswordConfirmUrl, data)\n        .then(response => {\n            dispatch(notifSend({\n                message: \"Password has been reset successfully, please log in\",\n                kind: \"info\",\n                dismissAfter: 5000\n            }));\n            props.history.push(\"/login\");\n        }).catch((error) => {\n            // If request is bad...\n            // Show an error to the user\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n\nexport function activateUserAccount(formValues, dispatch, props) {\n    const { key } = props.match.params;\n    const activateUserUrl = AuthUrls.USER_ACTIVATION;\n    const data = Object.assign(formValues, { key });\n\n    return axios.post(activateUserUrl, data)\n        .then(response => {\n            dispatch(notifSend({\n                message: \"Your account has been activated successfully, please log in\",\n                kind: \"info\",\n                dismissAfter: 5000\n            }));\n            props.history.push(\"/login\");\n        }).catch((error) => {\n            // If request is bad...\n            // Show an error to the user\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n\nexport function updateUserProfile(formValues, dispatch, props) {\n    const token = getUserToken(store.getState());\n\n    return axios.patch(AuthUrls.USER_PROFILE, formValues, {\n        headers: {\n            authorization: 'Token ' + token\n        }\n    })\n        .then(response => {\n            dispatch(notifSend({\n                message: \"Your profile has been updated successfully\",\n                kind: \"info\",\n                dismissAfter: 5000\n            }));\n            props.history.push(\"/profile\");\n        }).catch((error) => {\n            // If request is bad...\n            // Show an error to the user\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n// util functions\nfunction processServerError(error) {\n    return  Object.keys(error).reduce(function(newDict, key) {\n        if (key === \"non_field_errors\") {\n            newDict[\"_error\"].push(error[key]);\n        } else if (key === \"token\") {\n            // token sent with request is invalid\n            newDict[\"_error\"].push(\"The link is not valid any more.\");\n        } else {\n            newDict[key] = error[key];\n        }\n\n        return newDict\n    }, {\"_error\": []});\n}","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n// import { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n    } from 'reactstrap';\n\nimport { getUserProfile } from \"../actions/authActions\";\nimport { renderUser } from \"../utils/noteUtils\";\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            collapsed: true\n        };\n    }\n    toggleNavbar = () => {\n        this.setState({\n            collapsed: !this.state.collapsed\n        });\n    }\n\n    static propTypes = {\n        authenticated: PropTypes.bool,\n        getUserProfile: PropTypes.func.isRequired,\n        user: PropTypes.object\n    };\n    componentWillMount() {\n        this.props.getUserProfile();\n    } \n\n    renderLinks() {\n        if (this.props.authenticated) {\n            const { user } = this.props\n            return (\n                \n                    <Nav className=\"mr-auto\" navbar>\n                        <NavItem key=\"investors\">\n                            <NavLink className=\"nav-link\" onClick={this.forceUpdate} href={\"/investors\"}>Investors</NavLink>\n                        </NavItem>\n                        <NavItem key=\"payments\">\n                            <NavLink className=\"nav-link\" onClick={this.forceUpdate} href={\"/payments\"}>Payments</NavLink>\n                        </NavItem>\n                        <NavItem key=\"profile\">\n                            <NavLink className=\"nav-link\" href=\"/profile\">{renderUser(user)}</NavLink>\n                        </NavItem>\n                        <NavItem key=\"logout\">\n                            <NavLink className=\"nav-link\" href=\"/logout\">Logout</NavLink>\n                        </NavItem>\n                    </Nav>\n                \n            );\n\n        } else {\n            return (\n                    <Nav className=\"ml-auto\" navbar>\n                        <NavItem key=\"login\">\n                            <NavLink className=\"nav-link\" href=\"/login\">Login</NavLink>\n                        </NavItem>,\n                        <NavItem key=\"signup\">\n                            <NavLink className=\"nav-link\" href=\"/signup\">Sign Up</NavLink>\n                        </NavItem>\n                    </Nav>\n            );\n        }\n    }\n\n    render() {\n        return (\n            <Navbar color=\"info\" dark expand=\"md\">\n                <NavbarBrand href=\"/\">Lead Platform</NavbarBrand>\n                <NavbarToggler onClick={this.toggleNavbar} />\n                  <Collapse isOpen={!this.state.collapsed} navbar>                    \n                        {this.renderLinks()}\n                  </Collapse>\n            </Navbar>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        authenticated: state.auth.authenticated,\n        user: state.auth.user\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getUserProfile: () => {\n            return dispatch(getUserProfile());\n        }\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import React from \"react\";\n\n\nexport const renderUser = (user) => {\n  // const user = this.props.user;\n  if (user) {\n      return <div>{user.username}</div>\n  }\n\n};\n// export const renderError = (errors) => {\n\n// \tif (Object.keys(errors).length) {\n// \t  return (\n// \t    <div>\n// \t        <div>{ errors['text'] }</div> \n// \t        <div>{ errors['phone'] }</div>\n// \t    </div>\n// \t    );\n// \t}\n// \treturn null;\n// };","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n// import {withRouter} from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nexport default function(ComposedComponent) {\n    class Authentication extends Component {\n\n        static propTypes = {\n            history: PropTypes.object\n        };\n\n        componentWillMount() {\n            this.checkAuthentication(this.props);\n\n        }\n\n        componentWillUpdate(nextProps) {\n            this.checkAuthentication(nextProps);\n        }\n\n        checkAuthentication(props) {\n            if (!props.authenticated) {\n                this.props.history.push(\"/login\");\n            }\n        }\n\n        render() {\n            return <ComposedComponent {...this.props} />\n        }\n    }\n\n    function mapStateToProps(state) {\n\n        // provide is_staff to props\n        let is_staff = false;\n        if (state.auth.user && (state.auth.user.is_staff || state.auth.user.is_superuser)) {\n            is_staff = true;\n        }\n        return { authenticated: state.auth.authenticated, \n                is_staff: is_staff, \n            }\n    }\n    // return withRouter(connect(mapStateToProps)(Authentication));\n    return connect(mapStateToProps)(Authentication);\n}\n","import React, {Component} from 'react';\n\nimport '../index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {\n\tRow, Col, Card, CardBody, CardTitle, CardText, CardImg\n} from \"reactstrap\";\n\nimport { Link } from 'react-router-dom'\n\nclass PostDetail extends Component {\n\tconstructor (props) {\n\t\tsuper(props)\n\t\tthis.titleWasClicked = this.titleWasClicked.bind(this)\n\t\tthis.toggleContent = this.toggleContent.bind(this)\n\t\tthis.removeContent = this.removeContent.bind(this)\n\t\tthis.state = {\n\t\t\tshowContent: false,\n\t\t\tpostItem: null\n\t\t}\n\t}\n\ttitleWasClicked (event) {\n\t\tevent.preventDefault()\n\t\tconst {dataCallback} = this.props\n\t\tlet newPostItem = this.props.post\n\t\tnewPostItem['title'] = \"This is new Title\"\n\t\t\n\t\tthis.setState({\n\t\t\tpostItem: newPostItem\n\t\t})\n\t\tif (dataCallback !== undefined) {\n\t\t\tdataCallback(newPostItem)\t\n\t\t}\t\t\t\n\t}\n\ttoggleContent (event) {\n\t\tevent.preventDefault()\t\n\t\tthis.setState({\n\t\t\tshowContent: !this.state.showContent\n\t\t})\t\t\n\t}\n\tremoveContent (event) {\n\t\tif (this.props.didHandleRemove) {\n\t\t\tthis.props.didHandleRemove(this.props.post)\n\t\t}\t\n\t}\n\tcomponentDidMount() {\n\t\tconst {post} = this.props\n\t\tthis.setState({\n\t\t\tpostItem: post\n\t\t})\n\t}\n\tsetPostStateOnProps() {\n\t\tconst {post} = this.props\n\t\tthis.setState({\n\t\t\tpostItem: post\n\t\t})\n\t}\n\tcomponentDidUpdate(prevProps, prevState, snapshop) {\n\t\tif (this.props !== prevProps) {\t\t\t\n\t\t\tthis.setPostStateOnProps()\n\t\t}\n\n\t}\n\trender () {\n\t\tconst {postItem} = this.state\n\t\tconst {showContent} = this.state\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{postItem !== null \n\t\t\t\t?<Row className=\"ContentItem\">\n\t\t\t\t\t<Col xs=\"12\" md=\"6\">\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<CardImg top width=\"100%\" src={postItem.image}>\n\t\t\t\t\t\t\t</CardImg>\n\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t<CardTitle onClick={this.titleWasClicked}>\n\t\t\t\t\t\t\t\t\t{postItem.title}\n\t\t\t\t\t\t\t\t</CardTitle>\n\t\t\t\t\t\t\t\t{showContent === true ? <CardText>\n\t\t\t\t\t\t\t\t\t{postItem.description}\n\t\t\t\t\t\t\t\t</CardText> : \"\"}\n\t\t\t\t\t\t\t\t<button className='btn btn-info' onClick={this.toggleContent}>Toggle Content Display</button>\n\t\t\t\t\t\t\t\t<button className='btn btn-success' onClick={this.removeContent}>Remove content</button>\n\t\t\t\t\t\t\t\t<Link className='btn btn-danger' to={'/posts/' + postItem.slug}>{postItem.title}</Link>\n\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t:\"\"}\n\t\t\t</div>\n\n\t\t)\n\t}\n}\nexport default PostDetail\n","import React, {Component} from 'react';\nimport '../index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport PostDetail from './PostDetail'\n\nclass PostList extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\t'items': [],\n\t\t\tisOldestFirst: true,\n\t\t\tisLoading: true,\n\t\t}\n\t\tthis.handleDataCallback = this.handleDataCallback.bind(this)\n\t\tthis.handlePostRemove = this.handlePostRemove.bind(this)\n\t\tthis.toggleListReverse = this.toggleListReverse.bind(this)\n\t\tthis.toggleSortId = this.toggleSortId.bind(this)\n\t}\n\n\n\tsortById () {\n\t\tconst {items} = this.state\n\t\tlet newPostList = items\n\t\tif (this.state.isOldestFirst) {\n\t\t\tnewPostList = items.sort((a, b) => a.id < b.id)\n\t\t} else {\n\t\t\tnewPostList = items.sort((a, b) => a.id > b.id)\n\t\t}\n\t\tthis.setState({\n\t\t\titems: newPostList,\n\t\t\tisOldestFirst: !this.state.isOldestFirst\n\t\t})\n\t}\n\ttoggleSortId(event) {\n\t\tthis.sortById()\n\t}\n\n\ttoggleListReverse(event) {\n\t\tconst {items} = this.state\n\t\tlet newPostList = items.reverse()\n\t\tthis.setState({\n\t\t\titems: newPostList\n\t\t})\n\t\t\n\t}\n\n\tupdateBackend(currentPostList) {\n\t\tconsole.log(currentPostList)\n\t\tthis.setState({\n\t\t\tpostItem: currentPostList\n\t\t})\n\t}\n\thandleDataCallback(postItem) {\n\t\tlet currentPostList = this.state.items\n\t\tcurrentPostList.push(postItem)\n\t\tthis.updateBackend(currentPostList)\n\t}\n\thandlePostRemove(postItem) {\n\t\tlet currentPostList = this.state.items\n\t\tcurrentPostList.pop(postItem)\n\t\tthis.updateBackend(currentPostList)\n\t}\n\tcomponentDidMount() {\n\t\tthis.getItems();\n\t}\n\tgetItems() {\n\t\t// setTimeout(() => this.setState({ isLoading: false }), 2500); // simulates an async action, and hides the spinner\n\t\tfetch('http://127.0.0.1:8000/api/item/')\n\t\t  .then(results => results.json())\n\t\t  .then(results => this.setState({'items':results, isLoading: false}));\n\t}\n\trender() {\n\t\tconst {items, isLoading} = this.state\n\t\tif (isLoading) {\n\t\t\treturn <p>Loading ...</p>;\n\t\t}\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>HI!</h1>\n\t\t\t\t<button className='btn btn-secondary mx-auto d-block' onClick={this.toggleListReverse}>Reverse</button>\n\t\t\t\t<button className='btn btn-info mx-auto d-block' onClick={this.toggleSortId}>SortId</button>\n\t\t\t\t<div>{items.map((post,index) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<PostDetail \n\t\t\t\t\t\t\tpost={post} \n\t\t\t\t\t\t\tkey={`post-list-key ${index}`}\n\t\t\t\t\t\t\tdataCallback={this.handleDataCallback} \n\t\t\t\t\t\t\tdidHandleRemove={this.handlePostRemove} />\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\nexport default PostList\n","import React, { Component } from 'react'\nimport PostList from '../posts/PostList';\nimport { Link } from 'react-router-dom'\n\nclass Landing extends Component {\n  render () {\n    return (\n\n      \t<div className='text-center'>\t\n      \t\t<Link className='some-link' to='/posts/dynamic/'>Dynamic Page</Link>\n        \n        \t<PostList />                \n\t\t</div>\n    )\n  }\n}\nexport default Landing\n","import React from \"react\";\n\nexport const renderField = ({ input, label, type, meta: { touched, error } }) => (\n    <div>\n        <label>{label}</label>\n        <div>\n            <input className=\"form-control\" {...input} type={type}/>\n        </div>\n        {touched && ((error && <div className=\"alert alert-danger p-1\"><small>{error}</small></div>))}\n    </div>\n);\n\nexport const renderTextAreaField = ({ input, label, type, meta: { touched, error } }) => (\n    <div>\n        <label>{label}</label>\n        <div>\n            <textarea className=\"form-control\" {...input} type={type}/>\n        </div>\n        {touched && ((error && <div className=\"alert alert-danger p-1\"><small>{error}</small></div>))}\n    </div>\n);\n\nexport const renderError = (errorMessages) => {\n    if ( errorMessages) {\n        return (\n            <div className=\"alert alert-danger\">\n                {errorMessages}\n            </div>\n        )\n    }\n};\n","import React, { Component } from \"react\";\n// import PropTypes from \"prop-types\";\nimport { reduxForm, Field, propTypes } from \"redux-form\";\nimport { Link } from \"react-router-dom\";\nimport { required } from \"redux-form-validators\"\n\nimport { renderField, renderError} from \"../../utils/renderUtils\";\nimport { loginUser } from \"../../actions/authActions\";\n\nclass Login extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Please Log In</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"email\" label=\"Email\" component={renderField}\n                               type=\"text\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"password\" label=\"Password\" component={renderField}\n                               type=\"password\"  validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        { renderError(error) }\n                        <button action=\"submit\" className=\"btn btn-primary\">Login</button>\n                    </fieldset>\n\n                    <p>Not registered? <Link to=\"/signup\">Signup Here!</Link></p>\n                    <Link to=\"/reset_password\">forgot password?</Link>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default reduxForm({\n    form: \"login\",\n    onSubmit: loginUser\n})(Login);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\n\nclass Logout extends Component {\n\n    static propTypes = {\n        logoutUser: PropTypes.func.isRequired\n    };\n\n    componentWillMount() {\n        this.props.logoutUser();\n    }\n\n    render() {\n        return (\n            <h2>Sorry to see you go...</h2>\n        );\n    }\n}\n\nexport default connect(null, { logoutUser })(Logout);","import React, { Component } from \"react\";\n// import PropTypes from \"prop-types\";\nimport { reduxForm, Field, propTypes } from \"redux-form\";\nimport { required } from \"redux-form-validators\"\nimport { renderField, renderError } from \"../../utils/renderUtils\";\nimport { signupUser } from \"../../actions/authActions\";\n\nclass Signup extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n\n    render() {\n        const { handleSubmit, error } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Sign Up</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"email\" label=\"Email\" component={renderField}\n                               type=\"text\"/>\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"username\" label=\"Username\" component={renderField}\n                               type=\"text\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"password1\" label=\"Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"password2\" label=\"Confirm Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    { renderError(error) }\n\n                    <fieldset className=\"form-group\">\n                        <button action=\"submit\" className=\"btn btn-primary\">Sign Up</button>\n                    </fieldset>\n                </form>\n            </div>\n        );\n    }\n}\n\n// Sync field level validation for password match\nconst validateForm = values => {\n    const errors = {};\n    const { password1, password2 } = values;\n    if (password1 !== password2) {\n        errors.password2 = \"Password does not match.\"\n    }\n    return errors;\n};\n\nexport default reduxForm({\n    form: \"signup\",\n    validate: validateForm,\n    onSubmit: signupUser\n})(Signup);\n","import React, { Component } from \"react\";\n\nexport default class SignupDone extends Component {\n    render() {\n        return (\n            <h3 className=\"mx-5\">\n                Thanks for your registration, please follow the link sent to your provided email to activate\n                your account.\n            </h3>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { reduxForm, propTypes } from \"redux-form\";\nimport { activateUserAccount } from \"../../actions/authActions\";\nimport { renderError } from \"../../utils/renderUtils\";\n\nclass AccountActivation extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Please click the button below to activate your account</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        {renderError(error)}\n                        <button action=\"submit\" className=\"btn btn-primary\">Activate</button>\n                    </fieldset>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default reduxForm({\n    form: \"user_account_activation\",\n    onSubmit: activateUserAccount,\n})(AccountActivation);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getUserProfile } from \"../../actions/authActions\";\nimport {withRouter} from \"react-router-dom\";\n\nclass UserProfile extends Component {\n\n    static propTypes = {\n        getUserProfile: PropTypes.func.isRequired,\n        user: PropTypes.object\n    };\n\n    componentWillMount() {\n        this.props.getUserProfile();\n    }\n\n    renderUser() {\n        const user = this.props.user;\n        if (user) {\n            return (\n                <div className=\"mx-2\">\n                    <h4>username: {user.username}</h4>\n                    <h4>First Name: {user.first_name}</h4>\n                    <h4>Last Name: {user.last_name}</h4>\n                    <h4>email: {user.email}</h4>\n                    <h4>Website: {user.website}</h4>\n                    <hr />\n                    <h4>About Myself:</h4>\n                    <p>{user.about}</p>\n\n                </div>\n            );\n        }\n        return null;\n    }\n\n    render() {\n        return (\n            <div>\n                {this.renderUser()}\n                {\" \"}\n                <hr />\n                <Link className=\"btn btn-primary mr-2\" to=\"/profile_edit\">Update Profile</Link>\n                <Link className=\"btn btn-primary\" to=\"/change_password\">Change Password</Link>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        user: state.auth.user\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, { getUserProfile } )(UserProfile));","import React, { Component } from \"react\";\nimport { reduxForm, Field, propTypes } from \"redux-form\";\nimport { connect } from 'react-redux'\n// import { required } from \"redux-form-validators\"\n\nimport { renderField, renderTextAreaField, renderError} from \"../../utils/renderUtils\";\nimport { updateUserProfile } from \"../../actions/authActions\";\n\nclass Login extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Edit Profile</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"username\" label=\"Username\" component={renderField}\n                               type=\"text\"\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"first_name\" label=\"First Name\" component={renderField}\n                               type=\"text\"\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"last_name\" label=\"Last Name\" component={renderField}\n                               type=\"text\"\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"website\" label=\"Website\" component={renderField}\n                               type=\"text\"\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"about\" label=\"About Yourself\" component={renderTextAreaField}\n                               type=\"text\"\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        { renderError(error) }\n                        <button action=\"submit\" className=\"btn btn-primary\">Save</button>\n                    </fieldset>\n                </form>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        initialValues: state.auth.user\n    }\n}\n\nexport default connect(mapStateToProps)(reduxForm({\n    form: \"update_user_profile\",\n    onSubmit: updateUserProfile\n})(Login));\n","import React, { Component } from \"react\";\n// import PropTypes from \"prop-types\";\nimport { reduxForm, Field, propTypes } from \"redux-form\";\nimport { required } from \"redux-form-validators\"\nimport { changePassword } from \"../../actions/authActions\";\nimport { renderField, renderError } from \"../../utils/renderUtils\";\n\nclass PasswordChange extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Change Password</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"old_password\" label=\"Old Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"new_password1\" label=\"New Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"new_password2\" label=\"Confirm New Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        {renderError(error)}\n                        <button action=\"submit\" className=\"btn btn-primary\">Submit</button>\n                    </fieldset>\n                </form>\n            </div>\n        );\n    }\n}\n\n// Sync field level validation for password match\nconst validateForm = values => {\n    const errors = {};\n    const { new_password1, new_password2 } = values;\n    if (new_password1 !== new_password2) {\n        errors.new_password2 = \"Password does not match.\"\n    }\n    return errors;\n};\n\nexport default reduxForm({\n    form: \"change_password\",\n    onSubmit: changePassword,\n    validate: validateForm\n})(PasswordChange);\n","import React, { Component } from \"react\";\nimport { reduxForm, Field, propTypes } from \"redux-form\";\nimport { required } from \"redux-form-validators\"\n\nimport { renderField, renderError} from \"../../utils/renderUtils\";\nimport { resetPassword } from \"../../actions/authActions\";\n\nclass PasswordReset extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Reset Your Password</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"email\" label=\"Please enter your email\" component={renderField}\n                               type=\"text\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        { renderError(error) }\n                        <button action=\"submit\" className=\"btn btn-primary\">Submit</button>\n                    </fieldset>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default reduxForm({\n    form: \"password_reset\",\n    onSubmit: resetPassword\n})(PasswordReset);\n","import React, { Component } from \"react\";\n\nexport default class PasswordResetDone extends Component {\n    render() {\n        return (\n            <h3 className=\"mx-5\">An password reset email has been sent to your email. Please follow the link to reset your password.</h3>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { reduxForm, Field, propTypes } from \"redux-form\";\nimport { required } from \"redux-form-validators\"\nimport { confirmPasswordChange } from \"../../actions/authActions\";\nimport { renderField, renderError } from \"../../utils/renderUtils\";\n\nclass PasswordResetConfirm extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Create New Password</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"new_password1\" label=\"New Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"new_password2\" label=\"Confirm New Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        {renderError(error)}\n                        <button action=\"submit\" className=\"btn btn-primary\">Submit</button>\n                    </fieldset>\n                </form>\n            </div>\n        );\n    }\n}\n\n// Sync field level validation for password match\nconst validateForm = values => {\n    const errors = {};\n    const { new_password1, new_password2 } = values;\n    if (new_password1 !== new_password2) {\n        errors.new_password2 = \"Password does not match.\"\n    }\n    return errors;\n};\n\nexport default reduxForm({\n    form: \"password_reset_confirm\",\n    onSubmit: confirmPasswordChange,\n    validate: validateForm\n})(PasswordResetConfirm);\n","import React from \"react\";\n\nconst NoMatch = () => (\n    <h2 className=\"mt-2\">{\"Sorry, the page you are looking for doesn't exist.\"}</h2>\n);\n\nexport default NoMatch;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\n\nclass PostInline extends Component {\n  // {post !== undefined ? <div className={elClass}>\n  //    <h1><Link maintainScrollPosition={false} to={{\n  //        pathname:`/react/posts/${post.slug}`,\n  //        state: {fromDashboard: false}\n  //    }}>{post.title}</Link></h1>\n\n  //   <p className={showContent}>{post.content}</p>\n  //   </div>\n  //   : \"\"}\n  render() {\n      const {post} = this.props\n      const {elClass} = this.props\n      const showContent = elClass === 'card' ? 'd-block' : 'd-none'\n    return (\n      <div>\n          {post !== undefined ? \n            <div className={elClass}>\n            <Link \n              to={{pathname:`/react/posts/${post.slug}`,\n              state: {fromDashboard: false}\n            }}>\n                <h1>{post.title}</h1>\n            </Link>\n                  <p className={showContent}>{post.content}</p>\n            </div>\n          : ''}\n      </div>\n    );\n  }\n}\n\nexport default PostInline;\n","import React, { Component } from 'react';\nimport 'whatwg-fetch'\nimport cookie from 'react-cookies'\nimport { Link } from 'react-router-dom'\nimport PostInline from './PostInline'\n// import PostCreate from './PostCreate'\n// import PostForm from './PostForm'\nimport { connect } from 'react-redux'\n\nimport store from \"../store\";\nimport { getUserToken } from \"../utils/authUtils\";\n\nclass Posts extends Component {\n\n  constructor(props){\n      super(props)\n      this.togglePostListClass = this.togglePostListClass.bind(this)\n      this.handleNewPost = this.handleNewPost.bind(this)\n      this.loadMorePosts =this.loadMorePosts.bind(this)\n      this.state = {\n          posts: [],\n          postsListClass: \"card\",\n          next: null,\n          previous: null,\n          author: false,\n          count: 0,\n          authenticated: false, //adding redux-props\n      }\n  }\n\n  loadMorePosts(){\n      const {next} = this.state \n      if (next !== null || next !== undefined) {\n           this.props.loadPosts(next)\n      }\n     \n  }\n    \n  loadPosts(nextEndpoint){\n      let endpoint = '/api/posts/' \n      if (nextEndpoint !== undefined) {\n          endpoint = nextEndpoint\n      }\n      let thisComp = this\n      let lookupOptions = {\n          method: \"GET\",\n          headers: {\n              'Content-Type': 'application/json'\n          }\n      }\n      const csrfToken = cookie.load('csrftoken')\n      const token = getUserToken(store.getState());\n      console.log('token', token);\n      console.log('csrftoken', csrfToken);\n\n      if (csrfToken !== undefined) {\n          lookupOptions['credentials'] = 'include'\n          lookupOptions['headers']['X-CSRFToken'] = csrfToken\n       } \n\n      fetch(endpoint, lookupOptions)\n      .then(function(response){\n          return response.json()\n      }).then(function(responseData){\n          console.log(responseData)\n          // let currentPosts = thisComp.state.posts\n          // let newPosts = currentPosts.concat(responseData.results)\n          // console.log(currentPosts)\n           thisComp.setState({\n                  posts: thisComp.state.posts.concat(responseData.results),\n                  next: responseData.next,\n                  previous: responseData.previous,\n                  author: responseData.author,\n                  count: responseData.count,\n                  authenticated: thisComp.props.state.auth.authenticated //adding redux-props\n              })\n      }).catch(function(error){\n          console.log(\"error\", error)\n      })\n  }\n\n  handleNewPost(postItemData){\n      // console.log(postItemData)\n      let currentPosts = this.state.posts\n      currentPosts.unshift(postItemData) // unshift\n      this.setState({\n          posts: currentPosts\n      })\n  }\n\n  \n\n  togglePostListClass(event){\n      event.preventDefault()\n      let currentListClass = this.state.postsListClass\n      if (currentListClass === \"\"){\n          this.setState({\n              postsListClass: \"card\",\n          })\n      } else {\n          this.setState({\n              postsListClass: \"\",\n          })\n      }\n      \n  }\n\n  componentDidMount(){\n      this.setState({\n          posts: [],\n          postsListClass: \"card\",\n          next: null,\n          previous: null,\n          author: false,\n          count: 0,\n          authenticated: false,\n      })\n      this.loadPosts()\n  }\n  // {author === true ? <Link className='mr-2' maintainScrollPosition={false} to={{\n  //           pathname: `/posts/create/`,\n  //           state: { fromDashboard: false }\n  //         }}>Create Post</Link> : \"\"}\n  \n  // <button onClick={this.togglePostListClass}>Toggle Class</button>\n  // {posts.length > 0 ? posts.map((postItem, index)=>{\n  //     return (\n  //             <PostInline post={postItem} elClass={postsListClass} />\n  //     )\n  // }) : <p>No Posts Found</p>}\n  // {next !== null ? <button onClick={this.loadMorePosts}>Load more</button> : ''}\n  render() {\n      const {posts} = this.state\n      const {postsListClass} = this.state\n      // const {author} = this.state\n      const {next} = this.state \n      // const {auth} = this.props.state.auth.authenticated\n      const {authenticated} = this.state //adding redux-props\n      // const csrfToken = cookie.load('csrftoken')\n    return (\n      <div>\n        {authenticated === true ?\n          <Link className='mr-2' to={{\n            pathname: `/react/posts/create/`,\n            state: { fromDashboard: false }\n          }}>Create Post</Link>\n        : ''}\n          <button onClick={this.togglePostListClass}>Toggle Class</button>\n          {posts.length > 0 ? posts.map((postItem, index)=>{\n            return (\n              <PostInline post={postItem} key={`post-list-key ${index}`} elClass={postsListClass} />\n            )\n          }) : <p>No Posts Found</p>}\n        {next !== null ? <button onClick={this.loadMorePosts}>Load more</button> : ''}\n\n      </div>\n    );\n  }\n}\n\n// export default Posts;\n\n\nconst mapStateToProps = (state) => {\n  return {\n    state: state\n  }\n}\n\nexport default connect(mapStateToProps)(Posts);\n// {(csrfToken !== 'undefined' && csrfToken !== null) ?\n// <div className='my-5'>\n//   <PostForm newPostItemCreated={this.handleNewPost} />\n// </div>\n// : ''}","import React, { Component } from 'react'\n\nimport { Link } from 'react-router-dom'\nimport Posts from '../reactify/Posts';\n\nclass ReacTifyComp extends Component {\n  componentDidMount () {\n\n  }\n\n  render () {\n    return (\n      <div>\n        <Link className='some-link' to='/about/'>Static Page</Link>\n        <Posts />\n      </div>\n      \n    )\n  }\n}\n\nexport default ReacTifyComp","import React, {Component} from 'react'\nimport 'whatwg-fetch'\nimport cookie from 'react-cookies'\nimport moment from 'moment'\n// import { Redirect } from 'react-router-dom'\n\nimport store from \"../store\";\nimport { getUserToken } from \"../utils/authUtils\";\n\n\nclass PostForm extends Component {\n    constructor(props){\n        super(props)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleInputChange = this.handleInputChange.bind(this)\n        this.handleDraftChange = this.handleDraftChange.bind(this)\n        this.clearForm = this.clearForm.bind(this)\n        this.postTitleRef = React.createRef()\n        this.postContentRef = React.createRef()\n        this.deletePost= this.deletePost.bind(this)\n        this.state = {\n            draft: false,\n            title: null,\n            slug: null,\n            content: null,\n            publish: moment(new Date()).format('YYYY-MM-DD'),\n            errors: {}\n        }\n    }\n\n    updatePost(data){\n      const {post} = this.props\n      const endpoint = `/api/posts/${post.slug}/` \n      const csrfToken = cookie.load('csrftoken')\n      const token = getUserToken(store.getState());\n      console.log('token', token);\n      console.log('csrftoken', csrfToken);\n      let thisComp = this\n      if (csrfToken !== undefined) {\n          let lookupOptions = {\n              method: \"PUT\",\n              headers: {\n                  'Content-Type': 'application/json',\n                  'X-CSRFToken': csrfToken,\n                  'Authorization': 'Token ' + token\n              },\n              body: JSON.stringify(data),\n              credentials: 'include'\n          }\n\n          fetch(endpoint, lookupOptions)\n          .then(function(response){\n              return response.json()\n          }).then(function(responseData){\n              console.log(responseData)\n              if (thisComp.props.newPostItemUpdated){\n                  thisComp.props.newPostItemUpdated(responseData)\n              }\n              thisComp.clearForm()\n          }).catch(function(error){\n              console.log(\"error\", error)\n              alert(\"An error occured, please try again later.\")\n          })\n      } \n      \n  \t} \n    createPost(data){\n      const endpoint = '/api/posts/' \n      const csrfToken = cookie.load('csrftoken')\n      let thisComp = this\n      console.log('csrf', csrfToken)\n      if (csrfToken !== undefined) {\n          let lookupOptions = {\n              method: \"POST\",\n              headers: {\n                  'Content-Type': 'application/json',\n                  'X-CSRFToken': csrfToken\n              },\n              body: JSON.stringify(data),\n              credentials: 'include'\n          }\n\n          fetch(endpoint, lookupOptions)\n          .then(function(response){              \n              return response.json()\n          }).then(function(responseData){\n              console.log(responseData)\n              if (thisComp.props.newPostItemCreated){\n                  thisComp.props.newPostItemCreated(responseData)\n              }\n              thisComp.clearForm()\n              thisComp.defaultState()\n          }).catch(function(error){\n              console.log(\"error\", error)\n              alert(\"An error occured, please try again later.\")\n          })\n      } \n      \n    }\n    deletePost(event) {\n      event.preventDefault();\n      const {post} = this.props\n      const endpoint = `/api/posts/${post.slug}/` \n      const csrfToken = cookie.load('csrftoken')\n      console.log(post)\n      return fetch(endpoint, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': csrfToken\n            },\n            credentials: 'include'\n        }).then(function(response){\n          return response\n        }).then(data => {\n          if(data.status === 204){\n            // this.UpdateRoute();\n            console.log('Successfully Delete');\n          }   \n        }).catch(function(error){\n            console.log(\"error\", error)\n            alert(\"An error occured, please try again later.\")\n        })\n    };\n\n  \tclearForm(event){\n      if (event){\n        event.preventDefault()\n      }\n      this.postCreateForm.reset()\n      \n    } \n    clearFormRefs(){\n      this.postTitleRef.current=''\n      this.postContentRef.current=''\n    }  \t\n\thandleSubmit(event){      \n\t    event.preventDefault()\n\t    let data = this.state\n      const {post} = this.props\n      if (post !== undefined) {\n        this.updatePost(data)\n      } else {\n        this.createPost(data)\n      }\n\t    \n      console.log({post})\n\t}\n\thandleInputChange(event){\n        event.preventDefault()\n        let key = event.target.name\n        let value = event.target.value\n\n        if (key === 'title'){\n            if (value.length > 120){\n                alert(\"This title is too long\")\n            }\n        }\n        this.setState({\n            [key]: value\n\n        })\n    }\n  //fix doubleclick checkbox\n  handleDraftChange(event){\n    this.setState({\n      draft: !this.state.draft\n    })\n  }\n  defaultState(){\n    this.setState({\n        draft: false,\n        title: null,\n        content: null,\n        slug: null,\n        publish: moment(new Date()).format('YYYY-MM-DD'),\n    })   \n  }\n  componentDidMount(){\n    const {post} = this.props\n    // this.loginCheck()\n    if (post !== undefined) {\n      this.setState({\n          draft: post.draft,\n          title: post.title,\n          content: post.content,\n          slug: post.slug,\n          publish: moment(post.publish).format('YYYY-MM-DD'),\n      })\n    } else {\n      this.defaultState()\n    }\n    // this.postTitleRef.current.focus()\n  }\n\trender(){\n\t\tconst {publish} = this.state\n    const {title} = this.state\n    const {content} = this.state\n    const {slug} = this.state\n    const cancelClass = this.props.post !== undefined ? \"d-none\" : \"\"\n    const deleteClass = this.props.post === undefined ? \"d-none\" : \"\"\n\t\treturn (\n\t\t  <div>\n\t\t    <form onSubmit={this.handleSubmit} ref={(el)=> this.postCreateForm = el}>\n\t\t        <div className=\"form-group\">\n\t\t\t\t\t<label htmlFor='blogTitle'>Title</label>\n\t\t\t\t\t<input \n\t\t\t\t\t  type='text' \n\t\t\t\t\t  id='blogTitle' \n\t\t\t\t\t  name='title' \n\t\t\t\t\t  className='form-control' \n\t\t\t\t\t  placeholder='Blog post title'\n            value={title || ''}            \n\t\t\t\t\t  ref={this.postTitleRef} \n\t\t\t\t\t  onChange={this.handleInputChange} \n\t\t\t\t\t  required='required' />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label htmlFor='content'>Content</label>\n\t\t\t\t\t<textarea \n\t\t\t\t\t  id='content' \n\t\t\t\t\t  name='content' \n\t\t\t\t\t  className='form-control' \n\t\t\t\t\t  placeholder='Post content'\n            value={content || ''}\n\t\t\t\t\t  ref={this.postContentRef} \n\t\t\t\t\t  onChange={this.handleInputChange} \n\t\t\t\t\t  required='required' />\n\t\t\t\t</div>\n\t\t\t\t<div className='form-group'>\n                    <label htmlFor='slug'>Slug</label>\n                    <input \n                      type='text' \n                      id='slug' \n                      name='slug' \n                      className='form-control'\n                      placeholder='Type Slug'\n                      value={slug || ''}  \n                      onChange={this.handleInputChange} \n                      required='required'/>\n                </div>\n\t\t        <div className=\"form-group\">\n\t\t\t\t\t<label htmlFor='draft'>\n\t\t\t\t\t\t<input \n\t\t\t\t\t\t  type='checkbox' \n\t\t\t\t\t\t  id='draft' \n\t\t\t\t\t\t  name='draft' \n\t\t\t\t\t\t  className='mr-2' \n\t\t\t\t\t\t  onChange={this.handleDraftChange} \n\t\t\t\t\t\t  checked={this.state.draft}\n\t\t\t\t\t\t  />\n\t\t\t\t\tDraft</label>\n                <button onClick={(event)=>{event.preventDefault();this.handleDraftChange()}}>Toggle Draft</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label htmlFor='publish'>Publish Date</label>\n\t\t\t\t\t<input \n\t\t\t\t\t  type='date' \n\t\t\t\t\t  id='publish' \n\t\t\t\t\t  name='publish' \n\t\t\t\t\t  className='form-control' \n\t\t\t\t\t  onChange={this.handleInputChange} \n\t\t\t\t\t  required='required'\n\t\t\t\t\t  value={publish}\n\t\t\t\t\t   />\n\t\t\t\t</div>\n\t\t\t\t<button type='submit' className='btn btn-primary '>Save</button>\n\t\t\t\t<button className={`btn btn-secondary ${cancelClass}`} onClick={this.clearForm}>Clear</button>\n        <button className={`btn btn-danger' ${deleteClass}`} onClick={this.deletePost}>Delete</button>\n\n\t\t    </form>\n\t\t  </div>\n\t\t)\n\t}\n\n}\n\nexport default PostForm\n","import React, {Component} from 'react'\nimport 'whatwg-fetch'\nimport cookie from 'react-cookies'\nimport { Link } from 'react-router-dom'\n\nimport PostForm from './PostForm'\n\nclass PostDetail extends Component {\n    constructor(props){\n        super(props)\n        this.handlePostItemUpdated= this.handlePostItemUpdated.bind(this)        \n        this.state = {\n             slug: null,\n             post: null,\n             doneLoading: false,\n        }\n    }\n\n    handlePostItemUpdated(postItemData){\n        this.setState({\n            post: postItemData\n        })\n    }\n    loadPost(slug){\n      const endpoint = `/api/posts/${slug}/` \n      let thisComp = this\n      let lookupOptions = {\n          method: \"GET\",\n          headers: {\n              'Content-Type': 'application/json'\n          }\n      }\n\n      const csrfToken = cookie.load('csrftoken')\n      if (csrfToken !== undefined) {\n          lookupOptions['credentials'] = 'include'\n          lookupOptions['headers']['X-CSRFToken'] = csrfToken\n       }\n\n      fetch(endpoint, lookupOptions)\n      .then(function(response){\n          if (response.status === 404){\n              console.log('Page not found')\n          }\n          return response.json()\n      }).then(function(responseData){\n          if (responseData.detail){\n              thisComp.setState({\n                  doneLoading: true,\n                  post: null\n              })\n          } else {\n           thisComp.setState({\n                  doneLoading: true,\n                  post: responseData\n              })\n          }\n      }).catch(function(error){\n          console.log(\"error\", error)\n      })\n  }\n\n    componentDidMount(){\n        this.setState({\n                slug: null,\n                post: null\n            })\n        if (this.props.match){\n            const {slug} = this.props.match.params\n            this.setState({\n                slug: slug,\n                doneLoading: false\n            })\n            this.loadPost(slug)\n        }\n    }\n    // const {doneLoading} = this.state\n    //     const {post} = this.state\n    //     return(\n    //         <p>{(doneLoading === true) ? <div>\n    //             {post === null ? \"Not Found\": \n    //             <div>\n    //             <h1>{post.title}</h1>\n    //             {post.slug}\n\n    //             <p className='lead'>\n    //             <Link maintainScrollPosition={false} to={{\n    //                 pathname: `/react/posts`,\n    //                 state: { fromDashboard: false }\n    //               }}>Posts</Link>\n\n    //               {post.owner === true ? <Link maintainScrollPosition={false} to={{\n    //                 pathname: `/react/posts/create/`,\n    //                 state: { fromDashboard: false }\n    //               }}>Create Post</Link> : \"\" }\n    //            </p>\n\n    //               {post.owner === true ? <PostForm post={post} postItemUpdated={this.handlePostItemUpdated} /> : \"\"}\n    //             </div>\n    //            }\n    //        </div> : \"Loading...\"}</p>\n    //     )\n    // }\n    render(){\n        const {doneLoading} = this.state\n        // const {slug} = this.state\n        const {post} = this.state\n        return(\n          <div>\n            {(doneLoading === true) ? <div>\n              {(post === null) ? \"Not Found\": \n                <div> \n                  <p className=\"lead\"><Link \n                      to={{pathname:`/react/posts/`,\n                      state: {fromDashboard: false}\n                    }}>\n                      BACK\n                    </Link>\n                    {post.owner === true ? <Link to={{\n                      pathname: `/react/posts/create/`,\n                      state: { fromDashboard: false }\n                    }}>Create Post</Link> : \"\"}\n                  </p>                 \n                  <h1>{post.slug}</h1>\n                  <h1>{post.title}</h1>\n                  {post.owner === true ? <PostForm post={post} postItemUpdated={this.handlePostItemUpdated} /> : \"\"}\n                </div>\n              }\n\n            </div> : \"Loading...\"}\n          </div>               \n        )\n    }\n}\n\nexport default PostDetail","import React, {Component} from 'react'\nimport { Link } from 'react-router-dom'\nimport PostForm from './PostForm'\n\nclass PostCreate extends Component {\n\n  render(){\n    return (\n      <div>\n      \t<Link \n          to={{pathname:`/react/posts/`,\n          state: {fromDashboard: false}\n        }}>\n          BACK\n        </Link>\n      \t<h1>Create Post</h1>\n        \t<PostForm />\n      </div>\n    )\n  }\n\n}\n\nexport default PostCreate\n// // left for reference\n\n\n\n\n// // import React, {Component} from 'react'\n// // import 'whatwg-fetch'\n// // import cookie from 'react-cookies'\n// // import moment from 'moment'\n\n// // class PostCreate extends Component {\n// //     constructor(props){\n// //         super(props)\n// //         this.handleSubmit = this.handleSubmit.bind(this)\n// //         this.handleInputChange = this.handleInputChange.bind(this)\n// //         this.handleDraftChange = this.handleDraftChange.bind(this)\n// //         this.clearForm = this.clearForm.bind(this)\n// //         this.postTitleRef = React.createRef()\n// //         this.postContentRef = React.createRef()\n// //         this.state = {\n// //             draft: false,\n// //             title: null,\n// //             content: null,\n// //             publish: null,\n// //             errors: {}\n// //         }\n// //     }\n// //     createPost(data){\n// //       const endpoint = '/api/posts/' \n// //       const csrfToken = cookie.load('csrftoken')\n// //       let thisComp = this\n// //       if (csrfToken !== undefined) {\n// //           let lookupOptions = {\n// //               method: \"POST\",\n// //               headers: {\n// //                   'Content-Type': 'application/json',\n// //                   'X-CSRFToken': csrfToken\n// //               },\n// //               body: JSON.stringify(data),\n// //               credentials: 'include'\n// //           }\n\n// //           fetch(endpoint, lookupOptions)\n// //           .then(function(response){\n// //               return response.json()\n// //           }).then(function(responseData){\n// //               console.log(responseData)\n// //               if (thisComp.props.newPostItemCreated){\n// //                   thisComp.props.newPostItemCreated(responseData)\n// //               }\n// //               thisComp.clearForm()\n// //           }).catch(function(error){\n// //               console.log(\"error\", error)\n// //               alert(\"An error occured, please try again later.\")\n// //           })\n// //       } \n      \n// //   }\n\n// //     handleSubmit(event){\n// //         event.preventDefault()\n// //         let data = this.state\n// //         this.createPost(data)\n// //     }\n\n// //     handleInputChange(event){\n// //         event.preventDefault()\n// //         let key = event.target.name\n// //         let value = event.target.value\n// //         if (key === 'title'){\n// //             if (value.length > 120){\n// //                 alert(\"This title is too long\")\n// //             }\n// //         }\n// //         this.setState({\n// //             [key]: value\n// //         })\n// //     }\n\n// //     handleDraftChange(event){\n// //       this.setState({\n// //         draft: !this.state.draft\n// //       })\n// //     }\n\n// //     clearForm(event){\n// //       if (event){\n// //         event.preventDefault()\n// //       }\n// //       this.postCreateForm.reset()\n// //     }\n\n\n// //     clearFormRefs(){\n// //       this.postTitleRef.current=''\n// //       this.postContentRef.current=''\n// //     }\n\n\n// //     componentDidMount(){\n// //         this.setState({\n// //             draft: false,\n// //             title: null,\n// //             content: null,\n// //             publish: moment(new Date()).format('YYYY-MM-DD'),\n// //         })\n// //         this.postTitleRef.current.focus()\n// //     }\n\n// //     render(){\n// //         const {publish} = this.state\n// //         let thisComp = this\n// //         return (\n// //             <form onSubmit={this.handleSubmit} ref={(el) => this.postCreateForm = el}>\n// //                 <div className='form-group'>\n// //                     <label for='title'>Post title</label>\n// //                     <input \n// //                       type='text' \n// //                       id='title' \n// //                       name='title' \n// //                       className='form-control'\n// //                       placeholder='Blog post title' \n// //                       ref = {this.postTitleRef}\n// //                       onChange={this.handleInputChange} \n// //                       required='required'/>\n// //                 </div>\n// //                  <div className='form-group'>\n// //                     <label for='content'>Content</label>\n// //                     <textarea id='content' ref = {this.postContentRef} name='content' className='form-control' placeholder='Post content' onChange={this.handleInputChange} required='required'/>\n                   \n// //                 </div>\n// //                 <div className='form-group'>\n// //                     <label for='draft'>\n// //                     <input type='checkbox' checked={this.state.draft} id='draft' name='draft' className='mr-2' onChange={this.handleDraftChange}/>\n// //                      Draft </label>\n// //                      <button onClick={(event)=>{event.preventDefault();this.handleDraftChange()}}>Toggle Draft</button>\n// //                 </div>\n// //                 <div className='form-group'>\n// //                     <label for='publish'>Publish Date</label>\n// //                     <input \n// //                     type='date' \n// //                     id='publish' \n// //                     name='publish' \n// //                     className='form-control' \n// //                     onChange={this.handleInputChange}\n// //                      value={publish}\n// //                      required='required'/>\n// //                 </div>\n// //                 <button type='submit' className='btn btn-primary'>Save</button>\n// //                 <button className='btn btn-secondary' onClick={this.clearForm}>Cancel</button>\n// //             </form>\n// //         )\n// //     }\n\n// // }\n\n// // export default PostCreate","export const fetchNotes = (nextEndpoint) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        let endpoint = '/api/investors/' \n        // console.log(nextEndpoint)\n        if (nextEndpoint !== undefined && nextEndpoint !== null) {\n          endpoint = nextEndpoint\n        }\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        let {notes} = getState();\n        return fetch(endpoint, {headers, })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            // getState().notes[0].concat(res.data)}\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'FETCH_NOTES', notes: notes.push(res.data), loading: false});\n                } else if (res.status === 401 || res.status === 403) {\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\nexport const searchNotes = (searchtext) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        let endpoint = '/api/investors/' \n        if (searchtext !== undefined && searchtext !== null) {\n          endpoint = `/api/investors/?search=${searchtext}`\n        }\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        return fetch(endpoint, {headers, method: \"GET\", })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        // console.log(res)\n                        return {status: res.status, data};\n                    })\n                } else {\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'SEARCH_NOTES', notes: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\nexport const orderNotes = (order) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        let endpoint = '/api/investors/' \n        if (order !== undefined && order !== null) {\n          endpoint = `/api/investors/?ordering=${order}`\n        }\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        return fetch(endpoint, {headers, method: \"GET\", })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        // console.log(res)\n                        return {status: res.status, data};\n                    })\n                } else {\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'ORDER_NOTES', notes: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\nexport const addNote = (text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n\n        let body = JSON.stringify({text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence });\n        return fetch(\"/api/investors/\", {headers, method: \"POST\", body})\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 201) {\n                    return dispatch({type: 'ADD_NOTE', note: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\n\nexport const updateNote = (index, id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence) => {\n    return (dispatch, getState) => {\n\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n\n        let body = JSON.stringify({text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence });\n        console.log(\"id\", id, \"index\", index)\n        let noteId = getState().notes[index].noteitems[id].id;\n\n        return fetch(`/api/investors/${noteId}/`, {headers, method: \"PUT\", body})\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'UPDATE_NOTE', note: res.data, index, id});\n                } else if (res.status === 401 || res.status === 403) {\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\n\nexport const deleteNote = (id, index) => {\n    return (dispatch, getState) => {\n\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        let noteId = getState().notes[id].noteitems[index].id;\n\n        return fetch(`/api/investors/${noteId}/`, {headers, method: \"DELETE\"})\n            .then(res => {\n                if (res.status === 204) {\n                    return {status: res.status, data: {}};\n                } else if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 204) {\n                    return dispatch({type: 'DELETE_NOTE', id, index});\n                } else if (res.status === 401 || res.status === 403) {\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n            .then(res => {dispatch(fetchNotes())})\n    }\n}\n","import React from \"react\";\nimport './styles.scss'\n\nexport const LoadScreen = () => (\n  <div className=\"loadscreen\">\n    <div className=\"load-9\">\n      <div className=\"spinner\">\n        <div className=\"bubble-1\"></div>\n        <div className=\"bubble-2\"></div>\n      </div>\n    </div>\n  </div>\n)","import React, { Component } from 'react'\n\nimport * as notes from \"../../actions/notesActions\";\nimport {connect} from 'react-redux';\nimport { Link } from 'react-router-dom'\nimport { Form, FormText,  \n  FormGroup, Label, Input, Button,\n  Dropdown, DropdownToggle, \n  DropdownMenu, DropdownItem, Table, CustomInput,\n  Modal, ModalHeader, ModalBody, ModalFooter, } from 'reactstrap';\nimport { LoadScreen } from './LoadScreen/LoadScreen'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEdit, faTrash, faMale, \n  faUsers, faSave, faPlusSquare, \n  faSearch, faExchangeAlt, faLongArrowAltDown,\n  faCheckCircle, faHandHoldingUsd, faTimes } from '@fortawesome/free-solid-svg-icons'\n \nclass InputForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: \"\",\n      phone: \"\",\n      status: 'Candidate',\n      email: \"\",\n      linkedin_profile: \"\",\n      website: \"\",\n      correspondence: \"\",\n      is_corporate: false,\n      is_payed: false,\n      searchtext: \"\",\n      updateNoteId: null,\n      updateNoteIndex: null,\n      dropdownOpen: false,\n      is_ordering_name: false,\n      modal: false,\n      modaldelete: false,\n      is_staff: false,\n      loading: true,\n      nextafterdelete: \"\",\n      deleted: false,\n      order: [],\n      errors: {},\n      notes: [\n          {\n            count: null,\n            next: null,\n            previous: null,\n            noteitems: []\n          },\n        ],\n      }\n  }\n\n  // // END FETCH DATA AFTER PROPS\n  componentDidMount () {\n    this.props.fetchNotes()\n  }\n\n  resetForm = () => {\n    this.setState({text: \"\", phone: '', email:'', errors: {}, \n      updateNoteId: null, status: 'Candidate', is_corporate: false, \n      is_payed: false, linkedin_profile: \"\", website: \"\",\n      correspondence: \"\", });\n  }\n  addNew = () => {\n    this.setState({text: \"\", phone: '', email:'', errors: {}, \n      updateNoteId: null, status: 'Candidate', is_corporate: false, \n      is_payed: false, linkedin_profile: \"\", website: \"\", \n      modal: true, correspondence: \"\", });\n  }\n  resetSearch = () => {\n    this.setState({ searchtext: \"\" });\n  }\n  resetSort = () => {\n    this.setState({order: []}, function () {\n        this.handleOrderNotes();\n    });\n  }  \n  selectForEdit = (index, id) => {\n      let note = this.props.notes[index].noteitems[id];\n      this.setState({text: note.text, phone: note.phone, \n        status: note.status, is_payed: note.is_payed, \n        is_corporate: note.is_corporate, email: note.email, \n        linkedin_profile: note.linkedin_profile, \n        website: note.website, correspondence:note.correspondence,\n        updateNoteId: id, updateNoteIndex: index, modal: true, });\n  }\n\n  selectForDelete = (index, id) => {\n    this.props.deleteNote(index, id)\n    this.setState({\n      modaldelete: false,\n    })     \n  }\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      loading: nextProps.notes[0].loading,\n    }) \n    // если длина массива меньше чем предыдущая длина (один элемент удален)\n    // то пересчитываем эндпоинт для фетча (вычитаем из последнего символа next\n    // число \"1\" чтобы получить текущий фетч), если в нексте на конце \"1\", то обрезаем\n    // до знака \"?\"\n    let nextForDelete = \"\";\n    if(nextProps.notes[0].deleted) {\n      nextForDelete = nextProps.notes[0].next\n      let lastChar = parseInt(nextForDelete.slice(-1), 10)\n      if ((lastChar-1) >= 2) {\n        nextForDelete = nextForDelete.slice(0, -1)+(lastChar-1);\n      }\n      \n      //add flag nextafterdelete to correctly fetch\n      this.setState({nextafterdelete: nextForDelete,\n        deleted: false})\n    }\n  }  \n    \n  toggle = () => {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  }\n  toggleModal = () => {\n    this.setState(prevState => ({\n      modal: !prevState.modal,\n    }));\n  }\n  toggleModalDelete = (index, id) => {\n    console.log(index, id)\n    this.setState(prevState => ({\n      modaldelete: !prevState.modaldelete,\n      index: index,\n      id: id,\n    }));\n  }\n  handleValidation = () => {\n      let fields = this.state;\n      let errors = {};\n      let formIsValid = true;\n\n      //Name\n      if(fields[\"text\"].trim() === \"\"){\n         formIsValid = false;\n         errors[\"text\"] = \"Cannot be empty\";\n      } else {\n        if(typeof fields[\"text\"] !== \"undefined\"){\n           if(!fields[\"text\"].match(/^[a-zA-Z]+$/)){\n              formIsValid = false;\n              errors[\"text\"] = \"Name must be only letters\";\n           } else if (fields[\"text\"].length > 7) {\n              formIsValid = false;\n              errors[\"text\"] = \"Your name is too long\";\n           }        \n        }\n      }\n\n      //Phone\n      if(fields[\"phone\"].trim() === \"\"){\n         formIsValid = false;\n         errors[\"phone\"] = \"Phone cannot be empty\";\n      } else {\n        if(typeof fields[\"phone\"] !== \"undefined\"){\n          if(!fields[\"phone\"].match(/^[0-9\\-\\\\+]{9,15}$/)){\n            formIsValid = false;\n            errors[\"phone\"] = \"Not phone number\";\n          }      \n        }\n      }\n      // Email\n      if(fields[\"email\"].trim() === \"\"){\n        formIsValid = false;\n        errors[\"email\"] = \"Cannot be empty\";\n      } else {\n        if(typeof fields[\"email\"] !== \"undefined\"){\n          let lastAtPos = fields[\"email\"].lastIndexOf('@');\n          let lastDotPos = fields[\"email\"].lastIndexOf('.');\n          if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"email\"].indexOf('@@') === -1 && lastDotPos > 2 && (fields[\"email\"].length - lastDotPos) > 2)) {\n            formIsValid = false;\n            errors[\"email\"] = \"Email is not valid\";\n          }\n        }\n      }\n      // Linkedin profile\n      if(fields[\"linkedin_profile\"].trim() === \"\"){\n        formIsValid = false;\n        errors[\"linkedin_profile\"] = \"Cannot be empty\";\n      } else {\n        if(typeof fields[\"linkedin_profile\"] !== \"undefined\"){\n          let re=/^((https?|ftp|smtp):\\/\\/)+(www.)?[a-z0-9]+(\\.[a-z]{2,}){1,3}(#?\\/?[a-zA-Z0-9-_#]+)*\\/?(\\?[a-zA-Z0-9-_]+=[a-zA-Z0-9-%]+&?)?$/;\n          if (!re.test(fields[\"linkedin_profile\"])) {\n            formIsValid = false;\n            errors[\"linkedin_profile\"] = \"Not Linkedin URL\";\n          }\n        }\n      }\n      // Website\n      if(fields[\"website\"].trim() === \"\"){\n      } else {\n        if(typeof fields[\"website\"] !== \"undefined\"){\n          let re=/^((https?|ftp|smtp):\\/\\/)+(www.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_+.~#?&//=]*)?$/;\n          if (!re.test(fields[\"website\"])) {\n            formIsValid = false;\n            errors[\"website\"] = \"URL is not valid\";\n          }\n        }\n      }\n      this.setState({errors: errors}); \n\n      return formIsValid;\n  }\n  handleChange = (e) => {\n    e.preventDefault();\n    let key = e.target.name\n    let value = e.target.value\n\n    this.setState({\n        [key]: value,\n        errors: {}\n    })\n\n  }\n\n  changeValue = (e) => {\n    this.setState({status: e.currentTarget.textContent})\n  }\n  loadMorePosts = () => {\n    const {next} = this.props.notes[this.props.notes.length - 1]\n    // Check if investor is after delete to correct fetch \n    if (this.state.nextafterdelete) {\n      this.props.fetchNotes(this.state.nextafterdelete)\n      //clear flag nextafterdelete\n      this.setState({nextafterdelete: \"\"})\n    } else {\n      if (next !== null || next !== undefined) {\n        this.props.fetchNotes(next)              \n      }\n    }\n     \n  }\n  searchNotes = () => {\n      const {searchtext} = this.state\n      if (searchtext !== null || searchtext !== undefined) {\n          this.props.searchNotes(searchtext) \n          this.setState({\n            is_ordering_name: false,\n            order: [],\n          });             \n      }     \n  }\n\n  onCheckboxIsCorpBtnClick = () => {\n    this.setState({\n      is_corporate: !this.state.is_corporate,\n    });\n  }\n  onCheckboxIsPayBtnClick = () => {\n    this.setState({\n      is_payed: !this.state.is_payed,\n    });\n  }\n  onBtnClickOrderingName = (ordername) => {\n    // Create a new array based on current state:\n    let order = [...this.state.order];\n    let newordername = \"-\"+ordername\n    let is_ordering_name = false\n    // if ordername starts from \"C\"-character - clear that order!\n    if (ordername.charAt(0) === \"C\"){\n      let index = order.indexOf(ordername.slice(1, ordername.length))\n      // Clear ordername (remove from array)\n      if (index !== -1) {\n        order.splice(index, 1);\n      }\n    } else {\n      // Add or remove item to it\n      if (order.includes(ordername)){\n        let index = order.indexOf(ordername)\n        if (index !== -1) {\n          order.splice(index, 1);\n          order.splice(index, 0, newordername);\n        }\n      } else if (order.includes(newordername)) {\n        let index = order.indexOf(newordername)\n        if (index !== -1) {\n          order.splice(index, 1);\n          order.splice(index, 0, ordername);\n        }\n      } else {\n        order.push(ordername);\n      }\n    }\n    if (order.length > 0) {\n      is_ordering_name = true\n    } \n\n    // Set state\n    this.setState({is_ordering_name: is_ordering_name, searchtext: \"\", order}, function () {\n        this.handleOrderNotes();\n    });\n  }\n  handleOrderNotes = () => {\n    // Array to string with ','\n    let mapped = this.state.order.map((item)=>(item)).join(\",\");\n\n    if (this.state.order.length) {      \n      this.props.orderNotes(mapped)              \n    } else {\n      this.setState({order: []});\n      this.props.orderNotes(\"\")   \n    }    \n  }\n  submitNote = (e) => {\n      e.preventDefault();\n      if(this.handleValidation()){\n        if (this.state.updateNoteId === null) {\n            this.props.addNote(this.state.text, this.state.phone, this.state.status, \n              this.state.is_corporate, this.state.is_payed, this.state.email, \n              this.state.linkedin_profile, this.state.website, this.state.correspondence,)\n              .then(this.resetForm)\n              .then(this.toggleModal)            \n              .catch(function (error) {\n                 console.log(\"error\", error);\n               });\n        } else {\n            this.props.updateNote(this.state.updateNoteIndex, this.state.updateNoteId, \n              this.state.text, this.state.phone, this.state.status, this.state.is_corporate, \n              this.state.is_payed, this.state.email, this.state.linkedin_profile, \n              this.state.website, this.state.correspondence)\n              .then(this.resetForm)\n              .then(this.toggleModal)              \n              .catch(function (error) {\n                 console.log(\"error\", error);\n               });\n        }\n      }\n  }\n  renderModal() {\n      if (this.state.modal) {\n        const { errors } = this.state;\n        const { is_staff } = this.props;\n\n        return (\n          <Modal isOpen={this.state.modal} toggle={this.toggleModal}>\n            <Form onSubmit={this.submitNote}>            \n\n              <ModalHeader toggle={this.toggleModal}>{this.state.updateNoteId === null ? \"New Investor\" : \"Edit Investor\"}</ModalHeader>\n              <ModalBody>                    \n                <FormGroup>\n                  <Label>Name <span className=\"text-danger\">*</span></Label>\n                  <Input\n                    name=\"text\"\n                    value={this.state.text || ''}\n                    placeholder=\"Enter name...\"\n                    onChange={this.handleChange}\n                    required />\n                    {errors.text ? <FormText color=\"danger\">{errors.text}</FormText>: \"\"}\n                </FormGroup>\n                <FormGroup>\n                  <Label>Phone <span className=\"text-danger\">*</span></Label>\n                  <Input\n                    className=\"form-group\"\n                    name=\"phone\"\n                    type='tel'\n                    value={this.state.phone || ''}\n                    placeholder=\"Enter phone...\"\n                    onChange={this.handleChange}\n                    />\n                    {errors.phone ? <FormText color=\"danger\">{errors.phone}</FormText>: \"\"}\n                </FormGroup>\n                <FormGroup>\n                  <Label>Email <span className=\"text-danger\">*</span></Label>\n                  <Input\n                    className=\"form-group\"\n                    name=\"email\"\n                    type='text'\n                    value={this.state.email || ''}\n                    placeholder=\"Enter email...\"\n                    onChange={this.handleChange}\n                    />\n                    {errors.email ? <FormText color=\"danger\">{errors.email}</FormText>: \"\"}\n                </FormGroup> \n                <FormGroup>\n                  <Label>Linkedin <span className=\"text-danger\">*</span></Label>\n                  <Input\n                    className=\"form-group\"\n                    name=\"linkedin_profile\"\n                    type='text'\n                    value={this.state.linkedin_profile || ''}\n                    placeholder=\"Enter Linkedin profile...\"\n                    onChange={this.handleChange}\n                    />\n                    {errors.linkedin_profile ? <FormText color=\"danger\">{errors.linkedin_profile}</FormText>: \"\"}\n                </FormGroup> \n                <FormGroup>\n                  <Label>Website</Label>\n                  <Input\n                    className=\"form-group\"\n                    name=\"website\"\n                    type='text'\n                    value={this.state.website || ''}\n                    placeholder=\"Enter your website...\"\n                    onChange={this.handleChange}\n                    />\n                    {errors.website ? <FormText color=\"danger\">{errors.website}</FormText>: \"\"}\n                </FormGroup> \n                <FormGroup>\n                  <Label>Correspondence</Label>\n                  <Input\n                    className=\"form-group\"\n                    name=\"correspondence\"\n                    type='textarea'\n                    value={this.state.correspondence || ''}\n                    placeholder=\"Enter your correspondence...\"\n                    onChange={this.handleChange}\n                    />\n                    {errors.correspondence ? <FormText color=\"danger\">{errors.correspondence}</FormText>: \"\"}\n                </FormGroup> \n                <FormGroup>\n                    <Label>Individual <FontAwesomeIcon icon={faMale} color={!this.state.is_corporate ? \"black\": \"grey\"}/> / Corporate <FontAwesomeIcon icon={faUsers} color={this.state.is_corporate ? \"black\": \"grey\"}/></Label>\n                    <Button className=\"btn btn-block\" onClick={this.onCheckboxIsCorpBtnClick} active={this.state.is_corporate}>{this.state.is_corporate ? 'Change to Individual' : 'Change to Corporate'}</Button>\n                </FormGroup>\n                {this.state.updateNoteId !== null ?\n                <FormGroup>\n                <Label>Status</Label>\n                  <Dropdown className=\"form-group\" isOpen={this.state.dropdownOpen} toggle={this.toggle}>              \n                    <DropdownToggle className=\"btn-block\" caret>\n                      {this.state.status}\n                    </DropdownToggle>\n                    <DropdownMenu className=\"btn-block\">\n                      <DropdownItem onClick={this.changeValue}>Candidate</DropdownItem>\n                      <DropdownItem onClick={this.changeValue}>Processed</DropdownItem>\n                      <DropdownItem onClick={this.changeValue}>Converted</DropdownItem>\n                      <DropdownItem onClick={this.changeValue}>Rejected</DropdownItem>\n                    </DropdownMenu>\n                  </Dropdown>\n                </FormGroup>\n                : null}\n                {this.state.updateNoteId !== null && this.state.status !==\"Candidate\" && is_staff ?\n                <FormGroup>\n                    <Label>New <FontAwesomeIcon icon={faHandHoldingUsd} color={!this.state.is_payed ? \"black\": \"grey\"}/> / Payed <FontAwesomeIcon icon={faCheckCircle} color={this.state.is_payed ? \"black\": \"grey\"}/></Label>\n                    <Button className=\"btn btn-block\" onClick={this.onCheckboxIsPayBtnClick} active={this.state.is_payed}>{this.state.is_payed ? 'Change to New' : 'Change to Payed'}</Button>\n                </FormGroup>\n                : null}                            \n              </ModalBody>\n              <ModalFooter> \n                <FormGroup row>                   \n                <Button className=\"rounded-0\" color=\"info\" type=\"submit\"><FontAwesomeIcon icon={faSave} color=\"white\"/></Button>              \n                {this.state.updateNoteId === null ? <Button className=\"rounded-0\" onClick={this.resetForm}>Reset</Button> : null}\n                <Button className=\"rounded-0\" onClick={this.toggleModal}>Cancel</Button>\n                </FormGroup>\n              </ModalFooter>\n            </Form>\n          </Modal>            \n        );\n      }\n    }\n  renderModalDelete() {\n      if (this.state.modaldelete) {\n        return (\n          <Modal isOpen={this.state.modaldelete} toggle={this.toggleModalDelete}>           \n              <ModalHeader toggle={this.toggleModalDelete}>Delete Investor?</ModalHeader>\n              <ModalFooter> \n                <FormGroup row>                   \n                <Button className=\"rounded-0\" color=\"info\" onClick={() => this.selectForDelete(this.state.index, this.state.id)}><FontAwesomeIcon icon={faTrash} color=\"white\"/></Button>              \n                <Button className=\"rounded-0\" onClick={this.toggleModalDelete}>Cancel</Button>\n                </FormGroup>\n              </ModalFooter>\n          </Modal>            \n        );\n      }\n  }\n\n  renderNotes () {\n    const { notes } = this.props\n    const { errors, modal, order, modaldelete } = this.state;\n    const { next } = this.props.notes[this.props.notes.length - 1];\n\n    return (\n      <div>\n        <div className=\"centering mt-2\"> \n          <div className=\"centering-left\"> \n            <Link to={\"/investors/add\"}><Button className=\"rounded-0\" color=\"info\"><FontAwesomeIcon icon={faPlusSquare} color=\"white\"/> Add New</Button></Link>\n          </div>\n          <div className=\"centering-center\">\n          {modal ? this.renderModal() : null}\n          {modaldelete ? this.renderModalDelete() : null}\n            <FormGroup row>\n              <Button className=\"rounded-0\" color=\"info\" onClick={this.addNew}>Add New</Button>\n              <CustomInput inline\n                id=\"searchtext\"\n                type=\"text\" \n                name=\"searchtext\"\n                value={this.state.searchtext || ''}\n                placeholder=\"Search by Name...\"\n                onChange={this.handleChange}\n                \n                />\n                {errors.searchtext ? <FormText color=\"danger\">{errors.searchtext}</FormText>: \"\"}\n              <Button className=\"rounded-0\" onClick={this.searchNotes}><FontAwesomeIcon icon={faSearch} color=\"white\"/></Button>\n              {this.state.searchtext !== \"\" ? <Button outline className=\"rounded-0\" onClick={this.resetSearch}>Clear</Button> : \"\"}          \n            </FormGroup>\n          </div>\n          <div className=\"centering-right\"> \n          </div>\n        </div>          \n        <div className=\"centering\"> \n          <div className=\"centering-left\"></div>\n          <h3 className=\"centering-center\">Leads</h3>\n          <div className=\"centering-right centering-right__tablepreffix\">\n            {order.length > 0 ? <Button color=\"info\" onClick={this.resetSort}>Clear Sort</Button> : <Button outline color=\"info\" disabled>Clear Sort</Button>}\n          </div>\n        </div>\n        <Table className=\"table text-center\" striped>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th><FontAwesomeIcon icon={faMale} color=\"black\"/> / <FontAwesomeIcon icon={faUsers} color=\"black\"/></th>\n              <th>Name <Button color=\"link\" onClick={() => this.onBtnClickOrderingName(\"text\")}>\n                {order.includes(\"text\") ? <FontAwesomeIcon icon={faLongArrowAltDown} color=\"black\"/>\n                :order.includes(\"-text\") ? <FontAwesomeIcon rotation={180} icon={faLongArrowAltDown} color=\"black\"/>\n                :<FontAwesomeIcon rotation={90} icon={faExchangeAlt} color=\"grey\"/>}</Button>\n                {order.includes(\"text\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"Ctext\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                :order.includes(\"-text\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"C-text\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                :\"\"}\n              </th>\n              <th>Dev <Button color=\"link\" onClick={() => this.onBtnClickOrderingName(\"owner\")}>\n                {order.includes(\"owner\") ? <FontAwesomeIcon icon={faLongArrowAltDown} color=\"black\"/>\n                :order.includes(\"-owner\") ? <FontAwesomeIcon rotation={180} icon={faLongArrowAltDown} color=\"black\"/>\n                :<FontAwesomeIcon rotation={90} icon={faExchangeAlt} color=\"grey\"/>}</Button>\n                {order.includes(\"owner\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"Cowner\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                :order.includes(\"-owner\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"C-owner\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                :\"\"}\n              </th>\n              <th>Phone</th>\n              <th>Status <Button color=\"link\" onClick={() => this.onBtnClickOrderingName(\"status\")}>\n                {order.includes(\"status\") ? <FontAwesomeIcon icon={faLongArrowAltDown} color=\"black\"/>\n                :order.includes(\"-status\") ? <FontAwesomeIcon rotation={180} icon={faLongArrowAltDown} color=\"black\"/>\n                :<FontAwesomeIcon rotation={90} icon={faExchangeAlt} color=\"grey\"/>}</Button>\n                {order.includes(\"status\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"Cstatus\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                :order.includes(\"-status\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"C-status\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                :\"\"}\n              </th>\n              <th>Payment <Button color=\"link\" onClick={() => this.onBtnClickOrderingName(\"is_payed\")}>\n                {order.includes(\"is_payed\") ? <FontAwesomeIcon icon={faLongArrowAltDown} color=\"black\"/>\n                :order.includes(\"-is_payed\") ? <FontAwesomeIcon rotation={180} icon={faLongArrowAltDown} color=\"black\"/>\n                :<FontAwesomeIcon rotation={90} icon={faExchangeAlt} color=\"grey\"/>}</Button>\n                {order.includes(\"is_payed\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"Cis_payed\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                :order.includes(\"-is_payed\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"C-is_payed\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                :\"\"}\n              </th>\n              <th>Manage</th>\n            </tr>\n          </thead>  \n               \n          {notes !== undefined ? notes.map((post, index)=>{\n            return ( \n                <tbody key={index}>\n                    {post.noteitems !== undefined && post.noteitems.length > 0 ? post.noteitems.map((note, id) => {\n                      return (                                    \n                          <tr key={id}>\n                              <th scope=\"row\">{id+1}</th>\n                              <td>{note.is_corporate ? <FontAwesomeIcon icon={faUsers} color=\"black\"/> : <FontAwesomeIcon icon={faMale} color=\"black\"/>}</td>\n                              <td>\n                                <Link to={{pathname:`/investors/${note.id}`,\n                                      state: {fromDashboard: false}\n                                      }}>{note.text}</Link>\n                              </td>\n                              <td>{note.owner_username}</td>\n                              <td>{note.phone}</td>\n                              <td>{note.status}</td>\n                              <td>{note.is_payed ? <FontAwesomeIcon icon={faCheckCircle} color=\"black\"/> : <FontAwesomeIcon icon={faHandHoldingUsd} color=\"black\"/>}</td>\n                              <td>\n                                <Button className=\"mr-1\" color=\"info\" onClick={() => this.selectForEdit(index, id)}><FontAwesomeIcon icon={faEdit} color=\"white\"/></Button>\n                                <Button onClick={() => this.toggleModalDelete(index, id)}><FontAwesomeIcon icon={faTrash} color=\"white\"/></Button>\n                              </td>\n                          </tr>                                        \n                        )\n                      }\n                    ) : null}\n                </tbody>\n              )\n            }) : null}\n        </Table>\n        {next !== null ? <Button onClick={this.loadMorePosts}>Load more</Button> : ''}\n      </div>\n    )\n  }\n  render () {\n    const { loading } = this.state\n    return(\n      <div>\n        { loading ? <LoadScreen /> : this.renderNotes() }\n      </div>      \n    )\n  }\n}\n// <Button onClick={() => this.selectForDelete(index, id)}><FontAwesomeIcon icon={faTrash} color=\"white\"/></Button>\n\nconst mapStateToProps = state => {\n    return {\n      notes: state.notes,\n      deleted: state.deleted,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchNotes: (next) => {\n            dispatch(notes.fetchNotes(next));\n        },\n        addNote: (text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence) => {\n            return dispatch(notes.addNote(text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence));\n        },\n        updateNote: (index, id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence) => {\n            return dispatch(notes.updateNote(index, id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence));\n        },\n        deleteNote: (index, id) => {\n            dispatch(notes.deleteNote(index, id));\n        },\n        searchNotes: (searchtext) => {\n            dispatch(notes.searchNotes(searchtext));\n        },\n        orderNotes: (order) => {\n            dispatch(notes.orderNotes(order));\n        },\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputForm);","import React, { Component } from 'react'\nimport Dropzone from 'react-dropzone'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFileUpload } from '@fortawesome/free-solid-svg-icons'\n\nconst imageMaxSize = 10000000; //bytes\n\nclass FileDrop extends Component {\n\n\tonDrop = (acceptedFiles, rejectedFiles) => {\n\t\t// console.log(acceptedFiles, rejectedFiles)\n\t\tthis.props.onSelectDrop(acceptedFiles);\n\t}\n\trender () {\n\t\treturn (\n\t\t  <div>\n\t\t    <Dropzone\n\t            onDrop={this.onDrop}\t\t            \n\t            multiple={false}\n\t            maxSize={imageMaxSize}\n\t            >\n\t                {({getRootProps, getInputProps}) => (\n\t                    <div {...getRootProps()} className=\"dropzone-field\">\n\t                        <input {...getInputProps()} />\n\t                       \t<div>\n\t                       \t\t<FontAwesomeIcon icon={faFileUpload} color=\"white\"/>\n\t\t\t\t\t\t\t\t{this.props.documents ? \n\t\t\t\t\t\t\t\t\tthis.props.detail ? \n\t\t\t\t\t\t\t\t\t\tthis.props.documents === this.props.detail ?\n\t\t\t\t\t\t\t\t\t\t\t\"  Replace Document\"\n\t\t\t\t\t\t\t\t\t\t:  \"  Save to Attach\"\n\t\t\t\t\t\t\t\t\t: \"  Save to Attach\"\n\t\t\t\t\t\t\t\t: \"  Add Document\"}\n\t\t\t\t\t\t\t</div>\n\t                    </div>\n\t                )}\n\t\t\t</Dropzone>﻿\n\t\t  </div>\n\t\t  )\n\t}\n}\nexport default FileDrop","import React, {Component} from 'react'\n// import 'whatwg-fetch'\n// import cookie from 'react-cookies'\nimport { Link } from 'react-router-dom'\nimport * as detail from \"../../actions/noteDetailActions\";\nimport {connect} from 'react-redux';\nimport { Form, FormText, Container, Row,\n  FormGroup, Label, Input, Button,\n  Dropdown, DropdownToggle, \n  DropdownMenu, DropdownItem, Table } from 'reactstrap';\nimport { LoadScreen } from './LoadScreen/LoadScreen'\n// import PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMale, faUsers, faUndoAlt, faSave,\n      faCheckCircle, faHandHoldingUsd,\n       } from '@fortawesome/free-solid-svg-icons'\nimport DatePicker from \"react-datepicker\";\nimport FileDrop from './FileDrop/FileDrop';\nimport moment from \"moment\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass NoteDetail extends Component {\n\n    constructor(props){\n        super(props);\n  \n        this.state = {\n          text: \"\",\n          phone: \"\",\n          status: \"\",\n          email:\"\",\n          linkedin_profile: \"\",\n          website: \"\",\n          correspondence: \"\",\n          is_corporate: false,\n          is_payed: false,\n          id: null,\n          loading: true,\n          errors: {},\n          hasError: false,\n          dropdownOpen: false,\n          detail: {},\n          add_call: false,\n          last_call: \"\", \n          documents: null,\n          attached: false,      \n        }\n    }\n\n    componentDidMount(){\n      if (this.props.match){\n        const {id} = this.props.match.params\n        this.setState({\n            id: id,\n        })\n        this.props.fetchDetailNote(id)        \n      }\n      \n    }\n    componentWillReceiveProps(nextProps) {\n      const detailed = nextProps.detail\n\n      if (Object.keys(detailed).length) {\n        this.setState({\n          text: detailed.text,\n          phone: detailed.phone,\n          status: detailed.status,\n          is_corporate: detailed.is_corporate,\n          is_payed: detailed.is_payed,\n          email: detailed.email,\n          linkedin_profile: detailed.linkedin_profile,\n          website: detailed.website,\n          correspondence: detailed.correspondence,\n          last_call: moment(detailed.last_call, moment.defaultFormat).toDate(),\n          documents: detailed.documents,\n          hasError: detailed.hasError,\n          loading: detailed.loading,\n        }) \n      } \n      // else {\n      //   this.setState({\n      //     hasError: true\n      //   })\n      // }\n       \n    }    \n    toggle = () => {\n      this.setState(prevState => ({\n        dropdownOpen: !prevState.dropdownOpen\n      }));\n    }\n    handleChange = (e) => {\n      e.preventDefault();\n      let key = e.target.name\n      let value = e.target.value\n      this.setState({\n          [key]: value,\n          errors: {}\n      })\n    }\n    changeDate = (date) => {\n      this.setState({last_call: date})\n    }\n\n    changeValue = (e) => {\n      this.setState({status: e.currentTarget.textContent})\n    }\n    handleValidation = () => {\n      let fields = this.state;\n      let errors = {};\n      let formIsValid = true;\n\n      //Name\n      if(fields[\"text\"].trim() === \"\"){\n         formIsValid = false;\n         errors[\"text\"] = \"Cannot be empty\";\n      } else {\n        if(typeof fields[\"text\"] !== \"undefined\"){\n           if(!fields[\"text\"].match(/^[a-zA-Z]+$/)){\n              formIsValid = false;\n              errors[\"text\"] = \"Name must be only letters\";\n           } else if (fields[\"text\"].length > 7) {\n              formIsValid = false;\n              errors[\"text\"] = \"Your name is too long\";\n           }        \n        }\n      }\n\n      //Phone\n      if(fields[\"phone\"].trim() === \"\"){\n         formIsValid = false;\n         errors[\"phone\"] = \"Phone cannot be empty\";\n      } else {\n        if(typeof fields[\"phone\"] !== \"undefined\"){\n          if(!fields[\"phone\"].match(/^[0-9\\-\\\\+]{9,15}$/)){\n            formIsValid = false;\n            errors[\"phone\"] = \"Not phone number\";\n          }      \n        }\n      }\n      // Email\n      if(fields[\"email\"].trim() === \"\"){\n        formIsValid = false;\n        errors[\"email\"] = \"Cannot be empty\";\n      } else {\n        if(typeof fields[\"email\"] !== \"undefined\"){\n          let lastAtPos = fields[\"email\"].lastIndexOf('@');\n          let lastDotPos = fields[\"email\"].lastIndexOf('.');\n          if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"email\"].indexOf('@@') === -1 && lastDotPos > 2 && (fields[\"email\"].length - lastDotPos) > 2)) {\n            formIsValid = false;\n            errors[\"email\"] = \"Email is not valid\";\n          }\n        }\n      }\n      // Linkedin profile\n      if(fields[\"linkedin_profile\"].trim() === \"\"){\n        formIsValid = false;\n        errors[\"linkedin_profile\"] = \"Cannot be empty\";\n      } else {\n        if(typeof fields[\"linkedin_profile\"] !== \"undefined\"){\n          let re=/^((https?|ftp|smtp):\\/\\/)+(www.)?[a-z0-9]+(\\.[a-z]{2,}){1,3}(#?\\/?[a-zA-Z0-9-_#]+)*\\/?(\\?[a-zA-Z0-9-_]+=[a-zA-Z0-9-%]+&?)?$/;\n          if (!re.test(fields[\"linkedin_profile\"])) {\n            formIsValid = false;\n            errors[\"linkedin_profile\"] = \"Not Linkedin URL\";\n          }\n        }\n      }\n      // Website\n      if(fields[\"website\"].trim() === \"\"){\n      } else {\n        if(typeof fields[\"website\"] !== \"undefined\"){\n          let re=/^((https?|ftp|smtp):\\/\\/)+(www.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_+.~#?&//=]*)?$/;\n          if (!re.test(fields[\"website\"])) {\n            formIsValid = false;\n            errors[\"website\"] = \"URL is not valid\";\n          }\n        }\n      }\n      this.setState({errors: errors}); \n      return formIsValid;\n    }\n    getData = (documents) => {\n      this.setState({\n        documents: documents[0],\n        attached: true,\n      })\n    }\n\n    onCheckboxIsCorpBtnClick = () => {\n      this.setState({\n        is_corporate: !this.state.is_corporate,\n      });\n    }\n    onCheckboxIsPayBtnClick = () => {\n      this.setState({\n        is_payed: !this.state.is_payed,\n      });\n    }\n    onAddCallClick = () => {\n      this.setState({\n        add_call: true,\n        last_call: moment(new Date(), moment.defaultFormat).toDate(),\n      });\n    }\n\n    onResetCallClick = () => {\n      this.setState({\n        add_call: false,\n        last_call: \"\",\n      });\n    }\n    submitNote = (e) => {\n        e.preventDefault();\n        if(this.handleValidation()){\n          this.props.updateDetailNote(this.state.id, this.state.text, \n            this.state.phone, this.state.status, this.state.is_corporate, \n            this.state.is_payed, this.state.email, this.state.linkedin_profile, \n            this.state.website, this.state.correspondence, this.state.last_call,\n            this.state.documents, this.state.attached,)\n        }\n\n    }\n\n    renderNote() {\n        // const { loading } = this.state\n        const { detail } = this.props;\n        const { is_staff } = this.props;\n        const { errors } = this.state;\n        const { hasError } = this.state;\n        // console.log(loading)\n        // console.log(hasError)\n        if (!detail.detail && !hasError) {\n          return (\n                <Container fluid>\n                  <Row>\n                    <Form onSubmit={this.submitNote} className=\"form col col-lg-4 mt-2 p-2\">\n                      \n                      <FormGroup>\n                        <Label>Name <span className=\"text-danger\">*</span></Label>\n                        <Input\n                          name=\"text\"\n                          value={this.state.text || ''}\n                          placeholder=\"Enter name...\"\n                          onChange={this.handleChange}\n                          required />\n                          {errors.text ? <FormText color=\"danger\">{errors.text}</FormText>: \"\"}\n                      </FormGroup>\n                      <FormGroup>\n                        <Label>Phone <span className=\"text-danger\">*</span></Label>\n                        <Input\n                          className=\"form-group\"\n                          name=\"phone\"\n                          type='tel'\n                          value={this.state.phone || ''}\n                          placeholder=\"Enter phone...\"\n                          onChange={this.handleChange}\n                          />\n                          {errors.phone ? <FormText color=\"danger\">{errors.phone}</FormText>: \"\"}\n                      </FormGroup>\n                      <FormGroup>\n                        <Label>Email <span className=\"text-danger\">*</span></Label>\n                        <Input\n                          className=\"form-group\"\n                          name=\"email\"\n                          type='text'\n                          value={this.state.email || ''}\n                          placeholder=\"Enter email...\"\n                          onChange={this.handleChange}\n                          />\n                          {errors.email ? <FormText color=\"danger\">{errors.email}</FormText>: \"\"}\n                      </FormGroup> \n                      <FormGroup>\n                        <Label>Linkedin <span className=\"text-danger\">*</span></Label>\n                        <Input\n                          className=\"form-group\"\n                          name=\"linkedin_profile\"\n                          type='text'\n                          value={this.state.linkedin_profile || ''}\n                          placeholder=\"Enter Linkedin profile...\"\n                          onChange={this.handleChange}\n                          />\n                          {errors.linkedin_profile ? <FormText color=\"danger\">{errors.linkedin_profile}</FormText>: \"\"}\n                      </FormGroup> \n                      <FormGroup>\n                      <Label>Website</Label>\n                      <Input\n                        className=\"form-group\"\n                        name=\"website\"\n                        type='text'\n                        value={this.state.website || ''}\n                        placeholder=\"Enter your website...\"\n                        onChange={this.handleChange}\n                        />\n                        {errors.website ? <FormText color=\"danger\">{errors.website}</FormText>: \"\"}\n                    </FormGroup>\n                    <FormGroup>\n                      <Label>Correspondence</Label>\n                      <Input\n                        className=\"form-group\"\n                        name=\"correspondence\"\n                        type='textarea'\n                        value={this.state.correspondence || ''}\n                        placeholder=\"Enter your correspondence...\"\n                        onChange={this.handleChange}\n                        />\n                        {errors.correspondence ? <FormText color=\"danger\">{errors.correspondence}</FormText>: \"\"}\n                    </FormGroup>    \n                    <FormGroup>\n                        <Label>Individual <FontAwesomeIcon icon={faMale} color={!this.state.is_corporate ? \"black\": \"grey\"}/> / Corporate <FontAwesomeIcon icon={faUsers} color={this.state.is_corporate ? \"black\": \"grey\"}/></Label>\n                        <Button className=\"btn btn-block\" onClick={this.onCheckboxIsCorpBtnClick} active={this.state.is_corporate}>{this.state.is_corporate ? 'Change to Individual' : 'Change to Corporate'}</Button>\n                    </FormGroup>   \n                    <FormGroup>\n                      <Label>Status</Label>\n                      <Dropdown className=\"form-group\" isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n                        <DropdownToggle className=\"btn-block\" caret>\n                          {this.state.status || ''}\n                        </DropdownToggle>\n                        <DropdownMenu className=\"btn-block\">\n                          <DropdownItem onClick={this.changeValue}>Candidate</DropdownItem>\n                          <DropdownItem onClick={this.changeValue}>Processed</DropdownItem>\n                          <DropdownItem onClick={this.changeValue}>Converted</DropdownItem>\n                          <DropdownItem onClick={this.changeValue}>Rejected</DropdownItem>\n                        </DropdownMenu>\n                      </Dropdown>\n                    </FormGroup>\n                    {this.state.status !== \"Candidate\" && is_staff ?\n                    <FormGroup>\n                        <Label>New <FontAwesomeIcon icon={faHandHoldingUsd} color={!this.state.is_payed ? \"black\": \"grey\"}/> / Payed <FontAwesomeIcon icon={faCheckCircle} color={this.state.is_payed ? \"black\": \"grey\"}/></Label>\n                        <Button className=\"btn btn-block\" onClick={this.onCheckboxIsPayBtnClick} active={this.state.is_payed}>{this.state.is_payed ? 'Change to New' : 'Change to Payed'}</Button>\n                    </FormGroup>\n                    : null}                \n                    <FormGroup>\n                      <Label>Last Call {this.state.add_call ? <Button className=\"btn\" onClick={this.onResetCallClick}>Reset</Button>: \"\"}</Label>\n                      {moment(this.state.last_call).isValid() ?\n                      <div>\n                        <DatePicker     \n                          selected={moment(this.state.last_call, moment.defaultFormat).toDate()}\n                          onChange={this.changeDate}\n                          showTimeSelect\n                          timeFormat=\"HH:mm\"\n                          timeIntervals={15}\n                          dateFormat=\"d MMMM yyyy HH:mm\"\n                          timeCaption=\"time\"\n                        />\n                      </div>\n                      :                     \n                        <Button className=\"btn btn-block\" onClick={this.onAddCallClick}>Add Last Call</Button>\n                      }\n                    </FormGroup>\n                    <div>Documents:\n                    {detail.documents ? \" (\"+detail.documents.split(\"/\").slice(-1)[0]+\")\" : \"\"}\n                    </div>\n                    <FileDrop onSelectDrop={this.getData} documents={this.state.documents} detail={`${detail.documents}`}/>\n                    <Button color=\"info\" size=\"lg\" type=\"submit\"><FontAwesomeIcon icon={faSave} color=\"white\"/></Button>\n                  </Form>\n                  <div className=\"col col-lg-8\">\n                    <h3>Detailed Preview</h3>\n                    <Table striped>\n                      <tbody>\n                        <tr>\n                          <th>Investor</th>\n                          <td>{detail.is_corporate ? \"Corporate\" : \"Individual\" }</td>\n                        </tr>\n                        <tr>\n                          <th>Name</th>\n                          <td>{detail.text}</td>\n                        </tr>\n                        <tr>\n                          <th>Phone</th>\n                          <td>{detail.phone}</td>\n                        </tr>\n                        <tr>\n                          <th>Status</th>\n                          <td>{detail.status}</td>\n                        </tr>\n                        <tr>\n                          <th>Email</th>\n                          <td>{detail.email}</td>\n                        </tr>\n                        <tr>\n                          <th>Linkedin</th>\n                          <td className=\"table-correspondence__data\"><a href={`${detail.linkedin_profile}`} >{detail.linkedin_profile}</a></td>\n                        </tr>\n                        <tr>\n                          <th>Website</th>\n                          <td className=\"table-correspondence__data\"><a href={`${detail.website}`} >{detail.website}</a></td>\n                        </tr>\n                        <tr>\n                          <th>Correspondence</th>\n                          <td className=\"table-correspondence__data\">{detail.correspondence}</td>\n                        </tr>\n                        <tr>\n                          <th>Payment</th>\n                          <td>{detail.is_payed ? \"Payed\" : \"New\" }</td>\n                        </tr>\n                        <tr>\n                          <th>Calls</th>\n                          <td>{detail.last_call ? moment(detail.last_call).format(\"D MMM YYYY HH:mm\") : \"\"}</td>\n                        </tr>\n                        <tr>\n                          <th>Documents</th>\n                          <td>{detail.documents ? <a href={`${detail.documents}`} >{detail.documents.split(\"/\").slice(-1)[0]}</a> : \"\"}</td>\n                        </tr>\n                      </tbody>\n                    </Table>\n                  </div>\n              </Row>\n            </Container>              \n          );\n\n        } else {\n            return (\n              <div>\n                <h1>404 error. Message Not Found</h1>\n              </div>\n            );\n        }\n    }\n    render () {\n        const {loading} = this.state\n        return(\n            <div>\n              <div className=\"mt-2 mb-2\">\n                <Link to={\"/investors\"} onClick={this.forceUpdate}><Button><FontAwesomeIcon icon={faUndoAlt} color=\"white\"/> Return</Button></Link>\n              </div>\n              {loading ?<LoadScreen />:this.renderNote()}\n\n          </div>               \n        )\n    }\n}\nconst mapStateToProps = state => {\n    return {\n      detail: state.detail,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      fetchDetailNote: (id) => {\n          dispatch(detail.fetchDetailNote(id));\n      },\n      updateDetailNote: (id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence, last_call, documents, attached) => {\n          dispatch(detail.updateDetailNote(id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence, last_call, documents, attached));\n      }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteDetail);","export const fetchDetailNote = (id) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        const endpoint = `/api/investors/${id}/` \n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        \n        return fetch(endpoint, {headers, })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n               \n                } else {\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'FETCH_DETAIL_NOTE', detail: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    dispatch({type: \"AUTHENTICATION_ERROR\", detail: res.data});\n                    throw res.data;\n                } \n                else if (res.status === 404) {\n                    //redirect page need fix\n                    // window.location.href = '/404';\n                    // throw res.data; \n                    dispatch({type: \"MESSAGE_NOT_FOUND\"});\n\n                }\n            })\n            .catch(error => {                \n                //error.redirect('/404');\n                //Handle error\n                console.log(\"error\", error);\n                // return dispatch({type: \"MESSAGE_NOT_FOUND\", detail: error});\n                // dispatch({type: \"MESSAGE_NOT_FOUND\", detail: error});\n            });\n    }\n}\n\nexport const updateDetailNote = (id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence, last_call, documents, attached) => {\n    return (dispatch, getState) => {\n\n        let headers = {'Accept': 'application/json'};\n        // let headers = {\"Content-Type\": \"multipart/form-data\"};\n\n        let {token} = getState().auth;\n\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        let formData = new FormData();\n        formData.append('text', text);\n        formData.append('phone', phone);\n        formData.append('status', status);\n        formData.append('is_corporate', is_corporate);\n        formData.append('is_payed', is_payed);\n        formData.append('email', email);\n        formData.append('linkedin_profile', linkedin_profile);\n        formData.append('website', website);\n\n        // Not required fields\n        if (correspondence) {\n            formData.append('correspondence', correspondence);\n        }\n        if (attached) {\n            formData.append('documents', documents);\n        }\n\n        // formData need to convert ISO format string\n        if (last_call && String(last_call) !==\"Invalid Date\") {\n            formData.append('last_call', last_call.toISOString());\n        }\n\n        let noteId = id;\n\n        return fetch(`/api/investors/${noteId}/`, {headers, method: \"PUT\", body: formData})\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'UPDATE_DETAIL_NOTE', detail: res.data, id});\n                } else if (res.status === 401 || res.status === 403) {\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\n\nexport const addDetailNote = (text, phone, status, is_corporate, email, linkedin_profile, website, correspondence) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n\n        let body = JSON.stringify({text, phone, status, is_corporate, email, linkedin_profile, website, correspondence });\n        return fetch(\"/api/investors/\", {headers, method: \"POST\", body})\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 201) {\n                    return dispatch({type: 'ADD_DETAIL_NOTE', detail: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\n","import React, {Component} from 'react'\n// import 'whatwg-fetch'\n// import cookie from 'react-cookies'\nimport { Link, Redirect } from 'react-router-dom'\nimport * as detail from \"../../actions/noteDetailActions\";\nimport {connect} from 'react-redux';\nimport { Form, FormText, \n  FormGroup, Label, Input, Button,\n   } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUndoAlt, faSave, faMale, faUsers } from '@fortawesome/free-solid-svg-icons'\n\nclass NewNote extends Component {\n    constructor(props){\n        super(props)       \n        this.state = {\n          text: \"\",\n          phone: \"\",\n          email: \"\",\n          status: \"Candidate\",\n          linkedin_profile: \"\",\n          website: \"\",\n          correspondence: \"\",\n          is_corporate: false,\n          id: null,\n          doneLoading: false,\n          errors: {},        \n          redirectToNewPage: false          \n        }\n    }\n\n    componentDidMount(){\n      if (this.props.match){\n        // const {id} = this.props.match.params\n        // this.setState({\n        //     id: id,\n        //     doneLoading: false,\n        // })\n        // this.props.fetchDetailNote(id)\n      }\n    }\n    componentWillReceiveProps(nextProps) {\n      if (this.state.redirectToNewPage) {  \n        this.setState({\n          id: nextProps.detail.id,\n        })\n      }\n    }    \n\n    resetForm = () => {\n      this.setState({text: \"\", phone: '', email:'', errors: {}, status: 'Candidate', \n        is_corporate: false, linkedin_profile: \"\", website: \"\",\n        correspondence: \"\",\n      });\n    }\n    handleChange = (e) => {\n      e.preventDefault();\n      let key = e.target.name\n      let value = e.target.value\n      this.setState({\n          [key]: value,\n          errors: {}\n      })\n    }\n    changeValue = (e) => {\n      this.setState({status: e.currentTarget.textContent})\n    }\n    handleValidation = () => {\n      let fields = this.state;\n      let errors = {};\n      let formIsValid = true;\n\n      //Name\n      if(fields[\"text\"].trim() === \"\"){\n         formIsValid = false;\n         errors[\"text\"] = \"Cannot be empty\";\n      } else {\n        if(typeof fields[\"text\"] !== \"undefined\"){\n           if(!fields[\"text\"].match(/^[a-zA-Z]+$/)){\n              formIsValid = false;\n              errors[\"text\"] = \"Name must be only letters\";\n           } else if (fields[\"text\"].length > 7) {\n              formIsValid = false;\n              errors[\"text\"] = \"Your name is too long\";\n           }        \n        }\n      }\n\n      //Phone\n      if(fields[\"phone\"].trim() === \"\"){\n         formIsValid = false;\n         errors[\"phone\"] = \"Phone cannot be empty\";\n      } else {\n        if(typeof fields[\"phone\"] !== \"undefined\"){\n          if(!fields[\"phone\"].match(/^[0-9\\-\\\\+]{9,15}$/)){\n            formIsValid = false;\n            errors[\"phone\"] = \"Not phone number\";\n          }      \n        }\n      }\n      // Email\n      if(fields[\"email\"].trim() === \"\"){\n        formIsValid = false;\n        errors[\"email\"] = \"Cannot be empty\";\n      } else {\n        if(typeof fields[\"email\"] !== \"undefined\"){\n          let lastAtPos = fields[\"email\"].lastIndexOf('@');\n          let lastDotPos = fields[\"email\"].lastIndexOf('.');\n          if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"email\"].indexOf('@@') === -1 && lastDotPos > 2 && (fields[\"email\"].length - lastDotPos) > 2)) {\n            formIsValid = false;\n            errors[\"email\"] = \"Email is not valid\";\n          }\n        }\n      }\n      // Linkedin profile\n      if(fields[\"linkedin_profile\"].trim() === \"\"){\n        formIsValid = false;\n        errors[\"linkedin_profile\"] = \"Cannot be empty\";\n      } else {\n        if(typeof fields[\"linkedin_profile\"] !== \"undefined\"){\n          let re=/^((https?|ftp|smtp):\\/\\/)+(www.)?[a-z0-9]+(\\.[a-z]{2,}){1,3}(#?\\/?[a-zA-Z0-9-_#]+)*\\/?(\\?[a-zA-Z0-9-_]+=[a-zA-Z0-9-%]+&?)?$/;\n          if (!re.test(fields[\"linkedin_profile\"])) {\n            formIsValid = false;\n            errors[\"linkedin_profile\"] = \"Not Linkedin URL\";\n          }\n        }\n      }\n      // Website\n      if(fields[\"website\"].trim() === \"\"){\n      } else {\n        if(typeof fields[\"website\"] !== \"undefined\"){\n          let re=/^((https?|ftp|smtp):\\/\\/)+(www.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_+.~#?&//=]*)?$/;\n          if (!re.test(fields[\"website\"])) {\n            formIsValid = false;\n            errors[\"website\"] = \"URL is not valid\";\n          }\n        }\n      }\n\n      this.setState({errors: errors}); \n      return formIsValid;\n    }\n    onCheckboxBtnClick = () => {\n      this.setState({\n        is_corporate: !this.state.is_corporate,\n      });\n    }\n    submitNote = (e) => {\n      e.preventDefault();\n      if(this.handleValidation()){\n        this.props.addDetailNote(this.state.text, this.state.phone, this.state.status, \n          this.state.is_corporate, this.state.email, this.state.linkedin_profile, \n          this.state.website, this.state.correspondence)\n          .then(this.setState({ redirectToNewPage: true }))            \n          .catch(function (error) {\n             console.log(\"error\", error);\n           });\n      }\n    }\n\n    render () {\n        // const {doneLoading} = this.state\n        const { errors } = this.state;\n        // The part that makes the redirect happen\n        if (this.state.redirectToNewPage && this.state.id) {\n          // const { detail } = this.state;\n          // console.log(this.state.id)\n          return (\n            <Redirect to={{pathname:`/investors/${this.state.id}`}} />\n          )\n        }\n        return(\n            <div>\n              <div className=\"mt-2 mb-2\">\n                <Link className=\"mt-2 mb-2\" to={\"/investors\"} onClick={this.forceUpdate}><Button><FontAwesomeIcon icon={faUndoAlt} color=\"white\"/></Button></Link>\n                <h3>Add New</h3>\n              </div>\n              <Form onSubmit={this.submitNote} className=\"form col col-sm-4 mt-2 p-2\">\n                \n                <FormGroup>\n                  <Label>Name <span className=\"text-danger\">*</span></Label>\n                  <Input\n                    name=\"text\"\n                    value={this.state.text || ''}\n                    placeholder=\"Enter name...\"\n                    onChange={this.handleChange}\n                    required />\n                    {errors.text ? <FormText color=\"danger\">{errors.text}</FormText>: \"\"}\n                </FormGroup>\n                <FormGroup>\n                  <Label>Phone <span className=\"text-danger\">*</span></Label>\n                  <Input\n                    className=\"form-group\"\n                    name=\"phone\"\n                    type='tel'\n                    value={this.state.phone || ''}\n                    placeholder=\"Enter phone...\"\n                    onChange={this.handleChange}\n                    />\n                    {errors.phone ? <FormText color=\"danger\">{errors.phone}</FormText>: \"\"}\n                </FormGroup>\n                <FormGroup>\n                  <Label>Email <span className=\"text-danger\">*</span></Label>\n                  <Input\n                    className=\"form-group\"\n                    name=\"email\"\n                    type='text'\n                    value={this.state.email || ''}\n                    placeholder=\"Enter email...\"\n                    onChange={this.handleChange}\n                    />\n                    {errors.email ? <FormText color=\"danger\">{errors.email}</FormText>: \"\"}\n                </FormGroup> \n                <FormGroup>\n                  <Label>Linkedin <span className=\"text-danger\">*</span></Label>\n                  <Input\n                    className=\"form-group\"\n                    name=\"linkedin_profile\"\n                    type='text'\n                    value={this.state.linkedin_profile || ''}\n                    placeholder=\"Enter Linkedin profile...\"\n                    onChange={this.handleChange}\n                    />\n                    {errors.linkedin_profile ? <FormText color=\"danger\">{errors.linkedin_profile}</FormText>: \"\"}\n                </FormGroup> \n                <FormGroup>\n                  <Label>Website</Label>\n                  <Input\n                    className=\"form-group\"\n                    name=\"website\"\n                    type='text'\n                    value={this.state.website || ''}\n                    placeholder=\"Enter your website...\"\n                    onChange={this.handleChange}\n                    />\n                    {errors.website ? <FormText color=\"danger\">{errors.website}</FormText>: \"\"}\n                </FormGroup>\n                <FormGroup>\n                  <Label>Correspondence</Label>\n                  <Input\n                    className=\"form-group\"\n                    name=\"correspondence\"\n                    type='textarea'\n                    value={this.state.correspondence || ''}\n                    placeholder=\"Enter your correspondence...\"\n                    onChange={this.handleChange}\n                    />\n                    {errors.correspondence ? <FormText color=\"danger\">{errors.correspondence}</FormText>: \"\"}\n                </FormGroup>                  \n                <FormGroup>\n                    <Label>Individual <FontAwesomeIcon icon={faMale} color=\"black\"/> / Corporate <FontAwesomeIcon icon={faUsers} color=\"black\"/></Label>\n                    <Button className=\"btn btn-block\" onClick={this.onCheckboxBtnClick} active={this.state.is_corporate}>{this.state.is_corporate ? 'Corporate' : 'Individual'}</Button>\n                </FormGroup>\n\n                <Button color=\"info\" onClick={this.resetForm}>Reset</Button>\n                <Button type=\"submit\"><FontAwesomeIcon icon={faSave} color=\"white\"/></Button>\n            </Form>\n          </div>               \n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      detail: state.detail,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addDetailNote: (text, phone, status, is_corporate, email, linkedin_profile, website, correspondence) => {\n            return dispatch(detail.addDetailNote(text, phone, status, is_corporate, email, linkedin_profile, website, correspondence));\n        },\n    }\n}\n\n// export default NewNote;\nexport default connect(mapStateToProps, mapDispatchToProps)(NewNote);","import React, {Component} from 'react'\nimport * as lead from \"../../actions/paymentsActions\";\nimport {connect} from 'react-redux';\nimport { LoadScreen } from './LoadScreen/LoadScreen'\nimport { Table } from 'reactstrap';\n\nclass Payments extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {         \n        loading: true,\n        errors: {},\n        lead: {},\n      };\n    }\n\n    componentDidMount(){\n      if (this.props.match){\n        this.props.fetchPaymentsLead()\n      }\n    }\n   \n    renderPayments() {\n      const { lead } = this.props;\n        if (lead.leads) {\n          return (\n            <div>\n              <h3>Leads View</h3>\n              <Table className=\"table text-center\" striped>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Developer</th>\n                    <th>Total Leads</th>\n                    <th>Processed</th>\n                    <th>Converted</th>\n                    <th>Rejected</th>\n                    <th>Next Payment</th>\n                  </tr>\n                </thead>  \n                <tbody>\n                  {lead.leads.length > 0 ? lead.leads.map((item,id) => (\n                    <tr key={id}>\n                        <th scope=\"row\">{id+1}</th>\n                        <td>{item.owner}</td>\n                        <td>{item.total}</td>\n                        <td>{item.processed}</td>\n                        <td>{item.converted}</td>\n                        <td>{item.rejected}</td>\n                        <td>{item.price}</td>\n                    </tr>\n                  )) : <tr><td colspan=\"7\">Table is empty. Add your investors</td></tr>}\n                </tbody>                     \n              </Table>\n            </div>              \n          );\n        }\n    }\n    render () {\n      const { loading } = this.props\n      return(\n          <div>\n            { loading ? <LoadScreen /> : this.renderPayments() }\n        </div>               \n      )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      lead: state.lead,\n      loading: state.lead.loading\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      fetchPaymentsLead: () => {\n          dispatch(lead.fetchPaymentsLead());\n      },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Payments);","export const fetchPaymentsLead = () => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        const endpoint = `/api/payments/` \n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        \n        return fetch(endpoint, {headers, })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                // } else if (res.status === 404) {\n                //     dispatch({type: \"MESSAGE_NOT_FOUND\", data: res.data});\n                //     throw res.data;\n                } else {\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'FETCH_PAYMENTS_LEAD', leads: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                } else if (res.status === 404) {\n                    dispatch({type: \"ERROR_NOT_FOUND\", leads: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport RequireAuth from \"./auth/RequireAuth\";\nimport Landing from \"./Landing\";\nimport Login from \"./auth/Login\";\nimport Logout from \"./auth/Logout\";\nimport Signup from \"./auth/Signup\";\nimport SignupDone from \"./auth/SignupDone\";\nimport AccountActivation from \"./auth/AccountActivation\";\nimport UserProfile from \"./auth/UserProfile\";\nimport UserProfileEdit from \"./auth/UserProfileEdit\";\nimport PasswordChange from \"./auth/PasswordChange\";\nimport PasswordReset from \"./auth/PasswordReset\";\nimport PasswordResetDone from \"./auth/PasswordResetDone\";\nimport PasswordResetConfirm from \"./auth/PasswordResetConfirm\";\nimport NoMatch from \"./NoMatch\";\n\nimport ReactifyComp from '../routingComps/ReactifyComp'\nimport PostDetail from '../reactify/PostDetail';\nimport PostCreate from '../reactify/PostCreate'\nimport InputForm from './notes/InputForm'\nimport NoteDetail from './notes/NoteDetail'\nimport NewNote from './notes/NewNote'\nimport Payments from './notes/Payments'\n\nconst MainContent = () => (\n    <div>\n        <Switch>\n            <Route exact path=\"/\" component={props => <Landing {...props} />} />\n            <Route path=\"/login\" component={props => <Login {...props} />} />\n            <Route path=\"/logout\" component={props => <Logout {...props} />}/>\n            <Route path=\"/signup\" component={props => <Signup {...props} />}/>\n            <Route path=\"/account/confirm-email/:key\" component={props => <AccountActivation {...props} />}/>\n            <Route path=\"/signup_done\" component={props => <SignupDone {...props} />}/>\n            <Route path=\"/reset_password\" component={props => <PasswordReset {...props} />}/>\n            <Route path=\"/reset_password_done\" component={props => <PasswordResetDone {...props} />}/>\n            <Route path=\"/reset/:uid/:token/\" component={props => <PasswordResetConfirm {...props} />}/>\n            <Route path=\"/profile\" component={RequireAuth(UserProfile)}/>\n            <Route path=\"/profile_edit\" component={RequireAuth(UserProfileEdit)}/>\n            <Route path=\"/change_password\" component={RequireAuth(PasswordChange)}/>\n            <Route path='/react/posts/create' component={RequireAuth(PostCreate)}/>\n            <Route path='/react/posts/:slug' component={RequireAuth(PostDetail)}/>\n            <Route path='/react/posts' component={RequireAuth(ReactifyComp)} />\n            <Route exact path='/investors' component={RequireAuth(InputForm)} />\n            <Route path='/investors/add' component={RequireAuth(NewNote)}/>\n            <Route path='/investors/:id' component={RequireAuth(NoteDetail)}/>\n            <Route exact path='/payments' component={RequireAuth(Payments)} />\n\n            <Route component={props => <NoMatch {...props} />}/>\n        </Switch>\n    </div>\n);\n\nexport default MainContent;\n","import React, {Component} from \"react\";\n// import { Notifs } from 'redux-notifications';\n// <Notifs />\n\nimport Header from \"./Header\";\nimport MainContent from \"./MainContent\";\n\nexport default class App extends Component {\n\n    render() {\n        return (\n            <div>                \n                <Header />\n                <div className=\"container\">\n                \t<MainContent />\n                </div>\n            </div>\n        );\n    }\n}","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"bootstrap/dist/css/bootstrap.css\";\nimport 'redux-notifications/lib/styles.css';\nimport \"./styles/style.css\"\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import { Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport store from \"./store\";\n// import history from \"./utils/historyUtils\";\nimport { authLogin } from \"./actions/authActions\";\nimport App from \"./components/App\";\nimport registerServiceWorker from './registerServiceWorker';\n\n// import { syncHistoryWithStore } from 'react-router-redux'\n\n\n// const browserhistory = syncHistoryWithStore(history, store)\n\nregisterServiceWorker();\n\nconst token = localStorage.getItem(\"token\");\n\nif (token) {\n    store.dispatch(authLogin(token));\n}\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <App />\n        </Router>\n    </Provider>\n    , document.getElementById(\"root\"));\n"],"sourceRoot":""}