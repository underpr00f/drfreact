{"version":3,"sources":["../config/polyfills.js","reducers/notesReducer.js","constants/actionTypes.js","reducers/index.js","reducers/authReducer.js","reducers/noteDetailReducer.js","reducers/paymentsReducer.js","reducers/userDetailReducer.js","store/index.js","constants/urls.js","utils/authUtils.js","actions/authActions.js","utils/renderUtils.js","components/Header.js","components/auth/RequireAuth.js","components/Landing.js","components/auth/Login.js","components/auth/Logout.js","components/auth/Signup.js","components/auth/SignupDone.js","components/auth/AccountActivation.js","components/auth/Atoms/Buttons/Buttons.js","components/auth/Molecules/Tables/UserDetailTable.js","components/auth/Templates/UserProfile.js","components/general/Organisms/LoadScreen/LoadScreen.js","components/auth/Templates/UserProfileDetail.js","actions/userDetailActions.js","components/auth/Atoms/ImageDrop/ImageDrop.js","components/auth/UserProfileEdit.js","components/auth/PasswordChange.js","components/auth/PasswordReset.js","components/auth/PasswordResetDone.js","components/auth/PasswordResetConfirm.js","components/NoMatch.js","reactify/PostInline.js","reactify/Posts.js","routingComps/ReactifyComp.js","reactify/PostForm.js","reactify/PostDetail.js","reactify/PostCreate.js","actions/notesActions.js","components/notes/Organisms/Modal/Modal.js","components/notes/Atoms/AddInputs/AddInputs.js","components/notes/Atoms/Checkboxes/CheckboxIsCorp.js","components/notes/Atoms/Checkboxes/CheckboxIsPayed.js","components/notes/Atoms/Dropdown/Dropdown.js","components/notes/Molecules/Forms/InputFormNoteQuickAdd.js","components/notes/Molecules/Tables/OrderingHeaderTable.js","utils/helpers.js","components/notes/Templates/Notes.js","components/notes/Atoms/DatePick/DatePickLastCall.js","components/notes/Atoms/FileDrop/FileDrop.js","components/notes/Molecules/Forms/InputFormNoteDetail.js","components/notes/Molecules/Tables/DetailPreviewTable.js","components/notes/Templates/NoteDetail.js","actions/noteDetailActions.js","components/notes/Molecules/Forms/InputFormNoteAdd.js","components/notes/Templates/NoteNew.js","components/notes/Templates/Payments.js","actions/paymentsActions.js","components/MainContent.js","components/App.js","registerServiceWorker.js","index.js"],"names":["Promise","__webpack_require__","enable","window","Object","assign","initialState","noteitems","loading","AuthTypes","LOGIN","LOGOUT","CHANGE_PASSWORD","USER_PROFILE","rootReducer","combineReducers","form","formReducer","auth","state","arguments","length","undefined","action","type","objectSpread","authenticated","token","payload","user","notes","noteList","map","a","reduce","b","concat","toConsumableArray","slice","filter","index","self","findIndex","t","created_at","id","unshift","note","selectById","indexEdit","p","noteToUpdate","text","phone","status","is_corporate","is_payed","email","linkedin_profile","website","correspondence","splice","deleteById","indexDel","nextafterdelete","next","deleted","detail","updated","hasError","errors","page","lead","leads","newstate","forEach","item","true_investors","converted","processed","rejected","count_payed","payed","price_all","price_payed","key","prices","value","Math","ceil","price","error","userdetail","store","logger","createLogger","middleware","applyMiddleware","thunk","compose","createStoreWithMiddleware","createStore","configureStore","ROOT_URL","HOMEPAGE_URL","require","homepage","AuthUrls","SIGNUP","RESET_PASSWORD","RESET_PASSWORD_CONFIRM","USER_ACTIVATION","getUserToken","authLogin","getUserProfile","dispatch","getState","axios","get","headers","authorization","then","response","data","catch","console","log","processServerError","keys","newDict","push","_error","renderField","_ref","input","label","_ref$meta","meta","touched","react_default","createElement","className","renderTextAreaField","_ref2","_ref2$meta","renderError","errorMessages","JSON","stringify","toast","Header","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleNavbar","setState","collapsed","Nav","navbar","NavItem","NavLink","href","avatar","src","alt","username","renderUser","Navbar","color","dark","expand","NavbarBrand","NavbarToggler","onClick","Collapse","isOpen","renderLinks","Component","connect","RequireAuth","ComposedComponent","Authentication","_Component","apply","inherits","createClass","checkAuthentication","nextProps","history","is_staff","is_superuser","Landing","Login","_this$props","handleSubmit","pristine","submitting","onSubmit","Field","name","component","validate","required","message","Link","role","to","Button","disabled","reduxForm","formValues","loginUrl","post","localStorage","setItem","processedError","SubmissionError","onChange","values","clearSubmitErrors","test","Logout","logoutUser","removeItem","Signup","password1","password2","signupUrl","SignupDone","AccountActivation","match","params","activateUserUrl","info","ReturnButton","size","context","router","goBack","index_es","icon","faUndoAlt","contextTypes","PropTypes","object","UserDetailTable","Table","striped","Buttons_ReturnButton","style","backgroundImage","first_name","last_name","about","UserProfile","UserDetailTable_UserDetailTable","withRouter","LoadScreen","UserProfileDetail","fetchUserDetail","_this$state","LoadScreen_LoadScreen","renderNote","prevState","Content-Type","endpoint","fetch","res","json","ImageDrop","attached","handleDrop","files","_this2","_this$props$meta","classNameLabel","cbFunction","drop_class","drop_text","dist_es","onDrop","f","maxSize","getRootProps","getInputProps","defaultProps","Atoms_ImageDrop_ImageDrop","dropzone_options","multiple","accept","initialValues","formData","FormData","String","append","patch","PasswordChange","changePasswordUrl","new_password1","new_password2","PasswordReset","resetPasswordUrl","PasswordResetDone","PasswordResetConfirm","_props$match$params","uid","resetPasswordConfirmUrl","NoMatch","PostInline","elClass","showContent","pathname","slug","fromDashboard","title","content","Posts","togglePostListClass","bind","assertThisInitialized","handleNewPost","loadMorePosts","posts","postsListClass","previous","author","count","loadPosts","nextEndpoint","thisComp","lookupOptions","method","csrfToken","cookie","load","responseData","results","postItemData","currentPosts","event","preventDefault","postItem","reactify_PostInline","ReacTifyComp","reactify_Posts","PostForm","handleInputChange","handleDraftChange","clearForm","postTitleRef","React","createRef","postContentRef","deletePost","draft","publish","moment","Date","format","X-CSRFToken","Authorization","body","credentials","newPostItemUpdated","alert","newPostItemCreated","defaultState","postCreateForm","reset","current","updatePost","createPost","target","defineProperty","cancelClass","deleteClass","ref","el","htmlFor","placeholder","checked","PostDetail","handlePostItemUpdated","doneLoading","loadPost","owner","reactify_PostForm","postItemUpdated","PostCreate","fetchNotes","ModalDelete","modaldelete","toggle","Modal","ModalHeader","ModalBody","ModalFooter","FormGroup","row","onSelectForDelete","faTrash","InputName","Label","Input","onInputChange","FormText","InputPhone","_Component2","_this$props2","InputEmail","_Component3","_this$props3","InputLinkedin","_Component4","_this$props4","InputWebsite","_Component5","_this$props5","InputCorrespondence","_Component6","_this$props6","CheckboxIsCorp","faMale","faUsers","handleCheckboxIsCorpBtnClick","active","CheckboxIsPayed","faHandHoldingUsd","faCheckCircle","handleCheckboxIsPayBtnClick","CustomDropdown","dropdownOpen","Dropdown","onToggle","DropdownToggle","caret","DropdownMenu","DropdownItem","onChangeValue","InputFormNoteQuickAdd","updateNoteId","AddInputs_InputName","AddInputs_InputPhone","AddInputs_InputEmail","AddInputs_InputLinkedin","AddInputs_InputWebsite","AddInputs_InputCorrespondence","CheckboxIsCorp_CheckboxIsCorp","Dropdown_CustomDropdown","CheckboxIsPayed_CheckboxIsPayed","OrderingHeaderTable","_getPrototypeOf2","_len","args","Array","_key","order","is_ordering_name","searchtext","handleOrderNotes","mapped","join","orderNotes","onBtnClickOrderingName","ordername","newordername","charAt","indexOf","includes","onOrderNotes","faLongArrowAltDown","rotation","faExchangeAlt","faTimes","handleValidation","fields","trim","lastAtPos","lastIndexOf","lastDotPos","Notes","resetForm","addNew","modal","resetSearch","selectForEdit","updateNoteIndex","selectForDelete","deleteNote","toggleModal","toggleModalDelete","handleChange","e","_this$setState","changeValue","currentTarget","textContent","searchNotes","onCheckboxIsCorpBtnClick","onCheckboxIsPayBtnClick","dataFromCallback","submitNote","validation_errors","addNote","updateNote","nextForDelete","lastChar","parseInt","Form","InputFormNoteQuickAdd_InputFormNoteQuickAdd","faSave","outline","_this$state2","faPlusSquare","renderModal","Modal_ModalDelete","CustomInput","inline","faSearch","OrderingHeaderTable_OrderingHeaderTable","scope","owner_username","faEdit","renderNotes","noteId","DatePickLastCall","handleChangeDate","date","defaultFormat","toDate","add_call","last_call","is_valid_date","isValid","handleResetCallClick","react_datepicker_es","selected","showTimeSelect","timeFormat","timeIntervals","dateFormat","timeCaption","handleAddCallClick","FileDrop","acceptedFiles","rejectedFiles","onSelectDrop","documents","split","faFileUpload","InputFormNoteDetail","DatePickLastCall_DatePickLastCall","Atoms_FileDrop_FileDrop","DetailPreviewTable","NoteDetail","changeDate","getData","onAddCallClick","onResetCallClick","refreshPage","location","updateDetailNote","fetchDetailNote","detailed","Container","fluid","Row","InputFormNoteDetail_InputFormNoteDetail","DetailPreviewTable_DetailPreviewTable","Accept","toISOString","InputFormNoteAdd","NoteNew","addDetailNote","redirectToNewPage","Redirect","InputFormNoteAdd_InputFormNoteAdd","Payments","fetchPaymentsLead","total","colSpan","renderPayments","MainContent","Switch","Route","exact","path","components_Landing","auth_Login","auth_Logout","auth_Signup","auth_AccountActivation","SignupDone_SignupDone","auth_PasswordReset","PasswordResetDone_PasswordResetDone","auth_PasswordResetConfirm","UserProfileEdit","ReactifyComp","components_NoMatch","App","components_Header","lib","hideProgressBar","position","autoClose","removeCloseButton","components_MainContent","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","URL","process","origin","addEventListener","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","getItem","ReactDOM","render","es","BrowserRouter","App_App","document","getElementById"],"mappings":"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","file":"js/main.a9505e3b.chunk.js","sourcesContent":["'use strict';\n\nif (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where React gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes React's erratic future behavior.\n  require('promise/lib/rejection-tracking').enable();\n\n  window.Promise = require('promise/lib/es6-extensions.js');\n} // fetch() polyfill for making API calls.\n\n\nrequire('whatwg-fetch'); // Object.assign() is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\n\n\nObject.assign = require('object-assign'); // In tests, polyfill requestAnimationFrame since jsdom doesn't provide it yet.\n// We don't polyfill it in the browser--this is user's responsibility.\n\nif (process.env.NODE_ENV === 'test') {\n  require('raf').polyfill(global);\n}","const initialState = [{noteitems: [], \n                       loading: true\n                    }]\n\nexport default function notes(state=initialState, action) {\n    //собрать все массивы с ключами noteitems и объединить в один массив\n    let noteList = state.map(a => a.noteitems).reduce((a, b) => [...a, ...b], []).slice();\n\n    switch (action.type) {\n\n        case 'FETCH_NOTES':\n            //удаление дубликатов\n            noteList = noteList.filter((noteList, index, self) => self.findIndex(t => t.created_at === noteList.created_at && t.id === noteList.id) === index)\n            \n            return [                    \n                    {...state[state.length-1],\n                    noteitems: noteList,\n                    loading: false,\n                    // deleted: false\n                    // ...action.notes\n                    },\n                ];\n        case 'SEARCH_NOTES':\n            noteList = action.notes\n        \n            return [                    \n\n                    {...state,\n                    ...action.notes,\n                    loading: false,},\n                ];\n\n        case 'ORDER_NOTES':\n            noteList = action.notes\n       \n            return [                    \n\n                    {...state,\n                    ...action.notes,\n                    loading: false,},\n                ];\n\n\n        case 'ADD_NOTE':\n            // Добавляем заметку\n            noteList.unshift(action.note);\n            // Удаляем нижнюю\n            // if (noteList.length > 0) {\n            //     noteList.pop();\n            // }\n\n            return [\n                        //берем последний стейт и добавляем к нему общий массив\n                        {...state[state.length-1],\n                            noteitems: noteList,\n                            loading: false,},\n\n                    ];\n\n        case 'UPDATE_NOTE':\n\n            //Поиск в общем массиве элемента по id и index (2мерный массив)\n            let selectById = state[action.index].noteitems[action.id].id\n            let indexEdit = noteList.findIndex(p => p.id === selectById) \n\n            let noteToUpdate = noteList[indexEdit]\n            noteToUpdate.text = action.note.text;\n            noteToUpdate.phone = action.note.phone;\n            noteToUpdate.status = action.note.status;\n            noteToUpdate.is_corporate = action.note.is_corporate;\n            noteToUpdate.is_payed = action.note.is_payed;\n            noteToUpdate.email = action.note.email;\n            noteToUpdate.linkedin_profile = action.note.linkedin_profile;\n            noteToUpdate.website = action.note.website;\n            noteToUpdate.correspondence = action.note.correspondence;\n            noteList.splice(indexEdit, 1, noteToUpdate);\n            return [\n                    {...state[state.length-1],\n                        noteitems: noteList,\n                        loading: false,},\n                    ];\n\n        case 'DELETE_NOTE':\n            //Поиск в общем массиве элемента по id и index (2мерный массив)\n            let deleteById = state[action.id].noteitems[action.index].id\n            let indexDel = noteList.findIndex(p => p.id === deleteById)                      \n            noteList.splice(indexDel, 1);\n            return [\n                        {...state[state.length-1],\n                            noteitems: noteList,\n                            loading: false,\n                            nextafterdelete: state[0].next,\n                            deleted: true\n                        }\n                    ];\n\n        default:\n            \n    }\n    return state;\n}\n","export const AuthTypes = {\n    LOGIN: \"LOGIN\",\n    LOGOUT: \"LOGOUT\",\n    CHANGE_PASSWORD: \"CHANGE_PASSWORD\",\n    USER_PROFILE: \"USER_PROFILE\",\n    // WITH_ERROR: \"WITH_ERROR\"\n};","import {combineReducers} from \"redux\";\nimport { reducer as formReducer } from \"redux-form\";\n\nimport notesReducer from \"./notesReducer\";\nimport noteDetailReducer from \"./noteDetailReducer\";\nimport userDetailReducer from \"./userDetailReducer\";\nimport authReducer from \"./authReducer\";\nimport paymentsReducer from \"./paymentsReducer\";\n// import { routerReducer } from 'react-router-redux'\n\nconst rootReducer = combineReducers({\n    form: formReducer,\n    auth: authReducer,\n    notes: notesReducer,\n    detail: noteDetailReducer,\n    lead: paymentsReducer,\n    userdetail: userDetailReducer,\n    // routing: routerReducer\n});\n\nexport default rootReducer;\n\n\n","import { AuthTypes } from \"../constants/actionTypes\";\n\nexport default function(state = {}, action) {\n    switch(action.type) {\n        case AuthTypes.LOGIN:\n            return { ...state, authenticated: true, token: action.payload};\n        case AuthTypes.LOGOUT:\n            return { ...state, authenticated: false, token: null};\n        case AuthTypes.USER_PROFILE:\n            return { ...state, user: action.payload};\n        // case AuthTypes.WITH_ERROR:\n        //     return { ...state, error: action.payload};\n        default:\n        \t// will NOT execute because of the line preceding the switch.\n    }\n    return state;\n}","export default function noteDetailReducer(state = {loading: true, updated: false}, action) {\n    switch(action.type) {\n\n        case 'FETCH_DETAIL_NOTE':\n            return { ...state, ...action.detail, loading: false};\n        case 'UPDATE_DETAIL_NOTE':\n            return { ...state, ...action.detail, loading: false, updated: true};\n        case 'ADD_DETAIL_NOTE':\n            return { ...state, ...action.detail, loading: false};\n\n        case 'MESSAGE_NOT_FOUND':\n            return {...state, \n                hasError: true,\n                errors: {page: \"Page not found\"},\n                loading: false,\n            };\n\n        default:\n          // will NOT execute because of the line preceding the switch.\n    }\n    return state;\n}","export default function paymentsReducer(state = {leads: \"\", loading: true}, action) {\n    switch(action.type) {\n\n        case 'FETCH_PAYMENTS_LEAD':\n            // initialize newstate for reducer (to add calculated parameter lead.price)\n            let newstate =  [...action.leads];\n            // calculating next payment\n            newstate.forEach(item=>{\n              // get true_investors (without candidate status)\n              let true_investors = item.converted + item.processed + item.rejected\n              // get count of payed investors\n              let count_payed = item.payed\n              let price_all = 0;\n              let price_payed = 0;\n\n              // Calculating price\n              for(let key in item.prices){\n                let value = item.prices[key]\n                // Calculating price for investors without Candidate status\n                if (true_investors >=10){\n                    if (true_investors>=key) {\n                        price_all += 10*value\n                    } else {\n                        if (Math.ceil(true_investors/10) === key/10) {\n                            price_all += (true_investors+10-key)*value \n                        }\n                    }\n                }\n                // Get payed price\n                if (count_payed && true_investors >=10){\n                    if (count_payed >= key) {\n                        price_payed += 10*value\n                    } else {\n                        if (Math.ceil(count_payed/10) === key/10) {\n                            price_payed += (count_payed+10-key)*value \n                        }\n                    }\n                }\n              }\n              // output price without payed prices\n              item.price =price_all-price_payed;              \n            });\n            return { ...state, leads: [...newstate], loading: false }\n        case 'LEAD_NOT_FOUND':\n            return {...state, loading: false, error: \"Not found\"};\n        default:\n          // will NOT execute because of the line preceding the switch.\n    }\n    return state;\n}","export default function userDetailReducer(state = {loading: true}, action) {\n    switch(action.type) {\n\n        case 'FETCH_USER_DETAIL':\n            return { ...state, ...action.userdetail, loading: false};\n        // case 'UPDATE_DETAIL_NOTE':\n        //     return { ...state, ...action.detail, loading: false, updated: true};\n        // case 'ADD_DETAIL_NOTE':\n        //     return { ...state, ...action.detail, loading: false};\n\n        case 'USER_NOT_FOUND':\n            return {...state, \n                hasError: true,\n                errors: {page: \"User not found\"},\n                loading: false,\n            };\n\n        default:\n          // will NOT execute because of the line preceding the switch.\n    }\n    return state;\n}","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from '../reducers';\n\nfunction configureStore(initialState) {\n    let createStoreWithMiddleware;\n\n    const logger = createLogger();\n    const middleware = applyMiddleware(thunk, logger);\n\n    createStoreWithMiddleware = compose(\n        middleware\n    );\n\n    return createStoreWithMiddleware(createStore)(rootReducer, initialState);\n}\n\nlet store = configureStore();\n\nexport default store;","let ROOT_URL = \"http://localhost:8000/\";\n\n// FOR PRODUCTION URLS\nconst HOMEPAGE_URL = require('../../package.json').homepage;\n\nif (process.env.NODE_ENV === \"production\") {\n\tROOT_URL = HOMEPAGE_URL\n}\n\nexport const AuthUrls = {\n    LOGIN: `${ROOT_URL}rest-auth/login/`,\n    SIGNUP: `${ROOT_URL}rest-auth/registration/`,\n    CHANGE_PASSWORD: `${ROOT_URL}rest-auth/password/change/`,\n    RESET_PASSWORD: `${ROOT_URL}rest-auth/password/reset/`,\n    RESET_PASSWORD_CONFIRM: `${ROOT_URL}rest-auth/password/reset/confirm/`,\n    USER_ACTIVATION: `${ROOT_URL}rest-auth/registration/verify-email/`,\n    USER_PROFILE: `${ROOT_URL}rest-auth/user/`\n};","export function getUserToken(state) {\n    return state.auth.token;\n}","import axios from \"axios\";\nimport { SubmissionError } from 'redux-form';\n// import { actions as notifActions } from 'redux-notifications';\nimport { AuthTypes } from \"../constants/actionTypes\";\nimport { AuthUrls } from \"../constants/urls\";\nimport store from \"../store\";\nimport { getUserToken } from \"../utils/authUtils\";\nimport { toast } from 'react-toastify';\n\n// const { notifSend } = notifActions;\nexport function authLogin(token) {\n    return {\n        type: AuthTypes.LOGIN,\n        payload: token,\n    };\n}\n\nexport function loginUser(formValues, dispatch, props) {\n        const loginUrl = AuthUrls.LOGIN;\n\n        return axios.post(loginUrl, formValues).then((response) => {\n            // If request is good...\n            // Update state to indicate user is authenticated\n            const token = response.data.key; \n\n            dispatch(authLogin(token));\n            localStorage.setItem(\"token\", token);\n\n            // redirect to the route '/'\n            props.history.push(\"/investors\");\n            // to getUserProfile in Header\n            dispatch(getUserProfile())\n        }).catch(error => {            \n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n\nexport function logoutUser() {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"csrftoken\");\n    return {\n        type: AuthTypes.LOGOUT\n    };\n}\n\nexport function signupUser(formValues, dispatch, props) {\n    const signupUrl = AuthUrls.SIGNUP;\n\n    return axios.post(signupUrl, formValues)\n        .then((response) => {\n            // If request is good...\n            // you can login if email verification is turned off.\n            // const token = response.data.key;\n            // dispatch(authLogin(token));\n            // localStorage.setItem(\"token\", token);\n\n            // email need to be verified, so don't login and send user to signup_done page.\n            // redirect to signup done page.\n            props.history.push(\"/signup_done\");\n        })\n        .catch((error) => {\n            // If request is bad...\n            // Show an error to the user\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n\nfunction setUserProfile(payload) {\n    return {\n        type: AuthTypes.USER_PROFILE,\n        payload: payload\n    };\n}\n\nexport function getUserProfile() {\n    return function(dispatch) {\n        const token = getUserToken(store.getState());\n\n        if (token) {\n            axios.get(AuthUrls.USER_PROFILE, {\n                headers: {\n                    authorization: 'Token ' + token\n                }\n            }).then(response => {\n                dispatch(setUserProfile(response.data))\n            }).catch((error) => {\n                // If request is bad...\n                // Show an error to the user\n                console.log(error);\n                // TODO: send notification and redirect\n            });\n        }\n    };\n}\n\nexport function changePassword(formValues, dispatch, props) {\n    const changePasswordUrl = AuthUrls.CHANGE_PASSWORD;\n    const token = getUserToken(store.getState());\n\n    if (token) {\n        return axios.post(changePasswordUrl, formValues, {\n            headers: {\n                authorization: 'Token ' + token\n            }\n        })\n            .then((response) => {\n                toast.info('Password has been changed successfully')\n                // dispatch(notifSend({\n                //     message: \"Password has been changed successfully\",\n                //     kind: \"info\",\n                //     dismissAfter: 5000\n                // }));\n                // redirect to the route '/profile'\n                props.history.push(\"/profile\");\n            })\n            .catch((error) => {\n                // If request is bad...\n                // Show an error to the user\n                const processedError = processServerError(error.response.data);\n                throw new SubmissionError(processedError);\n            });\n    }\n}\n\nexport function resetPassword(formValues, dispatch, props) {\n    const resetPasswordUrl = AuthUrls.RESET_PASSWORD;\n\n    return axios.post(resetPasswordUrl, formValues)\n        .then(response => {\n            // redirect to reset done page\n            props.history.push(\"/reset_password_done\");\n        }).catch((error) => {\n            // If request is bad...\n            // Show an error to the user\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n\nexport function confirmPasswordChange(formValues, dispatch, props) {\n    const { uid, token } = props.match.params;\n    const resetPasswordConfirmUrl = AuthUrls.RESET_PASSWORD_CONFIRM;\n    const data = Object.assign(formValues, { uid, token });\n\n    return axios.post(resetPasswordConfirmUrl, data)\n        .then(response => {\n            toast.info('Password has been reset successfully, please log in')\n            props.history.push(\"/login\");\n        }).catch((error) => {\n            // If request is bad...\n            // Show an error to the user\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n\nexport function activateUserAccount(formValues, dispatch, props) {\n    const { key } = props.match.params;\n    const activateUserUrl = AuthUrls.USER_ACTIVATION;\n    const data = Object.assign(formValues, { key });\n\n    return axios.post(activateUserUrl, data)\n        .then(response => {\n            toast.info('Your account has been activated successfully, please log in')\n            props.history.push(\"/login\");\n        }).catch((error) => {\n            // If request is bad...\n            // Show an error to the user\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n\nexport function updateUserProfile(formValues, dispatch, props) {\n    const token = getUserToken(store.getState());\n\n    let object = formValues\n\n    // Fix problem with update profile without upload avatar\n    const formData = new FormData(); \n    if (typeof formValues.avatar === 'string' || \n        formValues.avatar instanceof String ||\n        formValues.avatar === null) {\n        Object.keys(object).forEach(key => \n            (key !== \"avatar\") && formData.append(key, object[key])      \n        );\n    } else {\n        Object.keys(object).forEach(key => \n            formData.append(key, object[key])      \n        );\n    }\n\n    // adding \"Content-Type\": \"multipart/form-data\", for images\n    return axios.patch(AuthUrls.USER_PROFILE, formData, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\",\n                authorization: 'Token ' + token\n            }\n        })\n        .then(response => {\n            toast.info('Your profile has been updated successfully')\n            props.history.push(\"/profile\");\n        }).catch((error) => {\n            // If request is bad...\n            // Show an error to the user\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n// util functions\nfunction processServerError(error) {\n\n    return  Object.keys(error).reduce(function(newDict, key) {\n        if (key === \"non_field_errors\") {\n            newDict[\"_error\"].push(error[key]);\n        } else if (key === \"token\") {\n            // token sent with request is invalid\n            newDict[\"_error\"].push(\"The link is not valid any more.\");\n        } else {\n            newDict[key] = error[key];\n        }\n        return newDict\n    }, {\"_error\": []});\n}","import React from \"react\";\nimport { toast } from 'react-toastify';\n\nexport const renderUser = (user) => {\n  if (user) {\n      return (\n        <div>\n            {user.avatar ? <img src={`${user.avatar}`} className=\"user-avatar\" alt=\"Avatar\" /> : \"\"}            \n            <span className=\"user-username\">{user.username}</span>\n        </div>\n      );\n  }\n};\n\nexport const renderField = ({ input, label, type, meta: { touched, error } }) => (\n    <div>\n        <label>{label}</label>\n        <div>\n            <input className=\"form-control\" {...input} type={type}/>\n        </div>\n        {touched && ((error && <div className=\"alert alert-danger p-1\"><small>{error}</small></div>))}\n    </div>\n);\n\nexport const renderTextAreaField = ({ input, label, type, meta: { touched, error } }) => (\n    <div>\n        <label>{label}</label>\n        <div>\n            <textarea className=\"form-control\" {...input} type={type} />\n        </div>\n        {touched && ((error && <div className=\"alert alert-danger p-1\"><small>{error}</small></div>))}\n    </div>\n);\nexport const renderImageField = ({ input, label, type, meta: { touched, error } }) => (\n    <div>\n        <label>{label}</label>\n        <div>\n            <input className=\"form-control\" {...input} type={type}/>\n        </div>\n        {touched && ((error && <div className=\"alert alert-danger p-1\"><small>{error}</small></div>))}\n    </div>\n);\nexport const renderError = (errorMessages) => {\n    if ( errorMessages ) {\n        if (JSON.stringify(errorMessages)!==\"[]\") {\n            toast.error(errorMessages[0][0])          \n        } else {\n            toast.error(\"Error...\")\n        }  \n    } \n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n// import { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n    } from 'reactstrap';\n\nimport { getUserProfile } from \"../actions/authActions\";\nimport { renderUser } from \"../utils/renderUtils\";\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            collapsed: true\n        };\n    }\n    toggleNavbar = () => {\n        this.setState({\n            collapsed: !this.state.collapsed\n        });\n    }\n\n    static propTypes = {\n        authenticated: PropTypes.bool,\n        getUserProfile: PropTypes.func.isRequired,\n        user: PropTypes.object\n    };\n    componentWillMount() {\n        this.props.getUserProfile();\n    } \n\n    renderLinks() {\n        if (this.props.authenticated) {\n            const { user } = this.props\n            return (\n                \n                    <Nav navbar>\n                        <NavItem key=\"investors\">\n                            <NavLink href={\"/investors\"}>Investors</NavLink>\n                        </NavItem>\n                        <NavItem key=\"payments\">\n                            <NavLink href={\"/payments\"}>Payments</NavLink>\n                        </NavItem>\n                        <div className=\"navbar-profile\">\n                            <NavItem key=\"profile\">\n                                <NavLink href=\"/profile\">{renderUser(user)}</NavLink>\n                            </NavItem>\n                            <NavItem key=\"logout\">\n                                <NavLink href=\"/logout\" className=\"nav-logout\">Logout</NavLink>\n                            </NavItem>\n                        </div>\n                    </Nav>\n                \n            );\n\n        } else {\n            return (\n                    <Nav className=\"ml-auto\" navbar>\n                        <NavItem key=\"login\">\n                            <NavLink href=\"/login\">Login</NavLink>\n                        </NavItem>\n                        <NavItem key=\"signup\">\n                            <NavLink href=\"/signup\">Sign Up</NavLink>\n                        </NavItem>\n                    </Nav>\n            );\n        }\n    }\n\n    render() {\n        return (\n            <Navbar color=\"info\" dark expand=\"md\">\n                <NavbarBrand href=\"/\">Lead Platform</NavbarBrand>\n                <NavbarToggler onClick={this.toggleNavbar} />\n                  <Collapse isOpen={!this.state.collapsed} navbar>                    \n                        {this.renderLinks()}\n                  </Collapse>\n            </Navbar>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        authenticated: state.auth.authenticated,\n        user: state.auth.user\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getUserProfile: () => {\n            return dispatch(getUserProfile());\n        }\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n// import {withRouter} from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nexport default function(ComposedComponent) {\n    class Authentication extends Component {\n\n        static propTypes = {\n            history: PropTypes.object\n        };\n\n        componentWillMount() {\n            this.checkAuthentication(this.props);\n\n        }\n\n        componentWillUpdate(nextProps) {\n            this.checkAuthentication(nextProps);\n        }\n\n        checkAuthentication(props) {\n            if (!props.authenticated) {\n                this.props.history.push(\"/login\");\n            }\n        }\n\n        render() {\n            return <ComposedComponent {...this.props} />\n        }\n    }\n\n    function mapStateToProps(state) {\n\n        // provide is_staff to props\n        let is_staff = false;\n        if (state.auth.user && (state.auth.user.is_staff || state.auth.user.is_superuser)) {\n            is_staff = true;\n        }\n        return { authenticated: state.auth.authenticated, \n                is_staff: is_staff, \n            }\n    }\n    // return withRouter(connect(mapStateToProps)(Authentication));\n    return connect(mapStateToProps)(Authentication);\n}\n","import React, { Component } from 'react'\n// import PostList from '../posts/PostList';\n// import { Link } from 'react-router-dom'\n\nclass Landing extends Component {\n  render () {\n    return (\n      \t<div className='text-center'>\t\n\t\t\t<h2>Lead Platform based on DRF+React+Redux. Login or Signup to test</h2>             \n\t\t</div>\n    )\n  }\n}\nexport default Landing\n","import React, { Component } from \"react\";\n// import T from \"prop-types\";\n\nimport { reduxForm, Field, clearSubmitErrors, propTypes } from \"redux-form\";\nimport { Link } from \"react-router-dom\";\nimport { required } from \"redux-form-validators\"\n\nimport { renderField, renderError} from \"../../utils/renderUtils\";\nimport { loginUser } from \"../../actions/authActions\";\n\nimport { Button, } from 'reactstrap';\n\nclass Login extends Component {\n    static propTypes = {\n        ...propTypes\n    };\n    // static propTypes = {\n    //     form: T.string.isRequired,\n    //     onSubmit: T.func.isRequired,\n    // }\n\n    render() {\n        const { handleSubmit, error, pristine, submitting } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Please Log In</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"email\" label=\"Email\" component={renderField}\n                               type=\"text\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"password\" label=\"Password\" component={renderField}\n                               type=\"password\"  validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        { renderError(error) }\n                        <div className=\"form-button\">\n                            <Link role=\"button\" to=\"/signup\" className=\"btn btn-outline-info rounded-0 form-button__part\">SignUp</Link>\n                            <Button action=\"submit\" color=\"info\" className=\"rounded-0 form-button__part\" disabled={pristine || submitting}>Login</Button>\n                        </div>\n                    </fieldset>\n\n                    <Link to=\"/reset_password\" className=\"text-center info-link\">forgot password?</Link>\n                </form>\n            </div>\n        )\n    }\n}\n// Sync field level validation for password match\nconst validateLoginForm = values => {\n    const errors = {};\n    const { email } = values;\n\n    if (!email) {\n        errors.email = 'This field is required.'\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\n        errors.email = 'Invalid email address'\n    }\n    \n    return errors;\n};\nexport default reduxForm({\n    form: \"login\",\n    onSubmit: loginUser,\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('login'));\n    },\n    validate: validateLoginForm\n})(Login);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\n\nclass Logout extends Component {\n\n    static propTypes = {\n        logoutUser: PropTypes.func.isRequired\n    };\n\n    componentWillMount() {\n        this.props.logoutUser();\n    }\n\n    render() {\n        return (\n            <h2>Welcome to Lead Platform. Please Login or Signup...</h2>\n        );\n    }\n}\n\nexport default connect(null, { logoutUser })(Logout);","import React, { Component } from \"react\";\n// import PropTypes from \"prop-types\";\nimport { reduxForm, Field, propTypes, clearSubmitErrors } from \"redux-form\";\nimport { required } from \"redux-form-validators\"\nimport { renderField, renderError } from \"../../utils/renderUtils\";\nimport { signupUser } from \"../../actions/authActions\";\nimport { Link } from \"react-router-dom\";\nimport { Button, } from 'reactstrap';\n\nclass Signup extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n\n    render() {\n        const { handleSubmit, error, pristine, submitting } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Sign Up</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"email\" label=\"Email\" component={renderField}\n                               type=\"text\"/>\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"username\" label=\"Username\" component={renderField}\n                               type=\"text\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"password1\" label=\"Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"password2\" label=\"Confirm Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    { renderError(error) }\n\n                    <fieldset className=\"form-group\">\n                        <div className=\"form-button\">\n                            <Link role=\"button\" to=\"/login\" className=\"btn btn-outline-info rounded-0 form-button__part\">Login</Link>\n                            <Button action=\"submit\" color=\"info\" className=\"rounded-0 form-button__part\" disabled={pristine || submitting}>Sign Up</Button>\n                        </div>\n                    </fieldset>\n                </form>\n            </div>\n        );\n    }\n}\n\n// Sync field level validation for password match\nconst validateForm = values => {\n    const errors = {};\n    const { email, username, password1, password2 } = values;\n\n    if (!username) {\n        errors.username = 'This field is required.'\n    } else if (username.length > 15) {\n        errors.username = 'Must be 15 characters or less'\n    }\n    if (!email) {\n        errors.email = 'This field is required.'\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\n        errors.email = 'Invalid email address'\n    }\n    \n    if (password1 !== password2) {\n        errors.password2 = \"Password does not match.\"\n    }\n    return errors;\n};\n\nexport default reduxForm({\n    form: \"signup\",\n    validate: validateForm,\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('signup'));\n    },\n    onSubmit: signupUser\n})(Signup);\n","import React, { Component } from \"react\";\n\nexport default class SignupDone extends Component {\n    render() {\n        return (\n            <h3 className=\"mx-5\">\n                Thanks for your registration, please follow the link sent to your provided email to activate\n                your account.\n            </h3>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { reduxForm, propTypes, clearSubmitErrors } from \"redux-form\";\nimport { activateUserAccount } from \"../../actions/authActions\";\nimport { renderError } from \"../../utils/renderUtils\";\n\nclass AccountActivation extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Please click the button below to activate your account</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group text-center\">\n                        {renderError(error)}\n                        <button action=\"submit\" className=\"btn btn-info rounded-0\">Activate</button>\n                    </fieldset>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default reduxForm({\n    form: \"user_account_activation\",\n    onSubmit: activateUserAccount,\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('user_account_activation'));\n    },\n})(AccountActivation);\n","import React, { Component } from 'react'\n\nimport PropTypes from \"prop-types\";\nimport { Button, } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUndoAlt, } from '@fortawesome/free-solid-svg-icons'\n\n\nexport class ReturnButton extends Component {\n  static contextTypes = {\n    router: PropTypes.object\n  }\n  render() {\n    return (            \n        <Button className=\"rounded-0\" size=\"lg\"\n          onClick={this.context.router.history.goBack}><FontAwesomeIcon icon={faUndoAlt} color=\"white\"/>\n          {\" \"} Return\n        </Button>    \n        )    \n  }\n}","import React, { Component } from 'react'\nimport { Table } from 'reactstrap';\nimport PropTypes from \"prop-types\";\n\nimport { ReturnButton } from '../../Atoms/Buttons/Buttons'\n\nexport class UserDetailTable extends Component {\n  static contextTypes = {\n    router: PropTypes.object\n  }\n  render() {\n    const userdetail = this.props;   \n        if (userdetail) {\n            return (\n              <div className=\"mx-2 mt-2 text-center\">\n                <Table striped className=\"table-userprofile\">\n                  <thead>\n                    <tr>\n                      <th>Profile {userdetail.username}</th>\n                      <td>\n                        <ReturnButton />\n                      </td>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <th>Avatar:</th>\n                      <td>\n                        <div className=\"avatar\"\n                            style={{ backgroundImage: `url(${userdetail.avatar})` }}>\n                        </div>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th>First Name:</th>\n                      <td>{userdetail.first_name}</td>\n                    </tr>                    \n                    <tr>\n                      <th>Last Name:</th>\n                      <td>{userdetail.last_name}</td>\n                    </tr>\n                    <tr>\n                      <th>Email:</th>\n                      <td>{userdetail.email}</td>\n                    </tr>\n                    <tr>\n                      <th>Website:</th>\n                      <td><a className=\"table-correspondence__url\" href={`${userdetail.website}`} >{userdetail.website}</a></td>\n                    </tr>                    \n                    <tr>\n                      <th>About:</th>\n                      <td>{userdetail.about}</td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </div>\n            );\n        }\n        return null;    \n  }\n}","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getUserProfile } from \"../../../actions/authActions\";\nimport {withRouter} from \"react-router-dom\";\n\nimport { UserDetailTable } from '../Molecules/Tables/UserDetailTable'\n\nclass UserProfile extends Component {\n\n    static propTypes = {\n        getUserProfile: PropTypes.func.isRequired,\n        user: PropTypes.object\n    };\n\n    componentWillMount() {\n        this.props.getUserProfile();\n    }\n\n    renderUser() {\n        const { user } = this.props;\n\n        if (user) {\n            return (\n\n              <div className=\"mx-2 mt-2 text-center\">\n                <UserDetailTable \n                    {...user}\n                  />  \n              </div>\n            );\n        }\n        return null;\n    }\n\n    render() {\n        return (\n            <div>\n                {this.renderUser()}\n                {\" \"}\n                <hr />\n                \n                <fieldset className=\"form-group\">\n                    <div className=\"form-button\">\n                        <Link to=\"/profile_edit\" className=\"btn btn-info rounded-0 form-button__part\">Update Profile</Link>\n                        <Link to=\"/change_password\" className=\"btn btn-outline-info rounded-0 form-button__part\">Change Password</Link>\n                    </div>\n                </fieldset>\n\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        user: state.auth.user\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, { getUserProfile } )(UserProfile));","import React from \"react\";\nimport './styles.scss'\n\nexport const LoadScreen = () => (\n  <div className=\"loadscreen\">\n    <div className=\"load-9\">\n      <div className=\"spinner\">\n        <div className=\"bubble-1\"></div>\n        <div className=\"bubble-2\"></div>\n      </div>\n    </div>\n  </div>\n)","import React, {Component} from 'react'\nimport {connect} from 'react-redux';\nimport { LoadScreen } from '../../general/Organisms/LoadScreen/LoadScreen'\nimport * as userdetail from \"../../../actions/userDetailActions\";\nimport { UserDetailTable } from '../Molecules/Tables/UserDetailTable'\n\nclass UserProfileDetail extends Component {\n    constructor(props){\n        super(props);  \n        this.state = {\n        \tuserdetail: {},\n        \tloading: true,\n        \thasError: false      \n        }\n    }\n\tstatic getDerivedStateFromProps(nextProps, prevState){\n\t\tif(nextProps.userdetail!==prevState.userdetail){\n\t\t  \n\t\t  return {\n\t\t  \t\t\tuserdetail : nextProps.userdetail,\n\t\t  \t\t\tloading: nextProps.userdetail.loading,\n\t\t  \t\t\thasError: nextProps.userdetail.hasError,\n\t\t  \t\t\terrors: nextProps.userdetail.errors,\n\t\t  \t\t};\n\n\t\t}\n\t\telse return null;\n\t}\n    componentDidMount(){\n      if (this.props.match){\n        const {id} = this.props.match.params\n        this.setState({\n            id: id,\n        })\n        this.props.fetchUserDetail(id)        \n      }      \n    }\n\n    renderNote() {\n        const { userdetail } = this.props;\n        const { hasError, errors } = this.state;\n\n        if (!hasError) {\n          return (\n                  <UserDetailTable \n                    {...userdetail}\n                  />             \n          );\n\n        } else {\n            return (\n              <div>\n                {errors ? <h1>{errors.page}</h1> : <h1>Unknown Server error</h1>}\n              </div>\n            );\n        }\n    }\n    render () {\n        const {loading} = this.state\n        return(\n            <div>\n              {loading ?<LoadScreen />:this.renderNote()}\n          </div>               \n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      userdetail: state.userdetail,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      fetchUserDetail: (id) => {\n          dispatch(userdetail.fetchUserDetail(id));\n      },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserProfileDetail);","import { toast } from 'react-toastify';\nexport const fetchUserDetail = (id) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        const endpoint = `/api/user/${id}/` \n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        \n        return fetch(endpoint, {headers, })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n               \n                } else {\n                    toast.error(\"Server Error...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'FETCH_USER_DETAIL', userdetail: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authentication Error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", userdetail: res.data});\n                    throw res.data;\n                } \n                else if (res.status === 404) {\n                    toast.error(\"User is not found...\")\n                    dispatch({type: \"USER_NOT_FOUND\"});\n\n                }\n            })\n            .catch(error => {                \n                //error.redirect('/404');\n                //Handle error\n                console.log(\"error\", error);\n                // return dispatch({type: \"MESSAGE_NOT_FOUND\", detail: error});\n                // dispatch({type: \"MESSAGE_NOT_FOUND\", detail: error});\n            });\n    }\n}\n","import React, {Component} from 'react';\nimport Dropzone from 'react-dropzone';\nimport PropTypes from \"prop-types\";\n// import { Form } from 'elements';\nimport { Field } from 'redux-form';\nimport './styles.scss'\n\nconst imageMaxSize = 1000000; //bytes\n\nclass ImageDrop extends Component {\n  static propTypes = {\n    dropzone_options: PropTypes.object,\n    meta: PropTypes.object,\n    label: PropTypes.string,\n    classNameLabel: PropTypes.string,\n    input: PropTypes.object,\n    className: PropTypes.string,\n    // children: PropTypes.node,\n\t//    children: PropTypes.oneOfType([\n\t//      PropTypes.node,\n\t//   PropTypes.object,\n\t//   PropTypes.func,\n\t// ]),\n    cbFunction: PropTypes.func,\n  };\n\n  static defaultProps = {\n    className: '',\n    cbFunction: () => {},\n  };\n  state = { attached: false };\n  handleDrop = (files) => {\n\tthis.setState({attached: true})\n  }\n  render() {\n    const { className, input: { onChange }, meta: { error, touched }, label, classNameLabel, name, cbFunction } = this.props;\n    console.log(this.props.input.value)\n\tlet drop_class = \"dropimage-field dropimage-field__default avatar\"\n\tlet drop_text = \"\"\n\n\tif (this.props.input.value && this.state.attached) {\n\t\tdrop_class = \"dropimage-field dropimage-field__success\";\n\t\tdrop_text = \"Press Save to Add\";\n\t} else {\n\t\tdrop_class = \"dropimage-field dropimage-field__default avatar\";\n\t\t// drop_text = \"Add Document\"\n\t} \n    return (\n      <div className={`${className}` + (error && touched ? ' has-error ' : '')}>\n        {label && <p className={classNameLabel || ''}>{label}</p>}\n        <Dropzone\n          onDrop={(f) => {\n            cbFunction(f);\n            this.handleDrop(f);\n            return onChange(f[0]);\n          }}\n          name={name}\n          maxSize={imageMaxSize}\n        >\n            {({getRootProps, getInputProps}) => (\n                <div {...getRootProps()} className={`${drop_class}`} \n                  style={{ backgroundImage: `url(${this.props.input.value})`}}>\n                    <input {...getInputProps()} />\n                    <span className=\"dropimage-field__text\">{`${drop_text}`}</span>\n                </div>\n            )}\n        </Dropzone>\n        {error && touched ? <div className=\"alert alert-danger p-1\"><small>{error}</small></div> : ''}\n      </div>\n    );\n  }\n}\nexport default props => <Field {...props} component={ImageDrop} />;","import React, { Component } from \"react\";\nimport { reduxForm, Field, propTypes, clearSubmitErrors } from \"redux-form\";\nimport { connect } from 'react-redux'\nimport { Link } from \"react-router-dom\";\n\nimport { renderField, renderTextAreaField,\n    renderError} from \"../../utils/renderUtils\";\nimport { updateUserProfile } from \"../../actions/authActions\";\nimport ImageDrop from './Atoms/ImageDrop/ImageDrop'\n\nclass Login extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Edit Profile</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"username\" label=\"Username\" component={renderField}\n                               type=\"text\"\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"first_name\" label=\"First Name\" component={renderField}\n                               type=\"text\"\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"last_name\" label=\"Last Name\" component={renderField}\n                               type=\"text\"\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"website\" label=\"Website\" component={renderField}\n                               type=\"text\"\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"about\" label=\"About Yourself\" component={renderTextAreaField}\n                               type=\"text\"\n                        />\n                    </fieldset>\n                    <fieldset className=\"form-group\">\n                        <ImageDrop\n                         name=\"avatar\"\n                         label=\"Avatar:\"\n                          classNameLabel=\"file-input-label\"\n                          className=\"file-input\"\n                          dropzone_options={{\n                            multiple: false,\n                            accept: 'image/*'\n                          }}\n                        >\n                          <span>Add more</span>\n                        </ImageDrop>\n                    </fieldset>\n                    <fieldset className=\"form-group\">\n                        {renderError(error)}\n                        <div className=\"form-button\">\n                            <button action=\"submit\" className=\"btn btn-info rounded-0 form-button__part\">Save</button>\n                            <Link to=\"/profile\" className=\"btn btn-outline-info rounded-0 form-button__part\">Cancel</Link>\n                        </div>\n                    </fieldset>\n\n                </form>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        initialValues: state.auth.user\n    }\n}\n\nexport default connect(mapStateToProps)(reduxForm({\n    form: \"update_user_profile\",\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('update_user_profile'));\n    },\n    onSubmit: updateUserProfile\n})(Login));","import React, { Component } from \"react\";\n// import PropTypes from \"prop-types\";\nimport { reduxForm, Field, propTypes, clearSubmitErrors } from \"redux-form\";\nimport { required } from \"redux-form-validators\"\nimport { changePassword } from \"../../actions/authActions\";\nimport { renderField, renderError } from \"../../utils/renderUtils\";\nimport { Link } from \"react-router-dom\";\nimport { Button, } from 'reactstrap';\nclass PasswordChange extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error, pristine, submitting } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Change Password</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"old_password\" label=\"Old Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"new_password1\" label=\"New Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"new_password2\" label=\"Confirm New Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        {renderError(error)}\n                        <div className=\"form-button\">\n                            <Button action=\"submit\" color=\"info\" className=\"rounded-0 form-button__part\" disabled={pristine || submitting}>Submit</Button>\n                            <Link to=\"/profile\" className=\"btn btn-outline-info rounded-0 form-button__part\">Cancel</Link>\n                        </div>\n                    </fieldset>\n                </form>\n            </div>\n        );\n    }\n}\n\n// Sync field level validation for password match\nconst validateForm = values => {\n    const errors = {};\n    const { new_password1, new_password2 } = values;\n    if (new_password1 !== new_password2) {\n        errors.new_password2 = \"Password does not match.\"\n    }\n    return errors;\n};\n\nexport default reduxForm({\n    form: \"change_password\",\n    onSubmit: changePassword,\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('change_password'));\n    },\n    validate: validateForm\n})(PasswordChange);\n","import React, { Component } from \"react\";\nimport { reduxForm, Field, propTypes, clearSubmitErrors } from \"redux-form\";\nimport { required } from \"redux-form-validators\"\n\nimport { renderField, renderError} from \"../../utils/renderUtils\";\nimport { resetPassword } from \"../../actions/authActions\";\n\nclass PasswordReset extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Reset Your Password</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"email\" label=\"Please enter your email\" component={renderField}\n                               type=\"text\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n                    <fieldset className=\"form-group text-center\">\n                        {renderError(error)}\n                        <button action=\"submit\" className=\"btn btn-info rounded-0\">Submit</button>\n                    </fieldset>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default reduxForm({\n    form: \"password_reset\",\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('password_reset'));\n    },\n    onSubmit: resetPassword\n})(PasswordReset);\n","import React, { Component } from \"react\";\n\nexport default class PasswordResetDone extends Component {\n    render() {\n        return (\n            <h3 className=\"mx-5\">An password reset email has been sent to your email. Please follow the link to reset your password.</h3>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { reduxForm, Field, propTypes, clearSubmitErrors } from \"redux-form\";\nimport { required } from \"redux-form-validators\"\nimport { confirmPasswordChange } from \"../../actions/authActions\";\nimport { renderField, renderError } from \"../../utils/renderUtils\";\n\nclass PasswordResetConfirm extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Create New Password</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"new_password1\" label=\"New Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"new_password2\" label=\"Confirm New Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group text-center\">\n                        {renderError(error)}\n                        <button action=\"submit\" className=\"btn btn-info rounded-0\">Submit</button>\n                    </fieldset>\n                </form>\n            </div>\n        );\n    }\n}\n\n// Sync field level validation for password match\nconst validateForm = values => {\n    const errors = {};\n    const { new_password1, new_password2 } = values;\n    if (new_password1 !== new_password2) {\n        errors.new_password2 = \"Password does not match.\"\n    }\n    return errors;\n};\n\nexport default reduxForm({\n    form: \"password_reset_confirm\",\n    onSubmit: confirmPasswordChange,\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('password_reset_confirm'));\n    },\n    validate: validateForm\n})(PasswordResetConfirm);\n","import React from \"react\";\n\nconst NoMatch = () => (\n    <h2 className=\"mt-2\">{\"Sorry, the page you are looking for doesn't exist.\"}</h2>\n);\n\nexport default NoMatch;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\n\nclass PostInline extends Component {\n  // {post !== undefined ? <div className={elClass}>\n  //    <h1><Link maintainScrollPosition={false} to={{\n  //        pathname:`/react/posts/${post.slug}`,\n  //        state: {fromDashboard: false}\n  //    }}>{post.title}</Link></h1>\n\n  //   <p className={showContent}>{post.content}</p>\n  //   </div>\n  //   : \"\"}\n  render() {\n      const {post} = this.props\n      const {elClass} = this.props\n      const showContent = elClass === 'card' ? 'd-block' : 'd-none'\n    return (\n      <div>\n          {post !== undefined ? \n            <div className={elClass}>\n            <Link \n              to={{pathname:`/react/posts/${post.slug}`,\n              state: {fromDashboard: false}\n            }}>\n                <h1>{post.title}</h1>\n            </Link>\n                  <p className={showContent}>{post.content}</p>\n            </div>\n          : ''}\n      </div>\n    );\n  }\n}\n\nexport default PostInline;\n","import React, { Component } from 'react';\nimport 'whatwg-fetch'\nimport cookie from 'react-cookies'\nimport { Link } from 'react-router-dom'\nimport PostInline from './PostInline'\n// import PostCreate from './PostCreate'\n// import PostForm from './PostForm'\nimport { connect } from 'react-redux'\n\nimport store from \"../store\";\nimport { getUserToken } from \"../utils/authUtils\";\n\nclass Posts extends Component {\n\n  constructor(props){\n      super(props)\n      this.togglePostListClass = this.togglePostListClass.bind(this)\n      this.handleNewPost = this.handleNewPost.bind(this)\n      this.loadMorePosts =this.loadMorePosts.bind(this)\n      this.state = {\n          posts: [],\n          postsListClass: \"card\",\n          next: null,\n          previous: null,\n          author: false,\n          count: 0,\n          authenticated: false, //adding redux-props\n      }\n  }\n\n  loadMorePosts(){\n      const {next} = this.state \n      if (next !== null || next !== undefined) {\n           this.props.loadPosts(next)\n      }\n     \n  }\n    \n  loadPosts(nextEndpoint){\n      let endpoint = '/api/posts/' \n      if (nextEndpoint !== undefined) {\n          endpoint = nextEndpoint\n      }\n      let thisComp = this\n      let lookupOptions = {\n          method: \"GET\",\n          headers: {\n              'Content-Type': 'application/json'\n          }\n      }\n      const csrfToken = cookie.load('csrftoken')\n      const token = getUserToken(store.getState());\n      console.log('token', token);\n      console.log('csrftoken', csrfToken);\n\n      if (csrfToken !== undefined) {\n          lookupOptions['credentials'] = 'include'\n          lookupOptions['headers']['X-CSRFToken'] = csrfToken\n       } \n\n      fetch(endpoint, lookupOptions)\n      .then(function(response){\n          return response.json()\n      }).then(function(responseData){\n          console.log(responseData)\n          // let currentPosts = thisComp.state.posts\n          // let newPosts = currentPosts.concat(responseData.results)\n          // console.log(currentPosts)\n           thisComp.setState({\n                  posts: thisComp.state.posts.concat(responseData.results),\n                  next: responseData.next,\n                  previous: responseData.previous,\n                  author: responseData.author,\n                  count: responseData.count,\n                  authenticated: thisComp.props.state.auth.authenticated //adding redux-props\n              })\n      }).catch(function(error){\n          console.log(\"error\", error)\n      })\n  }\n\n  handleNewPost(postItemData){\n      // console.log(postItemData)\n      let currentPosts = this.state.posts\n      currentPosts.unshift(postItemData) // unshift\n      this.setState({\n          posts: currentPosts\n      })\n  }\n\n  \n\n  togglePostListClass(event){\n      event.preventDefault()\n      let currentListClass = this.state.postsListClass\n      if (currentListClass === \"\"){\n          this.setState({\n              postsListClass: \"card\",\n          })\n      } else {\n          this.setState({\n              postsListClass: \"\",\n          })\n      }\n      \n  }\n\n  componentDidMount(){\n      this.setState({\n          posts: [],\n          postsListClass: \"card\",\n          next: null,\n          previous: null,\n          author: false,\n          count: 0,\n          authenticated: false,\n      })\n      this.loadPosts()\n  }\n  // {author === true ? <Link className='mr-2' maintainScrollPosition={false} to={{\n  //           pathname: `/posts/create/`,\n  //           state: { fromDashboard: false }\n  //         }}>Create Post</Link> : \"\"}\n  \n  // <button onClick={this.togglePostListClass}>Toggle Class</button>\n  // {posts.length > 0 ? posts.map((postItem, index)=>{\n  //     return (\n  //             <PostInline post={postItem} elClass={postsListClass} />\n  //     )\n  // }) : <p>No Posts Found</p>}\n  // {next !== null ? <button onClick={this.loadMorePosts}>Load more</button> : ''}\n  render() {\n      const {posts} = this.state\n      const {postsListClass} = this.state\n      // const {author} = this.state\n      const {next} = this.state \n      // const {auth} = this.props.state.auth.authenticated\n      const {authenticated} = this.state //adding redux-props\n      // const csrfToken = cookie.load('csrftoken')\n    return (\n      <div>\n        {authenticated === true ?\n          <Link className='mr-2' to={{\n            pathname: `/react/posts/create/`,\n            state: { fromDashboard: false }\n          }}>Create Post</Link>\n        : ''}\n          <button onClick={this.togglePostListClass}>Toggle Class</button>\n          {posts.length > 0 ? posts.map((postItem, index)=>{\n            return (\n              <PostInline post={postItem} key={`post-list-key ${index}`} elClass={postsListClass} />\n            )\n          }) : <p>No Posts Found</p>}\n        {next !== null ? <button onClick={this.loadMorePosts}>Load more</button> : ''}\n\n      </div>\n    );\n  }\n}\n\n// export default Posts;\n\n\nconst mapStateToProps = (state) => {\n  return {\n    state: state\n  }\n}\n\nexport default connect(mapStateToProps)(Posts);\n// {(csrfToken !== 'undefined' && csrfToken !== null) ?\n// <div className='my-5'>\n//   <PostForm newPostItemCreated={this.handleNewPost} />\n// </div>\n// : ''}","import React, { Component } from 'react'\n\nimport { Link } from 'react-router-dom'\nimport Posts from '../reactify/Posts';\n\nclass ReacTifyComp extends Component {\n  componentDidMount () {\n\n  }\n\n  render () {\n    return (\n      <div>\n        <Link className='some-link' to='/about/'>Static Page</Link>\n        <Posts />\n      </div>\n      \n    )\n  }\n}\n\nexport default ReacTifyComp","import React, {Component} from 'react'\nimport 'whatwg-fetch'\nimport cookie from 'react-cookies'\nimport moment from 'moment'\n// import { Redirect } from 'react-router-dom'\n\nimport store from \"../store\";\nimport { getUserToken } from \"../utils/authUtils\";\n\n\nclass PostForm extends Component {\n    constructor(props){\n        super(props)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleInputChange = this.handleInputChange.bind(this)\n        this.handleDraftChange = this.handleDraftChange.bind(this)\n        this.clearForm = this.clearForm.bind(this)\n        this.postTitleRef = React.createRef()\n        this.postContentRef = React.createRef()\n        this.deletePost= this.deletePost.bind(this)\n        this.state = {\n            draft: false,\n            title: null,\n            slug: null,\n            content: null,\n            publish: moment(new Date()).format('YYYY-MM-DD'),\n            errors: {}\n        }\n    }\n\n    updatePost(data){\n      const {post} = this.props\n      const endpoint = `/api/posts/${post.slug}/` \n      const csrfToken = cookie.load('csrftoken')\n      const token = getUserToken(store.getState());\n      console.log('token', token);\n      console.log('csrftoken', csrfToken);\n      let thisComp = this\n      if (csrfToken !== undefined) {\n          let lookupOptions = {\n              method: \"PUT\",\n              headers: {\n                  'Content-Type': 'application/json',\n                  'X-CSRFToken': csrfToken,\n                  'Authorization': 'Token ' + token\n              },\n              body: JSON.stringify(data),\n              credentials: 'include'\n          }\n\n          fetch(endpoint, lookupOptions)\n          .then(function(response){\n              return response.json()\n          }).then(function(responseData){\n              console.log(responseData)\n              if (thisComp.props.newPostItemUpdated){\n                  thisComp.props.newPostItemUpdated(responseData)\n              }\n              thisComp.clearForm()\n          }).catch(function(error){\n              console.log(\"error\", error)\n              alert(\"An error occured, please try again later.\")\n          })\n      } \n      \n  \t} \n    createPost(data){\n      const endpoint = '/api/posts/' \n      const csrfToken = cookie.load('csrftoken')\n      let thisComp = this\n      console.log('csrf', csrfToken)\n      if (csrfToken !== undefined) {\n          let lookupOptions = {\n              method: \"POST\",\n              headers: {\n                  'Content-Type': 'application/json',\n                  'X-CSRFToken': csrfToken\n              },\n              body: JSON.stringify(data),\n              credentials: 'include'\n          }\n\n          fetch(endpoint, lookupOptions)\n          .then(function(response){              \n              return response.json()\n          }).then(function(responseData){\n              console.log(responseData)\n              if (thisComp.props.newPostItemCreated){\n                  thisComp.props.newPostItemCreated(responseData)\n              }\n              thisComp.clearForm()\n              thisComp.defaultState()\n          }).catch(function(error){\n              console.log(\"error\", error)\n              alert(\"An error occured, please try again later.\")\n          })\n      } \n      \n    }\n    deletePost(event) {\n      event.preventDefault();\n      const {post} = this.props\n      const endpoint = `/api/posts/${post.slug}/` \n      const csrfToken = cookie.load('csrftoken')\n      console.log(post)\n      return fetch(endpoint, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': csrfToken\n            },\n            credentials: 'include'\n        }).then(function(response){\n          return response\n        }).then(data => {\n          if(data.status === 204){\n            // this.UpdateRoute();\n            console.log('Successfully Delete');\n          }   \n        }).catch(function(error){\n            console.log(\"error\", error)\n            alert(\"An error occured, please try again later.\")\n        })\n    };\n\n  \tclearForm(event){\n      if (event){\n        event.preventDefault()\n      }\n      this.postCreateForm.reset()\n      \n    } \n    clearFormRefs(){\n      this.postTitleRef.current=''\n      this.postContentRef.current=''\n    }  \t\n\thandleSubmit(event){      \n\t    event.preventDefault()\n\t    let data = this.state\n      const {post} = this.props\n      if (post !== undefined) {\n        this.updatePost(data)\n      } else {\n        this.createPost(data)\n      }\n\t    \n      console.log({post})\n\t}\n\thandleInputChange(event){\n        event.preventDefault()\n        let key = event.target.name\n        let value = event.target.value\n\n        if (key === 'title'){\n            if (value.length > 120){\n                alert(\"This title is too long\")\n            }\n        }\n        this.setState({\n            [key]: value\n\n        })\n    }\n  //fix doubleclick checkbox\n  handleDraftChange(event){\n    this.setState({\n      draft: !this.state.draft\n    })\n  }\n  defaultState(){\n    this.setState({\n        draft: false,\n        title: null,\n        content: null,\n        slug: null,\n        publish: moment(new Date()).format('YYYY-MM-DD'),\n    })   \n  }\n  componentDidMount(){\n    const {post} = this.props\n    // this.loginCheck()\n    if (post !== undefined) {\n      this.setState({\n          draft: post.draft,\n          title: post.title,\n          content: post.content,\n          slug: post.slug,\n          publish: moment(post.publish).format('YYYY-MM-DD'),\n      })\n    } else {\n      this.defaultState()\n    }\n    // this.postTitleRef.current.focus()\n  }\n\trender(){\n\t\tconst {publish} = this.state\n    const {title} = this.state\n    const {content} = this.state\n    const {slug} = this.state\n    const cancelClass = this.props.post !== undefined ? \"d-none\" : \"\"\n    const deleteClass = this.props.post === undefined ? \"d-none\" : \"\"\n\t\treturn (\n\t\t  <div>\n\t\t    <form onSubmit={this.handleSubmit} ref={(el)=> this.postCreateForm = el}>\n\t\t        <div className=\"form-group\">\n\t\t\t\t\t<label htmlFor='blogTitle'>Title</label>\n\t\t\t\t\t<input \n\t\t\t\t\t  type='text' \n\t\t\t\t\t  id='blogTitle' \n\t\t\t\t\t  name='title' \n\t\t\t\t\t  className='form-control' \n\t\t\t\t\t  placeholder='Blog post title'\n            value={title || ''}            \n\t\t\t\t\t  ref={this.postTitleRef} \n\t\t\t\t\t  onChange={this.handleInputChange} \n\t\t\t\t\t  required='required' />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label htmlFor='content'>Content</label>\n\t\t\t\t\t<textarea \n\t\t\t\t\t  id='content' \n\t\t\t\t\t  name='content' \n\t\t\t\t\t  className='form-control' \n\t\t\t\t\t  placeholder='Post content'\n            value={content || ''}\n\t\t\t\t\t  ref={this.postContentRef} \n\t\t\t\t\t  onChange={this.handleInputChange} \n\t\t\t\t\t  required='required' />\n\t\t\t\t</div>\n\t\t\t\t<div className='form-group'>\n                    <label htmlFor='slug'>Slug</label>\n                    <input \n                      type='text' \n                      id='slug' \n                      name='slug' \n                      className='form-control'\n                      placeholder='Type Slug'\n                      value={slug || ''}  \n                      onChange={this.handleInputChange} \n                      required='required'/>\n                </div>\n\t\t        <div className=\"form-group\">\n\t\t\t\t\t<label htmlFor='draft'>\n\t\t\t\t\t\t<input \n\t\t\t\t\t\t  type='checkbox' \n\t\t\t\t\t\t  id='draft' \n\t\t\t\t\t\t  name='draft' \n\t\t\t\t\t\t  className='mr-2' \n\t\t\t\t\t\t  onChange={this.handleDraftChange} \n\t\t\t\t\t\t  checked={this.state.draft}\n\t\t\t\t\t\t  />\n\t\t\t\t\tDraft</label>\n                <button onClick={(event)=>{event.preventDefault();this.handleDraftChange()}}>Toggle Draft</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label htmlFor='publish'>Publish Date</label>\n\t\t\t\t\t<input \n\t\t\t\t\t  type='date' \n\t\t\t\t\t  id='publish' \n\t\t\t\t\t  name='publish' \n\t\t\t\t\t  className='form-control' \n\t\t\t\t\t  onChange={this.handleInputChange} \n\t\t\t\t\t  required='required'\n\t\t\t\t\t  value={publish}\n\t\t\t\t\t   />\n\t\t\t\t</div>\n\t\t\t\t<button type='submit' className='btn btn-primary '>Save</button>\n\t\t\t\t<button className={`btn btn-secondary ${cancelClass}`} onClick={this.clearForm}>Clear</button>\n        <button className={`btn btn-danger' ${deleteClass}`} onClick={this.deletePost}>Delete</button>\n\n\t\t    </form>\n\t\t  </div>\n\t\t)\n\t}\n\n}\n\nexport default PostForm\n","import React, {Component} from 'react'\nimport 'whatwg-fetch'\nimport cookie from 'react-cookies'\nimport { Link } from 'react-router-dom'\n\nimport PostForm from './PostForm'\n\nclass PostDetail extends Component {\n    constructor(props){\n        super(props)\n        this.handlePostItemUpdated= this.handlePostItemUpdated.bind(this)        \n        this.state = {\n             slug: null,\n             post: null,\n             doneLoading: false,\n        }\n    }\n\n    handlePostItemUpdated(postItemData){\n        this.setState({\n            post: postItemData\n        })\n    }\n    loadPost(slug){\n      const endpoint = `/api/posts/${slug}/` \n      let thisComp = this\n      let lookupOptions = {\n          method: \"GET\",\n          headers: {\n              'Content-Type': 'application/json'\n          }\n      }\n\n      const csrfToken = cookie.load('csrftoken')\n      if (csrfToken !== undefined) {\n          lookupOptions['credentials'] = 'include'\n          lookupOptions['headers']['X-CSRFToken'] = csrfToken\n       }\n\n      fetch(endpoint, lookupOptions)\n      .then(function(response){\n          if (response.status === 404){\n              console.log('Page not found')\n          }\n          return response.json()\n      }).then(function(responseData){\n          if (responseData.detail){\n              thisComp.setState({\n                  doneLoading: true,\n                  post: null\n              })\n          } else {\n           thisComp.setState({\n                  doneLoading: true,\n                  post: responseData\n              })\n          }\n      }).catch(function(error){\n          console.log(\"error\", error)\n      })\n  }\n\n    componentDidMount(){\n        this.setState({\n                slug: null,\n                post: null\n            })\n        if (this.props.match){\n            const {slug} = this.props.match.params\n            this.setState({\n                slug: slug,\n                doneLoading: false\n            })\n            this.loadPost(slug)\n        }\n    }\n    // const {doneLoading} = this.state\n    //     const {post} = this.state\n    //     return(\n    //         <p>{(doneLoading === true) ? <div>\n    //             {post === null ? \"Not Found\": \n    //             <div>\n    //             <h1>{post.title}</h1>\n    //             {post.slug}\n\n    //             <p className='lead'>\n    //             <Link maintainScrollPosition={false} to={{\n    //                 pathname: `/react/posts`,\n    //                 state: { fromDashboard: false }\n    //               }}>Posts</Link>\n\n    //               {post.owner === true ? <Link maintainScrollPosition={false} to={{\n    //                 pathname: `/react/posts/create/`,\n    //                 state: { fromDashboard: false }\n    //               }}>Create Post</Link> : \"\" }\n    //            </p>\n\n    //               {post.owner === true ? <PostForm post={post} postItemUpdated={this.handlePostItemUpdated} /> : \"\"}\n    //             </div>\n    //            }\n    //        </div> : \"Loading...\"}</p>\n    //     )\n    // }\n    render(){\n        const {doneLoading} = this.state\n        // const {slug} = this.state\n        const {post} = this.state\n        return(\n          <div>\n            {(doneLoading === true) ? <div>\n              {(post === null) ? \"Not Found\": \n                <div> \n                  <p className=\"lead\"><Link \n                      to={{pathname:`/react/posts/`,\n                      state: {fromDashboard: false}\n                    }}>\n                      BACK\n                    </Link>\n                    {post.owner === true ? <Link to={{\n                      pathname: `/react/posts/create/`,\n                      state: { fromDashboard: false }\n                    }}>Create Post</Link> : \"\"}\n                  </p>                 \n                  <h1>{post.slug}</h1>\n                  <h1>{post.title}</h1>\n                  {post.owner === true ? <PostForm post={post} postItemUpdated={this.handlePostItemUpdated} /> : \"\"}\n                </div>\n              }\n\n            </div> : \"Loading...\"}\n          </div>               \n        )\n    }\n}\n\nexport default PostDetail","import React, {Component} from 'react'\nimport { Link } from 'react-router-dom'\nimport PostForm from './PostForm'\n\nclass PostCreate extends Component {\n\n  render(){\n    return (\n      <div>\n      \t<Link \n          to={{pathname:`/react/posts/`,\n          state: {fromDashboard: false}\n        }}>\n          BACK\n        </Link>\n      \t<h1>Create Post</h1>\n        \t<PostForm />\n      </div>\n    )\n  }\n\n}\n\nexport default PostCreate\n// // left for reference\n\n\n\n\n// // import React, {Component} from 'react'\n// // import 'whatwg-fetch'\n// // import cookie from 'react-cookies'\n// // import moment from 'moment'\n\n// // class PostCreate extends Component {\n// //     constructor(props){\n// //         super(props)\n// //         this.handleSubmit = this.handleSubmit.bind(this)\n// //         this.handleInputChange = this.handleInputChange.bind(this)\n// //         this.handleDraftChange = this.handleDraftChange.bind(this)\n// //         this.clearForm = this.clearForm.bind(this)\n// //         this.postTitleRef = React.createRef()\n// //         this.postContentRef = React.createRef()\n// //         this.state = {\n// //             draft: false,\n// //             title: null,\n// //             content: null,\n// //             publish: null,\n// //             errors: {}\n// //         }\n// //     }\n// //     createPost(data){\n// //       const endpoint = '/api/posts/' \n// //       const csrfToken = cookie.load('csrftoken')\n// //       let thisComp = this\n// //       if (csrfToken !== undefined) {\n// //           let lookupOptions = {\n// //               method: \"POST\",\n// //               headers: {\n// //                   'Content-Type': 'application/json',\n// //                   'X-CSRFToken': csrfToken\n// //               },\n// //               body: JSON.stringify(data),\n// //               credentials: 'include'\n// //           }\n\n// //           fetch(endpoint, lookupOptions)\n// //           .then(function(response){\n// //               return response.json()\n// //           }).then(function(responseData){\n// //               console.log(responseData)\n// //               if (thisComp.props.newPostItemCreated){\n// //                   thisComp.props.newPostItemCreated(responseData)\n// //               }\n// //               thisComp.clearForm()\n// //           }).catch(function(error){\n// //               console.log(\"error\", error)\n// //               alert(\"An error occured, please try again later.\")\n// //           })\n// //       } \n      \n// //   }\n\n// //     handleSubmit(event){\n// //         event.preventDefault()\n// //         let data = this.state\n// //         this.createPost(data)\n// //     }\n\n// //     handleInputChange(event){\n// //         event.preventDefault()\n// //         let key = event.target.name\n// //         let value = event.target.value\n// //         if (key === 'title'){\n// //             if (value.length > 120){\n// //                 alert(\"This title is too long\")\n// //             }\n// //         }\n// //         this.setState({\n// //             [key]: value\n// //         })\n// //     }\n\n// //     handleDraftChange(event){\n// //       this.setState({\n// //         draft: !this.state.draft\n// //       })\n// //     }\n\n// //     clearForm(event){\n// //       if (event){\n// //         event.preventDefault()\n// //       }\n// //       this.postCreateForm.reset()\n// //     }\n\n\n// //     clearFormRefs(){\n// //       this.postTitleRef.current=''\n// //       this.postContentRef.current=''\n// //     }\n\n\n// //     componentDidMount(){\n// //         this.setState({\n// //             draft: false,\n// //             title: null,\n// //             content: null,\n// //             publish: moment(new Date()).format('YYYY-MM-DD'),\n// //         })\n// //         this.postTitleRef.current.focus()\n// //     }\n\n// //     render(){\n// //         const {publish} = this.state\n// //         let thisComp = this\n// //         return (\n// //             <form onSubmit={this.handleSubmit} ref={(el) => this.postCreateForm = el}>\n// //                 <div className='form-group'>\n// //                     <label for='title'>Post title</label>\n// //                     <input \n// //                       type='text' \n// //                       id='title' \n// //                       name='title' \n// //                       className='form-control'\n// //                       placeholder='Blog post title' \n// //                       ref = {this.postTitleRef}\n// //                       onChange={this.handleInputChange} \n// //                       required='required'/>\n// //                 </div>\n// //                  <div className='form-group'>\n// //                     <label for='content'>Content</label>\n// //                     <textarea id='content' ref = {this.postContentRef} name='content' className='form-control' placeholder='Post content' onChange={this.handleInputChange} required='required'/>\n                   \n// //                 </div>\n// //                 <div className='form-group'>\n// //                     <label for='draft'>\n// //                     <input type='checkbox' checked={this.state.draft} id='draft' name='draft' className='mr-2' onChange={this.handleDraftChange}/>\n// //                      Draft </label>\n// //                      <button onClick={(event)=>{event.preventDefault();this.handleDraftChange()}}>Toggle Draft</button>\n// //                 </div>\n// //                 <div className='form-group'>\n// //                     <label for='publish'>Publish Date</label>\n// //                     <input \n// //                     type='date' \n// //                     id='publish' \n// //                     name='publish' \n// //                     className='form-control' \n// //                     onChange={this.handleInputChange}\n// //                      value={publish}\n// //                      required='required'/>\n// //                 </div>\n// //                 <button type='submit' className='btn btn-primary'>Save</button>\n// //                 <button className='btn btn-secondary' onClick={this.clearForm}>Cancel</button>\n// //             </form>\n// //         )\n// //     }\n\n// // }\n\n// // export default PostCreate","import { toast } from 'react-toastify';\n\nexport const fetchNotes = (nextEndpoint) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        let endpoint = '/api/investors/' \n\n        if (nextEndpoint !== undefined && nextEndpoint !== null) {\n          endpoint = nextEndpoint\n        }\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        let {notes} = getState();\n        return fetch(endpoint, {headers, })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    toast.error(\"Error! Can't load investors...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            // getState().notes[0].concat(res.data)}\n            .then(res => {\n                if (res.status === 200) {               \n                    return dispatch({type: 'FETCH_NOTES', notes: notes.push(res.data), loading: false});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authetication error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\nexport const searchNotes = (searchtext) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        let endpoint = '/api/investors/' \n        if (searchtext !== undefined && searchtext !== null) {\n          endpoint = `/api/investors/?search=${searchtext}`\n        }\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        return fetch(endpoint, {headers, method: \"GET\", })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        // console.log(res)\n                        return {status: res.status, data};\n                    })\n                } else {\n                    toast.error(\"Error! Can't load investors...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'SEARCH_NOTES', notes: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authetication error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\nexport const orderNotes = (order) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        let endpoint = '/api/investors/' \n        if (order !== undefined && order !== null) {\n          endpoint = `/api/investors/?ordering=${order}`\n        }\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        return fetch(endpoint, {headers, method: \"GET\", })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        // console.log(res)\n                        return {status: res.status, data};\n                    })\n                } else {\n                    toast.error(\"Error! Can't load investors...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'ORDER_NOTES', notes: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authetication error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\nexport const addNote = (text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n\n        let body = JSON.stringify({text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence });\n        return fetch(\"/api/investors/\", {headers, method: \"POST\", body})\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    toast.error(\"Error! Can't load investors...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 201) {\n                    toast.info(\"Investor \"+res.data.text+\" added\")\n                    return dispatch({type: 'ADD_NOTE', note: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authetication error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\n\nexport const updateNote = (index, id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence) => {\n    return (dispatch, getState) => {\n\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n\n        let body = JSON.stringify({text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence });\n        // console.log(\"id\", id, \"index\", index)\n        let noteId = getState().notes[index].noteitems[id].id;\n\n        return fetch(`/api/investors/${noteId}/`, {headers, method: \"PUT\", body})\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    toast.error(\"Error! Can't load investors...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 200) {\n                    toast.info(\"Investor \"+res.data.text+\" edited\")\n                    return dispatch({type: 'UPDATE_NOTE', note: res.data, index, id});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authetication error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\n\nexport const deleteNote = (id, index) => {\n    return (dispatch, getState) => {\n\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        let noteId = getState().notes[id].noteitems[index].id;\n\n        return fetch(`/api/investors/${noteId}/`, {headers, method: \"DELETE\"})\n            .then(res => {\n                if (res.status === 204) {\n                    toast.info(\"Investor deleted\")\n                    return {status: res.status, data: {}};\n                } else if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 204) {\n                    // toast.info(\"Investor deleted\")\n                    return dispatch({type: 'DELETE_NOTE', id, index});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authetication error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n            .then(res => {dispatch(fetchNotes())})\n    }\n}\n","import React, { Component } from 'react'\nimport {   \n  FormGroup, Button, Modal, \n  ModalHeader, ModalBody, \n  ModalFooter, } from 'reactstrap';\nimport './styles.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\n\nexport class ModalDelete extends Component {\n  render() {\n    const { modaldelete, text, index, id, toggle} = this.props;\n\n    return (\n      <div>\n        <Modal isOpen={modaldelete} toggle={toggle}>\n            <ModalHeader color=\"info\">Are you sure?</ModalHeader>           \n            <ModalBody>Delete <b>{text}</b> Investor?</ModalBody>\n            <ModalFooter> \n              <FormGroup row>                   \n              <Button className=\"rounded-0\" color=\"info\" onClick={() => this.props.onSelectForDelete(index, id)}><FontAwesomeIcon icon={faTrash} color=\"white\"/></Button>              \n              <Button className=\"rounded-0\" onClick={toggle}>Cancel</Button>\n              </FormGroup>\n            </ModalFooter>\n        </Modal> \n      </div>\n    )\n    \n  }\n}\n","import React, { Component } from 'react'\nimport { FormText,  \n  FormGroup, Label, Input,  } from 'reactstrap';\n\n// REQUIRED FIELDS\nexport class InputName extends Component {\n  render() {\n    const { text, errors } = this.props;\n    return (\n      <div>\n        <FormGroup>\n          <Label>Name <span className=\"text-danger\">*</span></Label>\n          <Input\n            name=\"text\"\n            value={text || ''}\n            placeholder=\"Enter name...\"\n            onChange={this.props.onInputChange}\n            required />\n            {errors.text ? <FormText color=\"danger\">{errors.text}</FormText>: \"\"}\n        </FormGroup>\n      </div>\n    )\n    \n  }\n}\nexport class InputPhone extends Component {\n  render() {\n    const { phone, errors } = this.props;\n    return (\n      <div>\n        <FormGroup>\n          <Label>Phone <span className=\"text-danger\">*</span></Label>\n          <Input\n            name=\"phone\"\n            value={phone || ''}\n            placeholder=\"Enter phone...\"\n            onChange={this.props.onInputChange}\n            required />\n            {errors.phone ? <FormText color=\"danger\">{errors.phone}</FormText>: \"\"}\n        </FormGroup>\n      </div>\n    )\n    \n  }\n}\nexport class InputEmail extends Component {\n  render() {\n    const { email, errors } = this.props;\n    return (\n      <div>\n        <FormGroup>\n          <Label>Email <span className=\"text-danger\">*</span></Label>\n          <Input\n            name=\"email\"\n            value={email || ''}\n            placeholder=\"Enter email...\"\n            onChange={this.props.onInputChange}\n            required />\n            {errors.email ? <FormText color=\"danger\">{errors.email}</FormText>: \"\"}\n        </FormGroup>\n      </div>\n    )    \n  }\n}\nexport class InputLinkedin extends Component {\n  render() {\n    const { linkedin_profile, errors } = this.props;\n    return (\n      <div>\n        <FormGroup>\n          <Label>Linkedin <span className=\"text-danger\">*</span></Label>\n          <Input\n            name=\"linkedin_profile\"\n            value={linkedin_profile || ''}\n            placeholder=\"Enter linkedin url...\"\n            onChange={this.props.onInputChange}\n            required />\n            {errors.linkedin_profile ? <FormText color=\"danger\">{errors.linkedin_profile}</FormText>: \"\"}\n        </FormGroup>\n      </div>\n    )    \n  }\n}\n// NOT REQUIRED FIELDS\nexport class InputWebsite extends Component {\n  render() {\n    const { website, errors } = this.props;\n    return (\n      <div>\n        <FormGroup>\n          <Label>Website</Label>\n          <Input\n            name=\"website\"\n            value={website || ''}\n            placeholder=\"Enter website url...\"\n            onChange={this.props.onInputChange}\n            />\n            {errors.website ? <FormText color=\"danger\">{errors.website}</FormText>: \"\"}\n        </FormGroup>\n      </div>\n    )    \n  }\n}\nexport class InputCorrespondence extends Component {\n  render() {\n    const { correspondence, errors } = this.props;\n    return (\n      <div>\n        <FormGroup>\n          <Label>Correspondence</Label>\n          <Input\n            name=\"correspondence\"\n            value={correspondence || ''}\n            placeholder=\"Enter correspondence...\"\n            onChange={this.props.onInputChange}\n            type='textarea'\n            />\n            {errors.correspondence ? <FormText color=\"danger\">{errors.correspondence}</FormText>: \"\"}\n        </FormGroup>\n      </div>\n    )    \n  }\n}","import React, { Component } from 'react'\nimport { Button, \n  FormGroup, Label, } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMale, faUsers, \n       } from '@fortawesome/free-solid-svg-icons'\n\n// Checkbox is corporate\nexport class CheckboxIsCorp extends Component {\n  render() {\n    const { is_corporate } = this.props;\n    return (\n      <div>\n        <FormGroup>\n            <Label>Individual <FontAwesomeIcon icon={faMale} color={!is_corporate ? \"black\": \"grey\"}/> / Corporate <FontAwesomeIcon icon={faUsers} color={is_corporate ? \"black\": \"grey\"}/></Label>\n            <Button className=\"btn btn-block\" onClick={this.props.handleCheckboxIsCorpBtnClick} active={is_corporate}>{is_corporate ? 'Change to Individual' : 'Change to Corporate'}</Button>\n        </FormGroup>\n      </div>\n    )    \n  }\n}","import React, { Component } from 'react'\nimport { Button, \n  FormGroup, Label, } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHandHoldingUsd, faCheckCircle, \n       } from '@fortawesome/free-solid-svg-icons'\n\n// Checkbox is corporate\nexport class CheckboxIsPayed extends Component {\n  render() {\n    const { status, is_staff, is_payed } = this.props;\n    return (\n      <div>\n        {status !== \"Candidate\" && is_staff ?\n          <FormGroup>\n              <Label>New <FontAwesomeIcon icon={faHandHoldingUsd} color={!is_payed ? \"black\": \"grey\"}/> / Payed <FontAwesomeIcon icon={faCheckCircle} color={is_payed ? \"black\": \"grey\"}/></Label>\n              <Button className=\"btn btn-block\" onClick={this.props.handleCheckboxIsPayBtnClick} active={is_payed}>{is_payed ? 'Change to New' : 'Change to Payed'}</Button>\n          </FormGroup>\n          : null} \n      </div>\n    )    \n  }\n}","import React, { Component } from 'react'\nimport { \n  FormGroup, Label, Dropdown, \n  DropdownToggle, \n  DropdownMenu, DropdownItem, } from 'reactstrap';\n\n// Checkbox is corporate\nexport class CustomDropdown extends Component {\n  render() {\n    const { status, dropdownOpen } = this.props;\n    return (\n      <div>\n        <FormGroup>\n          <Label>Status</Label>\n          <Dropdown className=\"form-group\" isOpen={dropdownOpen} toggle={this.props.onToggle}>\n            <DropdownToggle className=\"btn-block\" caret>\n              {status || ''}\n            </DropdownToggle>\n            <DropdownMenu className=\"btn-block\">\n              <DropdownItem onClick={this.props.onChangeValue}>Candidate</DropdownItem>\n              <DropdownItem onClick={this.props.onChangeValue}>Processed</DropdownItem>\n              <DropdownItem onClick={this.props.onChangeValue}>Converted</DropdownItem>\n              <DropdownItem onClick={this.props.onChangeValue}>Rejected</DropdownItem>\n            </DropdownMenu>\n          </Dropdown>\n        </FormGroup>\n      </div>\n    )    \n  }\n}","import React, { Component } from 'react'\n\nimport * as Inputs from '../../Atoms/AddInputs/AddInputs'\nimport { CheckboxIsCorp } from '../../Atoms/Checkboxes/CheckboxIsCorp'\nimport { CheckboxIsPayed } from '../../Atoms/Checkboxes/CheckboxIsPayed'\nimport { CustomDropdown } from '../../Atoms/Dropdown/Dropdown'\n// import { DatePickLastCall } from '../../Atoms/DatePick/DatePickLastCall'\n// import FileDrop from '../../Atoms/FileDrop/FileDrop'\n\nexport class InputFormNoteQuickAdd extends Component {\n  render() {\n    const { text, phone, email,  \n      linkedin_profile, website, \n      correspondence, is_corporate,\n      is_staff, is_payed, dropdownOpen,\n      status, updateNoteId,\n      errors, \n    } = this.props;\n\n    return (\n      <div>\n        <Inputs.InputName \n          onInputChange={this.props.onInputChange} \n          text={text} \n          errors={errors} \n        />\n        <Inputs.InputPhone \n          onInputChange={this.props.onInputChange} \n          phone={phone} \n          errors={errors} \n        />\n        <Inputs.InputEmail \n          onInputChange={this.props.onInputChange} \n          email={email} \n          errors={errors} \n        />      \n        <Inputs.InputLinkedin \n          onInputChange={this.props.onInputChange} \n          linkedin_profile={linkedin_profile} \n          errors={errors} \n        />\n        <Inputs.InputWebsite \n          onInputChange={this.props.onInputChange} \n          website={website} \n          errors={errors} \n        />      \n        <Inputs.InputCorrespondence \n          onInputChange={this.props.onInputChange} \n          correspondence={correspondence} \n          errors={errors} \n        />      \n        \n        <CheckboxIsCorp \n          handleCheckboxIsCorpBtnClick={this.props.handleCheckboxIsCorpBtnClick} \n          is_corporate={is_corporate} \n        />\n        {updateNoteId !== null ?\n        <CustomDropdown \n          onChangeValue={this.props.onChangeValue} \n          onToggle={this.props.onToggle} \n          status={status} \n          dropdownOpen={dropdownOpen} \n        />:null}\n        {updateNoteId !== null && status!==\"Candidate\" && is_staff ?\n          <CheckboxIsPayed \n            handleCheckboxIsPayBtnClick={this.props.handleCheckboxIsPayBtnClick} \n            status={status} \n            is_staff={is_staff} \n            is_payed={is_payed}\n          />\n        : null}      \n         \n      </div>\n    )\n    \n  }\n}","import React, { Component } from 'react'\nimport { Button } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMale, \n  faUsers, faExchangeAlt, faLongArrowAltDown,\n  faTimes } from '@fortawesome/free-solid-svg-icons'\n\n\nexport class OrderingHeaderTable extends Component {\n\n  state = { order: [], is_ordering_name: false, searchtext: \"\" }\n\n  handleOrderNotes = () => {\n    // Array to string with ','\n    let mapped = this.state.order.map((item)=>(item)).join(\",\");\n\n    if (this.state.order.length) {      \n      this.props.orderNotes(mapped)              \n    } else {\n      this.setState({order: []});\n      this.props.orderNotes(\"\")   \n    }    \n  }\n  onBtnClickOrderingName = (ordername) => {\n    // Create a new array based on current state:\n    let order = [...this.state.order];\n    let newordername = \"-\"+ordername\n    let is_ordering_name = false\n\n    // if ordername starts from \"C\"-character - clear that order!\n    if (ordername.charAt(0) === \"C\"){\n      let index = order.indexOf(ordername.slice(1, ordername.length))\n      // Clear ordername (remove from array)\n      if (index !== -1) {\n        order.splice(index, 1);\n      }\n    } else {\n      // Add or remove item to it\n      if (order.includes(ordername)){\n        let index = order.indexOf(ordername)\n        if (index !== -1) {          \n          order.splice(index, 1);\n          order.splice(index, 0, newordername);         \n        }\n      } else if (order.includes(newordername)) {\n        let index = order.indexOf(newordername)\n        if (index !== -1) {\n          order.splice(index, 1);\n          order.splice(index, 0, ordername);\n        }\n      } else {\n        order.push(ordername);\n\n      }\n    }\n    if (order.length > 0) {\n      is_ordering_name = true\n    } \n\n    // FIX BUG with \"owner\" negative ordering\n    if (order.includes(\"-owner\")&&order.length===1) {\n      // adding \"-id\" field to multiply filter\n      // if has only \"-owner\" field\n      order.push(\"-id\");\n    } else {\n      // remove \"-id\" in all other variants\n      let index = order.indexOf(\"-id\")\n      if (index !== -1) {        \n        order.splice(index, 1);\n      }      \n    }\n\n    // Set state\n    this.setState({is_ordering_name: is_ordering_name, searchtext: \"\", order}, function () {\n        // console.log(this.state)\n        this.props.onOrderNotes(this.state);\n    });\n  }\n\n  render() {\n\n    const {order} = this.state;\n\n    return (\n          <thead>\n            <tr>\n              <th className=\"table-num__title\">#</th>\n              <th className=\"table-investor__title\"><FontAwesomeIcon icon={faMale} color=\"black\"/> / <FontAwesomeIcon icon={faUsers} color=\"black\"/></th>\n              <th>Name <Button color=\"link\" onClick={() => this.onBtnClickOrderingName(\"text\")}>\n                {order.includes(\"text\") ? <FontAwesomeIcon icon={faLongArrowAltDown} color=\"black\"/>\n                :order.includes(\"-text\") ? <FontAwesomeIcon rotation={180} icon={faLongArrowAltDown} color=\"black\"/>\n                :<FontAwesomeIcon rotation={90} icon={faExchangeAlt} color=\"grey\"/>}</Button>\n                {order.includes(\"text\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"Ctext\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                :order.includes(\"-text\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"C-text\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                :\"\"}\n              </th>\n              <th>Dev <Button color=\"link\" onClick={() => this.onBtnClickOrderingName(\"owner\")}>\n                {order.includes(\"owner\") ? <FontAwesomeIcon icon={faLongArrowAltDown} color=\"black\"/>\n                :order.includes(\"-owner\") ? <FontAwesomeIcon rotation={180} icon={faLongArrowAltDown} color=\"black\"/>\n                :<FontAwesomeIcon rotation={90} icon={faExchangeAlt} color=\"grey\"/>}</Button>\n                {order.includes(\"owner\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"Cowner\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                :order.includes(\"-owner\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"C-owner\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                :\"\"}\n              </th>\n              <th className=\"table-phone__title\">Phone</th>\n              <th>Status <Button color=\"link\" onClick={() => this.onBtnClickOrderingName(\"status\")}>\n                {order.includes(\"status\") ? <FontAwesomeIcon icon={faLongArrowAltDown} color=\"black\"/>\n                :order.includes(\"-status\") ? <FontAwesomeIcon rotation={180} icon={faLongArrowAltDown} color=\"black\"/>\n                :<FontAwesomeIcon rotation={90} icon={faExchangeAlt} color=\"grey\"/>}</Button>\n                {order.includes(\"status\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"Cstatus\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                :order.includes(\"-status\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"C-status\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                :\"\"}\n              </th>\n              <th>Payment <Button color=\"link\" onClick={() => this.onBtnClickOrderingName(\"is_payed\")}>\n                {order.includes(\"is_payed\") ? <FontAwesomeIcon icon={faLongArrowAltDown} color=\"black\"/>\n                :order.includes(\"-is_payed\") ? <FontAwesomeIcon rotation={180} icon={faLongArrowAltDown} color=\"black\"/>\n                :<FontAwesomeIcon rotation={90} icon={faExchangeAlt} color=\"grey\"/>}</Button>\n                {order.includes(\"is_payed\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"Cis_payed\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                :order.includes(\"-is_payed\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"C-is_payed\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                :\"\"}\n              </th>\n              <th>Manage</th>\n            </tr>\n          </thead>\n    )\n    \n  }\n}","export const handleValidation = (fields) => {\n  // let fields = this.state;\n  let errors = {};\n\n  //Name\n  if(fields[\"text\"].trim() === \"\"){\n     errors[\"text\"] = \"Cannot be empty\";\n  } else {\n    if(typeof fields[\"text\"] !== \"undefined\"){\n       if(!fields[\"text\"].match(/^[a-zA-Z]+$/)){\n          errors[\"text\"] = \"Name must be only letters\";\n       } else if (fields[\"text\"].length > 7) {\n          errors[\"text\"] = \"Your name is too long\";\n       }        \n    }\n  }\n\n  //Phone\n  if(fields[\"phone\"].trim() === \"\"){\n     errors[\"phone\"] = \"Phone cannot be empty\";\n  } else {\n    if(typeof fields[\"phone\"] !== \"undefined\"){\n      if(!fields[\"phone\"].match(/^[0-9\\-\\\\+]{9,15}$/)){\n        errors[\"phone\"] = \"Not phone number\";\n      }      \n    }\n  }\n  // Email\n  if(fields[\"email\"].trim() === \"\"){\n    errors[\"email\"] = \"Cannot be empty\";\n  } else {\n    if(typeof fields[\"email\"] !== \"undefined\"){\n      let lastAtPos = fields[\"email\"].lastIndexOf('@');\n      let lastDotPos = fields[\"email\"].lastIndexOf('.');\n      if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"email\"].indexOf('@@') === -1 && lastDotPos > 2 && (fields[\"email\"].length - lastDotPos) > 2)) {\n        errors[\"email\"] = \"Email is not valid\";\n      }\n    }\n  }\n  // Linkedin profile\n  if(fields[\"linkedin_profile\"].trim() === \"\"){\n    errors[\"linkedin_profile\"] = \"Cannot be empty\";\n  } else {\n    if(typeof fields[\"linkedin_profile\"] !== \"undefined\"){\n      let re=/^((https?|ftp|smtp):\\/\\/)+(www.)?[a-z0-9]+(\\.[a-z]{2,}){1,3}(#?\\/?[a-zA-Z0-9-_#]+)*\\/?(\\?[a-zA-Z0-9-_]+=[a-zA-Z0-9-%]+&?)?$/;\n      if (!re.test(fields[\"linkedin_profile\"])) {\n        errors[\"linkedin_profile\"] = \"Not Linkedin URL\";\n      }\n    }\n  }\n  // Website\n  if(fields[\"website\"].trim() === \"\"){\n  } else {\n    if(typeof fields[\"website\"] !== \"undefined\"){\n      let re=/^((https?|ftp|smtp):\\/\\/)+(www.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_+.~#?&//=]*)?$/;\n      if (!re.test(fields[\"website\"])) {\n        errors[\"website\"] = \"URL is not valid\";\n      }\n    }\n  }\n\n  return errors;\n}","import React, { Component } from 'react'\n\nimport * as notes from \"../../../actions/notesActions\";\nimport {connect} from 'react-redux';\nimport { Link } from 'react-router-dom'\nimport { Form, FormText,  \n  FormGroup, Button,\n  Table, CustomInput,\n  Modal, ModalHeader, ModalBody, ModalFooter, } from 'reactstrap';\nimport { LoadScreen } from '../../general/Organisms/LoadScreen/LoadScreen'\nimport { ModalDelete } from '../Organisms/Modal/Modal'\n\nimport { InputFormNoteQuickAdd } from '../Molecules/Forms/InputFormNoteQuickAdd'\nimport { OrderingHeaderTable } from '../Molecules/Tables/OrderingHeaderTable'\n\nimport { handleValidation } from '../../../utils/helpers'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEdit, faTrash, faMale, \n  faUsers, faSave, faPlusSquare, \n  faSearch, faCheckCircle, faHandHoldingUsd,\n  faTimes,  } from '@fortawesome/free-solid-svg-icons'\n\n\nclass Notes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: \"\",\n      phone: \"\",\n      status: 'Candidate',\n      email: \"\",\n      linkedin_profile: \"\",\n      website: \"\",\n      correspondence: \"\",\n      is_corporate: false,\n      is_payed: false,\n      searchtext: \"\",\n      updateNoteId: null,\n      updateNoteIndex: null,\n      dropdownOpen: false,\n      is_ordering_name: false,\n      modal: false,\n      modaldelete: false,\n      is_staff: false,\n      loading: true,\n      nextafterdelete: \"\",\n      deleted: false,\n      order: [],\n      errors: {},\n      notes: [\n          {\n            count: null,\n            next: null,\n            previous: null,\n            noteitems: []\n          },\n        ],\n      }\n  }\n\n  // // END FETCH DATA AFTER PROPS\n  componentDidMount () {\n    this.props.fetchNotes()\n  }\n\n  resetForm = () => {\n    this.setState({text: \"\", phone: '', email:'', errors: {}, \n      updateNoteId: null, status: 'Candidate', is_corporate: false, \n      is_payed: false, linkedin_profile: \"\", website: \"\",\n      correspondence: \"\", });\n  }\n  addNew = () => {\n    this.setState({text: \"\", phone: '', email:'', errors: {}, \n      updateNoteId: null, status: 'Candidate', is_corporate: false, \n      is_payed: false, linkedin_profile: \"\", website: \"\", \n      modal: true, correspondence: \"\", });\n  }\n  resetSearch = () => {\n    this.setState({ searchtext: \"\" });\n  }\n \n  selectForEdit = (index, id) => {\n    let note = this.props.notes[index].noteitems[id];\n    this.setState({text: note.text, phone: note.phone, \n      status: note.status, is_payed: note.is_payed, \n      is_corporate: note.is_corporate, email: note.email, \n      linkedin_profile: note.linkedin_profile, \n      website: note.website, correspondence:note.correspondence,\n      updateNoteId: id, updateNoteIndex: index, modal: true, });\n  }\n\n  selectForDelete = (index, id) => {\n    this.props.deleteNote(index, id)\n    this.setState({\n      modaldelete: false,\n    })     \n  }\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      loading: nextProps.notes[0].loading,\n    }) \n    // если длина массива меньше чем предыдущая длина (один элемент удален)\n    // то пересчитываем эндпоинт для фетча (вычитаем из последнего символа next\n    // число \"1\" чтобы получить текущий фетч), если в нексте на конце \"1\", то обрезаем\n    // до знака \"?\"\n    let nextForDelete = \"\";\n    if(nextProps.notes[0].deleted && nextProps.notes[0].next) {\n      nextForDelete = nextProps.notes[0].next\n      console.log(nextForDelete)\n      let lastChar = parseInt(nextForDelete.slice(-1), 10)\n      if ((lastChar-1) >= 2) {\n        nextForDelete = nextForDelete.slice(0, -1)+(lastChar-1);\n        console.log(nextForDelete)\n      }\n      \n      //add flag nextafterdelete to correctly fetch\n      this.setState({nextafterdelete: nextForDelete,\n        deleted: false})\n    }\n  }  \n    \n  toggle = () => {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  }\n  toggleModal = () => {\n    this.setState(prevState => ({\n      modal: !prevState.modal,\n    }));\n  }\n  toggleModalDelete = (index, id) => {\n    let text = \"\"\n    if (id !== undefined) {\n      text = this.props.notes[index].noteitems[id].text\n    }\n    this.setState(prevState => ({\n      modaldelete: !prevState.modaldelete,\n      index: index,\n      id: id,\n      text: text\n    }));\n  }\n\n  handleChange = (e) => {\n    e.preventDefault();\n    let key = e.target.name\n    let value = e.target.value\n\n    this.setState({\n        [key]: value,\n        errors: {}\n    })\n\n  }\n\n  changeValue = (e) => {\n    this.setState({status: e.currentTarget.textContent})\n  }\n  loadMorePosts = () => {\n    const {next} = this.props.notes[this.props.notes.length - 1]\n    // Check if investor is after delete to correct fetch \n    if (this.state.nextafterdelete) {\n      this.props.fetchNotes(this.state.nextafterdelete)\n      //clear flag nextafterdelete\n      this.setState({nextafterdelete: \"\"})\n    } else {\n      if (next !== null || next !== undefined) {\n        this.props.fetchNotes(next)              \n      }\n    }\n     \n  }\n  searchNotes = () => {\n      const {searchtext} = this.state\n      if (searchtext !== null || searchtext !== undefined) {\n          this.props.searchNotes(searchtext) \n          this.setState({\n            is_ordering_name: false,\n            order: [],\n          });             \n      }     \n  }\n\n  onCheckboxIsCorpBtnClick = () => {\n    this.setState({\n      is_corporate: !this.state.is_corporate,\n    });\n  }\n  onCheckboxIsPayBtnClick = () => {\n    this.setState({\n      is_payed: !this.state.is_payed,\n    });\n  }\n\n  onOrderNotes = (dataFromCallback) => {\n    // Array to string with ','\n    \n    if (dataFromCallback && dataFromCallback.order.length) {\n      let mapped = dataFromCallback.order.map((item)=>(item)).join(\",\");\n      this.setState({...dataFromCallback});      \n      this.props.orderNotes(mapped)              \n    } else {\n      this.setState({order: []});\n      this.props.orderNotes(\"\")   \n    }    \n  }\n  submitNote = (e) => {\n      e.preventDefault();\n      // check validation from helper file\n      const validation_errors = handleValidation(this.state)\n      // check validation_errors dictionary is empty or has any errors\n      if (Object.keys(validation_errors).length === 0) {\n        // Check what do you want add or edit?\n        if (this.state.updateNoteId === null) {\n            this.props.addNote(this.state.text, this.state.phone, this.state.status, \n              this.state.is_corporate, this.state.is_payed, this.state.email, \n              this.state.linkedin_profile, this.state.website, this.state.correspondence,)\n              .then(this.resetForm)\n              .then(this.toggleModal)            \n              .catch(function (error) {\n                 console.log(\"error\", error);\n               });\n        } else {\n            this.props.updateNote(this.state.updateNoteIndex, this.state.updateNoteId, \n              this.state.text, this.state.phone, this.state.status, this.state.is_corporate, \n              this.state.is_payed, this.state.email, this.state.linkedin_profile, \n              this.state.website, this.state.correspondence)\n              .then(this.resetForm)\n              .then(this.toggleModal)              \n              .catch(function (error) {\n                 console.log(\"error\", error);\n               });\n        }\n      } else {\n        this.setState({errors: validation_errors}); \n      }\n  }\n  renderModal() {\n      const { modal, \n        text, phone, email, linkedin_profile,\n        website, correspondence, is_corporate,\n        status, is_payed, dropdownOpen,\n        updateNoteId,\n        errors } = this.state;\n      const { is_staff } = this.props;\n      \n      if (this.state.modal) {\n        return (\n          <Modal isOpen={modal} toggle={this.toggleModal}>\n            <Form onSubmit={this.submitNote}>            \n\n              <ModalHeader toggle={this.toggleModal}>{updateNoteId === null ? \"New Investor\" : \"Edit Investor\"}</ModalHeader>\n              <ModalBody>                    \n                <InputFormNoteQuickAdd\n                  onInputChange={this.handleChange}\n                  handleCheckboxIsCorpBtnClick={this.onCheckboxIsCorpBtnClick}\n                  handleCheckboxIsPayBtnClick={this.onCheckboxIsPayBtnClick} \n                  onToggle={this.toggle} \n                  onChangeValue={this.changeValue}\n\n                  text={text} \n                  phone={phone}\n                  email={email}\n                  linkedin_profile={linkedin_profile}\n                  website={website}\n                  correspondence={correspondence}\n                  is_corporate={is_corporate}\n                  is_staff={is_staff}\n                  status={status}\n                  is_payed={is_payed}\n                  dropdownOpen={dropdownOpen}\n                  updateNoteId={updateNoteId}\n\n                  errors={errors} \n                />                              \n              </ModalBody>\n              <ModalFooter> \n                <FormGroup row>                   \n                <Button className=\"rounded-0\" color=\"info\" type=\"submit\"><FontAwesomeIcon icon={faSave} color=\"white\"/></Button>              \n                {updateNoteId === null ? <Button className=\"rounded-0\" outline onClick={this.resetForm}>Clear</Button> : null}\n                <Button className=\"rounded-0\" onClick={this.toggleModal}>Cancel</Button>\n                </FormGroup>\n              </ModalFooter>\n            </Form>\n          </Modal>            \n        );\n      }\n    }\n\n  renderNotes () {\n    const { notes } = this.props\n    const { errors, modal, searchtext, modaldelete, index, id, text } = this.state;\n    const { next } = this.props.notes[this.props.notes.length - 1];\n\n    return (\n      <div>\n        <div className=\"centering mt-2\"> \n          <div className=\"centering-left\"> \n            <Link to={\"/investors/add\"}><Button className=\"rounded-0 btn-add\" color=\"info\"><FontAwesomeIcon icon={faPlusSquare} color=\"white\"/> Add New</Button></Link>\n          </div>\n          <div className=\"centering-center\">\n          {modal ? this.renderModal() : null}\n          {modaldelete ? \n            <ModalDelete \n              modaldelete={modaldelete} index={index} \n              id={id} text={text}\n              toggle={this.toggleModalDelete}\n              onSelectForDelete={this.selectForDelete}\n            /> \n          : null}\n            <FormGroup row>\n              <Button className=\"rounded-0\" color=\"info\" onClick={this.addNew}><FontAwesomeIcon icon={faPlusSquare} color=\"white\"/><span className=\"btn-quick__text\"> Quick Add</span></Button>\n              <CustomInput inline\n                id=\"searchtext\"\n                type=\"text\" \n                name=\"searchtext\"\n                value={searchtext || ''}\n                placeholder=\"Search by Name...\"\n                onChange={this.handleChange}\n                \n                />\n                {errors.searchtext ? <FormText color=\"danger\">{errors.searchtext}</FormText>: \"\"}\n              <Button className=\"rounded-0\" onClick={this.searchNotes}><FontAwesomeIcon icon={faSearch} color=\"white\"/></Button>\n              {searchtext !== \"\" ? \n                <Button outline className=\"rounded-0\" onClick={this.resetSearch}>\n                  <FontAwesomeIcon icon={faTimes} color=\"default\" className=\"btn-search__icon\"/>\n                  <span className=\"btn-search__txt\">Clear</span>\n                </Button> \n              : \"\"}          \n            </FormGroup>\n          </div>\n          <div className=\"centering-right\"> \n          </div>\n        </div>          \n        <div className=\"centering\"> \n          <div className=\"centering-left\"></div>\n          <h3 className=\"centering-center\">Leads</h3>\n          <div className=\"centering-right centering-right__tablepreffix\">\n          </div>\n        </div>\n        <Table className=\"table text-center table-investors\" striped>\n          <OrderingHeaderTable\n            onOrderNotes={this.onOrderNotes} \n          />\n\n          {notes !== undefined ? notes.map((post, index)=>{\n            return ( \n                <tbody key={index}>\n                    {post.noteitems !== undefined && post.noteitems.length > 0 ? post.noteitems.map((note, id) => {\n                      return (                                    \n                          <tr key={id}>\n                              <th scope=\"row\" className=\"table-num__text\">{id+1}</th>\n                              <td className=\"table-investor__text\">{note.is_corporate ? <FontAwesomeIcon icon={faUsers} color=\"black\"/> : <FontAwesomeIcon icon={faMale} color=\"black\"/>}</td>\n                              <td>\n                                <Link className=\"info-link\" to={{pathname:`/investors/${note.id}`,\n                                      state: {fromDashboard: false}\n                                      }}>{note.text}</Link>\n                              </td>\n                              <td>\n                                <Link className=\"info-link\" to={{pathname:`/profile/${note.owner}`,\n                                      state: {fromDashboard: false}\n                                      }}>{note.owner_username}</Link></td>\n                              <td className=\"table-phone__text\">{note.phone}</td>\n                              <td>{note.status}</td>\n                              <td>{note.is_payed ? <FontAwesomeIcon icon={faCheckCircle} color=\"black\"/> : <FontAwesomeIcon icon={faHandHoldingUsd} color=\"black\"/>}</td>\n                              <td>\n                                <Button className=\"rounded-0\" color=\"info\" title=\"edit investor\" onClick={() => this.selectForEdit(index, id)}><FontAwesomeIcon icon={faEdit} color=\"white\"/></Button>\n                                <Button className=\"rounded-0\" onClick={() => this.toggleModalDelete(index, id)} title=\"delete investor\"><FontAwesomeIcon icon={faTrash} color=\"white\"/></Button>\n                              </td>\n                          </tr>                                        \n                        )\n                      }\n                    ) : null}\n                </tbody>\n              )\n            }) : null}\n        </Table>\n        {next !== null ? <Button onClick={this.loadMorePosts}>Load more</Button> : ''}\n      </div>\n    )\n  }\n  render () {\n    const { loading } = this.state\n    return(\n      <div>\n        { loading ? <LoadScreen /> : this.renderNotes() }\n      </div>      \n    )\n  }\n}\n\nconst mapStateToProps = state => {\n    return {\n      notes: state.notes,\n      deleted: state.deleted,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchNotes: (next) => {\n            dispatch(notes.fetchNotes(next));\n        },\n        addNote: (text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence) => {\n            return dispatch(notes.addNote(text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence));\n        },\n        updateNote: (index, id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence) => {\n            return dispatch(notes.updateNote(index, id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence));\n        },\n        deleteNote: (index, id) => {\n            dispatch(notes.deleteNote(index, id));\n        },\n        searchNotes: (searchtext) => {\n            dispatch(notes.searchNotes(searchtext));\n        },\n        orderNotes: (order) => {\n            dispatch(notes.orderNotes(order));\n        },\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notes);","import React, { Component } from 'react'\nimport { Button, \n  FormGroup, Label, } from 'reactstrap';\nimport DatePicker from \"react-datepicker\";\nimport moment from \"moment\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n// Checkbox is corporate\nexport class DatePickLastCall extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      add_call: false,\n      last_call: \"\",      \n    }\n  }\n  handleChangeDate = (date) => {\n    if (date) {\n      this.props.handleChangeDate(moment(date, moment.defaultFormat).toDate());\n    } else {\n      this.props.handleChangeDate(null);\n    }\n    \n  }\n\n  render() {\n    // const { last_call } = this.state;\n    const { last_call } = this.props;\n    const is_valid_date = moment(last_call).isValid()\n\n    return ( \n      <div>\n        <FormGroup>\n          <Label>Last Call {is_valid_date ? <Button className=\"btn\" onClick={this.props.handleResetCallClick}>Reset</Button>: \"\"}</Label>\n          {is_valid_date ?\n          <div>\n            <DatePicker     \n              selected={is_valid_date ? moment(last_call, moment.defaultFormat).toDate() : moment(this.state.last_call, moment.defaultFormat).toDate()}\n              onChange={this.handleChangeDate}\n              showTimeSelect\n              timeFormat=\"HH:mm\"\n              timeIntervals={15}\n              dateFormat=\"d MMMM yyyy HH:mm\"\n              timeCaption=\"time\"\n            />\n          </div>\n          :                     \n            <Button className=\"btn btn-block\" onClick={this.props.handleAddCallClick}>Add Last Call</Button>\n          }\n        </FormGroup>\n      </div>\n    )    \n  }\n}","import React, { Component } from 'react'\nimport Dropzone from 'react-dropzone'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFileUpload } from '@fortawesome/free-solid-svg-icons'\nimport './style.scss'\n\nconst imageMaxSize = 10000000; //bytes\n\nclass FileDrop extends Component {\n\n\tonDrop = (acceptedFiles, rejectedFiles) => {\n\t\t// console.log(acceptedFiles, rejectedFiles)\n\t\tthis.props.onSelectDrop(acceptedFiles);\n\t}\n\trender () {\n\t\t\n\t\tconst { documents, detail } = this.props;\n\t\tlet drop_class\n\t\tlet drop_text\n\n\t\tif (documents) {\n\t\t\tif (detail) {\n\t\t\t\tif (documents === detail) {\n\t\t\t\t  drop_class = \"dropzone-field dropzone-field__default\"\n\t\t\t\t  drop_text = \"  Replace Document\"\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t  drop_class = \"dropzone-field dropzone-field__success\";\n\t\t\t  \t  drop_text = \"  Save to Attach\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdrop_class = \"dropzone-field dropzone-field__success\";\n\t\t\t\tdrop_text = \"  Save to Attach\";\n\t\t\t}\n\t\t} else {\n\t\t\tdrop_class = \"dropzone-field dropzone-field__default\";\n\t\t\tdrop_text = \"  Add Document\"\n\t\t} \n\n\t\treturn (\n\t\t  <div>Documents:\n            <span className=\"document-title\">{detail !== \"null\" ? \" (\"+detail.split(\"/\").slice(-1)[0]+\")\" : \"\"}</span>\n\t\t    <Dropzone\n\t            onDrop={this.onDrop}\t\t            \n\t            multiple={false}\n\t            maxSize={imageMaxSize}\n\t            >\n\t                {({getRootProps, getInputProps}) => (\n\t                    <div {...getRootProps()} className={`${drop_class}`}>\n\t                        <input {...getInputProps()} />\n\t                       \t<div>\n\t                       \t\t<FontAwesomeIcon icon={faFileUpload} color=\"white\"/>\n\t                       \t\t\t<span className=\"dropzone-field__text\">{`${drop_text}`}</span>\n\t\t\t\t\t\t\t</div>\n\t                    </div>\n\t                )}\n\t\t\t</Dropzone>﻿\n\t\t  </div>\n\t\t  )\n\t}\n}\nexport default FileDrop","import React, { Component } from 'react'\n\nimport * as Inputs from '../../Atoms/AddInputs/AddInputs'\nimport { CheckboxIsCorp } from '../../Atoms/Checkboxes/CheckboxIsCorp'\nimport { CheckboxIsPayed } from '../../Atoms/Checkboxes/CheckboxIsPayed'\nimport { CustomDropdown } from '../../Atoms/Dropdown/Dropdown'\nimport { DatePickLastCall } from '../../Atoms/DatePick/DatePickLastCall'\nimport FileDrop from '../../Atoms/FileDrop/FileDrop'\n\nexport class InputFormNoteDetail extends Component {\n  render() {\n    const { text, phone, email,  \n      linkedin_profile, website, \n      correspondence, is_corporate,\n      status, dropdownOpen, is_payed,\n      is_staff, add_call, last_call,\n      documents, detail,\n      errors, } = this.props;\n      \n    return (\n      <div>\n        <Inputs.InputName \n          onInputChange={this.props.onInputChange} \n          text={text} \n          errors={errors} \n        />\n        <Inputs.InputPhone \n          onInputChange={this.props.onInputChange} \n          phone={phone} \n          errors={errors} \n        />\n        <Inputs.InputEmail \n          onInputChange={this.props.onInputChange} \n          email={email} \n          errors={errors} \n        />      \n        <Inputs.InputLinkedin \n          onInputChange={this.props.onInputChange} \n          linkedin_profile={linkedin_profile} \n          errors={errors} \n        />\n        <Inputs.InputWebsite \n          onInputChange={this.props.onInputChange} \n          website={website} \n          errors={errors} \n        />      \n        <Inputs.InputCorrespondence \n          onInputChange={this.props.onInputChange} \n          correspondence={correspondence} \n          errors={errors} \n        />      \n        \n        <CheckboxIsCorp \n          handleCheckboxIsCorpBtnClick={this.props.handleCheckboxIsCorpBtnClick} \n          is_corporate={is_corporate} \n        />\n        <CheckboxIsPayed \n          handleCheckboxIsPayBtnClick={this.props.handleCheckboxIsPayBtnClick} \n          status={status} \n          is_staff={is_staff} \n          is_payed={is_payed}\n        />      \n      \n        <CustomDropdown \n          onChangeValue={this.props.onChangeValue} \n          onToggle={this.props.onToggle} \n          status={status} \n          dropdownOpen={dropdownOpen} \n        />      \n        <DatePickLastCall \n          handleChangeDate={this.props.handleChangeDate} \n          handleResetCallClick={this.props.handleResetCallClick} \n          handleAddCallClick={this.props.handleAddCallClick} \n          add_call={add_call} \n          last_call={last_call} \n        />      \n        <FileDrop \n          onSelectDrop={this.props.onSelectDrop} \n          documents={documents}\n          detail={detail}\n        />\n      </div>\n    )\n    \n  }\n}","import React, { Component } from 'react'\nimport { Table } from 'reactstrap';\n\nimport moment from \"moment\";\n\nexport class DetailPreviewTable extends Component {\n  render() {\n    const { text, phone, email,  \n      linkedin_profile, website, \n      correspondence, is_corporate,\n      status, is_payed,\n      last_call, documents, \n    } = this.props;\n\n    return (\n            <div className=\"col col-12 col-xs-12 col-sm-12 col-md-8 col-lg-8\">\n              <h3>Detailed Preview</h3>\n                <Table striped>\n                  <tbody>\n                    <tr>\n                      <th>Investor</th>\n                      <td>{is_corporate ? \"Corporate\" : \"Individual\" }</td>\n                    </tr>\n                    <tr>\n                      <th>Name</th>\n                      <td>{text}</td>\n                    </tr>\n                    <tr>\n                      <th>Phone</th>\n                      <td>{phone}</td>\n                    </tr>\n                    <tr>\n                      <th>Status</th>\n                      <td>{status}</td>\n                    </tr>\n                    <tr>\n                      <th>Email</th>\n                      <td className=\"table-correspondence__data\">{email}</td>\n                    </tr>\n                    <tr>\n                      <th>Linkedin</th>\n                      <td className=\"table-correspondence__data\"><a className=\"table-correspondence__url\" href={`${linkedin_profile}`} >{linkedin_profile}</a></td>\n                    </tr>\n                    <tr>\n                      <th>Website</th>\n                      <td className=\"table-correspondence__data\"><a className=\"table-correspondence__url\" href={`${website}`} >{website}</a></td>\n                    </tr>\n                    <tr>\n                      <th>Correspondence</th>\n                      <td className=\"table-correspondence__data\">{correspondence}</td>\n                    </tr>\n                    <tr>\n                      <th>Payment</th>\n                      <td>{is_payed ? \"Payed\" : \"New\" }</td>\n                    </tr>\n                    <tr>\n                      <th>Calls</th>\n                      <td>{last_call ? moment(last_call).format(\"D MMM YYYY HH:mm\") : \"\"}</td>\n                    </tr>\n                    <tr>\n                      <th>Documents</th>\n                      <td>{documents ? <a className=\"table-correspondence__url\" href={`${documents}`} >{documents.split(\"/\").slice(-1)[0]}</a> : \"\"}</td>\n                    </tr>\n                  </tbody>\n                </Table>\n            </div>\n    )\n    \n  }\n}","import React, {Component} from 'react'\nimport { Link } from \"react-router-dom\";\nimport * as detail from \"../../../actions/noteDetailActions\";\nimport {connect} from 'react-redux';\nimport { Form, Container, Row,\n  Button, } from 'reactstrap';\n\nimport moment from \"moment\";\n\nimport { LoadScreen } from '../../general/Organisms/LoadScreen/LoadScreen'\nimport { InputFormNoteDetail } from '../Molecules/Forms/InputFormNoteDetail'\nimport { DetailPreviewTable } from '../Molecules/Tables/DetailPreviewTable'\nimport { handleValidation } from '../../../utils/helpers'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUndoAlt, faSave,\n       } from '@fortawesome/free-solid-svg-icons'\n\nclass NoteDetail extends Component {\n\n    constructor(props){\n        super(props);\n  \n        this.state = {\n          text: \"\",\n          phone: \"\",\n          status: \"\",\n          email:\"\",\n          linkedin_profile: \"\",\n          website: \"\",\n          correspondence: \"\",\n          is_corporate: false,\n          is_payed: false,\n          id: null,\n          loading: true,\n          errors: {},\n          hasError: false,\n          dropdownOpen: false,\n          detail: {},\n          add_call: false,\n          last_call: \"\", \n          documents: null,\n          attached: false,      \n        }\n    }\n\n    componentDidMount(){\n      if (this.props.match){\n        const {id} = this.props.match.params\n        this.setState({\n            id: id,\n        })\n        this.props.fetchDetailNote(id)        \n      }\n      \n    }\n\n    componentWillReceiveProps(nextProps) {\n      const detailed = nextProps.detail\n\n      if (Object.keys(detailed).length) {\n        this.setState({\n          text: detailed.text,\n          phone: detailed.phone,\n          status: detailed.status,\n          is_corporate: detailed.is_corporate,\n          is_payed: detailed.is_payed,\n          email: detailed.email,\n          linkedin_profile: detailed.linkedin_profile,\n          website: detailed.website,\n          correspondence: detailed.correspondence,\n          last_call: moment(detailed.last_call, moment.defaultFormat).toDate(),\n          documents: detailed.documents,\n          hasError: detailed.hasError,\n          loading: detailed.loading,\n        }) \n      }        \n    }    \n    toggle = () => {\n      this.setState(prevState => ({\n        dropdownOpen: !prevState.dropdownOpen\n      }));\n    }\n    handleChange = (e) => {\n      e.preventDefault();\n      let key = e.target.name\n      let value = e.target.value\n      this.setState({\n          [key]: value,\n          errors: {}\n      })\n    }\n    changeDate = (date) => {      \n      this.setState({last_call: date})\n    }\n\n    changeValue = (e) => {\n      this.setState({status: e.currentTarget.textContent})\n    }\n\n    getData = (documents) => {\n      console.log(\"getData!\")\n      this.setState({\n        documents: documents[0],\n        attached: true,\n      })\n    }\n\n    onCheckboxIsCorpBtnClick = () => {\n      this.setState({\n        is_corporate: !this.state.is_corporate,\n      });\n    }\n    onCheckboxIsPayBtnClick = () => {\n      this.setState({\n        is_payed: !this.state.is_payed,\n      });\n    }\n    onAddCallClick = () => {\n      this.setState({\n        add_call: true,\n        last_call: moment(new Date(), moment.defaultFormat).toDate(),\n      });\n    }\n\n    onResetCallClick = () => {\n      this.setState({\n        add_call: false,\n        last_call: \"\",\n      });\n    }\n    // Force update page to /investors\n    refreshPage = () => {\n      window.location.href = '/investors';\n    }\n    submitNote = (e) => {\n      e.preventDefault();\n      // check validation from helper file\n      const validation_errors = handleValidation(this.state)\n      // check validation_errors dictionary is empty or has any errors\n      if (Object.keys(validation_errors).length === 0) {\n        this.props.updateDetailNote(this.state.id, this.state.text, \n          this.state.phone, this.state.status, this.state.is_corporate, \n          this.state.is_payed, this.state.email, this.state.linkedin_profile, \n          this.state.website, this.state.correspondence, this.state.last_call,\n          this.state.documents, this.state.attached,)\n      } else {\n        this.setState({errors: validation_errors}); \n      }\n    }\n\n    renderNote() {\n        const { detail, is_staff } = this.props;\n        const { text, phone, email, \n          linkedin_profile, website,\n          correspondence, is_corporate,\n          status, dropdownOpen, is_payed,\n          add_call, last_call, documents,\n          errors, hasError } = this.state;\n\n        if (!detail.detail && !hasError) {\n          return (\n                <Container fluid>\n                  <Row>\n                    <Form onSubmit={this.submitNote} className=\"form col-12 col-xs-12 col-sm-12 col-md-4 col-lg-4 mt-2 p-2\">\n                      <InputFormNoteDetail \n                        onInputChange={this.handleChange}\n                        handleCheckboxIsCorpBtnClick={this.onCheckboxIsCorpBtnClick}\n                        handleCheckboxIsPayBtnClick={this.onCheckboxIsPayBtnClick} \n                        onToggle={this.toggle} \n                        onChangeValue={this.changeValue}\n                        handleChangeDate={this.changeDate}\n                        handleResetCallClick={this.onResetCallClick}\n                        handleAddCallClick={this.onAddCallClick}\n                        onSelectDrop={this.getData}\n\n                        text={text} \n                        phone={phone}\n                        email={email}\n                        linkedin_profile={linkedin_profile}\n                        website={website}\n                        correspondence={correspondence}\n                        is_corporate={is_corporate}\n                        status={status}\n                        is_staff={is_staff}\n                        is_payed={is_payed}\n                        dropdownOpen={dropdownOpen}\n                        add_call={add_call}\n                        last_call={last_call}\n                        documents={documents}\n                        detail={`${detail.documents}`}\n\n                        errors={errors} \n                      />                \n\n                    <Button color=\"info\" className=\"rounded-0\" size=\"lg\" type=\"submit\"><FontAwesomeIcon icon={faSave} color=\"white\"/></Button>\n                    <Link to=\"/investors\" onClick={this.refreshPage} ><Button className=\"rounded-0\" size=\"lg\"><FontAwesomeIcon icon={faUndoAlt} color=\"white\"/> Cancel</Button></Link>\n                  </Form>\n\n                  <DetailPreviewTable \n                    {...detail}\n                  />\n              </Row>\n            </Container>              \n          );\n\n        } else {\n            return (\n              <div>\n                <h1>404 error. Investor Not Found</h1>\n              </div>\n            );\n        }\n    }\n    render () {\n        const {loading} = this.state\n        return(\n            <div>\n              {loading ?<LoadScreen />:this.renderNote()}\n          </div>               \n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      detail: state.detail,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      fetchDetailNote: (id) => {\n          dispatch(detail.fetchDetailNote(id));\n      },\n      updateDetailNote: (id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence, last_call, documents, attached) => {\n          dispatch(detail.updateDetailNote(id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence, last_call, documents, attached));\n      }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteDetail);","import { toast } from 'react-toastify';\nexport const fetchDetailNote = (id) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        const endpoint = `/api/investors/${id}/` \n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        \n        return fetch(endpoint, {headers, })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n               \n                } else {\n                    toast.error(\"Server Error...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'FETCH_DETAIL_NOTE', detail: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authentication Error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", detail: res.data});\n                    throw res.data;\n                } \n                else if (res.status === 404) {\n                    toast.error(\"Investor is not found...\")\n                    dispatch({type: \"MESSAGE_NOT_FOUND\"});\n\n                }\n            })\n            .catch(error => {                \n                //error.redirect('/404');\n                //Handle error\n                console.log(\"error\", error);\n                // return dispatch({type: \"MESSAGE_NOT_FOUND\", detail: error});\n                // dispatch({type: \"MESSAGE_NOT_FOUND\", detail: error});\n            });\n    }\n}\n\nexport const updateDetailNote = (id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence, last_call, documents, attached) => {\n    return (dispatch, getState) => {\n\n        let headers = {'Accept': 'application/json'};\n        // let headers = {\"Content-Type\": \"multipart/form-data\"};\n\n        let {token} = getState().auth;\n\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        let formData = new FormData();\n        formData.append('text', text);\n        formData.append('phone', phone);\n        formData.append('status', status);\n        formData.append('is_corporate', is_corporate);\n        formData.append('is_payed', is_payed);\n        formData.append('email', email);\n        formData.append('linkedin_profile', linkedin_profile);\n        formData.append('website', website);\n        // Not required fields\n        if (correspondence) {\n            formData.append('correspondence', correspondence);\n        }\n        //check if attached & if documents(file) is not string\n        //if documents is string don't append formData\n        if (attached && \n          !(typeof documents === 'string' || documents instanceof String)) {\n            formData.append('documents', documents);\n        }\n\n        // formData need to convert ISO format string\n        if (last_call){\n            if (String(last_call) !==\"Invalid Date\") {\n                formData.append('last_call', last_call.toISOString());\n            }            \n        } else {\n            formData.append('last_call', \"\");\n        }\n        console.log(formData, documents)\n        let noteId = id;\n        return fetch(`/api/investors/${noteId}/`, {headers, method: \"PUT\", body: formData})\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    toast.error(\"Server error...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 200) {\n                    toast.info(\"Investor \"+res.data.text+\" edited\")\n                    return dispatch({type: 'UPDATE_DETAIL_NOTE', detail: res.data, id});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authentication Error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\n\nexport const addDetailNote = (text, phone, status, is_corporate, email, linkedin_profile, website, correspondence) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n\n        let body = JSON.stringify({text, phone, status, is_corporate, email, linkedin_profile, website, correspondence });\n        return fetch(\"/api/investors/\", {headers, method: \"POST\", body})\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 201) {\n                    toast.info(\"Investor \"+res.data.text+\" added\")\n                    return dispatch({type: 'ADD_DETAIL_NOTE', detail: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\n","import React, { Component } from 'react'\n\nimport * as Inputs from '../../Atoms/AddInputs/AddInputs'\nimport { CheckboxIsCorp } from '../../Atoms/Checkboxes/CheckboxIsCorp'\n\nexport class InputFormNoteAdd extends Component {\n  render() {\n    const { text, phone, email,  \n      linkedin_profile, website, \n      correspondence, is_corporate,\n\n      errors, \n    } = this.props;\n\n    return (\n      <div>\n        <Inputs.InputName \n          onInputChange={this.props.onInputChange} \n          text={text} \n          errors={errors} \n        />\n        <Inputs.InputPhone \n          onInputChange={this.props.onInputChange} \n          phone={phone} \n          errors={errors} \n        />\n        <Inputs.InputEmail \n          onInputChange={this.props.onInputChange} \n          email={email} \n          errors={errors} \n        />      \n        <Inputs.InputLinkedin \n          onInputChange={this.props.onInputChange} \n          linkedin_profile={linkedin_profile} \n          errors={errors} \n        />\n        <Inputs.InputWebsite \n          onInputChange={this.props.onInputChange} \n          website={website} \n          errors={errors} \n        />      \n        <Inputs.InputCorrespondence \n          onInputChange={this.props.onInputChange} \n          correspondence={correspondence} \n          errors={errors} \n        />      \n        \n        <CheckboxIsCorp \n          handleCheckboxIsCorpBtnClick={this.props.handleCheckboxIsCorpBtnClick} \n          is_corporate={is_corporate} \n        />\n\n      </div>\n    )\n    \n  }\n}","import React, {Component} from 'react'\n\nimport { Link, Redirect } from 'react-router-dom'\nimport * as detail from \"../../../actions/noteDetailActions\";\nimport {connect} from 'react-redux';\nimport { Form, Button } from 'reactstrap';\n\nimport { InputFormNoteAdd } from '../Molecules/Forms/InputFormNoteAdd'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSave, } from '@fortawesome/free-solid-svg-icons'\n\nimport { handleValidation } from '../../../utils/helpers'\n\nclass NoteNew extends Component {\n    constructor(props){\n        super(props)       \n        this.state = {\n          text: \"\",\n          phone: \"\",\n          email: \"\",\n          status: \"Candidate\",\n          linkedin_profile: \"\",\n          website: \"\",\n          correspondence: \"\",\n          is_corporate: false,\n          id: null,\n          doneLoading: false,\n          errors: {},        \n          redirectToNewPage: false          \n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n      if (this.state.redirectToNewPage) {  \n        this.setState({\n          id: nextProps.detail.id,\n        })\n      }\n    }    \n\n    resetForm = () => {\n      this.setState({text: \"\", phone: '', email:'', errors: {}, status: 'Candidate', \n        is_corporate: false, linkedin_profile: \"\", website: \"\",\n        correspondence: \"\",\n      });\n    }\n    handleChange = (e) => {\n      e.preventDefault();\n      let key = e.target.name\n      let value = e.target.value\n      this.setState({\n          [key]: value,\n          errors: {}\n      })\n    }\n    changeValue = (e) => {\n      this.setState({status: e.currentTarget.textContent})\n    }\n\n    onCheckboxIsCorpBtnClick = () => {\n      this.setState({\n        is_corporate: !this.state.is_corporate,\n      });\n    }\n    // Force update page to /investors\n    refreshPage = () => {\n      window.location.href = '/investors';\n    }\n    submitNote = (e) => {\n      e.preventDefault();\n      // check validation from helper file\n      const validation_errors = handleValidation(this.state)\n      // check validation_errors dictionary is empty or has any errors\n      if (Object.keys(validation_errors).length === 0) {\n        this.props.addDetailNote(this.state.text, this.state.phone, this.state.status, \n          this.state.is_corporate, this.state.email, this.state.linkedin_profile, \n          this.state.website, this.state.correspondence)\n          .then(this.setState({ redirectToNewPage: true }))            \n          .catch(function (error) {\n             console.log(\"error\", error);\n           });\n      } else {\n        this.setState({errors: validation_errors}); \n      }\n    }\n\n    render () {\n        const { text, phone, email, \n          linkedin_profile, website,\n          correspondence, is_corporate,\n          errors } = this.state;\n        // The part that makes the redirect happen\n        if (this.state.redirectToNewPage && this.state.id) {\n          return (\n            <Redirect to={{pathname:`/investors/${this.state.id}`}} />\n          )\n        }\n        return(\n            <div>\n              <div className=\"mt-2 mb-2\">\n                <h3>Add New</h3>\n              </div>\n              <Form onSubmit={this.submitNote} className=\"form col col-sm-4 mt-2 p-2\">\n                <InputFormNoteAdd\n                  onInputChange={this.handleChange}\n                  handleCheckboxIsCorpBtnClick={this.onCheckboxIsCorpBtnClick} \n\n                  text={text} \n                  phone={phone}\n                  email={email}\n                  linkedin_profile={linkedin_profile}\n                  website={website}\n                  correspondence={correspondence}\n                  is_corporate={is_corporate}\n\n                  errors={errors} \n                /> \n                <div>\n                  <Button className=\"rounded-0\" color=\"info\" type=\"submit\"><FontAwesomeIcon icon={faSave} color=\"white\"/></Button>\n                  <Button className=\"rounded-0\" outline onClick={this.resetForm}>Clear</Button>\n                  <Link to=\"/investors\" onClick={this.refreshPage} ><Button className=\"rounded-0\">Cancel</Button></Link>\n                </div>\n            </Form>\n          </div>               \n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      detail: state.detail,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addDetailNote: (text, phone, status, is_corporate, email, linkedin_profile, website, correspondence) => {\n            return dispatch(detail.addDetailNote(text, phone, status, is_corporate, email, linkedin_profile, website, correspondence));\n        },\n    }\n}\n\n// export default NewNote;\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteNew);","import React, {Component} from 'react'\nimport {connect} from 'react-redux';\nimport { Link } from 'react-router-dom'\nimport { Table } from 'reactstrap';\n\nimport * as lead from \"../../../actions/paymentsActions\";\nimport { LoadScreen } from '../../general/Organisms/LoadScreen/LoadScreen'\n\nclass Payments extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {         \n        loading: true,\n        errors: {},\n        lead: {},\n      };\n    }\n\n    componentDidMount(){\n      if (this.props.match){\n        this.props.fetchPaymentsLead()\n      }\n    }\n   \n    renderPayments() {\n      const { lead } = this.props;\n        if (lead.leads) {\n          return (\n            <div>\n              <h3>Leads View</h3>\n              <Table className=\"table text-center\" striped>\n                <thead>\n                  <tr>\n                    <th className=\"table-num__title table-payments\">#</th>\n                    <th className=\"table-payments\">Developer</th>\n                    <th className=\"table-payments\">Total Leads</th>\n                    <th className=\"table-payments\">Processed</th>\n                    <th className=\"table-payments\">Converted</th>\n                    <th className=\"table-payments\">Rejected</th>\n                    <th className=\"table-payments\">Next Payment</th>\n                  </tr>\n                </thead>  \n                <tbody>\n                  {lead.leads.length > 0 ? lead.leads.map((item,id) => (\n                    <tr key={id}>\n                        <th scope=\"row\" className=\"table-num__text\">{id+1}</th>\n                        <td>\n                          <Link className=\"info-link\" to={{pathname:`/profile/${item.id}`,\n                              state: {fromDashboard: false}\n                              }}>{item.owner}</Link>\n                        </td>\n                        <td>{item.total}</td>\n                        <td>{item.processed}</td>\n                        <td>{item.converted}</td>\n                        <td>{item.rejected}</td>\n                        <td>{item.price}</td>\n                    </tr>\n                  )) : <tr><td colSpan=\"7\">Table is empty. Add your investors</td></tr>}\n                </tbody>                     \n              </Table>\n            </div>              \n          );\n        }\n    }\n    render () {\n      const { loading } = this.props\n      return(\n          <div>\n            { loading ? <LoadScreen /> : this.renderPayments() }\n        </div>               \n      )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      lead: state.lead,\n      loading: state.lead.loading\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      fetchPaymentsLead: () => {\n          dispatch(lead.fetchPaymentsLead());\n      },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Payments);","export const fetchPaymentsLead = () => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        const endpoint = `/api/payments/` \n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        \n        return fetch(endpoint, {headers, })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                // } else if (res.status === 404) {\n                //     dispatch({type: \"MESSAGE_NOT_FOUND\", data: res.data});\n                //     throw res.data;\n                } else {\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'FETCH_PAYMENTS_LEAD', leads: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                } else if (res.status === 404) {\n                    dispatch({type: \"ERROR_NOT_FOUND\", leads: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport RequireAuth from \"./auth/RequireAuth\";\nimport Landing from \"./Landing\";\nimport Login from \"./auth/Login\";\nimport Logout from \"./auth/Logout\";\nimport Signup from \"./auth/Signup\";\nimport SignupDone from \"./auth/SignupDone\";\nimport AccountActivation from \"./auth/AccountActivation\";\nimport UserProfile from \"./auth/Templates/UserProfile\";\nimport UserProfileDetail from \"./auth/Templates/UserProfileDetail\";\nimport UserProfileEdit from \"./auth/UserProfileEdit\";\nimport PasswordChange from \"./auth/PasswordChange\";\nimport PasswordReset from \"./auth/PasswordReset\";\nimport PasswordResetDone from \"./auth/PasswordResetDone\";\nimport PasswordResetConfirm from \"./auth/PasswordResetConfirm\";\nimport NoMatch from \"./NoMatch\";\n\nimport ReactifyComp from '../routingComps/ReactifyComp'\nimport PostDetail from '../reactify/PostDetail';\nimport PostCreate from '../reactify/PostCreate'\nimport Notes from './notes/Templates/Notes'\nimport NoteDetail from './notes/Templates/NoteDetail'\nimport NoteNew from './notes/Templates/NoteNew'\nimport Payments from './notes/Templates/Payments'\n\nconst MainContent = () => (\n    <div>\n        <Switch>\n            <Route exact path=\"/\" component={props => <Landing {...props} />} />\n            <Route path=\"/reload\" component={null} key=\"reload\" />\n            <Route path=\"/login\" component={props => <Login {...props} />} />\n            <Route path=\"/logout\" component={props => <Logout {...props} />}/>\n            <Route path=\"/signup\" component={props => <Signup {...props} />}/>\n            <Route path=\"/activation/confirm-email/:key\" component={props => <AccountActivation {...props} />}/>\n            <Route path=\"/signup_done\" component={props => <SignupDone {...props} />}/>\n            <Route path=\"/reset_password\" component={props => <PasswordReset {...props} />}/>\n            <Route path=\"/reset_password_done\" component={props => <PasswordResetDone {...props} />}/>\n            <Route path=\"/pass/reset/:uid/:token/\" component={props => <PasswordResetConfirm {...props} />}/>\n            <Route exact path=\"/profile\" component={RequireAuth(UserProfile)}/>\n            <Route path='/profile/:id' component={RequireAuth(UserProfileDetail)}/>\n            <Route path=\"/profile_edit\" component={RequireAuth(UserProfileEdit)}/>\n            <Route path=\"/change_password\" component={RequireAuth(PasswordChange)}/>\n            <Route path='/react/posts/create' component={RequireAuth(PostCreate)}/>\n            <Route path='/react/posts/:slug' component={RequireAuth(PostDetail)}/>\n            <Route path='/react/posts' component={RequireAuth(ReactifyComp)} />\n            <Route exact path='/investors' component={RequireAuth(Notes)} />\n            <Route path='/investors/add' component={RequireAuth(NoteNew)}/>\n            <Route path='/investors/:id' component={RequireAuth(NoteDetail)}/>\n            <Route exact path='/payments' component={RequireAuth(Payments)} />\n\n            <Route component={props => <NoMatch {...props} />}/>\n        </Switch>\n    </div>\n);\n\nexport default MainContent;\n","import React, {Component} from \"react\";\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css'; \n\nimport Header from \"./Header\";\nimport MainContent from \"./MainContent\";\n\nexport default class App extends Component {\n\n    render() {\n        return (\n            <div>                \n                <Header />\n                <div className=\"container\">\n                    <ToastContainer \n                      hideProgressBar={true} \n                      position=\"bottom-right\"\n                      autoClose={3000}\n                      removeCloseButton={true}\n                    />\n                \t<MainContent />\n                </div>\n            </div>\n        );\n    }\n}","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"bootstrap/dist/css/bootstrap.css\";\n\nimport \"./styles/style.scss\"\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import { Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport store from \"./store\";\n// import history from \"./utils/historyUtils\";\nimport { authLogin } from \"./actions/authActions\";\nimport App from \"./components/App\";\nimport registerServiceWorker from './registerServiceWorker';\n\n// import { syncHistoryWithStore } from 'react-router-redux'\n\n\n// const browserhistory = syncHistoryWithStore(history, store)\n\nregisterServiceWorker();\n\nconst token = localStorage.getItem(\"token\");\n\nif (token) {\n    store.dispatch(authLogin(token));\n}\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <App />\n        </Router>\n    </Provider>\n    , document.getElementById(\"root\"));\n"],"sourceRoot":""}