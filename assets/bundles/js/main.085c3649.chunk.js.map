{"version":3,"sources":["../config/polyfills.js","reducers/notesReducer.js","constants/actionTypes.js","reducers/index.js","reducers/authReducer.js","reducers/noteDetailReducer.js","reducers/paymentsReducer.js","store/index.js","constants/urls.js","utils/authUtils.js","actions/authActions.js","components/Header.js","utils/noteUtils.js","components/auth/RequireAuth.js","posts/PostDetail.js","posts/PostList.js","components/Landing.js","utils/renderUtils.js","components/auth/Login.js","components/auth/Logout.js","components/auth/Signup.js","components/auth/SignupDone.js","components/auth/AccountActivation.js","components/auth/UserProfile.js","components/auth/UserProfileEdit.js","components/auth/PasswordChange.js","components/auth/PasswordReset.js","components/auth/PasswordResetDone.js","components/auth/PasswordResetConfirm.js","components/NoMatch.js","reactify/PostInline.js","reactify/Posts.js","routingComps/ReactifyComp.js","reactify/PostForm.js","reactify/PostDetail.js","reactify/PostCreate.js","actions/notesActions.js","components/notes/Molecules/LoadScreen/LoadScreen.js","components/notes/Organisms/Modal/Modal.js","components/notes/Atoms/AddInputs/AddInputs.js","components/notes/Atoms/Checkboxes/CheckboxIsCorp.js","components/notes/Atoms/Checkboxes/CheckboxIsPayed.js","components/notes/Atoms/Dropdown/Dropdown.js","components/notes/Molecules/Forms/InputFormNoteQuickAdd.js","utils/helpers.js","components/notes/Templates/Notes.js","components/notes/Atoms/DatePick/DatePickLastCall.js","components/notes/Atoms/FileDrop/FileDrop.js","components/notes/Molecules/Forms/InputFormNoteDetail.js","components/notes/Molecules/Tables/DetailPreviewTable.js","components/notes/Templates/NoteDetail.js","actions/noteDetailActions.js","components/notes/Molecules/Forms/InputFormNoteAdd.js","components/notes/Templates/NoteNew.js","components/notes/Templates/Payments.js","actions/paymentsActions.js","components/MainContent.js","components/App.js","registerServiceWorker.js","index.js"],"names":["Promise","__webpack_require__","enable","window","Object","assign","initialState","noteitems","loading","AuthTypes","LOGIN","LOGOUT","CHANGE_PASSWORD","USER_PROFILE","rootReducer","combineReducers","form","formReducer","auth","state","arguments","length","undefined","action","type","objectSpread","authenticated","token","payload","user","notes","noteList","map","a","reduce","b","concat","toConsumableArray","slice","filter","index","self","findIndex","t","created_at","id","unshift","note","selectById","indexEdit","p","noteToUpdate","text","phone","status","is_corporate","is_payed","email","linkedin_profile","website","correspondence","splice","deleteById","indexDel","nextafterdelete","next","deleted","detail","updated","hasError","errors","page","lead","leads","newstate","forEach","item","true_investors","converted","processed","rejected","count_payed","payed","price_all","price_payed","key","prices","value","Math","ceil","price","error","store","logger","createLogger","middleware","applyMiddleware","thunk","compose","createStoreWithMiddleware","createStore","configureStore","ROOT_URL","console","log","process","AuthUrls","SIGNUP","RESET_PASSWORD","RESET_PASSWORD_CONFIRM","USER_ACTIVATION","getUserToken","authLogin","getUserProfile","dispatch","getState","axios","get","headers","authorization","then","response","data","catch","processServerError","keys","newDict","push","_error","Header","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleNavbar","setState","collapsed","react_default","createElement","Nav","navbar","NavItem","NavLink","href","className","username","renderUser","Navbar","color","dark","expand","NavbarBrand","NavbarToggler","onClick","Collapse","isOpen","renderLinks","Component","connect","RequireAuth","ComposedComponent","Authentication","_Component","apply","inherits","createClass","checkAuthentication","nextProps","history","is_staff","is_superuser","PostDetail","titleWasClicked","bind","assertThisInitialized","toggleContent","removeContent","showContent","postItem","event","preventDefault","dataCallback","newPostItem","post","didHandleRemove","prevProps","prevState","snapshop","setPostStateOnProps","Row","Col","xs","md","Card","CardImg","top","width","src","image","CardBody","CardTitle","title","CardText","description","Link","to","slug","PostList","items","isOldestFirst","isLoading","handleDataCallback","handlePostRemove","toggleListReverse","toggleSortId","newPostList","sort","sortById","reverse","currentPostList","updateBackend","pop","getItems","_this2","fetch","results","json","_this3","_this$state","posts_PostDetail","Landing","posts_PostList","renderField","_ref","input","label","_ref$meta","meta","touched","renderTextAreaField","_ref2","_ref2$meta","renderError","errorMessages","Login","_this$props","handleSubmit","pristine","submitting","onSubmit","Field","name","component","validate","required","message","Button","disabled","outline","reduxForm","formValues","loginUrl","localStorage","setItem","processedError","toast","SubmissionError","values","test","Logout","logoutUser","removeItem","Signup","password1","password2","signupUrl","SignupDone","AccountActivation","match","params","activateUserUrl","info","UserProfile","Table","striped","colSpan","first_name","last_name","about","withRouter","initialValues","patch","PasswordChange","changePasswordUrl","new_password1","new_password2","PasswordReset","resetPasswordUrl","PasswordResetDone","PasswordResetConfirm","_props$match$params","uid","resetPasswordConfirmUrl","NoMatch","PostInline","elClass","pathname","fromDashboard","content","Posts","togglePostListClass","handleNewPost","loadMorePosts","posts","postsListClass","previous","author","count","loadPosts","nextEndpoint","endpoint","thisComp","lookupOptions","method","Content-Type","csrfToken","cookie","load","responseData","postItemData","currentPosts","reactify_PostInline","ReacTifyComp","reactify_Posts","PostForm","handleInputChange","handleDraftChange","clearForm","postTitleRef","React","createRef","postContentRef","deletePost","draft","publish","moment","Date","format","X-CSRFToken","Authorization","body","JSON","stringify","credentials","newPostItemUpdated","alert","newPostItemCreated","defaultState","postCreateForm","reset","current","updatePost","createPost","target","defineProperty","cancelClass","deleteClass","ref","el","htmlFor","placeholder","onChange","checked","handlePostItemUpdated","doneLoading","loadPost","owner","reactify_PostForm","postItemUpdated","PostCreate","fetchNotes","res","LoadScreen","ModalDelete","modaldelete","toggle","Modal","ModalHeader","ModalBody","ModalFooter","FormGroup","row","onSelectForDelete","index_es","icon","faTrash","InputName","Label","Input","onInputChange","FormText","InputPhone","_Component2","_this$props2","InputEmail","_Component3","_this$props3","InputLinkedin","_Component4","_this$props4","InputWebsite","_Component5","_this$props5","InputCorrespondence","_Component6","_this$props6","CheckboxIsCorp","faMale","faUsers","handleCheckboxIsCorpBtnClick","active","CheckboxIsPayed","faHandHoldingUsd","faCheckCircle","handleCheckboxIsPayBtnClick","CustomDropdown","dropdownOpen","Dropdown","onToggle","DropdownToggle","caret","DropdownMenu","DropdownItem","onChangeValue","InputFormNoteQuickAdd","updateNoteId","AddInputs_InputName","AddInputs_InputPhone","AddInputs_InputEmail","AddInputs_InputLinkedin","AddInputs_InputWebsite","AddInputs_InputCorrespondence","CheckboxIsCorp_CheckboxIsCorp","Dropdown_CustomDropdown","CheckboxIsPayed_CheckboxIsPayed","handleValidation","fields","trim","lastAtPos","lastIndexOf","lastDotPos","indexOf","Notes","resetForm","addNew","modal","resetSearch","searchtext","resetSort","order","handleOrderNotes","selectForEdit","updateNoteIndex","selectForDelete","deleteNote","toggleModal","toggleModalDelete","handleChange","e","_this$setState","changeValue","currentTarget","textContent","searchNotes","is_ordering_name","onCheckboxIsCorpBtnClick","onCheckboxIsPayBtnClick","onBtnClickOrderingName","ordername","newordername","charAt","includes","mapped","join","orderNotes","submitNote","validation_errors","addNote","updateNote","nextForDelete","lastChar","parseInt","Form","InputFormNoteQuickAdd_InputFormNoteQuickAdd","faSave","_this$state2","faPlusSquare","renderModal","Modal_ModalDelete","CustomInput","inline","faSearch","faLongArrowAltDown","rotation","faExchangeAlt","faTimes","scope","owner_username","faEdit","LoadScreen_LoadScreen","renderNotes","noteId","DatePickLastCall","handleChangeDate","date","defaultFormat","toDate","add_call","last_call","is_valid_date","isValid","handleResetCallClick","react_datepicker_es","selected","showTimeSelect","timeFormat","timeIntervals","dateFormat","timeCaption","handleAddCallClick","FileDrop","onDrop","acceptedFiles","rejectedFiles","onSelectDrop","drop_class","drop_text","documents","split","dist_es","multiple","maxSize","getRootProps","getInputProps","faFileUpload","InputFormNoteDetail","DatePickLastCall_DatePickLastCall","Atoms_FileDrop_FileDrop","DetailPreviewTable","NoteDetail","changeDate","getData","attached","onAddCallClick","onResetCallClick","refreshPage","location","updateDetailNote","fetchDetailNote","detailed","Container","fluid","InputFormNoteDetail_InputFormNoteDetail","size","faUndoAlt","DetailPreviewTable_DetailPreviewTable","renderNote","Accept","formData","FormData","append","String","toISOString","InputFormNoteAdd","NoteNew","addDetailNote","redirectToNewPage","Redirect","InputFormNoteAdd_InputFormNoteAdd","Payments","fetchPaymentsLead","total","renderPayments","MainContent","Switch","Route","exact","path","components_Landing","auth_Login","auth_Logout","auth_Signup","auth_AccountActivation","SignupDone_SignupDone","auth_PasswordReset","PasswordResetDone_PasswordResetDone","auth_PasswordResetConfirm","UserProfileEdit","ReactifyComp","components_NoMatch","App","components_Header","lib","hideProgressBar","position","autoClose","removeCloseButton","components_MainContent","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","URL","origin","addEventListener","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","getItem","ReactDOM","render","es","BrowserRouter","App_App","document","getElementById"],"mappings":"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","file":"js/main.085c3649.chunk.js","sourcesContent":["'use strict';\n\nif (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where React gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes React's erratic future behavior.\n  require('promise/lib/rejection-tracking').enable();\n\n  window.Promise = require('promise/lib/es6-extensions.js');\n} // fetch() polyfill for making API calls.\n\n\nrequire('whatwg-fetch'); // Object.assign() is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\n\n\nObject.assign = require('object-assign'); // In tests, polyfill requestAnimationFrame since jsdom doesn't provide it yet.\n// We don't polyfill it in the browser--this is user's responsibility.\n\nif (process.env.NODE_ENV === 'test') {\n  require('raf').polyfill(global);\n}","const initialState = [{noteitems: [], \n                       loading: true\n                    }]\n\nexport default function notes(state=initialState, action) {\n    //собрать все массивы с ключами noteitems и объединить в один массив\n    let noteList = state.map(a => a.noteitems).reduce((a, b) => [...a, ...b], []).slice();\n\n    switch (action.type) {\n\n        case 'FETCH_NOTES':\n            //удаление дубликатов\n            noteList = noteList.filter((noteList, index, self) => self.findIndex(t => t.created_at === noteList.created_at && t.id === noteList.id) === index)\n            \n            return [                    \n                    {...state[state.length-1],\n                    noteitems: noteList,\n                    loading: false,\n                    // deleted: false\n                    // ...action.notes\n                    },\n                ];\n        case 'SEARCH_NOTES':\n            noteList = action.notes\n        \n            return [                    \n\n                    {...state,\n                    ...action.notes,\n                    loading: false,},\n                ];\n\n        case 'ORDER_NOTES':\n            noteList = action.notes\n       \n            return [                    \n\n                    {...state,\n                    ...action.notes,\n                    loading: false,},\n                ];\n\n\n        case 'ADD_NOTE':\n            // Добавляем заметку\n            noteList.unshift(action.note);\n            // Удаляем нижнюю\n            // if (noteList.length > 0) {\n            //     noteList.pop();\n            // }\n\n            return [\n                        //берем последний стейт и добавляем к нему общий массив\n                        {...state[state.length-1],\n                            noteitems: noteList,\n                            loading: false,},\n\n                    ];\n\n        case 'UPDATE_NOTE':\n\n            //Поиск в общем массиве элемента по id и index (2мерный массив)\n            let selectById = state[action.index].noteitems[action.id].id\n            let indexEdit = noteList.findIndex(p => p.id === selectById) \n\n            let noteToUpdate = noteList[indexEdit]\n            noteToUpdate.text = action.note.text;\n            noteToUpdate.phone = action.note.phone;\n            noteToUpdate.status = action.note.status;\n            noteToUpdate.is_corporate = action.note.is_corporate;\n            noteToUpdate.is_payed = action.note.is_payed;\n            noteToUpdate.email = action.note.email;\n            noteToUpdate.linkedin_profile = action.note.linkedin_profile;\n            noteToUpdate.website = action.note.website;\n            noteToUpdate.correspondence = action.note.correspondence;\n            noteList.splice(indexEdit, 1, noteToUpdate);\n            return [\n                    {...state[state.length-1],\n                        noteitems: noteList,\n                        loading: false,},\n                    ];\n\n        case 'DELETE_NOTE':\n            //Поиск в общем массиве элемента по id и index (2мерный массив)\n            let deleteById = state[action.id].noteitems[action.index].id\n            let indexDel = noteList.findIndex(p => p.id === deleteById)                      \n            noteList.splice(indexDel, 1);\n            return [\n                        {...state[state.length-1],\n                            noteitems: noteList,\n                            loading: false,\n                            nextafterdelete: state[0].next,\n                            deleted: true\n                        }\n                    ];\n\n        default:\n            \n    }\n    return state;\n}\n","export const AuthTypes = {\n    LOGIN: \"LOGIN\",\n    LOGOUT: \"LOGOUT\",\n    CHANGE_PASSWORD: \"CHANGE_PASSWORD\",\n    USER_PROFILE: \"USER_PROFILE\",\n    // WITH_ERROR: \"WITH_ERROR\"\n};","import {combineReducers} from \"redux\";\nimport { reducer as formReducer } from \"redux-form\";\n\nimport notesReducer from \"./notesReducer\";\nimport noteDetailReducer from \"./noteDetailReducer\";\nimport authReducer from \"./authReducer\";\nimport paymentsReducer from \"./paymentsReducer\";\n// import { routerReducer } from 'react-router-redux'\n\nconst rootReducer = combineReducers({\n    form: formReducer,\n    auth: authReducer,\n    notes: notesReducer,\n    detail: noteDetailReducer,\n    lead: paymentsReducer,\n    // routing: routerReducer\n});\n\nexport default rootReducer;\n\n\n","import { AuthTypes } from \"../constants/actionTypes\";\n\nexport default function(state = {}, action) {\n    switch(action.type) {\n        case AuthTypes.LOGIN:\n            return { ...state, authenticated: true, token: action.payload};\n        case AuthTypes.LOGOUT:\n            return { ...state, authenticated: false, token: null};\n        case AuthTypes.USER_PROFILE:\n            return { ...state, user: action.payload};\n        // case AuthTypes.WITH_ERROR:\n        //     return { ...state, error: action.payload};\n        default:\n        \t// will NOT execute because of the line preceding the switch.\n    }\n    return state;\n}","export default function noteDetailReducer(state = {loading: true, updated: false}, action) {\n    switch(action.type) {\n\n        case 'FETCH_DETAIL_NOTE':\n            return { ...state, ...action.detail, loading: false};\n        case 'UPDATE_DETAIL_NOTE':\n            return { ...state, ...action.detail, loading: false, updated: true};\n        case 'ADD_DETAIL_NOTE':\n            return { ...state, ...action.detail, loading: false};\n\n        case 'MESSAGE_NOT_FOUND':\n            return {...state, \n                hasError: true,\n                errors: {page: \"Page not found\"},\n                loading: false,\n            };\n\n        default:\n          // will NOT execute because of the line preceding the switch.\n    }\n    return state;\n}","export default function paymentsReducer(state = {leads: \"\", loading: true}, action) {\n    switch(action.type) {\n\n        case 'FETCH_PAYMENTS_LEAD':\n            // initialize newstate for reducer (to add calculated parameter lead.price)\n            let newstate =  [...action.leads];\n            // calculating next payment\n            newstate.forEach(item=>{\n              // get true_investors (without candidate status)\n              let true_investors = item.converted + item.processed + item.rejected\n              // get count of payed investors\n              let count_payed = item.payed\n              let price_all = 0;\n              let price_payed = 0;\n\n              // Calculating price\n              for(let key in item.prices){\n                let value = item.prices[key]\n                // Calculating price for investors without Candidate status\n                if (true_investors >=10){\n                    if (true_investors>=key) {\n                        price_all += 10*value\n                    } else {\n                        if (Math.ceil(true_investors/10) === key/10) {\n                            price_all += (true_investors+10-key)*value \n                        }\n                    }\n                }\n                // Get payed price\n                if (count_payed && true_investors >=10){\n                    if (count_payed >= key) {\n                        price_payed += 10*value\n                    } else {\n                        if (Math.ceil(count_payed/10) === key/10) {\n                            price_payed += (count_payed+10-key)*value \n                        }\n                    }\n                }\n              }\n              // output price without payed prices\n              item.price =price_all-price_payed;              \n            });\n            return { ...state, leads: [...newstate], loading: false }\n        case 'LEAD_NOT_FOUND':\n            return {...state, loading: false, error: \"Not found\"};\n        default:\n          // will NOT execute because of the line preceding the switch.\n    }\n    return state;\n}","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from '../reducers';\n\nfunction configureStore(initialState) {\n    let createStoreWithMiddleware;\n\n    const logger = createLogger();\n    const middleware = applyMiddleware(thunk, logger);\n\n    createStoreWithMiddleware = compose(\n        middleware\n    );\n\n    return createStoreWithMiddleware(createStore)(rootReducer, initialState);\n}\n\nlet store = configureStore();\n\nexport default store;","let ROOT_URL = \"http://localhost:8000/\";\n\nconsole.log('public url: ', process.env)\n\nif (process.env !== \"development\") {\n\tROOT_URL = \"\"\n}\nexport const AuthUrls = {\n    LOGIN: `${ROOT_URL}rest-auth/login/`,\n    SIGNUP: `${ROOT_URL}rest-auth/registration/`,\n    CHANGE_PASSWORD: `${ROOT_URL}rest-auth/password/change/`,\n    RESET_PASSWORD: `${ROOT_URL}rest-auth/password/reset/`,\n    RESET_PASSWORD_CONFIRM: `${ROOT_URL}rest-auth/password/reset/confirm/`,\n    USER_ACTIVATION: `${ROOT_URL}rest-auth/registration/verify-email/`,\n    USER_PROFILE: `${ROOT_URL}rest-auth/user/`\n};","export function getUserToken(state) {\n    return state.auth.token;\n}","import axios from \"axios\";\nimport { SubmissionError } from 'redux-form';\n// import { actions as notifActions } from 'redux-notifications';\nimport { AuthTypes } from \"../constants/actionTypes\";\nimport { AuthUrls } from \"../constants/urls\";\nimport store from \"../store\";\nimport { getUserToken } from \"../utils/authUtils\";\nimport { toast } from 'react-toastify';\n\n// const { notifSend } = notifActions;\nexport function authLogin(token) {\n    return {\n        type: AuthTypes.LOGIN,\n        payload: token,\n    };\n}\n\nexport function loginUser(formValues, dispatch, props) {\n        const loginUrl = AuthUrls.LOGIN;\n\n        return axios.post(loginUrl, formValues).then((response) => {\n            // If request is good...\n            // Update state to indicate user is authenticated\n            const token = response.data.key; \n\n            dispatch(authLogin(token));\n            localStorage.setItem(\"token\", token);\n\n            // redirect to the route '/'\n            props.history.push(\"/investors\");\n            // to getUserProfile in Header\n            dispatch(getUserProfile())\n        }).catch(error => {\n            const processedError = processServerError(error.response.data);\n            toast.error(\"Error, you can't login. Try one more...\")\n            throw new SubmissionError(processedError);\n        });\n}\n\nexport function logoutUser() {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"csrftoken\");\n    return {\n        type: AuthTypes.LOGOUT\n    };\n}\n\nexport function signupUser(formValues, dispatch, props) {\n    const signupUrl = AuthUrls.SIGNUP;\n\n    return axios.post(signupUrl, formValues)\n        .then((response) => {\n            // If request is good...\n            // you can login if email verification is turned off.\n            // const token = response.data.key;\n            // dispatch(authLogin(token));\n            // localStorage.setItem(\"token\", token);\n\n            // email need to be verified, so don't login and send user to signup_done page.\n            // redirect to signup done page.\n            props.history.push(\"/signup_done\");\n        })\n        .catch((error) => {\n            // If request is bad...\n            // Show an error to the user\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n\nfunction setUserProfile(payload) {\n    return {\n        type: AuthTypes.USER_PROFILE,\n        payload: payload\n    };\n}\n\nexport function getUserProfile() {\n    return function(dispatch) {\n        const token = getUserToken(store.getState());\n\n        if (token) {\n            axios.get(AuthUrls.USER_PROFILE, {\n                headers: {\n                    authorization: 'Token ' + token\n                }\n            }).then(response => {\n                dispatch(setUserProfile(response.data))\n            }).catch((error) => {\n                // If request is bad...\n                // Show an error to the user\n                console.log(error);\n                // TODO: send notification and redirect\n            });\n        }\n    };\n}\n\nexport function changePassword(formValues, dispatch, props) {\n    const changePasswordUrl = AuthUrls.CHANGE_PASSWORD;\n    const token = getUserToken(store.getState());\n\n    if (token) {\n        return axios.post(changePasswordUrl, formValues, {\n            headers: {\n                authorization: 'Token ' + token\n            }\n        })\n            .then((response) => {\n                toast.info('Password has been changed successfully')\n                // dispatch(notifSend({\n                //     message: \"Password has been changed successfully\",\n                //     kind: \"info\",\n                //     dismissAfter: 5000\n                // }));\n                // redirect to the route '/profile'\n                props.history.push(\"/profile\");\n            })\n            .catch((error) => {\n                // If request is bad...\n                // Show an error to the user\n                const processedError = processServerError(error.response.data);\n                throw new SubmissionError(processedError);\n            });\n    }\n}\n\nexport function resetPassword(formValues, dispatch, props) {\n    const resetPasswordUrl = AuthUrls.RESET_PASSWORD;\n\n    return axios.post(resetPasswordUrl, formValues)\n        .then(response => {\n            // redirect to reset done page\n            props.history.push(\"/reset_password_done\");\n        }).catch((error) => {\n            // If request is bad...\n            // Show an error to the user\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n\nexport function confirmPasswordChange(formValues, dispatch, props) {\n    const { uid, token } = props.match.params;\n    const resetPasswordConfirmUrl = AuthUrls.RESET_PASSWORD_CONFIRM;\n    const data = Object.assign(formValues, { uid, token });\n\n    return axios.post(resetPasswordConfirmUrl, data)\n        .then(response => {\n            toast.info('Password has been reset successfully, please log in')\n            props.history.push(\"/login\");\n        }).catch((error) => {\n            // If request is bad...\n            // Show an error to the user\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n\nexport function activateUserAccount(formValues, dispatch, props) {\n    const { key } = props.match.params;\n    const activateUserUrl = AuthUrls.USER_ACTIVATION;\n    const data = Object.assign(formValues, { key });\n\n    return axios.post(activateUserUrl, data)\n        .then(response => {\n            toast.info('Your account has been activated successfully, please log in')\n            props.history.push(\"/login\");\n        }).catch((error) => {\n            // If request is bad...\n            // Show an error to the user\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n\nexport function updateUserProfile(formValues, dispatch, props) {\n    const token = getUserToken(store.getState());\n    console.log(formValues)\n    return axios.patch(AuthUrls.USER_PROFILE, formValues, {\n        headers: {\n            authorization: 'Token ' + token\n        }\n    })\n        .then(response => {\n            toast.info('Your profile has been updated successfully')\n            props.history.push(\"/profile\");\n        }).catch((error) => {\n            // If request is bad...\n            // Show an error to the user\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n// util functions\nfunction processServerError(error) {\n    return  Object.keys(error).reduce(function(newDict, key) {\n        if (key === \"non_field_errors\") {\n            newDict[\"_error\"].push(error[key]);\n        } else if (key === \"token\") {\n            // token sent with request is invalid\n            newDict[\"_error\"].push(\"The link is not valid any more.\");\n        } else {\n            newDict[key] = error[key];\n        }\n\n        return newDict\n    }, {\"_error\": []});\n}","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n// import { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n    } from 'reactstrap';\n\nimport { getUserProfile } from \"../actions/authActions\";\nimport { renderUser } from \"../utils/noteUtils\";\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            collapsed: true\n        };\n    }\n    toggleNavbar = () => {\n        this.setState({\n            collapsed: !this.state.collapsed\n        });\n    }\n\n    static propTypes = {\n        authenticated: PropTypes.bool,\n        getUserProfile: PropTypes.func.isRequired,\n        user: PropTypes.object\n    };\n    componentWillMount() {\n        this.props.getUserProfile();\n    } \n\n    renderLinks() {\n        if (this.props.authenticated) {\n            const { user } = this.props\n            return (\n                \n                    <Nav navbar>\n                        <NavItem key=\"investors\">\n                            <NavLink href={\"/investors\"}>Investors</NavLink>\n                        </NavItem>\n                        <NavItem key=\"payments\">\n                            <NavLink href={\"/payments\"}>Payments</NavLink>\n                        </NavItem>\n                        <div className=\"navbar-profile\">\n                            <NavItem key=\"profile\">\n                                <NavLink href=\"/profile\">{renderUser(user)}</NavLink>\n                            </NavItem>\n                            <NavItem key=\"logout\">\n                                <NavLink href=\"/logout\">Logout</NavLink>\n                            </NavItem>\n                        </div>\n                    </Nav>\n                \n            );\n\n        } else {\n            return (\n                    <Nav className=\"ml-auto\" navbar>\n                        <NavItem key=\"login\">\n                            <NavLink href=\"/login\">Login</NavLink>\n                        </NavItem>,\n                        <NavItem key=\"signup\">\n                            <NavLink href=\"/signup\">Sign Up</NavLink>\n                        </NavItem>\n                    </Nav>\n            );\n        }\n    }\n\n    render() {\n        return (\n            <Navbar color=\"info\" dark expand=\"md\">\n                <NavbarBrand href=\"/\">Lead Platform</NavbarBrand>\n                <NavbarToggler onClick={this.toggleNavbar} />\n                  <Collapse isOpen={!this.state.collapsed} navbar>                    \n                        {this.renderLinks()}\n                  </Collapse>\n            </Navbar>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        authenticated: state.auth.authenticated,\n        user: state.auth.user\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getUserProfile: () => {\n            return dispatch(getUserProfile());\n        }\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import React from \"react\";\n\n\nexport const renderUser = (user) => {\n  // const user = this.props.user;\n  if (user) {\n      return <div>{user.username}</div>\n  }\n\n};\n// export const renderError = (errors) => {\n\n// \tif (Object.keys(errors).length) {\n// \t  return (\n// \t    <div>\n// \t        <div>{ errors['text'] }</div> \n// \t        <div>{ errors['phone'] }</div>\n// \t    </div>\n// \t    );\n// \t}\n// \treturn null;\n// };","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n// import {withRouter} from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nexport default function(ComposedComponent) {\n    class Authentication extends Component {\n\n        static propTypes = {\n            history: PropTypes.object\n        };\n\n        componentWillMount() {\n            this.checkAuthentication(this.props);\n\n        }\n\n        componentWillUpdate(nextProps) {\n            this.checkAuthentication(nextProps);\n        }\n\n        checkAuthentication(props) {\n            if (!props.authenticated) {\n                this.props.history.push(\"/login\");\n            }\n        }\n\n        render() {\n            return <ComposedComponent {...this.props} />\n        }\n    }\n\n    function mapStateToProps(state) {\n\n        // provide is_staff to props\n        let is_staff = false;\n        if (state.auth.user && (state.auth.user.is_staff || state.auth.user.is_superuser)) {\n            is_staff = true;\n        }\n        return { authenticated: state.auth.authenticated, \n                is_staff: is_staff, \n            }\n    }\n    // return withRouter(connect(mapStateToProps)(Authentication));\n    return connect(mapStateToProps)(Authentication);\n}\n","import React, {Component} from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {\n\tRow, Col, Card, CardBody, CardTitle, CardText, CardImg\n} from \"reactstrap\";\n\nimport { Link } from 'react-router-dom'\n\nclass PostDetail extends Component {\n\tconstructor (props) {\n\t\tsuper(props)\n\t\tthis.titleWasClicked = this.titleWasClicked.bind(this)\n\t\tthis.toggleContent = this.toggleContent.bind(this)\n\t\tthis.removeContent = this.removeContent.bind(this)\n\t\tthis.state = {\n\t\t\tshowContent: false,\n\t\t\tpostItem: null\n\t\t}\n\t}\n\ttitleWasClicked (event) {\n\t\tevent.preventDefault()\n\t\tconst {dataCallback} = this.props\n\t\tlet newPostItem = this.props.post\n\t\tnewPostItem['title'] = \"This is new Title\"\n\t\t\n\t\tthis.setState({\n\t\t\tpostItem: newPostItem\n\t\t})\n\t\tif (dataCallback !== undefined) {\n\t\t\tdataCallback(newPostItem)\t\n\t\t}\t\t\t\n\t}\n\ttoggleContent (event) {\n\t\tevent.preventDefault()\t\n\t\tthis.setState({\n\t\t\tshowContent: !this.state.showContent\n\t\t})\t\t\n\t}\n\tremoveContent (event) {\n\t\tif (this.props.didHandleRemove) {\n\t\t\tthis.props.didHandleRemove(this.props.post)\n\t\t}\t\n\t}\n\tcomponentDidMount() {\n\t\tconst {post} = this.props\n\t\tthis.setState({\n\t\t\tpostItem: post\n\t\t})\n\t}\n\tsetPostStateOnProps() {\n\t\tconst {post} = this.props\n\t\tthis.setState({\n\t\t\tpostItem: post\n\t\t})\n\t}\n\tcomponentDidUpdate(prevProps, prevState, snapshop) {\n\t\tif (this.props !== prevProps) {\t\t\t\n\t\t\tthis.setPostStateOnProps()\n\t\t}\n\n\t}\n\trender () {\n\t\tconst {postItem} = this.state\n\t\tconst {showContent} = this.state\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{postItem !== null \n\t\t\t\t?<Row className=\"ContentItem\">\n\t\t\t\t\t<Col xs=\"12\" md=\"6\">\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<CardImg top width=\"100%\" src={postItem.image}>\n\t\t\t\t\t\t\t</CardImg>\n\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t<CardTitle onClick={this.titleWasClicked}>\n\t\t\t\t\t\t\t\t\t{postItem.title}\n\t\t\t\t\t\t\t\t</CardTitle>\n\t\t\t\t\t\t\t\t{showContent === true ? <CardText>\n\t\t\t\t\t\t\t\t\t{postItem.description}\n\t\t\t\t\t\t\t\t</CardText> : \"\"}\n\t\t\t\t\t\t\t\t<button className='btn btn-info' onClick={this.toggleContent}>Toggle Content Display</button>\n\t\t\t\t\t\t\t\t<button className='btn btn-success' onClick={this.removeContent}>Remove content</button>\n\t\t\t\t\t\t\t\t<Link className='btn btn-danger' to={'/posts/' + postItem.slug}>{postItem.title}</Link>\n\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t:\"\"}\n\t\t\t</div>\n\n\t\t)\n\t}\n}\nexport default PostDetail\n","import React, {Component} from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport PostDetail from './PostDetail'\n\nclass PostList extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\t'items': [],\n\t\t\tisOldestFirst: true,\n\t\t\tisLoading: true,\n\t\t}\n\t\tthis.handleDataCallback = this.handleDataCallback.bind(this)\n\t\tthis.handlePostRemove = this.handlePostRemove.bind(this)\n\t\tthis.toggleListReverse = this.toggleListReverse.bind(this)\n\t\tthis.toggleSortId = this.toggleSortId.bind(this)\n\t}\n\n\n\tsortById () {\n\t\tconst {items} = this.state\n\t\tlet newPostList = items\n\t\tif (this.state.isOldestFirst) {\n\t\t\tnewPostList = items.sort((a, b) => a.id < b.id)\n\t\t} else {\n\t\t\tnewPostList = items.sort((a, b) => a.id > b.id)\n\t\t}\n\t\tthis.setState({\n\t\t\titems: newPostList,\n\t\t\tisOldestFirst: !this.state.isOldestFirst\n\t\t})\n\t}\n\ttoggleSortId(event) {\n\t\tthis.sortById()\n\t}\n\n\ttoggleListReverse(event) {\n\t\tconst {items} = this.state\n\t\tlet newPostList = items.reverse()\n\t\tthis.setState({\n\t\t\titems: newPostList\n\t\t})\n\t\t\n\t}\n\n\tupdateBackend(currentPostList) {\n\t\tconsole.log(currentPostList)\n\t\tthis.setState({\n\t\t\tpostItem: currentPostList\n\t\t})\n\t}\n\thandleDataCallback(postItem) {\n\t\tlet currentPostList = this.state.items\n\t\tcurrentPostList.push(postItem)\n\t\tthis.updateBackend(currentPostList)\n\t}\n\thandlePostRemove(postItem) {\n\t\tlet currentPostList = this.state.items\n\t\tcurrentPostList.pop(postItem)\n\t\tthis.updateBackend(currentPostList)\n\t}\n\tcomponentDidMount() {\n\t\tthis.getItems();\n\t}\n\tgetItems() {\n\t\t// setTimeout(() => this.setState({ isLoading: false }), 2500); // simulates an async action, and hides the spinner\n\t\tfetch('http://underproof2017.pythonanywhere.com/api/item/')\n\t\t  .then(results => results.json())\n\t\t  .then(results => this.setState({'items':results, isLoading: false}));\n\t}\n\trender() {\n\t\tconst {items, isLoading} = this.state\n\t\tif (isLoading) {\n\t\t\treturn <p>Loading ...</p>;\n\t\t}\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>HI!</h1>\n\t\t\t\t<button className='btn btn-secondary mx-auto d-block' onClick={this.toggleListReverse}>Reverse</button>\n\t\t\t\t<button className='btn btn-info mx-auto d-block' onClick={this.toggleSortId}>SortId</button>\n\t\t\t\t<div>{items.map((post,index) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<PostDetail \n\t\t\t\t\t\t\tpost={post} \n\t\t\t\t\t\t\tkey={`post-list-key ${index}`}\n\t\t\t\t\t\t\tdataCallback={this.handleDataCallback} \n\t\t\t\t\t\t\tdidHandleRemove={this.handlePostRemove} />\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\nexport default PostList\n","import React, { Component } from 'react'\nimport PostList from '../posts/PostList';\nimport { Link } from 'react-router-dom'\n\nclass Landing extends Component {\n  render () {\n    return (\n\n      \t<div className='text-center'>\t\n      \t\t<Link className='some-link' to='/posts/dynamic/'>Dynamic Page</Link>\n        \n        \t<PostList />                \n\t\t</div>\n    )\n  }\n}\nexport default Landing\n","import React from \"react\";\n\nexport const renderField = ({ input, label, type, meta: { touched, error } }) => (\n    <div>\n        <label>{label}</label>\n        <div>\n            <input className=\"form-control\" {...input} type={type}/>\n        </div>\n        {touched && ((error && <div className=\"alert alert-danger p-1\"><small>{error}</small></div>))}\n    </div>\n);\n\nexport const renderTextAreaField = ({ input, label, type, meta: { touched, error } }) => (\n    <div>\n        <label>{label}</label>\n        <div>\n            <textarea className=\"form-control\" {...input} type={type}/>\n        </div>\n        {touched && ((error && <div className=\"alert alert-danger p-1\"><small>{error}</small></div>))}\n    </div>\n);\n\nexport const renderError = (errorMessages) => {\n    if ( errorMessages ) {\n        return (\n            <div className=\"alert alert-danger\">\n                Not valid...\n            </div>\n        )\n    }\n};\n","import React, { Component } from \"react\";\nimport T from \"prop-types\";\n\nimport { reduxForm, Field } from \"redux-form\";\nimport { Link } from \"react-router-dom\";\nimport { required } from \"redux-form-validators\"\n\nimport { renderField, renderError} from \"../../utils/renderUtils\";\nimport { loginUser } from \"../../actions/authActions\";\n\nimport { Button, } from 'reactstrap';\n\nclass Login extends Component {\n\n    static propTypes = {\n        form: T.string.isRequired,\n        onSubmit: T.func.isRequired,\n    }\n\n    render() {\n        const { handleSubmit, error, pristine, submitting } = this.props;\n        console.log('public url: ', process.env.PUBLIC_URL)\n        return (\n            <div className=\"row justify-content-center\">\n\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Please Log In</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"email\" label=\"Email\" component={renderField}\n                               type=\"text\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"password\" label=\"Password\" component={renderField}\n                               type=\"password\"  validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        { renderError(error) }\n                        <div className=\"form-button\">\n                            <Button action=\"submit\" color=\"info\" className=\"rounded-0 form-button__part\" disabled={pristine || submitting}>Login</Button>\n                            <Button className=\"rounded-0 form-button__part\" color=\"info\" outline><Link to=\"/signup\">SignUp</Link></Button>\n                        </div>\n                    </fieldset>\n\n                    <Link to=\"/reset_password\" className=\"text-center\">forgot password?</Link>\n                </form>\n            </div>\n        )\n    }\n}\n// Sync field level validation for password match\nconst validateLoginForm = values => {\n    const errors = {};\n    const { email } = values;\n\n    if (!email) {\n        errors.email = 'This field is required.'\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\n        errors.email = 'Invalid email address'\n    }\n    \n    return errors;\n};\nexport default reduxForm({\n    form: \"login\",\n    onSubmit: loginUser,\n    validate: validateLoginForm\n})(Login);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\n\nclass Logout extends Component {\n\n    static propTypes = {\n        logoutUser: PropTypes.func.isRequired\n    };\n\n    componentWillMount() {\n        this.props.logoutUser();\n    }\n\n    render() {\n        return (\n            <h2>Welcome to Lead Platform. Please Login or Signup...</h2>\n        );\n    }\n}\n\nexport default connect(null, { logoutUser })(Logout);","import React, { Component } from \"react\";\n// import PropTypes from \"prop-types\";\nimport { reduxForm, Field, propTypes } from \"redux-form\";\nimport { required } from \"redux-form-validators\"\nimport { renderField, renderError } from \"../../utils/renderUtils\";\nimport { signupUser } from \"../../actions/authActions\";\nimport { Link } from \"react-router-dom\";\nimport { Button, } from 'reactstrap';\n\nclass Signup extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n\n    render() {\n        const { handleSubmit, error, pristine, submitting } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Sign Up</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"email\" label=\"Email\" component={renderField}\n                               type=\"text\"/>\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"username\" label=\"Username\" component={renderField}\n                               type=\"text\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"password1\" label=\"Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"password2\" label=\"Confirm Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    { renderError(error) }\n\n                    <fieldset className=\"form-group\">\n                        <div className=\"form-button\">\n                            <Button action=\"submit\" color=\"info\" className=\"rounded-0 form-button__part\" disabled={pristine || submitting}>Sign Up</Button>\n                            <Button className=\"rounded-0 form-button__part\" color=\"info\" outline><Link to=\"/login\">Login</Link></Button>\n                        </div>\n                    </fieldset>\n                </form>\n            </div>\n        );\n    }\n}\n\n// Sync field level validation for password match\nconst validateForm = values => {\n    const errors = {};\n    const { email, username, password1, password2 } = values;\n\n    if (!username) {\n        errors.username = 'This field is required.'\n    } else if (username.length > 15) {\n        errors.username = 'Must be 15 characters or less'\n    }\n    if (!email) {\n        errors.email = 'This field is required.'\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\n        errors.email = 'Invalid email address'\n    }\n    \n    if (password1 !== password2) {\n        errors.password2 = \"Password does not match.\"\n    }\n    return errors;\n};\n\nexport default reduxForm({\n    form: \"signup\",\n    validate: validateForm,\n    onSubmit: signupUser\n})(Signup);\n","import React, { Component } from \"react\";\n\nexport default class SignupDone extends Component {\n    render() {\n        return (\n            <h3 className=\"mx-5\">\n                Thanks for your registration, please follow the link sent to your provided email to activate\n                your account.\n            </h3>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { reduxForm, propTypes } from \"redux-form\";\nimport { activateUserAccount } from \"../../actions/authActions\";\nimport { renderError } from \"../../utils/renderUtils\";\n\nclass AccountActivation extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Please click the button below to activate your account</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group text-center\">\n                        {renderError(error)}\n                        <button action=\"submit\" className=\"btn btn-info rounded-0\">Activate</button>\n                    </fieldset>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default reduxForm({\n    form: \"user_account_activation\",\n    onSubmit: activateUserAccount,\n})(AccountActivation);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getUserProfile } from \"../../actions/authActions\";\nimport {withRouter} from \"react-router-dom\";\nimport { Table } from 'reactstrap';\n\nclass UserProfile extends Component {\n\n    static propTypes = {\n        getUserProfile: PropTypes.func.isRequired,\n        user: PropTypes.object\n    };\n\n    componentWillMount() {\n        this.props.getUserProfile();\n    }\n\n    renderUser() {\n        const user = this.props.user;\n        if (user) {\n            return (\n\n              <div className=\"mx-2 mt-2 text-center\">\n                <Table striped>\n                  <thead><tr><th colSpan=\"2\">Your Profile</th></tr></thead>\n                  <tbody>\n                    <tr>\n                      <th>Username:</th>\n                      <td>{user.username}</td>\n                    </tr>\n                    <tr>\n                      <th>First Name:</th>\n                      <td>{user.first_name}</td>\n                    </tr>                    \n                    <tr>\n                      <th>Last Name:</th>\n                      <td>{user.last_name}</td>\n                    </tr>\n                    <tr>\n                      <th>Email:</th>\n                      <td>{user.email}</td>\n                    </tr>\n                    <tr>\n                      <th>Website:</th>\n                      <td>{user.website}</td>\n                    </tr>                    \n                    <tr>\n                      <th>About:</th>\n                      <td>{user.about}</td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </div>\n            );\n        }\n        return null;\n    }\n\n    render() {\n        return (\n            <div>\n                {this.renderUser()}\n                {\" \"}\n                <hr />\n                \n                <fieldset className=\"form-group\">\n                    <div className=\"form-button\">\n                        <Link to=\"/profile_edit\" className=\"btn btn-info rounded-0 form-button__part\">Update Profile</Link>\n                        <Link to=\"/change_password\" className=\"btn btn-outline-info rounded-0 form-button__part\">Change Password</Link>\n                    </div>\n                </fieldset>\n\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        user: state.auth.user\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, { getUserProfile } )(UserProfile));","import React, { Component } from \"react\";\nimport { reduxForm, Field, propTypes } from \"redux-form\";\nimport { connect } from 'react-redux'\n\nimport { renderField, renderTextAreaField, renderError} from \"../../utils/renderUtils\";\nimport { updateUserProfile } from \"../../actions/authActions\";\n\nclass Login extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Edit Profile</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"username\" label=\"Username\" component={renderField}\n                               type=\"text\"\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"first_name\" label=\"First Name\" component={renderField}\n                               type=\"text\"\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"last_name\" label=\"Last Name\" component={renderField}\n                               type=\"text\"\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"website\" label=\"Website\" component={renderField}\n                               type=\"text\"\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"about\" label=\"About Yourself\" component={renderTextAreaField}\n                               type=\"text\"\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        { renderError(error) }\n                        <div className=\"form-button\">\n                            <button action=\"submit\" className=\"btn btn-info rounded-0 form-button__part\">Save</button>\n                            <button type=\"button\" className=\"btn btn-outline-info rounded-0 form-button__part\">Cancel</button>\n                        </div>\n                    </fieldset>\n                </form>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        initialValues: state.auth.user\n    }\n}\n\nexport default connect(mapStateToProps)(reduxForm({\n    form: \"update_user_profile\",\n    onSubmit: updateUserProfile\n})(Login));\n","import React, { Component } from \"react\";\n// import PropTypes from \"prop-types\";\nimport { reduxForm, Field, propTypes } from \"redux-form\";\nimport { required } from \"redux-form-validators\"\nimport { changePassword } from \"../../actions/authActions\";\nimport { renderField, renderError } from \"../../utils/renderUtils\";\nimport { Link } from \"react-router-dom\";\nimport { Button, } from 'reactstrap';\nclass PasswordChange extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error, pristine, submitting } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Change Password</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"old_password\" label=\"Old Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"new_password1\" label=\"New Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"new_password2\" label=\"Confirm New Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        {renderError(error)}\n                        <div className=\"form-button\">\n                            <Button action=\"submit\" color=\"info\" className=\"rounded-0 form-button__part\" disabled={pristine || submitting}>Submit</Button>\n                            <Button className=\"rounded-0 form-button__part\" color=\"info\" outline><Link to=\"/profile\" >Cancel</Link></Button>\n                        </div>\n                    </fieldset>\n                </form>\n            </div>\n        );\n    }\n}\n\n// Sync field level validation for password match\nconst validateForm = values => {\n    const errors = {};\n    const { new_password1, new_password2 } = values;\n    if (new_password1 !== new_password2) {\n        errors.new_password2 = \"Password does not match.\"\n    }\n    return errors;\n};\n\nexport default reduxForm({\n    form: \"change_password\",\n    onSubmit: changePassword,\n    validate: validateForm\n})(PasswordChange);\n","import React, { Component } from \"react\";\nimport { reduxForm, Field, propTypes } from \"redux-form\";\nimport { required } from \"redux-form-validators\"\n\nimport { renderField, renderError} from \"../../utils/renderUtils\";\nimport { resetPassword } from \"../../actions/authActions\";\n\nclass PasswordReset extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Reset Your Password</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"email\" label=\"Please enter your email\" component={renderField}\n                               type=\"text\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n                    <fieldset className=\"form-group text-center\">\n                        {renderError(error)}\n                        <button action=\"submit\" className=\"btn btn-info rounded-0\">Submit</button>\n                    </fieldset>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default reduxForm({\n    form: \"password_reset\",\n    onSubmit: resetPassword\n})(PasswordReset);\n","import React, { Component } from \"react\";\n\nexport default class PasswordResetDone extends Component {\n    render() {\n        return (\n            <h3 className=\"mx-5\">An password reset email has been sent to your email. Please follow the link to reset your password.</h3>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { reduxForm, Field, propTypes } from \"redux-form\";\nimport { required } from \"redux-form-validators\"\nimport { confirmPasswordChange } from \"../../actions/authActions\";\nimport { renderField, renderError } from \"../../utils/renderUtils\";\n\nclass PasswordResetConfirm extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Create New Password</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"new_password1\" label=\"New Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"new_password2\" label=\"Confirm New Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        {renderError(error)}\n                        <button action=\"submit\" className=\"btn btn-primary\">Submit</button>\n                    </fieldset>\n                </form>\n            </div>\n        );\n    }\n}\n\n// Sync field level validation for password match\nconst validateForm = values => {\n    const errors = {};\n    const { new_password1, new_password2 } = values;\n    if (new_password1 !== new_password2) {\n        errors.new_password2 = \"Password does not match.\"\n    }\n    return errors;\n};\n\nexport default reduxForm({\n    form: \"password_reset_confirm\",\n    onSubmit: confirmPasswordChange,\n    validate: validateForm\n})(PasswordResetConfirm);\n","import React from \"react\";\n\nconst NoMatch = () => (\n    <h2 className=\"mt-2\">{\"Sorry, the page you are looking for doesn't exist.\"}</h2>\n);\n\nexport default NoMatch;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\n\nclass PostInline extends Component {\n  // {post !== undefined ? <div className={elClass}>\n  //    <h1><Link maintainScrollPosition={false} to={{\n  //        pathname:`/react/posts/${post.slug}`,\n  //        state: {fromDashboard: false}\n  //    }}>{post.title}</Link></h1>\n\n  //   <p className={showContent}>{post.content}</p>\n  //   </div>\n  //   : \"\"}\n  render() {\n      const {post} = this.props\n      const {elClass} = this.props\n      const showContent = elClass === 'card' ? 'd-block' : 'd-none'\n    return (\n      <div>\n          {post !== undefined ? \n            <div className={elClass}>\n            <Link \n              to={{pathname:`/react/posts/${post.slug}`,\n              state: {fromDashboard: false}\n            }}>\n                <h1>{post.title}</h1>\n            </Link>\n                  <p className={showContent}>{post.content}</p>\n            </div>\n          : ''}\n      </div>\n    );\n  }\n}\n\nexport default PostInline;\n","import React, { Component } from 'react';\nimport 'whatwg-fetch'\nimport cookie from 'react-cookies'\nimport { Link } from 'react-router-dom'\nimport PostInline from './PostInline'\n// import PostCreate from './PostCreate'\n// import PostForm from './PostForm'\nimport { connect } from 'react-redux'\n\nimport store from \"../store\";\nimport { getUserToken } from \"../utils/authUtils\";\n\nclass Posts extends Component {\n\n  constructor(props){\n      super(props)\n      this.togglePostListClass = this.togglePostListClass.bind(this)\n      this.handleNewPost = this.handleNewPost.bind(this)\n      this.loadMorePosts =this.loadMorePosts.bind(this)\n      this.state = {\n          posts: [],\n          postsListClass: \"card\",\n          next: null,\n          previous: null,\n          author: false,\n          count: 0,\n          authenticated: false, //adding redux-props\n      }\n  }\n\n  loadMorePosts(){\n      const {next} = this.state \n      if (next !== null || next !== undefined) {\n           this.props.loadPosts(next)\n      }\n     \n  }\n    \n  loadPosts(nextEndpoint){\n      let endpoint = '/api/posts/' \n      if (nextEndpoint !== undefined) {\n          endpoint = nextEndpoint\n      }\n      let thisComp = this\n      let lookupOptions = {\n          method: \"GET\",\n          headers: {\n              'Content-Type': 'application/json'\n          }\n      }\n      const csrfToken = cookie.load('csrftoken')\n      const token = getUserToken(store.getState());\n      console.log('token', token);\n      console.log('csrftoken', csrfToken);\n\n      if (csrfToken !== undefined) {\n          lookupOptions['credentials'] = 'include'\n          lookupOptions['headers']['X-CSRFToken'] = csrfToken\n       } \n\n      fetch(endpoint, lookupOptions)\n      .then(function(response){\n          return response.json()\n      }).then(function(responseData){\n          console.log(responseData)\n          // let currentPosts = thisComp.state.posts\n          // let newPosts = currentPosts.concat(responseData.results)\n          // console.log(currentPosts)\n           thisComp.setState({\n                  posts: thisComp.state.posts.concat(responseData.results),\n                  next: responseData.next,\n                  previous: responseData.previous,\n                  author: responseData.author,\n                  count: responseData.count,\n                  authenticated: thisComp.props.state.auth.authenticated //adding redux-props\n              })\n      }).catch(function(error){\n          console.log(\"error\", error)\n      })\n  }\n\n  handleNewPost(postItemData){\n      // console.log(postItemData)\n      let currentPosts = this.state.posts\n      currentPosts.unshift(postItemData) // unshift\n      this.setState({\n          posts: currentPosts\n      })\n  }\n\n  \n\n  togglePostListClass(event){\n      event.preventDefault()\n      let currentListClass = this.state.postsListClass\n      if (currentListClass === \"\"){\n          this.setState({\n              postsListClass: \"card\",\n          })\n      } else {\n          this.setState({\n              postsListClass: \"\",\n          })\n      }\n      \n  }\n\n  componentDidMount(){\n      this.setState({\n          posts: [],\n          postsListClass: \"card\",\n          next: null,\n          previous: null,\n          author: false,\n          count: 0,\n          authenticated: false,\n      })\n      this.loadPosts()\n  }\n  // {author === true ? <Link className='mr-2' maintainScrollPosition={false} to={{\n  //           pathname: `/posts/create/`,\n  //           state: { fromDashboard: false }\n  //         }}>Create Post</Link> : \"\"}\n  \n  // <button onClick={this.togglePostListClass}>Toggle Class</button>\n  // {posts.length > 0 ? posts.map((postItem, index)=>{\n  //     return (\n  //             <PostInline post={postItem} elClass={postsListClass} />\n  //     )\n  // }) : <p>No Posts Found</p>}\n  // {next !== null ? <button onClick={this.loadMorePosts}>Load more</button> : ''}\n  render() {\n      const {posts} = this.state\n      const {postsListClass} = this.state\n      // const {author} = this.state\n      const {next} = this.state \n      // const {auth} = this.props.state.auth.authenticated\n      const {authenticated} = this.state //adding redux-props\n      // const csrfToken = cookie.load('csrftoken')\n    return (\n      <div>\n        {authenticated === true ?\n          <Link className='mr-2' to={{\n            pathname: `/react/posts/create/`,\n            state: { fromDashboard: false }\n          }}>Create Post</Link>\n        : ''}\n          <button onClick={this.togglePostListClass}>Toggle Class</button>\n          {posts.length > 0 ? posts.map((postItem, index)=>{\n            return (\n              <PostInline post={postItem} key={`post-list-key ${index}`} elClass={postsListClass} />\n            )\n          }) : <p>No Posts Found</p>}\n        {next !== null ? <button onClick={this.loadMorePosts}>Load more</button> : ''}\n\n      </div>\n    );\n  }\n}\n\n// export default Posts;\n\n\nconst mapStateToProps = (state) => {\n  return {\n    state: state\n  }\n}\n\nexport default connect(mapStateToProps)(Posts);\n// {(csrfToken !== 'undefined' && csrfToken !== null) ?\n// <div className='my-5'>\n//   <PostForm newPostItemCreated={this.handleNewPost} />\n// </div>\n// : ''}","import React, { Component } from 'react'\n\nimport { Link } from 'react-router-dom'\nimport Posts from '../reactify/Posts';\n\nclass ReacTifyComp extends Component {\n  componentDidMount () {\n\n  }\n\n  render () {\n    return (\n      <div>\n        <Link className='some-link' to='/about/'>Static Page</Link>\n        <Posts />\n      </div>\n      \n    )\n  }\n}\n\nexport default ReacTifyComp","import React, {Component} from 'react'\nimport 'whatwg-fetch'\nimport cookie from 'react-cookies'\nimport moment from 'moment'\n// import { Redirect } from 'react-router-dom'\n\nimport store from \"../store\";\nimport { getUserToken } from \"../utils/authUtils\";\n\n\nclass PostForm extends Component {\n    constructor(props){\n        super(props)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleInputChange = this.handleInputChange.bind(this)\n        this.handleDraftChange = this.handleDraftChange.bind(this)\n        this.clearForm = this.clearForm.bind(this)\n        this.postTitleRef = React.createRef()\n        this.postContentRef = React.createRef()\n        this.deletePost= this.deletePost.bind(this)\n        this.state = {\n            draft: false,\n            title: null,\n            slug: null,\n            content: null,\n            publish: moment(new Date()).format('YYYY-MM-DD'),\n            errors: {}\n        }\n    }\n\n    updatePost(data){\n      const {post} = this.props\n      const endpoint = `/api/posts/${post.slug}/` \n      const csrfToken = cookie.load('csrftoken')\n      const token = getUserToken(store.getState());\n      console.log('token', token);\n      console.log('csrftoken', csrfToken);\n      let thisComp = this\n      if (csrfToken !== undefined) {\n          let lookupOptions = {\n              method: \"PUT\",\n              headers: {\n                  'Content-Type': 'application/json',\n                  'X-CSRFToken': csrfToken,\n                  'Authorization': 'Token ' + token\n              },\n              body: JSON.stringify(data),\n              credentials: 'include'\n          }\n\n          fetch(endpoint, lookupOptions)\n          .then(function(response){\n              return response.json()\n          }).then(function(responseData){\n              console.log(responseData)\n              if (thisComp.props.newPostItemUpdated){\n                  thisComp.props.newPostItemUpdated(responseData)\n              }\n              thisComp.clearForm()\n          }).catch(function(error){\n              console.log(\"error\", error)\n              alert(\"An error occured, please try again later.\")\n          })\n      } \n      \n  \t} \n    createPost(data){\n      const endpoint = '/api/posts/' \n      const csrfToken = cookie.load('csrftoken')\n      let thisComp = this\n      console.log('csrf', csrfToken)\n      if (csrfToken !== undefined) {\n          let lookupOptions = {\n              method: \"POST\",\n              headers: {\n                  'Content-Type': 'application/json',\n                  'X-CSRFToken': csrfToken\n              },\n              body: JSON.stringify(data),\n              credentials: 'include'\n          }\n\n          fetch(endpoint, lookupOptions)\n          .then(function(response){              \n              return response.json()\n          }).then(function(responseData){\n              console.log(responseData)\n              if (thisComp.props.newPostItemCreated){\n                  thisComp.props.newPostItemCreated(responseData)\n              }\n              thisComp.clearForm()\n              thisComp.defaultState()\n          }).catch(function(error){\n              console.log(\"error\", error)\n              alert(\"An error occured, please try again later.\")\n          })\n      } \n      \n    }\n    deletePost(event) {\n      event.preventDefault();\n      const {post} = this.props\n      const endpoint = `/api/posts/${post.slug}/` \n      const csrfToken = cookie.load('csrftoken')\n      console.log(post)\n      return fetch(endpoint, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': csrfToken\n            },\n            credentials: 'include'\n        }).then(function(response){\n          return response\n        }).then(data => {\n          if(data.status === 204){\n            // this.UpdateRoute();\n            console.log('Successfully Delete');\n          }   \n        }).catch(function(error){\n            console.log(\"error\", error)\n            alert(\"An error occured, please try again later.\")\n        })\n    };\n\n  \tclearForm(event){\n      if (event){\n        event.preventDefault()\n      }\n      this.postCreateForm.reset()\n      \n    } \n    clearFormRefs(){\n      this.postTitleRef.current=''\n      this.postContentRef.current=''\n    }  \t\n\thandleSubmit(event){      \n\t    event.preventDefault()\n\t    let data = this.state\n      const {post} = this.props\n      if (post !== undefined) {\n        this.updatePost(data)\n      } else {\n        this.createPost(data)\n      }\n\t    \n      console.log({post})\n\t}\n\thandleInputChange(event){\n        event.preventDefault()\n        let key = event.target.name\n        let value = event.target.value\n\n        if (key === 'title'){\n            if (value.length > 120){\n                alert(\"This title is too long\")\n            }\n        }\n        this.setState({\n            [key]: value\n\n        })\n    }\n  //fix doubleclick checkbox\n  handleDraftChange(event){\n    this.setState({\n      draft: !this.state.draft\n    })\n  }\n  defaultState(){\n    this.setState({\n        draft: false,\n        title: null,\n        content: null,\n        slug: null,\n        publish: moment(new Date()).format('YYYY-MM-DD'),\n    })   \n  }\n  componentDidMount(){\n    const {post} = this.props\n    // this.loginCheck()\n    if (post !== undefined) {\n      this.setState({\n          draft: post.draft,\n          title: post.title,\n          content: post.content,\n          slug: post.slug,\n          publish: moment(post.publish).format('YYYY-MM-DD'),\n      })\n    } else {\n      this.defaultState()\n    }\n    // this.postTitleRef.current.focus()\n  }\n\trender(){\n\t\tconst {publish} = this.state\n    const {title} = this.state\n    const {content} = this.state\n    const {slug} = this.state\n    const cancelClass = this.props.post !== undefined ? \"d-none\" : \"\"\n    const deleteClass = this.props.post === undefined ? \"d-none\" : \"\"\n\t\treturn (\n\t\t  <div>\n\t\t    <form onSubmit={this.handleSubmit} ref={(el)=> this.postCreateForm = el}>\n\t\t        <div className=\"form-group\">\n\t\t\t\t\t<label htmlFor='blogTitle'>Title</label>\n\t\t\t\t\t<input \n\t\t\t\t\t  type='text' \n\t\t\t\t\t  id='blogTitle' \n\t\t\t\t\t  name='title' \n\t\t\t\t\t  className='form-control' \n\t\t\t\t\t  placeholder='Blog post title'\n            value={title || ''}            \n\t\t\t\t\t  ref={this.postTitleRef} \n\t\t\t\t\t  onChange={this.handleInputChange} \n\t\t\t\t\t  required='required' />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label htmlFor='content'>Content</label>\n\t\t\t\t\t<textarea \n\t\t\t\t\t  id='content' \n\t\t\t\t\t  name='content' \n\t\t\t\t\t  className='form-control' \n\t\t\t\t\t  placeholder='Post content'\n            value={content || ''}\n\t\t\t\t\t  ref={this.postContentRef} \n\t\t\t\t\t  onChange={this.handleInputChange} \n\t\t\t\t\t  required='required' />\n\t\t\t\t</div>\n\t\t\t\t<div className='form-group'>\n                    <label htmlFor='slug'>Slug</label>\n                    <input \n                      type='text' \n                      id='slug' \n                      name='slug' \n                      className='form-control'\n                      placeholder='Type Slug'\n                      value={slug || ''}  \n                      onChange={this.handleInputChange} \n                      required='required'/>\n                </div>\n\t\t        <div className=\"form-group\">\n\t\t\t\t\t<label htmlFor='draft'>\n\t\t\t\t\t\t<input \n\t\t\t\t\t\t  type='checkbox' \n\t\t\t\t\t\t  id='draft' \n\t\t\t\t\t\t  name='draft' \n\t\t\t\t\t\t  className='mr-2' \n\t\t\t\t\t\t  onChange={this.handleDraftChange} \n\t\t\t\t\t\t  checked={this.state.draft}\n\t\t\t\t\t\t  />\n\t\t\t\t\tDraft</label>\n                <button onClick={(event)=>{event.preventDefault();this.handleDraftChange()}}>Toggle Draft</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label htmlFor='publish'>Publish Date</label>\n\t\t\t\t\t<input \n\t\t\t\t\t  type='date' \n\t\t\t\t\t  id='publish' \n\t\t\t\t\t  name='publish' \n\t\t\t\t\t  className='form-control' \n\t\t\t\t\t  onChange={this.handleInputChange} \n\t\t\t\t\t  required='required'\n\t\t\t\t\t  value={publish}\n\t\t\t\t\t   />\n\t\t\t\t</div>\n\t\t\t\t<button type='submit' className='btn btn-primary '>Save</button>\n\t\t\t\t<button className={`btn btn-secondary ${cancelClass}`} onClick={this.clearForm}>Clear</button>\n        <button className={`btn btn-danger' ${deleteClass}`} onClick={this.deletePost}>Delete</button>\n\n\t\t    </form>\n\t\t  </div>\n\t\t)\n\t}\n\n}\n\nexport default PostForm\n","import React, {Component} from 'react'\nimport 'whatwg-fetch'\nimport cookie from 'react-cookies'\nimport { Link } from 'react-router-dom'\n\nimport PostForm from './PostForm'\n\nclass PostDetail extends Component {\n    constructor(props){\n        super(props)\n        this.handlePostItemUpdated= this.handlePostItemUpdated.bind(this)        \n        this.state = {\n             slug: null,\n             post: null,\n             doneLoading: false,\n        }\n    }\n\n    handlePostItemUpdated(postItemData){\n        this.setState({\n            post: postItemData\n        })\n    }\n    loadPost(slug){\n      const endpoint = `/api/posts/${slug}/` \n      let thisComp = this\n      let lookupOptions = {\n          method: \"GET\",\n          headers: {\n              'Content-Type': 'application/json'\n          }\n      }\n\n      const csrfToken = cookie.load('csrftoken')\n      if (csrfToken !== undefined) {\n          lookupOptions['credentials'] = 'include'\n          lookupOptions['headers']['X-CSRFToken'] = csrfToken\n       }\n\n      fetch(endpoint, lookupOptions)\n      .then(function(response){\n          if (response.status === 404){\n              console.log('Page not found')\n          }\n          return response.json()\n      }).then(function(responseData){\n          if (responseData.detail){\n              thisComp.setState({\n                  doneLoading: true,\n                  post: null\n              })\n          } else {\n           thisComp.setState({\n                  doneLoading: true,\n                  post: responseData\n              })\n          }\n      }).catch(function(error){\n          console.log(\"error\", error)\n      })\n  }\n\n    componentDidMount(){\n        this.setState({\n                slug: null,\n                post: null\n            })\n        if (this.props.match){\n            const {slug} = this.props.match.params\n            this.setState({\n                slug: slug,\n                doneLoading: false\n            })\n            this.loadPost(slug)\n        }\n    }\n    // const {doneLoading} = this.state\n    //     const {post} = this.state\n    //     return(\n    //         <p>{(doneLoading === true) ? <div>\n    //             {post === null ? \"Not Found\": \n    //             <div>\n    //             <h1>{post.title}</h1>\n    //             {post.slug}\n\n    //             <p className='lead'>\n    //             <Link maintainScrollPosition={false} to={{\n    //                 pathname: `/react/posts`,\n    //                 state: { fromDashboard: false }\n    //               }}>Posts</Link>\n\n    //               {post.owner === true ? <Link maintainScrollPosition={false} to={{\n    //                 pathname: `/react/posts/create/`,\n    //                 state: { fromDashboard: false }\n    //               }}>Create Post</Link> : \"\" }\n    //            </p>\n\n    //               {post.owner === true ? <PostForm post={post} postItemUpdated={this.handlePostItemUpdated} /> : \"\"}\n    //             </div>\n    //            }\n    //        </div> : \"Loading...\"}</p>\n    //     )\n    // }\n    render(){\n        const {doneLoading} = this.state\n        // const {slug} = this.state\n        const {post} = this.state\n        return(\n          <div>\n            {(doneLoading === true) ? <div>\n              {(post === null) ? \"Not Found\": \n                <div> \n                  <p className=\"lead\"><Link \n                      to={{pathname:`/react/posts/`,\n                      state: {fromDashboard: false}\n                    }}>\n                      BACK\n                    </Link>\n                    {post.owner === true ? <Link to={{\n                      pathname: `/react/posts/create/`,\n                      state: { fromDashboard: false }\n                    }}>Create Post</Link> : \"\"}\n                  </p>                 \n                  <h1>{post.slug}</h1>\n                  <h1>{post.title}</h1>\n                  {post.owner === true ? <PostForm post={post} postItemUpdated={this.handlePostItemUpdated} /> : \"\"}\n                </div>\n              }\n\n            </div> : \"Loading...\"}\n          </div>               \n        )\n    }\n}\n\nexport default PostDetail","import React, {Component} from 'react'\nimport { Link } from 'react-router-dom'\nimport PostForm from './PostForm'\n\nclass PostCreate extends Component {\n\n  render(){\n    return (\n      <div>\n      \t<Link \n          to={{pathname:`/react/posts/`,\n          state: {fromDashboard: false}\n        }}>\n          BACK\n        </Link>\n      \t<h1>Create Post</h1>\n        \t<PostForm />\n      </div>\n    )\n  }\n\n}\n\nexport default PostCreate\n// // left for reference\n\n\n\n\n// // import React, {Component} from 'react'\n// // import 'whatwg-fetch'\n// // import cookie from 'react-cookies'\n// // import moment from 'moment'\n\n// // class PostCreate extends Component {\n// //     constructor(props){\n// //         super(props)\n// //         this.handleSubmit = this.handleSubmit.bind(this)\n// //         this.handleInputChange = this.handleInputChange.bind(this)\n// //         this.handleDraftChange = this.handleDraftChange.bind(this)\n// //         this.clearForm = this.clearForm.bind(this)\n// //         this.postTitleRef = React.createRef()\n// //         this.postContentRef = React.createRef()\n// //         this.state = {\n// //             draft: false,\n// //             title: null,\n// //             content: null,\n// //             publish: null,\n// //             errors: {}\n// //         }\n// //     }\n// //     createPost(data){\n// //       const endpoint = '/api/posts/' \n// //       const csrfToken = cookie.load('csrftoken')\n// //       let thisComp = this\n// //       if (csrfToken !== undefined) {\n// //           let lookupOptions = {\n// //               method: \"POST\",\n// //               headers: {\n// //                   'Content-Type': 'application/json',\n// //                   'X-CSRFToken': csrfToken\n// //               },\n// //               body: JSON.stringify(data),\n// //               credentials: 'include'\n// //           }\n\n// //           fetch(endpoint, lookupOptions)\n// //           .then(function(response){\n// //               return response.json()\n// //           }).then(function(responseData){\n// //               console.log(responseData)\n// //               if (thisComp.props.newPostItemCreated){\n// //                   thisComp.props.newPostItemCreated(responseData)\n// //               }\n// //               thisComp.clearForm()\n// //           }).catch(function(error){\n// //               console.log(\"error\", error)\n// //               alert(\"An error occured, please try again later.\")\n// //           })\n// //       } \n      \n// //   }\n\n// //     handleSubmit(event){\n// //         event.preventDefault()\n// //         let data = this.state\n// //         this.createPost(data)\n// //     }\n\n// //     handleInputChange(event){\n// //         event.preventDefault()\n// //         let key = event.target.name\n// //         let value = event.target.value\n// //         if (key === 'title'){\n// //             if (value.length > 120){\n// //                 alert(\"This title is too long\")\n// //             }\n// //         }\n// //         this.setState({\n// //             [key]: value\n// //         })\n// //     }\n\n// //     handleDraftChange(event){\n// //       this.setState({\n// //         draft: !this.state.draft\n// //       })\n// //     }\n\n// //     clearForm(event){\n// //       if (event){\n// //         event.preventDefault()\n// //       }\n// //       this.postCreateForm.reset()\n// //     }\n\n\n// //     clearFormRefs(){\n// //       this.postTitleRef.current=''\n// //       this.postContentRef.current=''\n// //     }\n\n\n// //     componentDidMount(){\n// //         this.setState({\n// //             draft: false,\n// //             title: null,\n// //             content: null,\n// //             publish: moment(new Date()).format('YYYY-MM-DD'),\n// //         })\n// //         this.postTitleRef.current.focus()\n// //     }\n\n// //     render(){\n// //         const {publish} = this.state\n// //         let thisComp = this\n// //         return (\n// //             <form onSubmit={this.handleSubmit} ref={(el) => this.postCreateForm = el}>\n// //                 <div className='form-group'>\n// //                     <label for='title'>Post title</label>\n// //                     <input \n// //                       type='text' \n// //                       id='title' \n// //                       name='title' \n// //                       className='form-control'\n// //                       placeholder='Blog post title' \n// //                       ref = {this.postTitleRef}\n// //                       onChange={this.handleInputChange} \n// //                       required='required'/>\n// //                 </div>\n// //                  <div className='form-group'>\n// //                     <label for='content'>Content</label>\n// //                     <textarea id='content' ref = {this.postContentRef} name='content' className='form-control' placeholder='Post content' onChange={this.handleInputChange} required='required'/>\n                   \n// //                 </div>\n// //                 <div className='form-group'>\n// //                     <label for='draft'>\n// //                     <input type='checkbox' checked={this.state.draft} id='draft' name='draft' className='mr-2' onChange={this.handleDraftChange}/>\n// //                      Draft </label>\n// //                      <button onClick={(event)=>{event.preventDefault();this.handleDraftChange()}}>Toggle Draft</button>\n// //                 </div>\n// //                 <div className='form-group'>\n// //                     <label for='publish'>Publish Date</label>\n// //                     <input \n// //                     type='date' \n// //                     id='publish' \n// //                     name='publish' \n// //                     className='form-control' \n// //                     onChange={this.handleInputChange}\n// //                      value={publish}\n// //                      required='required'/>\n// //                 </div>\n// //                 <button type='submit' className='btn btn-primary'>Save</button>\n// //                 <button className='btn btn-secondary' onClick={this.clearForm}>Cancel</button>\n// //             </form>\n// //         )\n// //     }\n\n// // }\n\n// // export default PostCreate","import { toast } from 'react-toastify';\n\nexport const fetchNotes = (nextEndpoint) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        let endpoint = '/api/investors/' \n\n        if (nextEndpoint !== undefined && nextEndpoint !== null) {\n          endpoint = nextEndpoint\n        }\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        let {notes} = getState();\n        return fetch(endpoint, {headers, })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    toast.error(\"Error! Can't load investors...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            // getState().notes[0].concat(res.data)}\n            .then(res => {\n                if (res.status === 200) {               \n                    return dispatch({type: 'FETCH_NOTES', notes: notes.push(res.data), loading: false});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authetication error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\nexport const searchNotes = (searchtext) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        let endpoint = '/api/investors/' \n        if (searchtext !== undefined && searchtext !== null) {\n          endpoint = `/api/investors/?search=${searchtext}`\n        }\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        return fetch(endpoint, {headers, method: \"GET\", })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        // console.log(res)\n                        return {status: res.status, data};\n                    })\n                } else {\n                    toast.error(\"Error! Can't load investors...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'SEARCH_NOTES', notes: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authetication error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\nexport const orderNotes = (order) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        let endpoint = '/api/investors/' \n        if (order !== undefined && order !== null) {\n          endpoint = `/api/investors/?ordering=${order}`\n        }\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        return fetch(endpoint, {headers, method: \"GET\", })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        // console.log(res)\n                        return {status: res.status, data};\n                    })\n                } else {\n                    toast.error(\"Error! Can't load investors...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'ORDER_NOTES', notes: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authetication error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\nexport const addNote = (text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n\n        let body = JSON.stringify({text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence });\n        return fetch(\"/api/investors/\", {headers, method: \"POST\", body})\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    toast.error(\"Error! Can't load investors...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 201) {\n                    toast.info(\"Investor \"+res.data.text+\" added\")\n                    return dispatch({type: 'ADD_NOTE', note: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authetication error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\n\nexport const updateNote = (index, id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence) => {\n    return (dispatch, getState) => {\n\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n\n        let body = JSON.stringify({text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence });\n        // console.log(\"id\", id, \"index\", index)\n        let noteId = getState().notes[index].noteitems[id].id;\n\n        return fetch(`/api/investors/${noteId}/`, {headers, method: \"PUT\", body})\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    toast.error(\"Error! Can't load investors...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 200) {\n                    toast.info(\"Investor \"+res.data.text+\" edited\")\n                    return dispatch({type: 'UPDATE_NOTE', note: res.data, index, id});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authetication error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\n\nexport const deleteNote = (id, index) => {\n    return (dispatch, getState) => {\n\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        let noteId = getState().notes[id].noteitems[index].id;\n\n        return fetch(`/api/investors/${noteId}/`, {headers, method: \"DELETE\"})\n            .then(res => {\n                if (res.status === 204) {\n                    toast.info(\"Investor deleted\")\n                    return {status: res.status, data: {}};\n                } else if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 204) {\n                    // toast.info(\"Investor deleted\")\n                    return dispatch({type: 'DELETE_NOTE', id, index});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authetication error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n            .then(res => {dispatch(fetchNotes())})\n    }\n}\n","import React from \"react\";\nimport './styles.scss'\n\nexport const LoadScreen = () => (\n  <div className=\"loadscreen\">\n    <div className=\"load-9\">\n      <div className=\"spinner\">\n        <div className=\"bubble-1\"></div>\n        <div className=\"bubble-2\"></div>\n      </div>\n    </div>\n  </div>\n)","import React, { Component } from 'react'\nimport {   \n  FormGroup, Button, Modal, \n  ModalHeader, ModalBody, \n  ModalFooter, } from 'reactstrap';\nimport './styles.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\n\nexport class ModalDelete extends Component {\n  render() {\n    const { modaldelete, text, index, id, toggle} = this.props;\n\n    return (\n      <div>\n        <Modal isOpen={modaldelete} toggle={toggle}>\n            <ModalHeader color=\"info\">Are you sure?</ModalHeader>           \n            <ModalBody>Delete <b>{text}</b> Investor?</ModalBody>\n            <ModalFooter> \n              <FormGroup row>                   \n              <Button className=\"rounded-0\" color=\"info\" onClick={() => this.props.onSelectForDelete(index, id)}><FontAwesomeIcon icon={faTrash} color=\"white\"/></Button>              \n              <Button className=\"rounded-0\" onClick={toggle}>Cancel</Button>\n              </FormGroup>\n            </ModalFooter>\n        </Modal> \n      </div>\n    )\n    \n  }\n}\n","import React, { Component } from 'react'\nimport { FormText,  \n  FormGroup, Label, Input,  } from 'reactstrap';\n\n// REQUIRED FIELDS\nexport class InputName extends Component {\n  render() {\n    const { text, errors } = this.props;\n    return (\n      <div>\n        <FormGroup>\n          <Label>Name <span className=\"text-danger\">*</span></Label>\n          <Input\n            name=\"text\"\n            value={text || ''}\n            placeholder=\"Enter name...\"\n            onChange={this.props.onInputChange}\n            required />\n            {errors.text ? <FormText color=\"danger\">{errors.text}</FormText>: \"\"}\n        </FormGroup>\n      </div>\n    )\n    \n  }\n}\nexport class InputPhone extends Component {\n  render() {\n    const { phone, errors } = this.props;\n    return (\n      <div>\n        <FormGroup>\n          <Label>Phone <span className=\"text-danger\">*</span></Label>\n          <Input\n            name=\"phone\"\n            value={phone || ''}\n            placeholder=\"Enter phone...\"\n            onChange={this.props.onInputChange}\n            required />\n            {errors.phone ? <FormText color=\"danger\">{errors.phone}</FormText>: \"\"}\n        </FormGroup>\n      </div>\n    )\n    \n  }\n}\nexport class InputEmail extends Component {\n  render() {\n    const { email, errors } = this.props;\n    return (\n      <div>\n        <FormGroup>\n          <Label>Email <span className=\"text-danger\">*</span></Label>\n          <Input\n            name=\"email\"\n            value={email || ''}\n            placeholder=\"Enter email...\"\n            onChange={this.props.onInputChange}\n            required />\n            {errors.email ? <FormText color=\"danger\">{errors.email}</FormText>: \"\"}\n        </FormGroup>\n      </div>\n    )    \n  }\n}\nexport class InputLinkedin extends Component {\n  render() {\n    const { linkedin_profile, errors } = this.props;\n    return (\n      <div>\n        <FormGroup>\n          <Label>Linkedin <span className=\"text-danger\">*</span></Label>\n          <Input\n            name=\"linkedin_profile\"\n            value={linkedin_profile || ''}\n            placeholder=\"Enter linkedin url...\"\n            onChange={this.props.onInputChange}\n            required />\n            {errors.linkedin_profile ? <FormText color=\"danger\">{errors.linkedin_profile}</FormText>: \"\"}\n        </FormGroup>\n      </div>\n    )    \n  }\n}\n// NOT REQUIRED FIELDS\nexport class InputWebsite extends Component {\n  render() {\n    const { website, errors } = this.props;\n    return (\n      <div>\n        <FormGroup>\n          <Label>Website</Label>\n          <Input\n            name=\"website\"\n            value={website || ''}\n            placeholder=\"Enter website url...\"\n            onChange={this.props.onInputChange}\n            />\n            {errors.website ? <FormText color=\"danger\">{errors.website}</FormText>: \"\"}\n        </FormGroup>\n      </div>\n    )    \n  }\n}\nexport class InputCorrespondence extends Component {\n  render() {\n    const { correspondence, errors } = this.props;\n    return (\n      <div>\n        <FormGroup>\n          <Label>Correspondence</Label>\n          <Input\n            name=\"correspondence\"\n            value={correspondence || ''}\n            placeholder=\"Enter correspondence...\"\n            onChange={this.props.onInputChange}\n            type='textarea'\n            />\n            {errors.correspondence ? <FormText color=\"danger\">{errors.correspondence}</FormText>: \"\"}\n        </FormGroup>\n      </div>\n    )    \n  }\n}","import React, { Component } from 'react'\nimport { Button, \n  FormGroup, Label, } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMale, faUsers, \n       } from '@fortawesome/free-solid-svg-icons'\n\n// Checkbox is corporate\nexport class CheckboxIsCorp extends Component {\n  render() {\n    const { is_corporate } = this.props;\n    return (\n      <div>\n        <FormGroup>\n            <Label>Individual <FontAwesomeIcon icon={faMale} color={!is_corporate ? \"black\": \"grey\"}/> / Corporate <FontAwesomeIcon icon={faUsers} color={is_corporate ? \"black\": \"grey\"}/></Label>\n            <Button className=\"btn btn-block\" onClick={this.props.handleCheckboxIsCorpBtnClick} active={is_corporate}>{is_corporate ? 'Change to Individual' : 'Change to Corporate'}</Button>\n        </FormGroup>\n      </div>\n    )    \n  }\n}","import React, { Component } from 'react'\nimport { Button, \n  FormGroup, Label, } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHandHoldingUsd, faCheckCircle, \n       } from '@fortawesome/free-solid-svg-icons'\n\n// Checkbox is corporate\nexport class CheckboxIsPayed extends Component {\n  render() {\n    const { status, is_staff, is_payed } = this.props;\n    return (\n      <div>\n        {status !== \"Candidate\" && is_staff ?\n          <FormGroup>\n              <Label>New <FontAwesomeIcon icon={faHandHoldingUsd} color={!is_payed ? \"black\": \"grey\"}/> / Payed <FontAwesomeIcon icon={faCheckCircle} color={is_payed ? \"black\": \"grey\"}/></Label>\n              <Button className=\"btn btn-block\" onClick={this.props.handleCheckboxIsPayBtnClick} active={is_payed}>{is_payed ? 'Change to New' : 'Change to Payed'}</Button>\n          </FormGroup>\n          : null} \n      </div>\n    )    \n  }\n}","import React, { Component } from 'react'\nimport { \n  FormGroup, Label, Dropdown, \n  DropdownToggle, \n  DropdownMenu, DropdownItem, } from 'reactstrap';\n\n// Checkbox is corporate\nexport class CustomDropdown extends Component {\n  render() {\n    const { status, dropdownOpen } = this.props;\n    return (\n      <div>\n        <FormGroup>\n          <Label>Status</Label>\n          <Dropdown className=\"form-group\" isOpen={dropdownOpen} toggle={this.props.onToggle}>\n            <DropdownToggle className=\"btn-block\" caret>\n              {status || ''}\n            </DropdownToggle>\n            <DropdownMenu className=\"btn-block\">\n              <DropdownItem onClick={this.props.onChangeValue}>Candidate</DropdownItem>\n              <DropdownItem onClick={this.props.onChangeValue}>Processed</DropdownItem>\n              <DropdownItem onClick={this.props.onChangeValue}>Converted</DropdownItem>\n              <DropdownItem onClick={this.props.onChangeValue}>Rejected</DropdownItem>\n            </DropdownMenu>\n          </Dropdown>\n        </FormGroup>\n      </div>\n    )    \n  }\n}","import React, { Component } from 'react'\n\nimport * as Inputs from '../../Atoms/AddInputs/AddInputs'\nimport { CheckboxIsCorp } from '../../Atoms/Checkboxes/CheckboxIsCorp'\nimport { CheckboxIsPayed } from '../../Atoms/Checkboxes/CheckboxIsPayed'\nimport { CustomDropdown } from '../../Atoms/Dropdown/Dropdown'\n// import { DatePickLastCall } from '../../Atoms/DatePick/DatePickLastCall'\n// import FileDrop from '../../Atoms/FileDrop/FileDrop'\n\nexport class InputFormNoteQuickAdd extends Component {\n  render() {\n    const { text, phone, email,  \n      linkedin_profile, website, \n      correspondence, is_corporate,\n      is_staff, is_payed, dropdownOpen,\n      status, updateNoteId,\n      errors, \n    } = this.props;\n\n    return (\n      <div>\n        <Inputs.InputName \n          onInputChange={this.props.onInputChange} \n          text={text} \n          errors={errors} \n        />\n        <Inputs.InputPhone \n          onInputChange={this.props.onInputChange} \n          phone={phone} \n          errors={errors} \n        />\n        <Inputs.InputEmail \n          onInputChange={this.props.onInputChange} \n          email={email} \n          errors={errors} \n        />      \n        <Inputs.InputLinkedin \n          onInputChange={this.props.onInputChange} \n          linkedin_profile={linkedin_profile} \n          errors={errors} \n        />\n        <Inputs.InputWebsite \n          onInputChange={this.props.onInputChange} \n          website={website} \n          errors={errors} \n        />      \n        <Inputs.InputCorrespondence \n          onInputChange={this.props.onInputChange} \n          correspondence={correspondence} \n          errors={errors} \n        />      \n        \n        <CheckboxIsCorp \n          handleCheckboxIsCorpBtnClick={this.props.handleCheckboxIsCorpBtnClick} \n          is_corporate={is_corporate} \n        />\n        {updateNoteId !== null ?\n        <CustomDropdown \n          onChangeValue={this.props.onChangeValue} \n          onToggle={this.props.onToggle} \n          status={status} \n          dropdownOpen={dropdownOpen} \n        />:null}\n        {updateNoteId !== null && status!==\"Candidate\" && is_staff ?\n          <CheckboxIsPayed \n            handleCheckboxIsPayBtnClick={this.props.handleCheckboxIsPayBtnClick} \n            status={status} \n            is_staff={is_staff} \n            is_payed={is_payed}\n          />\n        : null}      \n         \n      </div>\n    )\n    \n  }\n}","export const handleValidation = (fields) => {\n  // let fields = this.state;\n  let errors = {};\n\n  //Name\n  if(fields[\"text\"].trim() === \"\"){\n     errors[\"text\"] = \"Cannot be empty\";\n  } else {\n    if(typeof fields[\"text\"] !== \"undefined\"){\n       if(!fields[\"text\"].match(/^[a-zA-Z]+$/)){\n          errors[\"text\"] = \"Name must be only letters\";\n       } else if (fields[\"text\"].length > 7) {\n          errors[\"text\"] = \"Your name is too long\";\n       }        \n    }\n  }\n\n  //Phone\n  if(fields[\"phone\"].trim() === \"\"){\n     errors[\"phone\"] = \"Phone cannot be empty\";\n  } else {\n    if(typeof fields[\"phone\"] !== \"undefined\"){\n      if(!fields[\"phone\"].match(/^[0-9\\-\\\\+]{9,15}$/)){\n        errors[\"phone\"] = \"Not phone number\";\n      }      \n    }\n  }\n  // Email\n  if(fields[\"email\"].trim() === \"\"){\n    errors[\"email\"] = \"Cannot be empty\";\n  } else {\n    if(typeof fields[\"email\"] !== \"undefined\"){\n      let lastAtPos = fields[\"email\"].lastIndexOf('@');\n      let lastDotPos = fields[\"email\"].lastIndexOf('.');\n      if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"email\"].indexOf('@@') === -1 && lastDotPos > 2 && (fields[\"email\"].length - lastDotPos) > 2)) {\n        errors[\"email\"] = \"Email is not valid\";\n      }\n    }\n  }\n  // Linkedin profile\n  if(fields[\"linkedin_profile\"].trim() === \"\"){\n    errors[\"linkedin_profile\"] = \"Cannot be empty\";\n  } else {\n    if(typeof fields[\"linkedin_profile\"] !== \"undefined\"){\n      let re=/^((https?|ftp|smtp):\\/\\/)+(www.)?[a-z0-9]+(\\.[a-z]{2,}){1,3}(#?\\/?[a-zA-Z0-9-_#]+)*\\/?(\\?[a-zA-Z0-9-_]+=[a-zA-Z0-9-%]+&?)?$/;\n      if (!re.test(fields[\"linkedin_profile\"])) {\n        errors[\"linkedin_profile\"] = \"Not Linkedin URL\";\n      }\n    }\n  }\n  // Website\n  if(fields[\"website\"].trim() === \"\"){\n  } else {\n    if(typeof fields[\"website\"] !== \"undefined\"){\n      let re=/^((https?|ftp|smtp):\\/\\/)+(www.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_+.~#?&//=]*)?$/;\n      if (!re.test(fields[\"website\"])) {\n        errors[\"website\"] = \"URL is not valid\";\n      }\n    }\n  }\n\n  return errors;\n}","import React, { Component } from 'react'\n\nimport * as notes from \"../../../actions/notesActions\";\nimport {connect} from 'react-redux';\nimport { Link } from 'react-router-dom'\nimport { Form, FormText,  \n  FormGroup, Button,\n  Table, CustomInput,\n  Modal, ModalHeader, ModalBody, ModalFooter, } from 'reactstrap';\nimport { LoadScreen } from '../Molecules/LoadScreen/LoadScreen'\nimport { ModalDelete } from '../Organisms/Modal/Modal'\n\nimport { InputFormNoteQuickAdd } from '../Molecules/Forms/InputFormNoteQuickAdd'\nimport { handleValidation } from '../../../utils/helpers'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEdit, faTrash, faMale, \n  faUsers, faSave, faPlusSquare, \n  faSearch, faExchangeAlt, faLongArrowAltDown,\n  faCheckCircle, faHandHoldingUsd, faTimes } from '@fortawesome/free-solid-svg-icons'\n\n\nclass Notes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: \"\",\n      phone: \"\",\n      status: 'Candidate',\n      email: \"\",\n      linkedin_profile: \"\",\n      website: \"\",\n      correspondence: \"\",\n      is_corporate: false,\n      is_payed: false,\n      searchtext: \"\",\n      updateNoteId: null,\n      updateNoteIndex: null,\n      dropdownOpen: false,\n      is_ordering_name: false,\n      modal: false,\n      modaldelete: false,\n      is_staff: false,\n      loading: true,\n      nextafterdelete: \"\",\n      deleted: false,\n      order: [],\n      errors: {},\n      notes: [\n          {\n            count: null,\n            next: null,\n            previous: null,\n            noteitems: []\n          },\n        ],\n      }\n  }\n\n  // // END FETCH DATA AFTER PROPS\n  componentDidMount () {\n    this.props.fetchNotes()\n  }\n\n  resetForm = () => {\n    this.setState({text: \"\", phone: '', email:'', errors: {}, \n      updateNoteId: null, status: 'Candidate', is_corporate: false, \n      is_payed: false, linkedin_profile: \"\", website: \"\",\n      correspondence: \"\", });\n  }\n  addNew = () => {\n    this.setState({text: \"\", phone: '', email:'', errors: {}, \n      updateNoteId: null, status: 'Candidate', is_corporate: false, \n      is_payed: false, linkedin_profile: \"\", website: \"\", \n      modal: true, correspondence: \"\", });\n  }\n  resetSearch = () => {\n    this.setState({ searchtext: \"\" });\n  }\n  resetSort = () => {\n    this.setState({order: []}, function () {\n        this.handleOrderNotes();\n    });\n  }  \n  selectForEdit = (index, id) => {\n    let note = this.props.notes[index].noteitems[id];\n    this.setState({text: note.text, phone: note.phone, \n      status: note.status, is_payed: note.is_payed, \n      is_corporate: note.is_corporate, email: note.email, \n      linkedin_profile: note.linkedin_profile, \n      website: note.website, correspondence:note.correspondence,\n      updateNoteId: id, updateNoteIndex: index, modal: true, });\n  }\n\n  selectForDelete = (index, id) => {\n    this.props.deleteNote(index, id)\n    this.setState({\n      modaldelete: false,\n    })     \n  }\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      loading: nextProps.notes[0].loading,\n    }) \n    // если длина массива меньше чем предыдущая длина (один элемент удален)\n    // то пересчитываем эндпоинт для фетча (вычитаем из последнего символа next\n    // число \"1\" чтобы получить текущий фетч), если в нексте на конце \"1\", то обрезаем\n    // до знака \"?\"\n    let nextForDelete = \"\";\n    if(nextProps.notes[0].deleted && nextProps.notes[0].next) {\n      nextForDelete = nextProps.notes[0].next\n      console.log(nextForDelete)\n      let lastChar = parseInt(nextForDelete.slice(-1), 10)\n      if ((lastChar-1) >= 2) {\n        nextForDelete = nextForDelete.slice(0, -1)+(lastChar-1);\n        console.log(nextForDelete)\n      }\n      \n      //add flag nextafterdelete to correctly fetch\n      this.setState({nextafterdelete: nextForDelete,\n        deleted: false})\n    }\n  }  \n    \n  toggle = () => {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  }\n  toggleModal = () => {\n    this.setState(prevState => ({\n      modal: !prevState.modal,\n    }));\n  }\n  toggleModalDelete = (index, id) => {\n    let text = \"\"\n    if (id !== undefined) {\n      text = this.props.notes[index].noteitems[id].text\n    }\n    this.setState(prevState => ({\n      modaldelete: !prevState.modaldelete,\n      index: index,\n      id: id,\n      text: text\n    }));\n  }\n\n  handleChange = (e) => {\n    e.preventDefault();\n    let key = e.target.name\n    let value = e.target.value\n\n    this.setState({\n        [key]: value,\n        errors: {}\n    })\n\n  }\n\n  changeValue = (e) => {\n    this.setState({status: e.currentTarget.textContent})\n  }\n  loadMorePosts = () => {\n    const {next} = this.props.notes[this.props.notes.length - 1]\n    // Check if investor is after delete to correct fetch \n    if (this.state.nextafterdelete) {\n      this.props.fetchNotes(this.state.nextafterdelete)\n      //clear flag nextafterdelete\n      this.setState({nextafterdelete: \"\"})\n    } else {\n      if (next !== null || next !== undefined) {\n        this.props.fetchNotes(next)              \n      }\n    }\n     \n  }\n  searchNotes = () => {\n      const {searchtext} = this.state\n      if (searchtext !== null || searchtext !== undefined) {\n          this.props.searchNotes(searchtext) \n          this.setState({\n            is_ordering_name: false,\n            order: [],\n          });             \n      }     \n  }\n\n  onCheckboxIsCorpBtnClick = () => {\n    this.setState({\n      is_corporate: !this.state.is_corporate,\n    });\n  }\n  onCheckboxIsPayBtnClick = () => {\n    this.setState({\n      is_payed: !this.state.is_payed,\n    });\n  }\n  onBtnClickOrderingName = (ordername) => {\n    // Create a new array based on current state:\n    let order = [...this.state.order];\n    let newordername = \"-\"+ordername\n    let is_ordering_name = false\n\n    // if ordername starts from \"C\"-character - clear that order!\n    if (ordername.charAt(0) === \"C\"){\n      let index = order.indexOf(ordername.slice(1, ordername.length))\n      // Clear ordername (remove from array)\n      if (index !== -1) {\n        order.splice(index, 1);\n      }\n    } else {\n      // Add or remove item to it\n      if (order.includes(ordername)){\n        let index = order.indexOf(ordername)\n        if (index !== -1) {          \n          order.splice(index, 1);\n          order.splice(index, 0, newordername);         \n        }\n      } else if (order.includes(newordername)) {\n        let index = order.indexOf(newordername)\n        if (index !== -1) {\n          order.splice(index, 1);\n          order.splice(index, 0, ordername);\n        }\n      } else {\n        order.push(ordername);\n\n      }\n    }\n    if (order.length > 0) {\n      is_ordering_name = true\n    } \n\n    // FIX BUG with \"owner\" negative ordering\n    if (order.includes(\"-owner\")&&order.length===1) {\n      // adding \"-id\" field to multiply filter\n      // if has only \"-owner\" field\n      order.push(\"-id\");\n    } else {\n      // remove \"-id\" in all other variants\n      let index = order.indexOf(\"-id\")\n      if (index !== -1) {        \n        order.splice(index, 1);\n      }      \n    }\n\n    // Set state\n    this.setState({is_ordering_name: is_ordering_name, searchtext: \"\", order}, function () {\n        this.handleOrderNotes();\n    });\n  }\n  handleOrderNotes = () => {\n    // Array to string with ','\n    let mapped = this.state.order.map((item)=>(item)).join(\",\");\n\n    if (this.state.order.length) {      \n      this.props.orderNotes(mapped)              \n    } else {\n      this.setState({order: []});\n      this.props.orderNotes(\"\")   \n    }    \n  }\n  submitNote = (e) => {\n      e.preventDefault();\n      // check validation from helper file\n      const validation_errors = handleValidation(this.state)\n      // check validation_errors dictionary is empty or has any errors\n      if (Object.keys(validation_errors).length === 0) {\n        // Check what do you want add or edit?\n        if (this.state.updateNoteId === null) {\n            this.props.addNote(this.state.text, this.state.phone, this.state.status, \n              this.state.is_corporate, this.state.is_payed, this.state.email, \n              this.state.linkedin_profile, this.state.website, this.state.correspondence,)\n              .then(this.resetForm)\n              .then(this.toggleModal)            \n              .catch(function (error) {\n                 console.log(\"error\", error);\n               });\n        } else {\n            this.props.updateNote(this.state.updateNoteIndex, this.state.updateNoteId, \n              this.state.text, this.state.phone, this.state.status, this.state.is_corporate, \n              this.state.is_payed, this.state.email, this.state.linkedin_profile, \n              this.state.website, this.state.correspondence)\n              .then(this.resetForm)\n              .then(this.toggleModal)              \n              .catch(function (error) {\n                 console.log(\"error\", error);\n               });\n        }\n      } else {\n        this.setState({errors: validation_errors}); \n      }\n  }\n  renderModal() {\n      const { modal, \n        text, phone, email, linkedin_profile,\n        website, correspondence, is_corporate,\n        status, is_payed, dropdownOpen,\n        updateNoteId,\n        errors } = this.state;\n      const { is_staff } = this.props;\n      \n      if (this.state.modal) {\n        return (\n          <Modal isOpen={modal} toggle={this.toggleModal}>\n            <Form onSubmit={this.submitNote}>            \n\n              <ModalHeader toggle={this.toggleModal}>{updateNoteId === null ? \"New Investor\" : \"Edit Investor\"}</ModalHeader>\n              <ModalBody>                    \n                <InputFormNoteQuickAdd\n                  onInputChange={this.handleChange}\n                  handleCheckboxIsCorpBtnClick={this.onCheckboxIsCorpBtnClick}\n                  handleCheckboxIsPayBtnClick={this.onCheckboxIsPayBtnClick} \n                  onToggle={this.toggle} \n                  onChangeValue={this.changeValue}\n\n                  text={text} \n                  phone={phone}\n                  email={email}\n                  linkedin_profile={linkedin_profile}\n                  website={website}\n                  correspondence={correspondence}\n                  is_corporate={is_corporate}\n                  is_staff={is_staff}\n                  status={status}\n                  is_payed={is_payed}\n                  dropdownOpen={dropdownOpen}\n                  updateNoteId={updateNoteId}\n\n                  errors={errors} \n                />                              \n              </ModalBody>\n              <ModalFooter> \n                <FormGroup row>                   \n                <Button className=\"rounded-0\" color=\"info\" type=\"submit\"><FontAwesomeIcon icon={faSave} color=\"white\"/></Button>              \n                {updateNoteId === null ? <Button className=\"rounded-0\" outline onClick={this.resetForm}>Clear</Button> : null}\n                <Button className=\"rounded-0\" onClick={this.toggleModal}>Cancel</Button>\n                </FormGroup>\n              </ModalFooter>\n            </Form>\n          </Modal>            \n        );\n      }\n    }\n\n  renderNotes () {\n    const { notes } = this.props\n    const { errors, modal, searchtext, order, modaldelete, index, id, text } = this.state;\n    const { next } = this.props.notes[this.props.notes.length - 1];\n\n    return (\n      <div>\n        <div className=\"centering mt-2\"> \n          <div className=\"centering-left\"> \n            <Link to={\"/investors/add\"}><Button className=\"rounded-0 btn-add\" color=\"info\"><FontAwesomeIcon icon={faPlusSquare} color=\"white\"/> Add New</Button></Link>\n          </div>\n          <div className=\"centering-center\">\n          {modal ? this.renderModal() : null}\n          {modaldelete ? \n            <ModalDelete \n              modaldelete={modaldelete} index={index} \n              id={id} text={text}\n              toggle={this.toggleModalDelete}\n              onSelectForDelete={this.selectForDelete}\n            /> \n          : null}\n            <FormGroup row>\n              <Button className=\"rounded-0\" color=\"info\" onClick={this.addNew}><FontAwesomeIcon icon={faPlusSquare} color=\"white\"/><span className=\"btn-quick__text\"> Quick Add</span></Button>\n              <CustomInput inline\n                id=\"searchtext\"\n                type=\"text\" \n                name=\"searchtext\"\n                value={searchtext || ''}\n                placeholder=\"Search by Name...\"\n                onChange={this.handleChange}\n                \n                />\n                {errors.searchtext ? <FormText color=\"danger\">{errors.searchtext}</FormText>: \"\"}\n              <Button className=\"rounded-0\" onClick={this.searchNotes}><FontAwesomeIcon icon={faSearch} color=\"white\"/></Button>\n              {searchtext !== \"\" ? <Button outline className=\"rounded-0\" onClick={this.resetSearch}>Clear</Button> : \"\"}          \n            </FormGroup>\n          </div>\n          <div className=\"centering-right\"> \n          </div>\n        </div>          \n        <div className=\"centering\"> \n          <div className=\"centering-left\"></div>\n          <h3 className=\"centering-center\">Leads</h3>\n          <div className=\"centering-right centering-right__tablepreffix\">\n            {order.length > 0 ? <Button color=\"info\" onClick={this.resetSort}>Clear Sort</Button> : <Button outline color=\"info\" disabled>Clear Sort</Button>}\n          </div>\n        </div>\n        <Table className=\"table text-center\" striped>\n          <thead>\n            <tr>\n              <th className=\"table-num__title\">#</th>\n              <th><FontAwesomeIcon icon={faMale} color=\"black\"/> / <FontAwesomeIcon icon={faUsers} color=\"black\"/></th>\n              <th>Name <Button color=\"link\" onClick={() => this.onBtnClickOrderingName(\"text\")}>\n                {order.includes(\"text\") ? <FontAwesomeIcon icon={faLongArrowAltDown} color=\"black\"/>\n                :order.includes(\"-text\") ? <FontAwesomeIcon rotation={180} icon={faLongArrowAltDown} color=\"black\"/>\n                :<FontAwesomeIcon rotation={90} icon={faExchangeAlt} color=\"grey\"/>}</Button>\n                {order.includes(\"text\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"Ctext\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                :order.includes(\"-text\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"C-text\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                :\"\"}\n              </th>\n              <th>Dev <Button color=\"link\" onClick={() => this.onBtnClickOrderingName(\"owner\")}>\n                {order.includes(\"owner\") ? <FontAwesomeIcon icon={faLongArrowAltDown} color=\"black\"/>\n                :order.includes(\"-owner\") ? <FontAwesomeIcon rotation={180} icon={faLongArrowAltDown} color=\"black\"/>\n                :<FontAwesomeIcon rotation={90} icon={faExchangeAlt} color=\"grey\"/>}</Button>\n                {order.includes(\"owner\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"Cowner\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                :order.includes(\"-owner\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"C-owner\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                :\"\"}\n              </th>\n              <th className=\"table-phone__title\">Phone</th>\n              <th>Status <Button color=\"link\" onClick={() => this.onBtnClickOrderingName(\"status\")}>\n                {order.includes(\"status\") ? <FontAwesomeIcon icon={faLongArrowAltDown} color=\"black\"/>\n                :order.includes(\"-status\") ? <FontAwesomeIcon rotation={180} icon={faLongArrowAltDown} color=\"black\"/>\n                :<FontAwesomeIcon rotation={90} icon={faExchangeAlt} color=\"grey\"/>}</Button>\n                {order.includes(\"status\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"Cstatus\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                :order.includes(\"-status\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"C-status\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                :\"\"}\n              </th>\n              <th>Payment <Button color=\"link\" onClick={() => this.onBtnClickOrderingName(\"is_payed\")}>\n                {order.includes(\"is_payed\") ? <FontAwesomeIcon icon={faLongArrowAltDown} color=\"black\"/>\n                :order.includes(\"-is_payed\") ? <FontAwesomeIcon rotation={180} icon={faLongArrowAltDown} color=\"black\"/>\n                :<FontAwesomeIcon rotation={90} icon={faExchangeAlt} color=\"grey\"/>}</Button>\n                {order.includes(\"is_payed\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"Cis_payed\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                :order.includes(\"-is_payed\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"C-is_payed\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                :\"\"}\n              </th>\n              <th>Manage</th>\n            </tr>\n          </thead>  \n               \n          {notes !== undefined ? notes.map((post, index)=>{\n            return ( \n                <tbody key={index}>\n                    {post.noteitems !== undefined && post.noteitems.length > 0 ? post.noteitems.map((note, id) => {\n                      return (                                    \n                          <tr key={id}>\n                              <th scope=\"row\" className=\"table-num__text\">{id+1}</th>\n                              <td>{note.is_corporate ? <FontAwesomeIcon icon={faUsers} color=\"black\"/> : <FontAwesomeIcon icon={faMale} color=\"black\"/>}</td>\n                              <td>\n                                <Link to={{pathname:`/investors/${note.id}`,\n                                      state: {fromDashboard: false}\n                                      }}>{note.text}</Link>\n                              </td>\n                              <td>{note.owner_username}</td>\n                              <td className=\"table-phone__text\">{note.phone}</td>\n                              <td>{note.status}</td>\n                              <td>{note.is_payed ? <FontAwesomeIcon icon={faCheckCircle} color=\"black\"/> : <FontAwesomeIcon icon={faHandHoldingUsd} color=\"black\"/>}</td>\n                              <td>\n                                <Button className=\"rounded-0\" color=\"info\" title=\"edit investor\" onClick={() => this.selectForEdit(index, id)}><FontAwesomeIcon icon={faEdit} color=\"white\"/></Button>\n                                <Button className=\"rounded-0\" onClick={() => this.toggleModalDelete(index, id)} title=\"delete investor\"><FontAwesomeIcon icon={faTrash} color=\"white\"/></Button>\n                              </td>\n                          </tr>                                        \n                        )\n                      }\n                    ) : null}\n                </tbody>\n              )\n            }) : null}\n        </Table>\n        {next !== null ? <Button onClick={this.loadMorePosts}>Load more</Button> : ''}\n      </div>\n    )\n  }\n  render () {\n    const { loading } = this.state\n    return(\n      <div>\n        { loading ? <LoadScreen /> : this.renderNotes() }\n      </div>      \n    )\n  }\n}\n\nconst mapStateToProps = state => {\n    return {\n      notes: state.notes,\n      deleted: state.deleted,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchNotes: (next) => {\n            dispatch(notes.fetchNotes(next));\n        },\n        addNote: (text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence) => {\n            return dispatch(notes.addNote(text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence));\n        },\n        updateNote: (index, id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence) => {\n            return dispatch(notes.updateNote(index, id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence));\n        },\n        deleteNote: (index, id) => {\n            dispatch(notes.deleteNote(index, id));\n        },\n        searchNotes: (searchtext) => {\n            dispatch(notes.searchNotes(searchtext));\n        },\n        orderNotes: (order) => {\n            dispatch(notes.orderNotes(order));\n        },\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notes);","import React, { Component } from 'react'\nimport { Button, \n  FormGroup, Label, } from 'reactstrap';\nimport DatePicker from \"react-datepicker\";\nimport moment from \"moment\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n// Checkbox is corporate\nexport class DatePickLastCall extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      add_call: false,\n      last_call: \"\",      \n    }\n  }\n  handleChangeDate = (date) => {\n    if (date) {\n      this.props.handleChangeDate(moment(date, moment.defaultFormat).toDate());\n    } else {\n      this.props.handleChangeDate(null);\n    }\n    \n  }\n\n  render() {\n    // const { last_call } = this.state;\n    const { last_call } = this.props;\n    const is_valid_date = moment(last_call).isValid()\n\n    return ( \n      <div>\n        <FormGroup>\n          <Label>Last Call {is_valid_date ? <Button className=\"btn\" onClick={this.props.handleResetCallClick}>Reset</Button>: \"\"}</Label>\n          {is_valid_date ?\n          <div>\n            <DatePicker     \n              selected={is_valid_date ? moment(last_call, moment.defaultFormat).toDate() : moment(this.state.last_call, moment.defaultFormat).toDate()}\n              onChange={this.handleChangeDate}\n              showTimeSelect\n              timeFormat=\"HH:mm\"\n              timeIntervals={15}\n              dateFormat=\"d MMMM yyyy HH:mm\"\n              timeCaption=\"time\"\n            />\n          </div>\n          :                     \n            <Button className=\"btn btn-block\" onClick={this.props.handleAddCallClick}>Add Last Call</Button>\n          }\n        </FormGroup>\n      </div>\n    )    \n  }\n}","import React, { Component } from 'react'\nimport Dropzone from 'react-dropzone'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFileUpload } from '@fortawesome/free-solid-svg-icons'\nimport './style.scss'\n\nconst imageMaxSize = 10000000; //bytes\n\nclass FileDrop extends Component {\n\n\tonDrop = (acceptedFiles, rejectedFiles) => {\n\t\t// console.log(acceptedFiles, rejectedFiles)\n\t\tthis.props.onSelectDrop(acceptedFiles);\n\t}\n\trender () {\n\t\t\n\t\tconst { documents, detail } = this.props;\n\t\tlet drop_class\n\t\tlet drop_text\n\n\t\tif (documents) {\n\t\t\tif (detail) {\n\t\t\t\tif (documents === detail) {\n\t\t\t\t  drop_class = \"dropzone-field dropzone-field__default\"\n\t\t\t\t  drop_text = \"  Replace Document\"\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t  drop_class = \"dropzone-field dropzone-field__success\";\n\t\t\t  \t  drop_text = \"  Save to Attach\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdrop_class = \"dropzone-field dropzone-field__success\";\n\t\t\t\tdrop_text = \"  Save to Attach\";\n\t\t\t}\n\t\t} else {\n\t\t\tdrop_class = \"dropzone-field dropzone-field__default\";\n\t\t\tdrop_text = \"  Add Document\"\n\t\t} \n\n\t\treturn (\n\t\t  <div>Documents:\n            <span className=\"document-title\">{detail !== \"null\" ? \" (\"+detail.split(\"/\").slice(-1)[0]+\")\" : \"\"}</span>\n\t\t    <Dropzone\n\t            onDrop={this.onDrop}\t\t            \n\t            multiple={false}\n\t            maxSize={imageMaxSize}\n\t            >\n\t                {({getRootProps, getInputProps}) => (\n\t                    <div {...getRootProps()} className={`${drop_class}`}>\n\t                        <input {...getInputProps()} />\n\t                       \t<div>\n\t                       \t\t<FontAwesomeIcon icon={faFileUpload} color=\"white\"/>\n\t                       \t\t\t<span className=\"dropzone-field__text\">{`${drop_text}`}</span>\n\t\t\t\t\t\t\t</div>\n\t                    </div>\n\t                )}\n\t\t\t</Dropzone>﻿\n\t\t  </div>\n\t\t  )\n\t}\n}\nexport default FileDrop","import React, { Component } from 'react'\n\nimport * as Inputs from '../../Atoms/AddInputs/AddInputs'\nimport { CheckboxIsCorp } from '../../Atoms/Checkboxes/CheckboxIsCorp'\nimport { CheckboxIsPayed } from '../../Atoms/Checkboxes/CheckboxIsPayed'\nimport { CustomDropdown } from '../../Atoms/Dropdown/Dropdown'\nimport { DatePickLastCall } from '../../Atoms/DatePick/DatePickLastCall'\nimport FileDrop from '../../Atoms/FileDrop/FileDrop'\n\nexport class InputFormNoteDetail extends Component {\n  render() {\n    const { text, phone, email,  \n      linkedin_profile, website, \n      correspondence, is_corporate,\n      status, dropdownOpen, is_payed,\n      is_staff, add_call, last_call,\n      documents, detail,\n      errors, } = this.props;\n      \n    return (\n      <div>\n        <Inputs.InputName \n          onInputChange={this.props.onInputChange} \n          text={text} \n          errors={errors} \n        />\n        <Inputs.InputPhone \n          onInputChange={this.props.onInputChange} \n          phone={phone} \n          errors={errors} \n        />\n        <Inputs.InputEmail \n          onInputChange={this.props.onInputChange} \n          email={email} \n          errors={errors} \n        />      \n        <Inputs.InputLinkedin \n          onInputChange={this.props.onInputChange} \n          linkedin_profile={linkedin_profile} \n          errors={errors} \n        />\n        <Inputs.InputWebsite \n          onInputChange={this.props.onInputChange} \n          website={website} \n          errors={errors} \n        />      \n        <Inputs.InputCorrespondence \n          onInputChange={this.props.onInputChange} \n          correspondence={correspondence} \n          errors={errors} \n        />      \n        \n        <CheckboxIsCorp \n          handleCheckboxIsCorpBtnClick={this.props.handleCheckboxIsCorpBtnClick} \n          is_corporate={is_corporate} \n        />\n        <CheckboxIsPayed \n          handleCheckboxIsPayBtnClick={this.props.handleCheckboxIsPayBtnClick} \n          status={status} \n          is_staff={is_staff} \n          is_payed={is_payed}\n        />      \n      \n        <CustomDropdown \n          onChangeValue={this.props.onChangeValue} \n          onToggle={this.props.onToggle} \n          status={status} \n          dropdownOpen={dropdownOpen} \n        />      \n        <DatePickLastCall \n          handleChangeDate={this.props.handleChangeDate} \n          handleResetCallClick={this.props.handleResetCallClick} \n          handleAddCallClick={this.props.handleAddCallClick} \n          add_call={add_call} \n          last_call={last_call} \n        />      \n        <FileDrop \n          onSelectDrop={this.props.onSelectDrop} \n          documents={documents}\n          detail={detail}\n        />\n      </div>\n    )\n    \n  }\n}","import React, { Component } from 'react'\nimport { Table } from 'reactstrap';\n\nimport moment from \"moment\";\n\nexport class DetailPreviewTable extends Component {\n  render() {\n    const { text, phone, email,  \n      linkedin_profile, website, \n      correspondence, is_corporate,\n      status, is_payed,\n      last_call, documents, \n    } = this.props;\n\n    return (\n            <div className=\"col col-12 col-xs-12 col-sm-12 col-md-8 col-lg-8\">\n              <h3>Detailed Preview</h3>\n                <Table striped>\n                  <tbody>\n                    <tr>\n                      <th>Investor</th>\n                      <td>{is_corporate ? \"Corporate\" : \"Individual\" }</td>\n                    </tr>\n                    <tr>\n                      <th>Name</th>\n                      <td>{text}</td>\n                    </tr>\n                    <tr>\n                      <th>Phone</th>\n                      <td>{phone}</td>\n                    </tr>\n                    <tr>\n                      <th>Status</th>\n                      <td>{status}</td>\n                    </tr>\n                    <tr>\n                      <th>Email</th>\n                      <td className=\"table-correspondence__data\">{email}</td>\n                    </tr>\n                    <tr>\n                      <th>Linkedin</th>\n                      <td className=\"table-correspondence__data\"><a className=\"table-correspondence__url\" href={`${linkedin_profile}`} >{linkedin_profile}</a></td>\n                    </tr>\n                    <tr>\n                      <th>Website</th>\n                      <td className=\"table-correspondence__data\"><a className=\"table-correspondence__url\" href={`${website}`} >{website}</a></td>\n                    </tr>\n                    <tr>\n                      <th>Correspondence</th>\n                      <td className=\"table-correspondence__data\">{correspondence}</td>\n                    </tr>\n                    <tr>\n                      <th>Payment</th>\n                      <td>{is_payed ? \"Payed\" : \"New\" }</td>\n                    </tr>\n                    <tr>\n                      <th>Calls</th>\n                      <td>{last_call ? moment(last_call).format(\"D MMM YYYY HH:mm\") : \"\"}</td>\n                    </tr>\n                    <tr>\n                      <th>Documents</th>\n                      <td>{documents ? <a className=\"table-correspondence__url\" href={`${documents}`} >{documents.split(\"/\").slice(-1)[0]}</a> : \"\"}</td>\n                    </tr>\n                  </tbody>\n                </Table>\n            </div>\n    )\n    \n  }\n}","import React, {Component} from 'react'\nimport { Link } from \"react-router-dom\";\nimport * as detail from \"../../../actions/noteDetailActions\";\nimport {connect} from 'react-redux';\nimport { Form, Container, Row,\n  Button, } from 'reactstrap';\n\nimport moment from \"moment\";\n\nimport { LoadScreen } from '../Molecules/LoadScreen/LoadScreen'\nimport { InputFormNoteDetail } from '../Molecules/Forms/InputFormNoteDetail'\nimport { DetailPreviewTable } from '../Molecules/Tables/DetailPreviewTable'\nimport { handleValidation } from '../../../utils/helpers'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUndoAlt, faSave,\n       } from '@fortawesome/free-solid-svg-icons'\n\nclass NoteDetail extends Component {\n\n    constructor(props){\n        super(props);\n  \n        this.state = {\n          text: \"\",\n          phone: \"\",\n          status: \"\",\n          email:\"\",\n          linkedin_profile: \"\",\n          website: \"\",\n          correspondence: \"\",\n          is_corporate: false,\n          is_payed: false,\n          id: null,\n          loading: true,\n          errors: {},\n          hasError: false,\n          dropdownOpen: false,\n          detail: {},\n          add_call: false,\n          last_call: \"\", \n          documents: null,\n          attached: false,      \n        }\n    }\n\n    componentDidMount(){\n      if (this.props.match){\n        const {id} = this.props.match.params\n        this.setState({\n            id: id,\n        })\n        this.props.fetchDetailNote(id)        \n      }\n      \n    }\n\n    componentWillReceiveProps(nextProps) {\n      const detailed = nextProps.detail\n\n      if (Object.keys(detailed).length) {\n        this.setState({\n          text: detailed.text,\n          phone: detailed.phone,\n          status: detailed.status,\n          is_corporate: detailed.is_corporate,\n          is_payed: detailed.is_payed,\n          email: detailed.email,\n          linkedin_profile: detailed.linkedin_profile,\n          website: detailed.website,\n          correspondence: detailed.correspondence,\n          last_call: moment(detailed.last_call, moment.defaultFormat).toDate(),\n          documents: detailed.documents,\n          hasError: detailed.hasError,\n          loading: detailed.loading,\n        }) \n      }        \n    }    \n    toggle = () => {\n      this.setState(prevState => ({\n        dropdownOpen: !prevState.dropdownOpen\n      }));\n    }\n    handleChange = (e) => {\n      e.preventDefault();\n      let key = e.target.name\n      let value = e.target.value\n      this.setState({\n          [key]: value,\n          errors: {}\n      })\n    }\n    changeDate = (date) => {      \n      this.setState({last_call: date})\n    }\n\n    changeValue = (e) => {\n      this.setState({status: e.currentTarget.textContent})\n    }\n\n    getData = (documents) => {\n      console.log(\"getData!\")\n      this.setState({\n        documents: documents[0],\n        attached: true,\n      })\n    }\n\n    onCheckboxIsCorpBtnClick = () => {\n      this.setState({\n        is_corporate: !this.state.is_corporate,\n      });\n    }\n    onCheckboxIsPayBtnClick = () => {\n      this.setState({\n        is_payed: !this.state.is_payed,\n      });\n    }\n    onAddCallClick = () => {\n      this.setState({\n        add_call: true,\n        last_call: moment(new Date(), moment.defaultFormat).toDate(),\n      });\n    }\n\n    onResetCallClick = () => {\n      this.setState({\n        add_call: false,\n        last_call: \"\",\n      });\n    }\n    // Force update page to /investors\n    refreshPage = () => {\n      window.location.href = '/investors';\n    }\n    submitNote = (e) => {\n      e.preventDefault();\n      // check validation from helper file\n      const validation_errors = handleValidation(this.state)\n      // check validation_errors dictionary is empty or has any errors\n      if (Object.keys(validation_errors).length === 0) {\n        this.props.updateDetailNote(this.state.id, this.state.text, \n          this.state.phone, this.state.status, this.state.is_corporate, \n          this.state.is_payed, this.state.email, this.state.linkedin_profile, \n          this.state.website, this.state.correspondence, this.state.last_call,\n          this.state.documents, this.state.attached,)\n      } else {\n        this.setState({errors: validation_errors}); \n      }\n    }\n\n    renderNote() {\n        const { detail, is_staff } = this.props;\n        const { text, phone, email, \n          linkedin_profile, website,\n          correspondence, is_corporate,\n          status, dropdownOpen, is_payed,\n          add_call, last_call, documents,\n          errors, hasError } = this.state;\n\n        if (!detail.detail && !hasError) {\n          return (\n                <Container fluid>\n                  <Row>\n                    <Form onSubmit={this.submitNote} className=\"form col-12 col-xs-12 col-sm-12 col-md-4 col-lg-4 mt-2 p-2\">\n                      <InputFormNoteDetail \n                        onInputChange={this.handleChange}\n                        handleCheckboxIsCorpBtnClick={this.onCheckboxIsCorpBtnClick}\n                        handleCheckboxIsPayBtnClick={this.onCheckboxIsPayBtnClick} \n                        onToggle={this.toggle} \n                        onChangeValue={this.changeValue}\n                        handleChangeDate={this.changeDate}\n                        handleResetCallClick={this.onResetCallClick}\n                        handleAddCallClick={this.onAddCallClick}\n                        onSelectDrop={this.getData}\n\n                        text={text} \n                        phone={phone}\n                        email={email}\n                        linkedin_profile={linkedin_profile}\n                        website={website}\n                        correspondence={correspondence}\n                        is_corporate={is_corporate}\n                        status={status}\n                        is_staff={is_staff}\n                        is_payed={is_payed}\n                        dropdownOpen={dropdownOpen}\n                        add_call={add_call}\n                        last_call={last_call}\n                        documents={documents}\n                        detail={`${detail.documents}`}\n\n                        errors={errors} \n                      />                \n\n                    <Button color=\"info\" className=\"rounded-0\" size=\"lg\" type=\"submit\"><FontAwesomeIcon icon={faSave} color=\"white\"/></Button>\n                    <Link to=\"/investors\" onClick={this.refreshPage} ><Button className=\"rounded-0\" size=\"lg\"><FontAwesomeIcon icon={faUndoAlt} color=\"white\"/> Cancel</Button></Link>\n                  </Form>\n\n                  <DetailPreviewTable \n                    {...detail}\n                  />\n              </Row>\n            </Container>              \n          );\n\n        } else {\n            return (\n              <div>\n                <h1>404 error. Message Not Found</h1>\n              </div>\n            );\n        }\n    }\n    render () {\n        const {loading} = this.state\n        return(\n            <div>\n              {loading ?<LoadScreen />:this.renderNote()}\n          </div>               \n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      detail: state.detail,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      fetchDetailNote: (id) => {\n          dispatch(detail.fetchDetailNote(id));\n      },\n      updateDetailNote: (id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence, last_call, documents, attached) => {\n          dispatch(detail.updateDetailNote(id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence, last_call, documents, attached));\n      }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteDetail);","import { toast } from 'react-toastify';\nexport const fetchDetailNote = (id) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        const endpoint = `/api/investors/${id}/` \n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        \n        return fetch(endpoint, {headers, })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n               \n                } else {\n                    toast.error(\"Server Error...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'FETCH_DETAIL_NOTE', detail: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authentication Error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", detail: res.data});\n                    throw res.data;\n                } \n                else if (res.status === 404) {\n                    toast.error(\"Investor is not found...\")\n                    dispatch({type: \"MESSAGE_NOT_FOUND\"});\n\n                }\n            })\n            .catch(error => {                \n                //error.redirect('/404');\n                //Handle error\n                console.log(\"error\", error);\n                // return dispatch({type: \"MESSAGE_NOT_FOUND\", detail: error});\n                // dispatch({type: \"MESSAGE_NOT_FOUND\", detail: error});\n            });\n    }\n}\n\nexport const updateDetailNote = (id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence, last_call, documents, attached) => {\n    return (dispatch, getState) => {\n\n        let headers = {'Accept': 'application/json'};\n        // let headers = {\"Content-Type\": \"multipart/form-data\"};\n\n        let {token} = getState().auth;\n\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        let formData = new FormData();\n        formData.append('text', text);\n        formData.append('phone', phone);\n        formData.append('status', status);\n        formData.append('is_corporate', is_corporate);\n        formData.append('is_payed', is_payed);\n        formData.append('email', email);\n        formData.append('linkedin_profile', linkedin_profile);\n        formData.append('website', website);\n\n        // Not required fields\n        if (correspondence) {\n            formData.append('correspondence', correspondence);\n        }\n        //check if attached & if documents(file) is not string\n        //if documents is string don't append formData\n        if (attached && \n          !(typeof documents === 'string' || documents instanceof String)) {\n            formData.append('documents', documents);\n        }\n\n        // formData need to convert ISO format string\n        if (last_call){\n            if (String(last_call) !==\"Invalid Date\") {\n                formData.append('last_call', last_call.toISOString());\n            }            \n        } else {\n            formData.append('last_call', \"\");\n        }\n\n        let noteId = id;\n        return fetch(`/api/investors/${noteId}/`, {headers, method: \"PUT\", body: formData})\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    toast.error(\"Server error...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 200) {\n                    toast.info(\"Investor \"+res.data.text+\" edited\")\n                    return dispatch({type: 'UPDATE_DETAIL_NOTE', detail: res.data, id});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authentication Error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\n\nexport const addDetailNote = (text, phone, status, is_corporate, email, linkedin_profile, website, correspondence) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n\n        let body = JSON.stringify({text, phone, status, is_corporate, email, linkedin_profile, website, correspondence });\n        return fetch(\"/api/investors/\", {headers, method: \"POST\", body})\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 201) {\n                    toast.info(\"Investor \"+res.data.text+\" added\")\n                    return dispatch({type: 'ADD_DETAIL_NOTE', detail: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\n","import React, { Component } from 'react'\n\nimport * as Inputs from '../../Atoms/AddInputs/AddInputs'\nimport { CheckboxIsCorp } from '../../Atoms/Checkboxes/CheckboxIsCorp'\n\nexport class InputFormNoteAdd extends Component {\n  render() {\n    const { text, phone, email,  \n      linkedin_profile, website, \n      correspondence, is_corporate,\n\n      errors, \n    } = this.props;\n\n    return (\n      <div>\n        <Inputs.InputName \n          onInputChange={this.props.onInputChange} \n          text={text} \n          errors={errors} \n        />\n        <Inputs.InputPhone \n          onInputChange={this.props.onInputChange} \n          phone={phone} \n          errors={errors} \n        />\n        <Inputs.InputEmail \n          onInputChange={this.props.onInputChange} \n          email={email} \n          errors={errors} \n        />      \n        <Inputs.InputLinkedin \n          onInputChange={this.props.onInputChange} \n          linkedin_profile={linkedin_profile} \n          errors={errors} \n        />\n        <Inputs.InputWebsite \n          onInputChange={this.props.onInputChange} \n          website={website} \n          errors={errors} \n        />      \n        <Inputs.InputCorrespondence \n          onInputChange={this.props.onInputChange} \n          correspondence={correspondence} \n          errors={errors} \n        />      \n        \n        <CheckboxIsCorp \n          handleCheckboxIsCorpBtnClick={this.props.handleCheckboxIsCorpBtnClick} \n          is_corporate={is_corporate} \n        />\n\n      </div>\n    )\n    \n  }\n}","import React, {Component} from 'react'\n\nimport { Link, Redirect } from 'react-router-dom'\nimport * as detail from \"../../../actions/noteDetailActions\";\nimport {connect} from 'react-redux';\nimport { Form, Button } from 'reactstrap';\n\nimport { InputFormNoteAdd } from '../Molecules/Forms/InputFormNoteAdd'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUndoAlt, faSave, } from '@fortawesome/free-solid-svg-icons'\n\nimport { handleValidation } from '../../../utils/helpers'\n\nclass NoteNew extends Component {\n    constructor(props){\n        super(props)       \n        this.state = {\n          text: \"\",\n          phone: \"\",\n          email: \"\",\n          status: \"Candidate\",\n          linkedin_profile: \"\",\n          website: \"\",\n          correspondence: \"\",\n          is_corporate: false,\n          id: null,\n          doneLoading: false,\n          errors: {},        \n          redirectToNewPage: false          \n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n      if (this.state.redirectToNewPage) {  \n        this.setState({\n          id: nextProps.detail.id,\n        })\n      }\n    }    \n\n    resetForm = () => {\n      this.setState({text: \"\", phone: '', email:'', errors: {}, status: 'Candidate', \n        is_corporate: false, linkedin_profile: \"\", website: \"\",\n        correspondence: \"\",\n      });\n    }\n    handleChange = (e) => {\n      e.preventDefault();\n      let key = e.target.name\n      let value = e.target.value\n      this.setState({\n          [key]: value,\n          errors: {}\n      })\n    }\n    changeValue = (e) => {\n      this.setState({status: e.currentTarget.textContent})\n    }\n\n    onCheckboxIsCorpBtnClick = () => {\n      this.setState({\n        is_corporate: !this.state.is_corporate,\n      });\n    }\n    // Force update page to /investors\n    refreshPage = () => {\n      window.location.href = '/investors';\n    }\n    submitNote = (e) => {\n      e.preventDefault();\n      // check validation from helper file\n      const validation_errors = handleValidation(this.state)\n      // check validation_errors dictionary is empty or has any errors\n      if (Object.keys(validation_errors).length === 0) {\n        this.props.addDetailNote(this.state.text, this.state.phone, this.state.status, \n          this.state.is_corporate, this.state.email, this.state.linkedin_profile, \n          this.state.website, this.state.correspondence)\n          .then(this.setState({ redirectToNewPage: true }))            \n          .catch(function (error) {\n             console.log(\"error\", error);\n           });\n      } else {\n        this.setState({errors: validation_errors}); \n      }\n    }\n\n    render () {\n        const { text, phone, email, \n          linkedin_profile, website,\n          correspondence, is_corporate,\n          errors } = this.state;\n        // The part that makes the redirect happen\n        if (this.state.redirectToNewPage && this.state.id) {\n          return (\n            <Redirect to={{pathname:`/investors/${this.state.id}`}} />\n          )\n        }\n        return(\n            <div>\n              <div className=\"mt-2 mb-2\">\n                <h3>Add New</h3>\n              </div>\n              <Form onSubmit={this.submitNote} className=\"form col col-sm-4 mt-2 p-2\">\n                <InputFormNoteAdd\n                  onInputChange={this.handleChange}\n                  handleCheckboxIsCorpBtnClick={this.onCheckboxIsCorpBtnClick} \n\n                  text={text} \n                  phone={phone}\n                  email={email}\n                  linkedin_profile={linkedin_profile}\n                  website={website}\n                  correspondence={correspondence}\n                  is_corporate={is_corporate}\n\n                  errors={errors} \n                /> \n                <Button size=\"lg\" className=\"rounded-0\" color=\"info\" type=\"submit\"><FontAwesomeIcon icon={faSave} color=\"white\"/></Button>\n                <Button size=\"lg\" className=\"rounded-0\" outline onClick={this.resetForm}>Clear</Button>\n                <Link to=\"/investors\" onClick={this.refreshPage} ><Button className=\"rounded-0\" size=\"lg\"><FontAwesomeIcon icon={faUndoAlt} color=\"white\"/> Cancel</Button></Link>\n\n            </Form>\n          </div>               \n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      detail: state.detail,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addDetailNote: (text, phone, status, is_corporate, email, linkedin_profile, website, correspondence) => {\n            return dispatch(detail.addDetailNote(text, phone, status, is_corporate, email, linkedin_profile, website, correspondence));\n        },\n    }\n}\n\n// export default NewNote;\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteNew);","import React, {Component} from 'react'\nimport * as lead from \"../../../actions/paymentsActions\";\nimport {connect} from 'react-redux';\nimport { LoadScreen } from '../Molecules/LoadScreen/LoadScreen'\nimport { Table } from 'reactstrap';\n\nclass Payments extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {         \n        loading: true,\n        errors: {},\n        lead: {},\n      };\n    }\n\n    componentDidMount(){\n      if (this.props.match){\n        this.props.fetchPaymentsLead()\n      }\n    }\n   \n    renderPayments() {\n      const { lead } = this.props;\n        if (lead.leads) {\n          return (\n            <div>\n              <h3>Leads View</h3>\n              <Table className=\"table text-center\" striped>\n                <thead>\n                  <tr>\n                    <th className=\"table-num__title\">#</th>\n                    <th>Developer</th>\n                    <th>Total Leads</th>\n                    <th>Processed</th>\n                    <th>Converted</th>\n                    <th>Rejected</th>\n                    <th>Next Payment</th>\n                  </tr>\n                </thead>  \n                <tbody>\n                  {lead.leads.length > 0 ? lead.leads.map((item,id) => (\n                    <tr key={id}>\n                        <th scope=\"row\" className=\"table-num__text\">{id+1}</th>\n                        <td>{item.owner}</td>\n                        <td>{item.total}</td>\n                        <td>{item.processed}</td>\n                        <td>{item.converted}</td>\n                        <td>{item.rejected}</td>\n                        <td>{item.price}</td>\n                    </tr>\n                  )) : <tr><td colSpan=\"7\">Table is empty. Add your investors</td></tr>}\n                </tbody>                     \n              </Table>\n            </div>              \n          );\n        }\n    }\n    render () {\n      const { loading } = this.props\n      return(\n          <div>\n            { loading ? <LoadScreen /> : this.renderPayments() }\n        </div>               \n      )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      lead: state.lead,\n      loading: state.lead.loading\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      fetchPaymentsLead: () => {\n          dispatch(lead.fetchPaymentsLead());\n      },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Payments);","export const fetchPaymentsLead = () => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        const endpoint = `/api/payments/` \n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        \n        return fetch(endpoint, {headers, })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                // } else if (res.status === 404) {\n                //     dispatch({type: \"MESSAGE_NOT_FOUND\", data: res.data});\n                //     throw res.data;\n                } else {\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'FETCH_PAYMENTS_LEAD', leads: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                } else if (res.status === 404) {\n                    dispatch({type: \"ERROR_NOT_FOUND\", leads: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport RequireAuth from \"./auth/RequireAuth\";\nimport Landing from \"./Landing\";\nimport Login from \"./auth/Login\";\nimport Logout from \"./auth/Logout\";\nimport Signup from \"./auth/Signup\";\nimport SignupDone from \"./auth/SignupDone\";\nimport AccountActivation from \"./auth/AccountActivation\";\nimport UserProfile from \"./auth/UserProfile\";\nimport UserProfileEdit from \"./auth/UserProfileEdit\";\nimport PasswordChange from \"./auth/PasswordChange\";\nimport PasswordReset from \"./auth/PasswordReset\";\nimport PasswordResetDone from \"./auth/PasswordResetDone\";\nimport PasswordResetConfirm from \"./auth/PasswordResetConfirm\";\nimport NoMatch from \"./NoMatch\";\n\nimport ReactifyComp from '../routingComps/ReactifyComp'\nimport PostDetail from '../reactify/PostDetail';\nimport PostCreate from '../reactify/PostCreate'\nimport Notes from './notes/Templates/Notes'\nimport NoteDetail from './notes/Templates/NoteDetail'\nimport NoteNew from './notes/Templates/NoteNew'\nimport Payments from './notes/Templates/Payments'\n\nconst MainContent = () => (\n    <div>\n        <Switch>\n            <Route exact path=\"/\" component={props => <Landing {...props} />} />\n            <Route path=\"/reload\" component={null} key=\"reload\" />\n            <Route path=\"/login\" component={props => <Login {...props} />} />\n            <Route path=\"/logout\" component={props => <Logout {...props} />}/>\n            <Route path=\"/signup\" component={props => <Signup {...props} />}/>\n            <Route path=\"/activation/confirm-email/:key\" component={props => <AccountActivation {...props} />}/>\n            <Route path=\"/signup_done\" component={props => <SignupDone {...props} />}/>\n            <Route path=\"/reset_password\" component={props => <PasswordReset {...props} />}/>\n            <Route path=\"/reset_password_done\" component={props => <PasswordResetDone {...props} />}/>\n            <Route path=\"/pass/reset/:uid/:token/\" component={props => <PasswordResetConfirm {...props} />}/>\n            <Route path=\"/profile\" component={RequireAuth(UserProfile)}/>\n            <Route path=\"/profile_edit\" component={RequireAuth(UserProfileEdit)}/>\n            <Route path=\"/change_password\" component={RequireAuth(PasswordChange)}/>\n            <Route path='/react/posts/create' component={RequireAuth(PostCreate)}/>\n            <Route path='/react/posts/:slug' component={RequireAuth(PostDetail)}/>\n            <Route path='/react/posts' component={RequireAuth(ReactifyComp)} />\n            <Route exact path='/investors' component={RequireAuth(Notes)} />\n            <Route path='/investors/add' component={RequireAuth(NoteNew)}/>\n            <Route path='/investors/:id' component={RequireAuth(NoteDetail)}/>\n            <Route exact path='/payments' component={RequireAuth(Payments)} />\n\n            <Route component={props => <NoMatch {...props} />}/>\n        </Switch>\n    </div>\n);\n\nexport default MainContent;\n","import React, {Component} from \"react\";\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css'; \n\nimport Header from \"./Header\";\nimport MainContent from \"./MainContent\";\n\nexport default class App extends Component {\n\n    render() {\n        return (\n            <div>                \n                <Header />\n                <div className=\"container\">\n                    <ToastContainer \n                      hideProgressBar={true} \n                      position=\"bottom-right\"\n                      autoClose={3000}\n                      removeCloseButton={true}\n                    />\n                \t<MainContent />\n                </div>\n            </div>\n        );\n    }\n}","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"bootstrap/dist/css/bootstrap.css\";\n\nimport \"./styles/style.scss\"\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import { Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport store from \"./store\";\n// import history from \"./utils/historyUtils\";\nimport { authLogin } from \"./actions/authActions\";\nimport App from \"./components/App\";\nimport registerServiceWorker from './registerServiceWorker';\n\n// import { syncHistoryWithStore } from 'react-router-redux'\n\n\n// const browserhistory = syncHistoryWithStore(history, store)\n\nregisterServiceWorker();\n\nconst token = localStorage.getItem(\"token\");\n\nif (token) {\n    store.dispatch(authLogin(token));\n}\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <App />\n        </Router>\n    </Provider>\n    , document.getElementById(\"root\"));\n"],"sourceRoot":""}