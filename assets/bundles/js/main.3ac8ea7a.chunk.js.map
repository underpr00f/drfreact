{"version":3,"sources":["../config/polyfills.js","reducers/notesReducer.js","constants/actionTypes.js","reducers/index.js","reducers/authReducer.js","reducers/noteDetailReducer.js","reducers/paymentsReducer.js","store/index.js","constants/urls.js","utils/authUtils.js","actions/authActions.js","utils/renderUtils.js","components/Header.js","components/auth/RequireAuth.js","components/Landing.js","components/auth/Login.js","components/auth/Logout.js","components/auth/Signup.js","components/auth/SignupDone.js","components/auth/AccountActivation.js","components/auth/UserProfile.js","components/auth/Atoms/ImageDrop/ImageDrop.js","components/auth/UserProfileEdit.js","components/auth/PasswordChange.js","components/auth/PasswordReset.js","components/auth/PasswordResetDone.js","components/auth/PasswordResetConfirm.js","components/NoMatch.js","reactify/PostInline.js","reactify/Posts.js","routingComps/ReactifyComp.js","reactify/PostForm.js","reactify/PostDetail.js","reactify/PostCreate.js","actions/notesActions.js","components/notes/Molecules/LoadScreen/LoadScreen.js","components/notes/Organisms/Modal/Modal.js","components/notes/Atoms/AddInputs/AddInputs.js","components/notes/Atoms/Checkboxes/CheckboxIsCorp.js","components/notes/Atoms/Checkboxes/CheckboxIsPayed.js","components/notes/Atoms/Dropdown/Dropdown.js","components/notes/Molecules/Forms/InputFormNoteQuickAdd.js","utils/helpers.js","components/notes/Templates/Notes.js","components/notes/Atoms/DatePick/DatePickLastCall.js","components/notes/Atoms/FileDrop/FileDrop.js","components/notes/Molecules/Forms/InputFormNoteDetail.js","components/notes/Molecules/Tables/DetailPreviewTable.js","components/notes/Templates/NoteDetail.js","actions/noteDetailActions.js","components/notes/Molecules/Forms/InputFormNoteAdd.js","components/notes/Templates/NoteNew.js","components/notes/Templates/Payments.js","actions/paymentsActions.js","components/MainContent.js","components/App.js","registerServiceWorker.js","index.js"],"names":["Promise","__webpack_require__","enable","window","Object","assign","initialState","noteitems","loading","AuthTypes","LOGIN","LOGOUT","CHANGE_PASSWORD","USER_PROFILE","rootReducer","combineReducers","form","formReducer","auth","state","arguments","length","undefined","action","type","objectSpread","authenticated","token","payload","user","notes","noteList","map","a","reduce","b","concat","toConsumableArray","slice","filter","index","self","findIndex","t","created_at","id","unshift","note","selectById","indexEdit","p","noteToUpdate","text","phone","status","is_corporate","is_payed","email","linkedin_profile","website","correspondence","splice","deleteById","indexDel","nextafterdelete","next","deleted","detail","updated","hasError","errors","page","lead","leads","newstate","forEach","item","true_investors","converted","processed","rejected","count_payed","payed","price_all","price_payed","key","prices","value","Math","ceil","price","error","store","logger","createLogger","middleware","applyMiddleware","thunk","compose","createStoreWithMiddleware","createStore","configureStore","ROOT_URL","HOMEPAGE_URL","require","homepage","AuthUrls","SIGNUP","RESET_PASSWORD","RESET_PASSWORD_CONFIRM","USER_ACTIVATION","getUserToken","authLogin","getUserProfile","dispatch","getState","axios","get","headers","authorization","then","response","data","catch","console","log","processServerError","keys","newDict","push","_error","renderField","_ref","input","label","_ref$meta","meta","touched","react_default","createElement","className","renderTextAreaField","_ref2","_ref2$meta","renderError","errorMessages","JSON","stringify","toast","Header","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleNavbar","setState","collapsed","Nav","navbar","NavItem","NavLink","href","avatar","src","alt","username","renderUser","Navbar","color","dark","expand","NavbarBrand","NavbarToggler","onClick","Collapse","isOpen","renderLinks","Component","connect","RequireAuth","ComposedComponent","Authentication","_Component","apply","inherits","createClass","checkAuthentication","nextProps","history","is_staff","is_superuser","Landing","Login","_this$props","handleSubmit","pristine","submitting","onSubmit","Field","name","component","validate","required","message","Link","role","to","Button","disabled","reduxForm","formValues","loginUrl","post","localStorage","setItem","processedError","SubmissionError","onChange","values","clearSubmitErrors","test","Logout","logoutUser","removeItem","Signup","password1","password2","signupUrl","SignupDone","AccountActivation","match","params","activateUserUrl","info","UserProfile","Table","striped","colSpan","style","backgroundImage","first_name","last_name","about","withRouter","ImageDrop","attached","handleDrop","files","_this2","_this$props$meta","classNameLabel","cbFunction","drop_class","drop_text","dist_es","onDrop","f","maxSize","getRootProps","getInputProps","defaultProps","Atoms_ImageDrop_ImageDrop","dropzone_options","multiple","accept","initialValues","object","formData","FormData","String","append","patch","Content-Type","PasswordChange","changePasswordUrl","new_password1","new_password2","PasswordReset","resetPasswordUrl","PasswordResetDone","PasswordResetConfirm","_props$match$params","uid","resetPasswordConfirmUrl","NoMatch","PostInline","elClass","showContent","pathname","slug","fromDashboard","title","content","Posts","togglePostListClass","bind","assertThisInitialized","handleNewPost","loadMorePosts","posts","postsListClass","previous","author","count","loadPosts","nextEndpoint","endpoint","thisComp","lookupOptions","method","csrfToken","cookie","load","fetch","json","responseData","results","postItemData","currentPosts","event","preventDefault","postItem","reactify_PostInline","ReacTifyComp","reactify_Posts","PostForm","handleInputChange","handleDraftChange","clearForm","postTitleRef","React","createRef","postContentRef","deletePost","draft","publish","moment","Date","format","X-CSRFToken","Authorization","body","credentials","newPostItemUpdated","alert","newPostItemCreated","defaultState","postCreateForm","reset","current","updatePost","createPost","target","defineProperty","cancelClass","deleteClass","ref","el","htmlFor","placeholder","checked","PostDetail","handlePostItemUpdated","doneLoading","loadPost","owner","reactify_PostForm","postItemUpdated","PostCreate","fetchNotes","res","LoadScreen","ModalDelete","modaldelete","toggle","Modal","ModalHeader","ModalBody","ModalFooter","FormGroup","row","onSelectForDelete","index_es","icon","faTrash","InputName","Label","Input","onInputChange","FormText","InputPhone","_Component2","_this$props2","InputEmail","_Component3","_this$props3","InputLinkedin","_Component4","_this$props4","InputWebsite","_Component5","_this$props5","InputCorrespondence","_Component6","_this$props6","CheckboxIsCorp","faMale","faUsers","handleCheckboxIsCorpBtnClick","active","CheckboxIsPayed","faHandHoldingUsd","faCheckCircle","handleCheckboxIsPayBtnClick","CustomDropdown","dropdownOpen","Dropdown","onToggle","DropdownToggle","caret","DropdownMenu","DropdownItem","onChangeValue","InputFormNoteQuickAdd","updateNoteId","AddInputs_InputName","AddInputs_InputPhone","AddInputs_InputEmail","AddInputs_InputLinkedin","AddInputs_InputWebsite","AddInputs_InputCorrespondence","CheckboxIsCorp_CheckboxIsCorp","Dropdown_CustomDropdown","CheckboxIsPayed_CheckboxIsPayed","handleValidation","fields","trim","lastAtPos","lastIndexOf","lastDotPos","indexOf","Notes","resetForm","addNew","modal","resetSearch","searchtext","resetSort","order","handleOrderNotes","selectForEdit","updateNoteIndex","selectForDelete","deleteNote","prevState","toggleModal","toggleModalDelete","handleChange","e","_this$setState","changeValue","currentTarget","textContent","searchNotes","is_ordering_name","onCheckboxIsCorpBtnClick","onCheckboxIsPayBtnClick","onBtnClickOrderingName","ordername","newordername","charAt","includes","mapped","join","orderNotes","submitNote","validation_errors","addNote","updateNote","nextForDelete","lastChar","parseInt","_this$state","Form","InputFormNoteQuickAdd_InputFormNoteQuickAdd","faSave","outline","_this$state2","faPlusSquare","renderModal","Modal_ModalDelete","CustomInput","inline","faSearch","faLongArrowAltDown","rotation","faExchangeAlt","faTimes","scope","owner_username","faEdit","LoadScreen_LoadScreen","renderNotes","noteId","DatePickLastCall","handleChangeDate","date","defaultFormat","toDate","add_call","last_call","is_valid_date","isValid","handleResetCallClick","react_datepicker_es","selected","showTimeSelect","timeFormat","timeIntervals","dateFormat","timeCaption","handleAddCallClick","FileDrop","acceptedFiles","rejectedFiles","onSelectDrop","documents","split","faFileUpload","InputFormNoteDetail","DatePickLastCall_DatePickLastCall","Atoms_FileDrop_FileDrop","DetailPreviewTable","NoteDetail","changeDate","getData","onAddCallClick","onResetCallClick","refreshPage","location","updateDetailNote","fetchDetailNote","detailed","Container","fluid","Row","InputFormNoteDetail_InputFormNoteDetail","size","faUndoAlt","DetailPreviewTable_DetailPreviewTable","renderNote","Accept","toISOString","InputFormNoteAdd","NoteNew","addDetailNote","redirectToNewPage","Redirect","InputFormNoteAdd_InputFormNoteAdd","Payments","fetchPaymentsLead","total","renderPayments","MainContent","Switch","Route","exact","path","components_Landing","auth_Login","auth_Logout","auth_Signup","auth_AccountActivation","SignupDone_SignupDone","auth_PasswordReset","PasswordResetDone_PasswordResetDone","auth_PasswordResetConfirm","UserProfileEdit","ReactifyComp","components_NoMatch","App","components_Header","lib","hideProgressBar","position","autoClose","removeCloseButton","components_MainContent","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","URL","process","origin","addEventListener","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","getItem","ReactDOM","render","es","BrowserRouter","App_App","document","getElementById"],"mappings":"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","file":"js/main.3ac8ea7a.chunk.js","sourcesContent":["'use strict';\n\nif (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where React gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes React's erratic future behavior.\n  require('promise/lib/rejection-tracking').enable();\n\n  window.Promise = require('promise/lib/es6-extensions.js');\n} // fetch() polyfill for making API calls.\n\n\nrequire('whatwg-fetch'); // Object.assign() is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\n\n\nObject.assign = require('object-assign'); // In tests, polyfill requestAnimationFrame since jsdom doesn't provide it yet.\n// We don't polyfill it in the browser--this is user's responsibility.\n\nif (process.env.NODE_ENV === 'test') {\n  require('raf').polyfill(global);\n}","const initialState = [{noteitems: [], \n                       loading: true\n                    }]\n\nexport default function notes(state=initialState, action) {\n    //собрать все массивы с ключами noteitems и объединить в один массив\n    let noteList = state.map(a => a.noteitems).reduce((a, b) => [...a, ...b], []).slice();\n\n    switch (action.type) {\n\n        case 'FETCH_NOTES':\n            //удаление дубликатов\n            noteList = noteList.filter((noteList, index, self) => self.findIndex(t => t.created_at === noteList.created_at && t.id === noteList.id) === index)\n            \n            return [                    \n                    {...state[state.length-1],\n                    noteitems: noteList,\n                    loading: false,\n                    // deleted: false\n                    // ...action.notes\n                    },\n                ];\n        case 'SEARCH_NOTES':\n            noteList = action.notes\n        \n            return [                    \n\n                    {...state,\n                    ...action.notes,\n                    loading: false,},\n                ];\n\n        case 'ORDER_NOTES':\n            noteList = action.notes\n       \n            return [                    \n\n                    {...state,\n                    ...action.notes,\n                    loading: false,},\n                ];\n\n\n        case 'ADD_NOTE':\n            // Добавляем заметку\n            noteList.unshift(action.note);\n            // Удаляем нижнюю\n            // if (noteList.length > 0) {\n            //     noteList.pop();\n            // }\n\n            return [\n                        //берем последний стейт и добавляем к нему общий массив\n                        {...state[state.length-1],\n                            noteitems: noteList,\n                            loading: false,},\n\n                    ];\n\n        case 'UPDATE_NOTE':\n\n            //Поиск в общем массиве элемента по id и index (2мерный массив)\n            let selectById = state[action.index].noteitems[action.id].id\n            let indexEdit = noteList.findIndex(p => p.id === selectById) \n\n            let noteToUpdate = noteList[indexEdit]\n            noteToUpdate.text = action.note.text;\n            noteToUpdate.phone = action.note.phone;\n            noteToUpdate.status = action.note.status;\n            noteToUpdate.is_corporate = action.note.is_corporate;\n            noteToUpdate.is_payed = action.note.is_payed;\n            noteToUpdate.email = action.note.email;\n            noteToUpdate.linkedin_profile = action.note.linkedin_profile;\n            noteToUpdate.website = action.note.website;\n            noteToUpdate.correspondence = action.note.correspondence;\n            noteList.splice(indexEdit, 1, noteToUpdate);\n            return [\n                    {...state[state.length-1],\n                        noteitems: noteList,\n                        loading: false,},\n                    ];\n\n        case 'DELETE_NOTE':\n            //Поиск в общем массиве элемента по id и index (2мерный массив)\n            let deleteById = state[action.id].noteitems[action.index].id\n            let indexDel = noteList.findIndex(p => p.id === deleteById)                      \n            noteList.splice(indexDel, 1);\n            return [\n                        {...state[state.length-1],\n                            noteitems: noteList,\n                            loading: false,\n                            nextafterdelete: state[0].next,\n                            deleted: true\n                        }\n                    ];\n\n        default:\n            \n    }\n    return state;\n}\n","export const AuthTypes = {\n    LOGIN: \"LOGIN\",\n    LOGOUT: \"LOGOUT\",\n    CHANGE_PASSWORD: \"CHANGE_PASSWORD\",\n    USER_PROFILE: \"USER_PROFILE\",\n    // WITH_ERROR: \"WITH_ERROR\"\n};","import {combineReducers} from \"redux\";\nimport { reducer as formReducer } from \"redux-form\";\n\nimport notesReducer from \"./notesReducer\";\nimport noteDetailReducer from \"./noteDetailReducer\";\nimport authReducer from \"./authReducer\";\nimport paymentsReducer from \"./paymentsReducer\";\n// import { routerReducer } from 'react-router-redux'\n\nconst rootReducer = combineReducers({\n    form: formReducer,\n    auth: authReducer,\n    notes: notesReducer,\n    detail: noteDetailReducer,\n    lead: paymentsReducer,\n    // routing: routerReducer\n});\n\nexport default rootReducer;\n\n\n","import { AuthTypes } from \"../constants/actionTypes\";\n\nexport default function(state = {}, action) {\n    switch(action.type) {\n        case AuthTypes.LOGIN:\n            return { ...state, authenticated: true, token: action.payload};\n        case AuthTypes.LOGOUT:\n            return { ...state, authenticated: false, token: null};\n        case AuthTypes.USER_PROFILE:\n            return { ...state, user: action.payload};\n        // case AuthTypes.WITH_ERROR:\n        //     return { ...state, error: action.payload};\n        default:\n        \t// will NOT execute because of the line preceding the switch.\n    }\n    return state;\n}","export default function noteDetailReducer(state = {loading: true, updated: false}, action) {\n    switch(action.type) {\n\n        case 'FETCH_DETAIL_NOTE':\n            return { ...state, ...action.detail, loading: false};\n        case 'UPDATE_DETAIL_NOTE':\n            return { ...state, ...action.detail, loading: false, updated: true};\n        case 'ADD_DETAIL_NOTE':\n            return { ...state, ...action.detail, loading: false};\n\n        case 'MESSAGE_NOT_FOUND':\n            return {...state, \n                hasError: true,\n                errors: {page: \"Page not found\"},\n                loading: false,\n            };\n\n        default:\n          // will NOT execute because of the line preceding the switch.\n    }\n    return state;\n}","export default function paymentsReducer(state = {leads: \"\", loading: true}, action) {\n    switch(action.type) {\n\n        case 'FETCH_PAYMENTS_LEAD':\n            // initialize newstate for reducer (to add calculated parameter lead.price)\n            let newstate =  [...action.leads];\n            // calculating next payment\n            newstate.forEach(item=>{\n              // get true_investors (without candidate status)\n              let true_investors = item.converted + item.processed + item.rejected\n              // get count of payed investors\n              let count_payed = item.payed\n              let price_all = 0;\n              let price_payed = 0;\n\n              // Calculating price\n              for(let key in item.prices){\n                let value = item.prices[key]\n                // Calculating price for investors without Candidate status\n                if (true_investors >=10){\n                    if (true_investors>=key) {\n                        price_all += 10*value\n                    } else {\n                        if (Math.ceil(true_investors/10) === key/10) {\n                            price_all += (true_investors+10-key)*value \n                        }\n                    }\n                }\n                // Get payed price\n                if (count_payed && true_investors >=10){\n                    if (count_payed >= key) {\n                        price_payed += 10*value\n                    } else {\n                        if (Math.ceil(count_payed/10) === key/10) {\n                            price_payed += (count_payed+10-key)*value \n                        }\n                    }\n                }\n              }\n              // output price without payed prices\n              item.price =price_all-price_payed;              \n            });\n            return { ...state, leads: [...newstate], loading: false }\n        case 'LEAD_NOT_FOUND':\n            return {...state, loading: false, error: \"Not found\"};\n        default:\n          // will NOT execute because of the line preceding the switch.\n    }\n    return state;\n}","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from '../reducers';\n\nfunction configureStore(initialState) {\n    let createStoreWithMiddleware;\n\n    const logger = createLogger();\n    const middleware = applyMiddleware(thunk, logger);\n\n    createStoreWithMiddleware = compose(\n        middleware\n    );\n\n    return createStoreWithMiddleware(createStore)(rootReducer, initialState);\n}\n\nlet store = configureStore();\n\nexport default store;","let ROOT_URL = \"http://localhost:8000/\";\n\n// FOR PRODUCTION URLS\nconst HOMEPAGE_URL = require('../../package.json').homepage;\n\nif (process.env.NODE_ENV === \"production\") {\n\tROOT_URL = HOMEPAGE_URL\n}\n\nexport const AuthUrls = {\n    LOGIN: `${ROOT_URL}rest-auth/login/`,\n    SIGNUP: `${ROOT_URL}rest-auth/registration/`,\n    CHANGE_PASSWORD: `${ROOT_URL}rest-auth/password/change/`,\n    RESET_PASSWORD: `${ROOT_URL}rest-auth/password/reset/`,\n    RESET_PASSWORD_CONFIRM: `${ROOT_URL}rest-auth/password/reset/confirm/`,\n    USER_ACTIVATION: `${ROOT_URL}rest-auth/registration/verify-email/`,\n    USER_PROFILE: `${ROOT_URL}rest-auth/user/`\n};","export function getUserToken(state) {\n    return state.auth.token;\n}","import axios from \"axios\";\nimport { SubmissionError } from 'redux-form';\n// import { actions as notifActions } from 'redux-notifications';\nimport { AuthTypes } from \"../constants/actionTypes\";\nimport { AuthUrls } from \"../constants/urls\";\nimport store from \"../store\";\nimport { getUserToken } from \"../utils/authUtils\";\nimport { toast } from 'react-toastify';\n\n// const { notifSend } = notifActions;\nexport function authLogin(token) {\n    return {\n        type: AuthTypes.LOGIN,\n        payload: token,\n    };\n}\n\nexport function loginUser(formValues, dispatch, props) {\n        const loginUrl = AuthUrls.LOGIN;\n\n        return axios.post(loginUrl, formValues).then((response) => {\n            // If request is good...\n            // Update state to indicate user is authenticated\n            const token = response.data.key; \n\n            dispatch(authLogin(token));\n            localStorage.setItem(\"token\", token);\n\n            // redirect to the route '/'\n            props.history.push(\"/investors\");\n            // to getUserProfile in Header\n            dispatch(getUserProfile())\n        }).catch(error => {            \n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n\nexport function logoutUser() {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"csrftoken\");\n    return {\n        type: AuthTypes.LOGOUT\n    };\n}\n\nexport function signupUser(formValues, dispatch, props) {\n    const signupUrl = AuthUrls.SIGNUP;\n\n    return axios.post(signupUrl, formValues)\n        .then((response) => {\n            // If request is good...\n            // you can login if email verification is turned off.\n            // const token = response.data.key;\n            // dispatch(authLogin(token));\n            // localStorage.setItem(\"token\", token);\n\n            // email need to be verified, so don't login and send user to signup_done page.\n            // redirect to signup done page.\n            props.history.push(\"/signup_done\");\n        })\n        .catch((error) => {\n            // If request is bad...\n            // Show an error to the user\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n\nfunction setUserProfile(payload) {\n    return {\n        type: AuthTypes.USER_PROFILE,\n        payload: payload\n    };\n}\n\nexport function getUserProfile() {\n    return function(dispatch) {\n        const token = getUserToken(store.getState());\n\n        if (token) {\n            axios.get(AuthUrls.USER_PROFILE, {\n                headers: {\n                    authorization: 'Token ' + token\n                }\n            }).then(response => {\n                dispatch(setUserProfile(response.data))\n            }).catch((error) => {\n                // If request is bad...\n                // Show an error to the user\n                console.log(error);\n                // TODO: send notification and redirect\n            });\n        }\n    };\n}\n\nexport function changePassword(formValues, dispatch, props) {\n    const changePasswordUrl = AuthUrls.CHANGE_PASSWORD;\n    const token = getUserToken(store.getState());\n\n    if (token) {\n        return axios.post(changePasswordUrl, formValues, {\n            headers: {\n                authorization: 'Token ' + token\n            }\n        })\n            .then((response) => {\n                toast.info('Password has been changed successfully')\n                // dispatch(notifSend({\n                //     message: \"Password has been changed successfully\",\n                //     kind: \"info\",\n                //     dismissAfter: 5000\n                // }));\n                // redirect to the route '/profile'\n                props.history.push(\"/profile\");\n            })\n            .catch((error) => {\n                // If request is bad...\n                // Show an error to the user\n                const processedError = processServerError(error.response.data);\n                throw new SubmissionError(processedError);\n            });\n    }\n}\n\nexport function resetPassword(formValues, dispatch, props) {\n    const resetPasswordUrl = AuthUrls.RESET_PASSWORD;\n\n    return axios.post(resetPasswordUrl, formValues)\n        .then(response => {\n            // redirect to reset done page\n            props.history.push(\"/reset_password_done\");\n        }).catch((error) => {\n            // If request is bad...\n            // Show an error to the user\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n\nexport function confirmPasswordChange(formValues, dispatch, props) {\n    const { uid, token } = props.match.params;\n    const resetPasswordConfirmUrl = AuthUrls.RESET_PASSWORD_CONFIRM;\n    const data = Object.assign(formValues, { uid, token });\n\n    return axios.post(resetPasswordConfirmUrl, data)\n        .then(response => {\n            toast.info('Password has been reset successfully, please log in')\n            props.history.push(\"/login\");\n        }).catch((error) => {\n            // If request is bad...\n            // Show an error to the user\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n\nexport function activateUserAccount(formValues, dispatch, props) {\n    const { key } = props.match.params;\n    const activateUserUrl = AuthUrls.USER_ACTIVATION;\n    const data = Object.assign(formValues, { key });\n\n    return axios.post(activateUserUrl, data)\n        .then(response => {\n            toast.info('Your account has been activated successfully, please log in')\n            props.history.push(\"/login\");\n        }).catch((error) => {\n            // If request is bad...\n            // Show an error to the user\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n\nexport function updateUserProfile(formValues, dispatch, props) {\n    const token = getUserToken(store.getState());\n\n    let object = formValues\n\n    // Fix problem with update profile without upload avatar\n    const formData = new FormData(); \n    if (typeof formValues.avatar === 'string' || \n        formValues.avatar instanceof String ||\n        formValues.avatar === null) {\n        Object.keys(object).forEach(key => \n            (key !== \"avatar\") && formData.append(key, object[key])      \n        );\n    } else {\n        Object.keys(object).forEach(key => \n            formData.append(key, object[key])      \n        );\n    }\n\n    // adding \"Content-Type\": \"multipart/form-data\", for images\n    return axios.patch(AuthUrls.USER_PROFILE, formData, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\",\n                authorization: 'Token ' + token\n            }\n        })\n        .then(response => {\n            toast.info('Your profile has been updated successfully')\n            props.history.push(\"/profile\");\n        }).catch((error) => {\n            // If request is bad...\n            // Show an error to the user\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n// util functions\nfunction processServerError(error) {\n\n    return  Object.keys(error).reduce(function(newDict, key) {\n        if (key === \"non_field_errors\") {\n            newDict[\"_error\"].push(error[key]);\n        } else if (key === \"token\") {\n            // token sent with request is invalid\n            newDict[\"_error\"].push(\"The link is not valid any more.\");\n        } else {\n            newDict[key] = error[key];\n        }\n        return newDict\n    }, {\"_error\": []});\n}","import React from \"react\";\nimport { toast } from 'react-toastify';\n\nexport const renderUser = (user) => {\n  if (user) {\n      return (\n        <div>\n            {user.avatar ? <img src={`${user.avatar}`} className=\"user-avatar\" alt=\"Avatar\" /> : \"\"}            \n            <span className=\"user-username\">{user.username}</span>\n        </div>\n      );\n  }\n};\n\nexport const renderField = ({ input, label, type, meta: { touched, error } }) => (\n    <div>\n        <label>{label}</label>\n        <div>\n            <input className=\"form-control\" {...input} type={type}/>\n        </div>\n        {touched && ((error && <div className=\"alert alert-danger p-1\"><small>{error}</small></div>))}\n    </div>\n);\n\nexport const renderTextAreaField = ({ input, label, type, meta: { touched, error } }) => (\n    <div>\n        <label>{label}</label>\n        <div>\n            <textarea className=\"form-control\" {...input} type={type} />\n        </div>\n        {touched && ((error && <div className=\"alert alert-danger p-1\"><small>{error}</small></div>))}\n    </div>\n);\nexport const renderImageField = ({ input, label, type, meta: { touched, error } }) => (\n    <div>\n        <label>{label}</label>\n        <div>\n            <input className=\"form-control\" {...input} type={type}/>\n        </div>\n        {touched && ((error && <div className=\"alert alert-danger p-1\"><small>{error}</small></div>))}\n    </div>\n);\nexport const renderError = (errorMessages) => {\n    if ( errorMessages ) {\n        if (JSON.stringify(errorMessages)!==\"[]\") {\n            toast.error(errorMessages[0][0])          \n        } else {\n            toast.error(\"Error...\")\n        }  \n    } \n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n// import { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n    } from 'reactstrap';\n\nimport { getUserProfile } from \"../actions/authActions\";\nimport { renderUser } from \"../utils/renderUtils\";\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            collapsed: true\n        };\n    }\n    toggleNavbar = () => {\n        this.setState({\n            collapsed: !this.state.collapsed\n        });\n    }\n\n    static propTypes = {\n        authenticated: PropTypes.bool,\n        getUserProfile: PropTypes.func.isRequired,\n        user: PropTypes.object\n    };\n    componentWillMount() {\n        this.props.getUserProfile();\n    } \n\n    renderLinks() {\n        if (this.props.authenticated) {\n            const { user } = this.props\n            return (\n                \n                    <Nav navbar>\n                        <NavItem key=\"investors\">\n                            <NavLink href={\"/investors\"}>Investors</NavLink>\n                        </NavItem>\n                        <NavItem key=\"payments\">\n                            <NavLink href={\"/payments\"}>Payments</NavLink>\n                        </NavItem>\n                        <div className=\"navbar-profile\">\n                            <NavItem key=\"profile\">\n                                <NavLink href=\"/profile\">{renderUser(user)}</NavLink>\n                            </NavItem>\n                            <NavItem key=\"logout\">\n                                <NavLink href=\"/logout\" className=\"nav-logout\">Logout</NavLink>\n                            </NavItem>\n                        </div>\n                    </Nav>\n                \n            );\n\n        } else {\n            return (\n                    <Nav className=\"ml-auto\" navbar>\n                        <NavItem key=\"login\">\n                            <NavLink href=\"/login\">Login</NavLink>\n                        </NavItem>\n                        <NavItem key=\"signup\">\n                            <NavLink href=\"/signup\">Sign Up</NavLink>\n                        </NavItem>\n                    </Nav>\n            );\n        }\n    }\n\n    render() {\n        return (\n            <Navbar color=\"info\" dark expand=\"md\">\n                <NavbarBrand href=\"/\">Lead Platform</NavbarBrand>\n                <NavbarToggler onClick={this.toggleNavbar} />\n                  <Collapse isOpen={!this.state.collapsed} navbar>                    \n                        {this.renderLinks()}\n                  </Collapse>\n            </Navbar>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        authenticated: state.auth.authenticated,\n        user: state.auth.user\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getUserProfile: () => {\n            return dispatch(getUserProfile());\n        }\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n// import {withRouter} from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nexport default function(ComposedComponent) {\n    class Authentication extends Component {\n\n        static propTypes = {\n            history: PropTypes.object\n        };\n\n        componentWillMount() {\n            this.checkAuthentication(this.props);\n\n        }\n\n        componentWillUpdate(nextProps) {\n            this.checkAuthentication(nextProps);\n        }\n\n        checkAuthentication(props) {\n            if (!props.authenticated) {\n                this.props.history.push(\"/login\");\n            }\n        }\n\n        render() {\n            return <ComposedComponent {...this.props} />\n        }\n    }\n\n    function mapStateToProps(state) {\n\n        // provide is_staff to props\n        let is_staff = false;\n        if (state.auth.user && (state.auth.user.is_staff || state.auth.user.is_superuser)) {\n            is_staff = true;\n        }\n        return { authenticated: state.auth.authenticated, \n                is_staff: is_staff, \n            }\n    }\n    // return withRouter(connect(mapStateToProps)(Authentication));\n    return connect(mapStateToProps)(Authentication);\n}\n","import React, { Component } from 'react'\n// import PostList from '../posts/PostList';\n// import { Link } from 'react-router-dom'\n\nclass Landing extends Component {\n  render () {\n    return (\n      \t<div className='text-center'>\t\n\t\t\t<h2>Lead Platform based on DRF+React+Redux. Login or Signup to test</h2>             \n\t\t</div>\n    )\n  }\n}\nexport default Landing\n","import React, { Component } from \"react\";\n// import T from \"prop-types\";\n\nimport { reduxForm, Field, clearSubmitErrors, propTypes } from \"redux-form\";\nimport { Link } from \"react-router-dom\";\nimport { required } from \"redux-form-validators\"\n\nimport { renderField, renderError} from \"../../utils/renderUtils\";\nimport { loginUser } from \"../../actions/authActions\";\n\nimport { Button, } from 'reactstrap';\n\nclass Login extends Component {\n    static propTypes = {\n        ...propTypes\n    };\n    // static propTypes = {\n    //     form: T.string.isRequired,\n    //     onSubmit: T.func.isRequired,\n    // }\n\n    render() {\n        const { handleSubmit, error, pristine, submitting } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Please Log In</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"email\" label=\"Email\" component={renderField}\n                               type=\"text\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"password\" label=\"Password\" component={renderField}\n                               type=\"password\"  validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        { renderError(error) }\n                        <div className=\"form-button\">\n                            <Link role=\"button\" to=\"/signup\" className=\"btn btn-outline-info rounded-0 form-button__part\">SignUp</Link>\n                            <Button action=\"submit\" color=\"info\" className=\"rounded-0 form-button__part\" disabled={pristine || submitting}>Login</Button>\n                        </div>\n                    </fieldset>\n\n                    <Link to=\"/reset_password\" className=\"text-center info-link\">forgot password?</Link>\n                </form>\n            </div>\n        )\n    }\n}\n// Sync field level validation for password match\nconst validateLoginForm = values => {\n    const errors = {};\n    const { email } = values;\n\n    if (!email) {\n        errors.email = 'This field is required.'\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\n        errors.email = 'Invalid email address'\n    }\n    \n    return errors;\n};\nexport default reduxForm({\n    form: \"login\",\n    onSubmit: loginUser,\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('login'));\n    },\n    validate: validateLoginForm\n})(Login);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\n\nclass Logout extends Component {\n\n    static propTypes = {\n        logoutUser: PropTypes.func.isRequired\n    };\n\n    componentWillMount() {\n        this.props.logoutUser();\n    }\n\n    render() {\n        return (\n            <h2>Welcome to Lead Platform. Please Login or Signup...</h2>\n        );\n    }\n}\n\nexport default connect(null, { logoutUser })(Logout);","import React, { Component } from \"react\";\n// import PropTypes from \"prop-types\";\nimport { reduxForm, Field, propTypes, clearSubmitErrors } from \"redux-form\";\nimport { required } from \"redux-form-validators\"\nimport { renderField, renderError } from \"../../utils/renderUtils\";\nimport { signupUser } from \"../../actions/authActions\";\nimport { Link } from \"react-router-dom\";\nimport { Button, } from 'reactstrap';\n\nclass Signup extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n\n    render() {\n        const { handleSubmit, error, pristine, submitting } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Sign Up</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"email\" label=\"Email\" component={renderField}\n                               type=\"text\"/>\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"username\" label=\"Username\" component={renderField}\n                               type=\"text\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"password1\" label=\"Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"password2\" label=\"Confirm Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    { renderError(error) }\n\n                    <fieldset className=\"form-group\">\n                        <div className=\"form-button\">\n                            <Link role=\"button\" to=\"/login\" className=\"btn btn-outline-info rounded-0 form-button__part\">Login</Link>\n                            <Button action=\"submit\" color=\"info\" className=\"rounded-0 form-button__part\" disabled={pristine || submitting}>Sign Up</Button>\n                        </div>\n                    </fieldset>\n                </form>\n            </div>\n        );\n    }\n}\n\n// Sync field level validation for password match\nconst validateForm = values => {\n    const errors = {};\n    const { email, username, password1, password2 } = values;\n\n    if (!username) {\n        errors.username = 'This field is required.'\n    } else if (username.length > 15) {\n        errors.username = 'Must be 15 characters or less'\n    }\n    if (!email) {\n        errors.email = 'This field is required.'\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\n        errors.email = 'Invalid email address'\n    }\n    \n    if (password1 !== password2) {\n        errors.password2 = \"Password does not match.\"\n    }\n    return errors;\n};\n\nexport default reduxForm({\n    form: \"signup\",\n    validate: validateForm,\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('signup'));\n    },\n    onSubmit: signupUser\n})(Signup);\n","import React, { Component } from \"react\";\n\nexport default class SignupDone extends Component {\n    render() {\n        return (\n            <h3 className=\"mx-5\">\n                Thanks for your registration, please follow the link sent to your provided email to activate\n                your account.\n            </h3>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { reduxForm, propTypes, clearSubmitErrors } from \"redux-form\";\nimport { activateUserAccount } from \"../../actions/authActions\";\nimport { renderError } from \"../../utils/renderUtils\";\n\nclass AccountActivation extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Please click the button below to activate your account</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group text-center\">\n                        {renderError(error)}\n                        <button action=\"submit\" className=\"btn btn-info rounded-0\">Activate</button>\n                    </fieldset>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default reduxForm({\n    form: \"user_account_activation\",\n    onSubmit: activateUserAccount,\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('user_account_activation'));\n    },\n})(AccountActivation);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getUserProfile } from \"../../actions/authActions\";\nimport {withRouter} from \"react-router-dom\";\nimport { Table } from 'reactstrap';\n\nclass UserProfile extends Component {\n\n    static propTypes = {\n        getUserProfile: PropTypes.func.isRequired,\n        user: PropTypes.object\n    };\n\n    componentWillMount() {\n        this.props.getUserProfile();\n    }\n\n    renderUser() {\n        const user = this.props.user;\n        if (user) {\n            return (\n\n              <div className=\"mx-2 mt-2 text-center\">\n                <Table striped>\n                  <thead><tr><th colSpan=\"2\">Your Profile</th></tr></thead>\n                  <tbody>\n                    <tr>\n                      <th>Avatar:</th>\n                      <td>\n                        <div className=\"avatar\"\n                            style={{ backgroundImage: `url(${user.avatar})` }}>\n                        </div>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th>Username:</th>\n                      <td>{user.username}</td>\n                    </tr>\n                    <tr>\n                      <th>First Name:</th>\n                      <td>{user.first_name}</td>\n                    </tr>                    \n                    <tr>\n                      <th>Last Name:</th>\n                      <td>{user.last_name}</td>\n                    </tr>\n                    <tr>\n                      <th>Email:</th>\n                      <td>{user.email}</td>\n                    </tr>\n                    <tr>\n                      <th>Website:</th>\n                      <td>{user.website}</td>\n                    </tr>                    \n                    <tr>\n                      <th>About:</th>\n                      <td>{user.about}</td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </div>\n            );\n        }\n        return null;\n    }\n\n    render() {\n        return (\n            <div>\n                {this.renderUser()}\n                {\" \"}\n                <hr />\n                \n                <fieldset className=\"form-group\">\n                    <div className=\"form-button\">\n                        <Link to=\"/profile_edit\" className=\"btn btn-info rounded-0 form-button__part\">Update Profile</Link>\n                        <Link to=\"/change_password\" className=\"btn btn-outline-info rounded-0 form-button__part\">Change Password</Link>\n                    </div>\n                </fieldset>\n\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        user: state.auth.user\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, { getUserProfile } )(UserProfile));","import React, {Component} from 'react';\nimport Dropzone from 'react-dropzone';\nimport PropTypes from \"prop-types\";\n// import { Form } from 'elements';\nimport { Field } from 'redux-form';\nimport './styles.scss'\n\nconst imageMaxSize = 1000000; //bytes\n\nclass ImageDrop extends Component {\n  static propTypes = {\n    dropzone_options: PropTypes.object,\n    meta: PropTypes.object,\n    label: PropTypes.string,\n    classNameLabel: PropTypes.string,\n    input: PropTypes.object,\n    className: PropTypes.string,\n    // children: PropTypes.node,\n\t//    children: PropTypes.oneOfType([\n\t//      PropTypes.node,\n\t//   PropTypes.object,\n\t//   PropTypes.func,\n\t// ]),\n    cbFunction: PropTypes.func,\n  };\n\n  static defaultProps = {\n    className: '',\n    cbFunction: () => {},\n  };\n  state = { attached: false };\n  handleDrop = (files) => {\n\tconsole.log(\"DROPPED!\", files)\n\tthis.setState({attached: true})\n\t// this.props.onSelectDrop(files);\n  }\n  render() {\n    const { className, input: { onChange }, meta: { error, touched }, label, classNameLabel, name, cbFunction } = this.props;\n    console.log(this.props.input.value)\n\tlet drop_class = \"dropimage-field dropimage-field__default avatar\"\n\tlet drop_text = \"\"\n\n\tif (this.props.input.value && this.state.attached) {\n\t\tdrop_class = \"dropimage-field dropimage-field__success\";\n\t\tdrop_text = \"Press Save to Add\";\n\t} else {\n\t\tdrop_class = \"dropimage-field dropimage-field__default avatar\";\n\t\t// drop_text = \"Add Document\"\n\t} \n    return (\n      <div className={`${className}` + (error && touched ? ' has-error ' : '')}>\n        {label && <p className={classNameLabel || ''}>{label}</p>}\n        <Dropzone\n          onDrop={(f) => {\n            cbFunction(f);\n            this.handleDrop(f);\n            return onChange(f[0]);\n          }}\n          name={name}\n          maxSize={imageMaxSize}\n        >\n            {({getRootProps, getInputProps}) => (\n                <div {...getRootProps()} className={`${drop_class}`} \n                  style={{ backgroundImage: `url(${this.props.input.value})`}}>\n                    <input {...getInputProps()} />\n                    <span className=\"dropimage-field__text\">{`${drop_text}`}</span>\n                </div>\n            )}\n        </Dropzone>\n        {error && touched ? <div className=\"alert alert-danger p-1\"><small>{error}</small></div> : ''}\n      </div>\n    );\n  }\n}\nexport default props => <Field {...props} component={ImageDrop} />;","import React, { Component } from \"react\";\nimport { reduxForm, Field, propTypes, clearSubmitErrors } from \"redux-form\";\nimport { connect } from 'react-redux'\nimport { Link } from \"react-router-dom\";\n\nimport { renderField, renderTextAreaField,\n    renderError} from \"../../utils/renderUtils\";\nimport { updateUserProfile } from \"../../actions/authActions\";\nimport ImageDrop from './Atoms/ImageDrop/ImageDrop'\n\nclass Login extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Edit Profile</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"username\" label=\"Username\" component={renderField}\n                               type=\"text\"\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"first_name\" label=\"First Name\" component={renderField}\n                               type=\"text\"\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"last_name\" label=\"Last Name\" component={renderField}\n                               type=\"text\"\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"website\" label=\"Website\" component={renderField}\n                               type=\"text\"\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"about\" label=\"About Yourself\" component={renderTextAreaField}\n                               type=\"text\"\n                        />\n                    </fieldset>\n                    <fieldset className=\"form-group\">\n                        <ImageDrop\n                         name=\"avatar\"\n                         label=\"Avatar:\"\n                          classNameLabel=\"file-input-label\"\n                          className=\"file-input\"\n                          dropzone_options={{\n                            multiple: false,\n                            accept: 'image/*'\n                          }}\n                        >\n                          <span>Add more</span>\n                        </ImageDrop>\n                    </fieldset>\n                    <fieldset className=\"form-group\">\n                        {renderError(error)}\n                        <div className=\"form-button\">\n                            <button action=\"submit\" className=\"btn btn-info rounded-0 form-button__part\">Save</button>\n                            <Link to=\"/profile\" className=\"btn btn-outline-info rounded-0 form-button__part\">Cancel</Link>\n                        </div>\n                    </fieldset>\n\n                </form>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        initialValues: state.auth.user\n    }\n}\n\nexport default connect(mapStateToProps)(reduxForm({\n    form: \"update_user_profile\",\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('update_user_profile'));\n    },\n    onSubmit: updateUserProfile\n})(Login));","import React, { Component } from \"react\";\n// import PropTypes from \"prop-types\";\nimport { reduxForm, Field, propTypes, clearSubmitErrors } from \"redux-form\";\nimport { required } from \"redux-form-validators\"\nimport { changePassword } from \"../../actions/authActions\";\nimport { renderField, renderError } from \"../../utils/renderUtils\";\nimport { Link } from \"react-router-dom\";\nimport { Button, } from 'reactstrap';\nclass PasswordChange extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error, pristine, submitting } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Change Password</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"old_password\" label=\"Old Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"new_password1\" label=\"New Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"new_password2\" label=\"Confirm New Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        {renderError(error)}\n                        <div className=\"form-button\">\n                            <Button action=\"submit\" color=\"info\" className=\"rounded-0 form-button__part\" disabled={pristine || submitting}>Submit</Button>\n                            <Link to=\"/profile\" className=\"btn btn-outline-info rounded-0 form-button__part\">Cancel</Link>\n                        </div>\n                    </fieldset>\n                </form>\n            </div>\n        );\n    }\n}\n\n// Sync field level validation for password match\nconst validateForm = values => {\n    const errors = {};\n    const { new_password1, new_password2 } = values;\n    if (new_password1 !== new_password2) {\n        errors.new_password2 = \"Password does not match.\"\n    }\n    return errors;\n};\n\nexport default reduxForm({\n    form: \"change_password\",\n    onSubmit: changePassword,\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('change_password'));\n    },\n    validate: validateForm\n})(PasswordChange);\n","import React, { Component } from \"react\";\nimport { reduxForm, Field, propTypes, clearSubmitErrors } from \"redux-form\";\nimport { required } from \"redux-form-validators\"\n\nimport { renderField, renderError} from \"../../utils/renderUtils\";\nimport { resetPassword } from \"../../actions/authActions\";\n\nclass PasswordReset extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Reset Your Password</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"email\" label=\"Please enter your email\" component={renderField}\n                               type=\"text\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n                    <fieldset className=\"form-group text-center\">\n                        {renderError(error)}\n                        <button action=\"submit\" className=\"btn btn-info rounded-0\">Submit</button>\n                    </fieldset>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default reduxForm({\n    form: \"password_reset\",\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('password_reset'));\n    },\n    onSubmit: resetPassword\n})(PasswordReset);\n","import React, { Component } from \"react\";\n\nexport default class PasswordResetDone extends Component {\n    render() {\n        return (\n            <h3 className=\"mx-5\">An password reset email has been sent to your email. Please follow the link to reset your password.</h3>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { reduxForm, Field, propTypes, clearSubmitErrors } from \"redux-form\";\nimport { required } from \"redux-form-validators\"\nimport { confirmPasswordChange } from \"../../actions/authActions\";\nimport { renderField, renderError } from \"../../utils/renderUtils\";\n\nclass PasswordResetConfirm extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Create New Password</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"new_password1\" label=\"New Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"new_password2\" label=\"Confirm New Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group text-center\">\n                        {renderError(error)}\n                        <button action=\"submit\" className=\"btn btn-info rounded-0\">Submit</button>\n                    </fieldset>\n                </form>\n            </div>\n        );\n    }\n}\n\n// Sync field level validation for password match\nconst validateForm = values => {\n    const errors = {};\n    const { new_password1, new_password2 } = values;\n    if (new_password1 !== new_password2) {\n        errors.new_password2 = \"Password does not match.\"\n    }\n    return errors;\n};\n\nexport default reduxForm({\n    form: \"password_reset_confirm\",\n    onSubmit: confirmPasswordChange,\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('password_reset_confirm'));\n    },\n    validate: validateForm\n})(PasswordResetConfirm);\n","import React from \"react\";\n\nconst NoMatch = () => (\n    <h2 className=\"mt-2\">{\"Sorry, the page you are looking for doesn't exist.\"}</h2>\n);\n\nexport default NoMatch;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\n\nclass PostInline extends Component {\n  // {post !== undefined ? <div className={elClass}>\n  //    <h1><Link maintainScrollPosition={false} to={{\n  //        pathname:`/react/posts/${post.slug}`,\n  //        state: {fromDashboard: false}\n  //    }}>{post.title}</Link></h1>\n\n  //   <p className={showContent}>{post.content}</p>\n  //   </div>\n  //   : \"\"}\n  render() {\n      const {post} = this.props\n      const {elClass} = this.props\n      const showContent = elClass === 'card' ? 'd-block' : 'd-none'\n    return (\n      <div>\n          {post !== undefined ? \n            <div className={elClass}>\n            <Link \n              to={{pathname:`/react/posts/${post.slug}`,\n              state: {fromDashboard: false}\n            }}>\n                <h1>{post.title}</h1>\n            </Link>\n                  <p className={showContent}>{post.content}</p>\n            </div>\n          : ''}\n      </div>\n    );\n  }\n}\n\nexport default PostInline;\n","import React, { Component } from 'react';\nimport 'whatwg-fetch'\nimport cookie from 'react-cookies'\nimport { Link } from 'react-router-dom'\nimport PostInline from './PostInline'\n// import PostCreate from './PostCreate'\n// import PostForm from './PostForm'\nimport { connect } from 'react-redux'\n\nimport store from \"../store\";\nimport { getUserToken } from \"../utils/authUtils\";\n\nclass Posts extends Component {\n\n  constructor(props){\n      super(props)\n      this.togglePostListClass = this.togglePostListClass.bind(this)\n      this.handleNewPost = this.handleNewPost.bind(this)\n      this.loadMorePosts =this.loadMorePosts.bind(this)\n      this.state = {\n          posts: [],\n          postsListClass: \"card\",\n          next: null,\n          previous: null,\n          author: false,\n          count: 0,\n          authenticated: false, //adding redux-props\n      }\n  }\n\n  loadMorePosts(){\n      const {next} = this.state \n      if (next !== null || next !== undefined) {\n           this.props.loadPosts(next)\n      }\n     \n  }\n    \n  loadPosts(nextEndpoint){\n      let endpoint = '/api/posts/' \n      if (nextEndpoint !== undefined) {\n          endpoint = nextEndpoint\n      }\n      let thisComp = this\n      let lookupOptions = {\n          method: \"GET\",\n          headers: {\n              'Content-Type': 'application/json'\n          }\n      }\n      const csrfToken = cookie.load('csrftoken')\n      const token = getUserToken(store.getState());\n      console.log('token', token);\n      console.log('csrftoken', csrfToken);\n\n      if (csrfToken !== undefined) {\n          lookupOptions['credentials'] = 'include'\n          lookupOptions['headers']['X-CSRFToken'] = csrfToken\n       } \n\n      fetch(endpoint, lookupOptions)\n      .then(function(response){\n          return response.json()\n      }).then(function(responseData){\n          console.log(responseData)\n          // let currentPosts = thisComp.state.posts\n          // let newPosts = currentPosts.concat(responseData.results)\n          // console.log(currentPosts)\n           thisComp.setState({\n                  posts: thisComp.state.posts.concat(responseData.results),\n                  next: responseData.next,\n                  previous: responseData.previous,\n                  author: responseData.author,\n                  count: responseData.count,\n                  authenticated: thisComp.props.state.auth.authenticated //adding redux-props\n              })\n      }).catch(function(error){\n          console.log(\"error\", error)\n      })\n  }\n\n  handleNewPost(postItemData){\n      // console.log(postItemData)\n      let currentPosts = this.state.posts\n      currentPosts.unshift(postItemData) // unshift\n      this.setState({\n          posts: currentPosts\n      })\n  }\n\n  \n\n  togglePostListClass(event){\n      event.preventDefault()\n      let currentListClass = this.state.postsListClass\n      if (currentListClass === \"\"){\n          this.setState({\n              postsListClass: \"card\",\n          })\n      } else {\n          this.setState({\n              postsListClass: \"\",\n          })\n      }\n      \n  }\n\n  componentDidMount(){\n      this.setState({\n          posts: [],\n          postsListClass: \"card\",\n          next: null,\n          previous: null,\n          author: false,\n          count: 0,\n          authenticated: false,\n      })\n      this.loadPosts()\n  }\n  // {author === true ? <Link className='mr-2' maintainScrollPosition={false} to={{\n  //           pathname: `/posts/create/`,\n  //           state: { fromDashboard: false }\n  //         }}>Create Post</Link> : \"\"}\n  \n  // <button onClick={this.togglePostListClass}>Toggle Class</button>\n  // {posts.length > 0 ? posts.map((postItem, index)=>{\n  //     return (\n  //             <PostInline post={postItem} elClass={postsListClass} />\n  //     )\n  // }) : <p>No Posts Found</p>}\n  // {next !== null ? <button onClick={this.loadMorePosts}>Load more</button> : ''}\n  render() {\n      const {posts} = this.state\n      const {postsListClass} = this.state\n      // const {author} = this.state\n      const {next} = this.state \n      // const {auth} = this.props.state.auth.authenticated\n      const {authenticated} = this.state //adding redux-props\n      // const csrfToken = cookie.load('csrftoken')\n    return (\n      <div>\n        {authenticated === true ?\n          <Link className='mr-2' to={{\n            pathname: `/react/posts/create/`,\n            state: { fromDashboard: false }\n          }}>Create Post</Link>\n        : ''}\n          <button onClick={this.togglePostListClass}>Toggle Class</button>\n          {posts.length > 0 ? posts.map((postItem, index)=>{\n            return (\n              <PostInline post={postItem} key={`post-list-key ${index}`} elClass={postsListClass} />\n            )\n          }) : <p>No Posts Found</p>}\n        {next !== null ? <button onClick={this.loadMorePosts}>Load more</button> : ''}\n\n      </div>\n    );\n  }\n}\n\n// export default Posts;\n\n\nconst mapStateToProps = (state) => {\n  return {\n    state: state\n  }\n}\n\nexport default connect(mapStateToProps)(Posts);\n// {(csrfToken !== 'undefined' && csrfToken !== null) ?\n// <div className='my-5'>\n//   <PostForm newPostItemCreated={this.handleNewPost} />\n// </div>\n// : ''}","import React, { Component } from 'react'\n\nimport { Link } from 'react-router-dom'\nimport Posts from '../reactify/Posts';\n\nclass ReacTifyComp extends Component {\n  componentDidMount () {\n\n  }\n\n  render () {\n    return (\n      <div>\n        <Link className='some-link' to='/about/'>Static Page</Link>\n        <Posts />\n      </div>\n      \n    )\n  }\n}\n\nexport default ReacTifyComp","import React, {Component} from 'react'\nimport 'whatwg-fetch'\nimport cookie from 'react-cookies'\nimport moment from 'moment'\n// import { Redirect } from 'react-router-dom'\n\nimport store from \"../store\";\nimport { getUserToken } from \"../utils/authUtils\";\n\n\nclass PostForm extends Component {\n    constructor(props){\n        super(props)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleInputChange = this.handleInputChange.bind(this)\n        this.handleDraftChange = this.handleDraftChange.bind(this)\n        this.clearForm = this.clearForm.bind(this)\n        this.postTitleRef = React.createRef()\n        this.postContentRef = React.createRef()\n        this.deletePost= this.deletePost.bind(this)\n        this.state = {\n            draft: false,\n            title: null,\n            slug: null,\n            content: null,\n            publish: moment(new Date()).format('YYYY-MM-DD'),\n            errors: {}\n        }\n    }\n\n    updatePost(data){\n      const {post} = this.props\n      const endpoint = `/api/posts/${post.slug}/` \n      const csrfToken = cookie.load('csrftoken')\n      const token = getUserToken(store.getState());\n      console.log('token', token);\n      console.log('csrftoken', csrfToken);\n      let thisComp = this\n      if (csrfToken !== undefined) {\n          let lookupOptions = {\n              method: \"PUT\",\n              headers: {\n                  'Content-Type': 'application/json',\n                  'X-CSRFToken': csrfToken,\n                  'Authorization': 'Token ' + token\n              },\n              body: JSON.stringify(data),\n              credentials: 'include'\n          }\n\n          fetch(endpoint, lookupOptions)\n          .then(function(response){\n              return response.json()\n          }).then(function(responseData){\n              console.log(responseData)\n              if (thisComp.props.newPostItemUpdated){\n                  thisComp.props.newPostItemUpdated(responseData)\n              }\n              thisComp.clearForm()\n          }).catch(function(error){\n              console.log(\"error\", error)\n              alert(\"An error occured, please try again later.\")\n          })\n      } \n      \n  \t} \n    createPost(data){\n      const endpoint = '/api/posts/' \n      const csrfToken = cookie.load('csrftoken')\n      let thisComp = this\n      console.log('csrf', csrfToken)\n      if (csrfToken !== undefined) {\n          let lookupOptions = {\n              method: \"POST\",\n              headers: {\n                  'Content-Type': 'application/json',\n                  'X-CSRFToken': csrfToken\n              },\n              body: JSON.stringify(data),\n              credentials: 'include'\n          }\n\n          fetch(endpoint, lookupOptions)\n          .then(function(response){              \n              return response.json()\n          }).then(function(responseData){\n              console.log(responseData)\n              if (thisComp.props.newPostItemCreated){\n                  thisComp.props.newPostItemCreated(responseData)\n              }\n              thisComp.clearForm()\n              thisComp.defaultState()\n          }).catch(function(error){\n              console.log(\"error\", error)\n              alert(\"An error occured, please try again later.\")\n          })\n      } \n      \n    }\n    deletePost(event) {\n      event.preventDefault();\n      const {post} = this.props\n      const endpoint = `/api/posts/${post.slug}/` \n      const csrfToken = cookie.load('csrftoken')\n      console.log(post)\n      return fetch(endpoint, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': csrfToken\n            },\n            credentials: 'include'\n        }).then(function(response){\n          return response\n        }).then(data => {\n          if(data.status === 204){\n            // this.UpdateRoute();\n            console.log('Successfully Delete');\n          }   \n        }).catch(function(error){\n            console.log(\"error\", error)\n            alert(\"An error occured, please try again later.\")\n        })\n    };\n\n  \tclearForm(event){\n      if (event){\n        event.preventDefault()\n      }\n      this.postCreateForm.reset()\n      \n    } \n    clearFormRefs(){\n      this.postTitleRef.current=''\n      this.postContentRef.current=''\n    }  \t\n\thandleSubmit(event){      \n\t    event.preventDefault()\n\t    let data = this.state\n      const {post} = this.props\n      if (post !== undefined) {\n        this.updatePost(data)\n      } else {\n        this.createPost(data)\n      }\n\t    \n      console.log({post})\n\t}\n\thandleInputChange(event){\n        event.preventDefault()\n        let key = event.target.name\n        let value = event.target.value\n\n        if (key === 'title'){\n            if (value.length > 120){\n                alert(\"This title is too long\")\n            }\n        }\n        this.setState({\n            [key]: value\n\n        })\n    }\n  //fix doubleclick checkbox\n  handleDraftChange(event){\n    this.setState({\n      draft: !this.state.draft\n    })\n  }\n  defaultState(){\n    this.setState({\n        draft: false,\n        title: null,\n        content: null,\n        slug: null,\n        publish: moment(new Date()).format('YYYY-MM-DD'),\n    })   \n  }\n  componentDidMount(){\n    const {post} = this.props\n    // this.loginCheck()\n    if (post !== undefined) {\n      this.setState({\n          draft: post.draft,\n          title: post.title,\n          content: post.content,\n          slug: post.slug,\n          publish: moment(post.publish).format('YYYY-MM-DD'),\n      })\n    } else {\n      this.defaultState()\n    }\n    // this.postTitleRef.current.focus()\n  }\n\trender(){\n\t\tconst {publish} = this.state\n    const {title} = this.state\n    const {content} = this.state\n    const {slug} = this.state\n    const cancelClass = this.props.post !== undefined ? \"d-none\" : \"\"\n    const deleteClass = this.props.post === undefined ? \"d-none\" : \"\"\n\t\treturn (\n\t\t  <div>\n\t\t    <form onSubmit={this.handleSubmit} ref={(el)=> this.postCreateForm = el}>\n\t\t        <div className=\"form-group\">\n\t\t\t\t\t<label htmlFor='blogTitle'>Title</label>\n\t\t\t\t\t<input \n\t\t\t\t\t  type='text' \n\t\t\t\t\t  id='blogTitle' \n\t\t\t\t\t  name='title' \n\t\t\t\t\t  className='form-control' \n\t\t\t\t\t  placeholder='Blog post title'\n            value={title || ''}            \n\t\t\t\t\t  ref={this.postTitleRef} \n\t\t\t\t\t  onChange={this.handleInputChange} \n\t\t\t\t\t  required='required' />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label htmlFor='content'>Content</label>\n\t\t\t\t\t<textarea \n\t\t\t\t\t  id='content' \n\t\t\t\t\t  name='content' \n\t\t\t\t\t  className='form-control' \n\t\t\t\t\t  placeholder='Post content'\n            value={content || ''}\n\t\t\t\t\t  ref={this.postContentRef} \n\t\t\t\t\t  onChange={this.handleInputChange} \n\t\t\t\t\t  required='required' />\n\t\t\t\t</div>\n\t\t\t\t<div className='form-group'>\n                    <label htmlFor='slug'>Slug</label>\n                    <input \n                      type='text' \n                      id='slug' \n                      name='slug' \n                      className='form-control'\n                      placeholder='Type Slug'\n                      value={slug || ''}  \n                      onChange={this.handleInputChange} \n                      required='required'/>\n                </div>\n\t\t        <div className=\"form-group\">\n\t\t\t\t\t<label htmlFor='draft'>\n\t\t\t\t\t\t<input \n\t\t\t\t\t\t  type='checkbox' \n\t\t\t\t\t\t  id='draft' \n\t\t\t\t\t\t  name='draft' \n\t\t\t\t\t\t  className='mr-2' \n\t\t\t\t\t\t  onChange={this.handleDraftChange} \n\t\t\t\t\t\t  checked={this.state.draft}\n\t\t\t\t\t\t  />\n\t\t\t\t\tDraft</label>\n                <button onClick={(event)=>{event.preventDefault();this.handleDraftChange()}}>Toggle Draft</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label htmlFor='publish'>Publish Date</label>\n\t\t\t\t\t<input \n\t\t\t\t\t  type='date' \n\t\t\t\t\t  id='publish' \n\t\t\t\t\t  name='publish' \n\t\t\t\t\t  className='form-control' \n\t\t\t\t\t  onChange={this.handleInputChange} \n\t\t\t\t\t  required='required'\n\t\t\t\t\t  value={publish}\n\t\t\t\t\t   />\n\t\t\t\t</div>\n\t\t\t\t<button type='submit' className='btn btn-primary '>Save</button>\n\t\t\t\t<button className={`btn btn-secondary ${cancelClass}`} onClick={this.clearForm}>Clear</button>\n        <button className={`btn btn-danger' ${deleteClass}`} onClick={this.deletePost}>Delete</button>\n\n\t\t    </form>\n\t\t  </div>\n\t\t)\n\t}\n\n}\n\nexport default PostForm\n","import React, {Component} from 'react'\nimport 'whatwg-fetch'\nimport cookie from 'react-cookies'\nimport { Link } from 'react-router-dom'\n\nimport PostForm from './PostForm'\n\nclass PostDetail extends Component {\n    constructor(props){\n        super(props)\n        this.handlePostItemUpdated= this.handlePostItemUpdated.bind(this)        \n        this.state = {\n             slug: null,\n             post: null,\n             doneLoading: false,\n        }\n    }\n\n    handlePostItemUpdated(postItemData){\n        this.setState({\n            post: postItemData\n        })\n    }\n    loadPost(slug){\n      const endpoint = `/api/posts/${slug}/` \n      let thisComp = this\n      let lookupOptions = {\n          method: \"GET\",\n          headers: {\n              'Content-Type': 'application/json'\n          }\n      }\n\n      const csrfToken = cookie.load('csrftoken')\n      if (csrfToken !== undefined) {\n          lookupOptions['credentials'] = 'include'\n          lookupOptions['headers']['X-CSRFToken'] = csrfToken\n       }\n\n      fetch(endpoint, lookupOptions)\n      .then(function(response){\n          if (response.status === 404){\n              console.log('Page not found')\n          }\n          return response.json()\n      }).then(function(responseData){\n          if (responseData.detail){\n              thisComp.setState({\n                  doneLoading: true,\n                  post: null\n              })\n          } else {\n           thisComp.setState({\n                  doneLoading: true,\n                  post: responseData\n              })\n          }\n      }).catch(function(error){\n          console.log(\"error\", error)\n      })\n  }\n\n    componentDidMount(){\n        this.setState({\n                slug: null,\n                post: null\n            })\n        if (this.props.match){\n            const {slug} = this.props.match.params\n            this.setState({\n                slug: slug,\n                doneLoading: false\n            })\n            this.loadPost(slug)\n        }\n    }\n    // const {doneLoading} = this.state\n    //     const {post} = this.state\n    //     return(\n    //         <p>{(doneLoading === true) ? <div>\n    //             {post === null ? \"Not Found\": \n    //             <div>\n    //             <h1>{post.title}</h1>\n    //             {post.slug}\n\n    //             <p className='lead'>\n    //             <Link maintainScrollPosition={false} to={{\n    //                 pathname: `/react/posts`,\n    //                 state: { fromDashboard: false }\n    //               }}>Posts</Link>\n\n    //               {post.owner === true ? <Link maintainScrollPosition={false} to={{\n    //                 pathname: `/react/posts/create/`,\n    //                 state: { fromDashboard: false }\n    //               }}>Create Post</Link> : \"\" }\n    //            </p>\n\n    //               {post.owner === true ? <PostForm post={post} postItemUpdated={this.handlePostItemUpdated} /> : \"\"}\n    //             </div>\n    //            }\n    //        </div> : \"Loading...\"}</p>\n    //     )\n    // }\n    render(){\n        const {doneLoading} = this.state\n        // const {slug} = this.state\n        const {post} = this.state\n        return(\n          <div>\n            {(doneLoading === true) ? <div>\n              {(post === null) ? \"Not Found\": \n                <div> \n                  <p className=\"lead\"><Link \n                      to={{pathname:`/react/posts/`,\n                      state: {fromDashboard: false}\n                    }}>\n                      BACK\n                    </Link>\n                    {post.owner === true ? <Link to={{\n                      pathname: `/react/posts/create/`,\n                      state: { fromDashboard: false }\n                    }}>Create Post</Link> : \"\"}\n                  </p>                 \n                  <h1>{post.slug}</h1>\n                  <h1>{post.title}</h1>\n                  {post.owner === true ? <PostForm post={post} postItemUpdated={this.handlePostItemUpdated} /> : \"\"}\n                </div>\n              }\n\n            </div> : \"Loading...\"}\n          </div>               \n        )\n    }\n}\n\nexport default PostDetail","import React, {Component} from 'react'\nimport { Link } from 'react-router-dom'\nimport PostForm from './PostForm'\n\nclass PostCreate extends Component {\n\n  render(){\n    return (\n      <div>\n      \t<Link \n          to={{pathname:`/react/posts/`,\n          state: {fromDashboard: false}\n        }}>\n          BACK\n        </Link>\n      \t<h1>Create Post</h1>\n        \t<PostForm />\n      </div>\n    )\n  }\n\n}\n\nexport default PostCreate\n// // left for reference\n\n\n\n\n// // import React, {Component} from 'react'\n// // import 'whatwg-fetch'\n// // import cookie from 'react-cookies'\n// // import moment from 'moment'\n\n// // class PostCreate extends Component {\n// //     constructor(props){\n// //         super(props)\n// //         this.handleSubmit = this.handleSubmit.bind(this)\n// //         this.handleInputChange = this.handleInputChange.bind(this)\n// //         this.handleDraftChange = this.handleDraftChange.bind(this)\n// //         this.clearForm = this.clearForm.bind(this)\n// //         this.postTitleRef = React.createRef()\n// //         this.postContentRef = React.createRef()\n// //         this.state = {\n// //             draft: false,\n// //             title: null,\n// //             content: null,\n// //             publish: null,\n// //             errors: {}\n// //         }\n// //     }\n// //     createPost(data){\n// //       const endpoint = '/api/posts/' \n// //       const csrfToken = cookie.load('csrftoken')\n// //       let thisComp = this\n// //       if (csrfToken !== undefined) {\n// //           let lookupOptions = {\n// //               method: \"POST\",\n// //               headers: {\n// //                   'Content-Type': 'application/json',\n// //                   'X-CSRFToken': csrfToken\n// //               },\n// //               body: JSON.stringify(data),\n// //               credentials: 'include'\n// //           }\n\n// //           fetch(endpoint, lookupOptions)\n// //           .then(function(response){\n// //               return response.json()\n// //           }).then(function(responseData){\n// //               console.log(responseData)\n// //               if (thisComp.props.newPostItemCreated){\n// //                   thisComp.props.newPostItemCreated(responseData)\n// //               }\n// //               thisComp.clearForm()\n// //           }).catch(function(error){\n// //               console.log(\"error\", error)\n// //               alert(\"An error occured, please try again later.\")\n// //           })\n// //       } \n      \n// //   }\n\n// //     handleSubmit(event){\n// //         event.preventDefault()\n// //         let data = this.state\n// //         this.createPost(data)\n// //     }\n\n// //     handleInputChange(event){\n// //         event.preventDefault()\n// //         let key = event.target.name\n// //         let value = event.target.value\n// //         if (key === 'title'){\n// //             if (value.length > 120){\n// //                 alert(\"This title is too long\")\n// //             }\n// //         }\n// //         this.setState({\n// //             [key]: value\n// //         })\n// //     }\n\n// //     handleDraftChange(event){\n// //       this.setState({\n// //         draft: !this.state.draft\n// //       })\n// //     }\n\n// //     clearForm(event){\n// //       if (event){\n// //         event.preventDefault()\n// //       }\n// //       this.postCreateForm.reset()\n// //     }\n\n\n// //     clearFormRefs(){\n// //       this.postTitleRef.current=''\n// //       this.postContentRef.current=''\n// //     }\n\n\n// //     componentDidMount(){\n// //         this.setState({\n// //             draft: false,\n// //             title: null,\n// //             content: null,\n// //             publish: moment(new Date()).format('YYYY-MM-DD'),\n// //         })\n// //         this.postTitleRef.current.focus()\n// //     }\n\n// //     render(){\n// //         const {publish} = this.state\n// //         let thisComp = this\n// //         return (\n// //             <form onSubmit={this.handleSubmit} ref={(el) => this.postCreateForm = el}>\n// //                 <div className='form-group'>\n// //                     <label for='title'>Post title</label>\n// //                     <input \n// //                       type='text' \n// //                       id='title' \n// //                       name='title' \n// //                       className='form-control'\n// //                       placeholder='Blog post title' \n// //                       ref = {this.postTitleRef}\n// //                       onChange={this.handleInputChange} \n// //                       required='required'/>\n// //                 </div>\n// //                  <div className='form-group'>\n// //                     <label for='content'>Content</label>\n// //                     <textarea id='content' ref = {this.postContentRef} name='content' className='form-control' placeholder='Post content' onChange={this.handleInputChange} required='required'/>\n                   \n// //                 </div>\n// //                 <div className='form-group'>\n// //                     <label for='draft'>\n// //                     <input type='checkbox' checked={this.state.draft} id='draft' name='draft' className='mr-2' onChange={this.handleDraftChange}/>\n// //                      Draft </label>\n// //                      <button onClick={(event)=>{event.preventDefault();this.handleDraftChange()}}>Toggle Draft</button>\n// //                 </div>\n// //                 <div className='form-group'>\n// //                     <label for='publish'>Publish Date</label>\n// //                     <input \n// //                     type='date' \n// //                     id='publish' \n// //                     name='publish' \n// //                     className='form-control' \n// //                     onChange={this.handleInputChange}\n// //                      value={publish}\n// //                      required='required'/>\n// //                 </div>\n// //                 <button type='submit' className='btn btn-primary'>Save</button>\n// //                 <button className='btn btn-secondary' onClick={this.clearForm}>Cancel</button>\n// //             </form>\n// //         )\n// //     }\n\n// // }\n\n// // export default PostCreate","import { toast } from 'react-toastify';\n\nexport const fetchNotes = (nextEndpoint) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        let endpoint = '/api/investors/' \n\n        if (nextEndpoint !== undefined && nextEndpoint !== null) {\n          endpoint = nextEndpoint\n        }\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        let {notes} = getState();\n        return fetch(endpoint, {headers, })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    toast.error(\"Error! Can't load investors...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            // getState().notes[0].concat(res.data)}\n            .then(res => {\n                if (res.status === 200) {               \n                    return dispatch({type: 'FETCH_NOTES', notes: notes.push(res.data), loading: false});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authetication error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\nexport const searchNotes = (searchtext) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        let endpoint = '/api/investors/' \n        if (searchtext !== undefined && searchtext !== null) {\n          endpoint = `/api/investors/?search=${searchtext}`\n        }\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        return fetch(endpoint, {headers, method: \"GET\", })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        // console.log(res)\n                        return {status: res.status, data};\n                    })\n                } else {\n                    toast.error(\"Error! Can't load investors...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'SEARCH_NOTES', notes: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authetication error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\nexport const orderNotes = (order) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        let endpoint = '/api/investors/' \n        if (order !== undefined && order !== null) {\n          endpoint = `/api/investors/?ordering=${order}`\n        }\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        return fetch(endpoint, {headers, method: \"GET\", })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        // console.log(res)\n                        return {status: res.status, data};\n                    })\n                } else {\n                    toast.error(\"Error! Can't load investors...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'ORDER_NOTES', notes: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authetication error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\nexport const addNote = (text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n\n        let body = JSON.stringify({text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence });\n        return fetch(\"/api/investors/\", {headers, method: \"POST\", body})\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    toast.error(\"Error! Can't load investors...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 201) {\n                    toast.info(\"Investor \"+res.data.text+\" added\")\n                    return dispatch({type: 'ADD_NOTE', note: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authetication error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\n\nexport const updateNote = (index, id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence) => {\n    return (dispatch, getState) => {\n\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n\n        let body = JSON.stringify({text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence });\n        // console.log(\"id\", id, \"index\", index)\n        let noteId = getState().notes[index].noteitems[id].id;\n\n        return fetch(`/api/investors/${noteId}/`, {headers, method: \"PUT\", body})\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    toast.error(\"Error! Can't load investors...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 200) {\n                    toast.info(\"Investor \"+res.data.text+\" edited\")\n                    return dispatch({type: 'UPDATE_NOTE', note: res.data, index, id});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authetication error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\n\nexport const deleteNote = (id, index) => {\n    return (dispatch, getState) => {\n\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        let noteId = getState().notes[id].noteitems[index].id;\n\n        return fetch(`/api/investors/${noteId}/`, {headers, method: \"DELETE\"})\n            .then(res => {\n                if (res.status === 204) {\n                    toast.info(\"Investor deleted\")\n                    return {status: res.status, data: {}};\n                } else if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 204) {\n                    // toast.info(\"Investor deleted\")\n                    return dispatch({type: 'DELETE_NOTE', id, index});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authetication error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n            .then(res => {dispatch(fetchNotes())})\n    }\n}\n","import React from \"react\";\nimport './styles.scss'\n\nexport const LoadScreen = () => (\n  <div className=\"loadscreen\">\n    <div className=\"load-9\">\n      <div className=\"spinner\">\n        <div className=\"bubble-1\"></div>\n        <div className=\"bubble-2\"></div>\n      </div>\n    </div>\n  </div>\n)","import React, { Component } from 'react'\nimport {   \n  FormGroup, Button, Modal, \n  ModalHeader, ModalBody, \n  ModalFooter, } from 'reactstrap';\nimport './styles.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\n\nexport class ModalDelete extends Component {\n  render() {\n    const { modaldelete, text, index, id, toggle} = this.props;\n\n    return (\n      <div>\n        <Modal isOpen={modaldelete} toggle={toggle}>\n            <ModalHeader color=\"info\">Are you sure?</ModalHeader>           \n            <ModalBody>Delete <b>{text}</b> Investor?</ModalBody>\n            <ModalFooter> \n              <FormGroup row>                   \n              <Button className=\"rounded-0\" color=\"info\" onClick={() => this.props.onSelectForDelete(index, id)}><FontAwesomeIcon icon={faTrash} color=\"white\"/></Button>              \n              <Button className=\"rounded-0\" onClick={toggle}>Cancel</Button>\n              </FormGroup>\n            </ModalFooter>\n        </Modal> \n      </div>\n    )\n    \n  }\n}\n","import React, { Component } from 'react'\nimport { FormText,  \n  FormGroup, Label, Input,  } from 'reactstrap';\n\n// REQUIRED FIELDS\nexport class InputName extends Component {\n  render() {\n    const { text, errors } = this.props;\n    return (\n      <div>\n        <FormGroup>\n          <Label>Name <span className=\"text-danger\">*</span></Label>\n          <Input\n            name=\"text\"\n            value={text || ''}\n            placeholder=\"Enter name...\"\n            onChange={this.props.onInputChange}\n            required />\n            {errors.text ? <FormText color=\"danger\">{errors.text}</FormText>: \"\"}\n        </FormGroup>\n      </div>\n    )\n    \n  }\n}\nexport class InputPhone extends Component {\n  render() {\n    const { phone, errors } = this.props;\n    return (\n      <div>\n        <FormGroup>\n          <Label>Phone <span className=\"text-danger\">*</span></Label>\n          <Input\n            name=\"phone\"\n            value={phone || ''}\n            placeholder=\"Enter phone...\"\n            onChange={this.props.onInputChange}\n            required />\n            {errors.phone ? <FormText color=\"danger\">{errors.phone}</FormText>: \"\"}\n        </FormGroup>\n      </div>\n    )\n    \n  }\n}\nexport class InputEmail extends Component {\n  render() {\n    const { email, errors } = this.props;\n    return (\n      <div>\n        <FormGroup>\n          <Label>Email <span className=\"text-danger\">*</span></Label>\n          <Input\n            name=\"email\"\n            value={email || ''}\n            placeholder=\"Enter email...\"\n            onChange={this.props.onInputChange}\n            required />\n            {errors.email ? <FormText color=\"danger\">{errors.email}</FormText>: \"\"}\n        </FormGroup>\n      </div>\n    )    \n  }\n}\nexport class InputLinkedin extends Component {\n  render() {\n    const { linkedin_profile, errors } = this.props;\n    return (\n      <div>\n        <FormGroup>\n          <Label>Linkedin <span className=\"text-danger\">*</span></Label>\n          <Input\n            name=\"linkedin_profile\"\n            value={linkedin_profile || ''}\n            placeholder=\"Enter linkedin url...\"\n            onChange={this.props.onInputChange}\n            required />\n            {errors.linkedin_profile ? <FormText color=\"danger\">{errors.linkedin_profile}</FormText>: \"\"}\n        </FormGroup>\n      </div>\n    )    \n  }\n}\n// NOT REQUIRED FIELDS\nexport class InputWebsite extends Component {\n  render() {\n    const { website, errors } = this.props;\n    return (\n      <div>\n        <FormGroup>\n          <Label>Website</Label>\n          <Input\n            name=\"website\"\n            value={website || ''}\n            placeholder=\"Enter website url...\"\n            onChange={this.props.onInputChange}\n            />\n            {errors.website ? <FormText color=\"danger\">{errors.website}</FormText>: \"\"}\n        </FormGroup>\n      </div>\n    )    \n  }\n}\nexport class InputCorrespondence extends Component {\n  render() {\n    const { correspondence, errors } = this.props;\n    return (\n      <div>\n        <FormGroup>\n          <Label>Correspondence</Label>\n          <Input\n            name=\"correspondence\"\n            value={correspondence || ''}\n            placeholder=\"Enter correspondence...\"\n            onChange={this.props.onInputChange}\n            type='textarea'\n            />\n            {errors.correspondence ? <FormText color=\"danger\">{errors.correspondence}</FormText>: \"\"}\n        </FormGroup>\n      </div>\n    )    \n  }\n}","import React, { Component } from 'react'\nimport { Button, \n  FormGroup, Label, } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMale, faUsers, \n       } from '@fortawesome/free-solid-svg-icons'\n\n// Checkbox is corporate\nexport class CheckboxIsCorp extends Component {\n  render() {\n    const { is_corporate } = this.props;\n    return (\n      <div>\n        <FormGroup>\n            <Label>Individual <FontAwesomeIcon icon={faMale} color={!is_corporate ? \"black\": \"grey\"}/> / Corporate <FontAwesomeIcon icon={faUsers} color={is_corporate ? \"black\": \"grey\"}/></Label>\n            <Button className=\"btn btn-block\" onClick={this.props.handleCheckboxIsCorpBtnClick} active={is_corporate}>{is_corporate ? 'Change to Individual' : 'Change to Corporate'}</Button>\n        </FormGroup>\n      </div>\n    )    \n  }\n}","import React, { Component } from 'react'\nimport { Button, \n  FormGroup, Label, } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHandHoldingUsd, faCheckCircle, \n       } from '@fortawesome/free-solid-svg-icons'\n\n// Checkbox is corporate\nexport class CheckboxIsPayed extends Component {\n  render() {\n    const { status, is_staff, is_payed } = this.props;\n    return (\n      <div>\n        {status !== \"Candidate\" && is_staff ?\n          <FormGroup>\n              <Label>New <FontAwesomeIcon icon={faHandHoldingUsd} color={!is_payed ? \"black\": \"grey\"}/> / Payed <FontAwesomeIcon icon={faCheckCircle} color={is_payed ? \"black\": \"grey\"}/></Label>\n              <Button className=\"btn btn-block\" onClick={this.props.handleCheckboxIsPayBtnClick} active={is_payed}>{is_payed ? 'Change to New' : 'Change to Payed'}</Button>\n          </FormGroup>\n          : null} \n      </div>\n    )    \n  }\n}","import React, { Component } from 'react'\nimport { \n  FormGroup, Label, Dropdown, \n  DropdownToggle, \n  DropdownMenu, DropdownItem, } from 'reactstrap';\n\n// Checkbox is corporate\nexport class CustomDropdown extends Component {\n  render() {\n    const { status, dropdownOpen } = this.props;\n    return (\n      <div>\n        <FormGroup>\n          <Label>Status</Label>\n          <Dropdown className=\"form-group\" isOpen={dropdownOpen} toggle={this.props.onToggle}>\n            <DropdownToggle className=\"btn-block\" caret>\n              {status || ''}\n            </DropdownToggle>\n            <DropdownMenu className=\"btn-block\">\n              <DropdownItem onClick={this.props.onChangeValue}>Candidate</DropdownItem>\n              <DropdownItem onClick={this.props.onChangeValue}>Processed</DropdownItem>\n              <DropdownItem onClick={this.props.onChangeValue}>Converted</DropdownItem>\n              <DropdownItem onClick={this.props.onChangeValue}>Rejected</DropdownItem>\n            </DropdownMenu>\n          </Dropdown>\n        </FormGroup>\n      </div>\n    )    \n  }\n}","import React, { Component } from 'react'\n\nimport * as Inputs from '../../Atoms/AddInputs/AddInputs'\nimport { CheckboxIsCorp } from '../../Atoms/Checkboxes/CheckboxIsCorp'\nimport { CheckboxIsPayed } from '../../Atoms/Checkboxes/CheckboxIsPayed'\nimport { CustomDropdown } from '../../Atoms/Dropdown/Dropdown'\n// import { DatePickLastCall } from '../../Atoms/DatePick/DatePickLastCall'\n// import FileDrop from '../../Atoms/FileDrop/FileDrop'\n\nexport class InputFormNoteQuickAdd extends Component {\n  render() {\n    const { text, phone, email,  \n      linkedin_profile, website, \n      correspondence, is_corporate,\n      is_staff, is_payed, dropdownOpen,\n      status, updateNoteId,\n      errors, \n    } = this.props;\n\n    return (\n      <div>\n        <Inputs.InputName \n          onInputChange={this.props.onInputChange} \n          text={text} \n          errors={errors} \n        />\n        <Inputs.InputPhone \n          onInputChange={this.props.onInputChange} \n          phone={phone} \n          errors={errors} \n        />\n        <Inputs.InputEmail \n          onInputChange={this.props.onInputChange} \n          email={email} \n          errors={errors} \n        />      \n        <Inputs.InputLinkedin \n          onInputChange={this.props.onInputChange} \n          linkedin_profile={linkedin_profile} \n          errors={errors} \n        />\n        <Inputs.InputWebsite \n          onInputChange={this.props.onInputChange} \n          website={website} \n          errors={errors} \n        />      \n        <Inputs.InputCorrespondence \n          onInputChange={this.props.onInputChange} \n          correspondence={correspondence} \n          errors={errors} \n        />      \n        \n        <CheckboxIsCorp \n          handleCheckboxIsCorpBtnClick={this.props.handleCheckboxIsCorpBtnClick} \n          is_corporate={is_corporate} \n        />\n        {updateNoteId !== null ?\n        <CustomDropdown \n          onChangeValue={this.props.onChangeValue} \n          onToggle={this.props.onToggle} \n          status={status} \n          dropdownOpen={dropdownOpen} \n        />:null}\n        {updateNoteId !== null && status!==\"Candidate\" && is_staff ?\n          <CheckboxIsPayed \n            handleCheckboxIsPayBtnClick={this.props.handleCheckboxIsPayBtnClick} \n            status={status} \n            is_staff={is_staff} \n            is_payed={is_payed}\n          />\n        : null}      \n         \n      </div>\n    )\n    \n  }\n}","export const handleValidation = (fields) => {\n  // let fields = this.state;\n  let errors = {};\n\n  //Name\n  if(fields[\"text\"].trim() === \"\"){\n     errors[\"text\"] = \"Cannot be empty\";\n  } else {\n    if(typeof fields[\"text\"] !== \"undefined\"){\n       if(!fields[\"text\"].match(/^[a-zA-Z]+$/)){\n          errors[\"text\"] = \"Name must be only letters\";\n       } else if (fields[\"text\"].length > 7) {\n          errors[\"text\"] = \"Your name is too long\";\n       }        \n    }\n  }\n\n  //Phone\n  if(fields[\"phone\"].trim() === \"\"){\n     errors[\"phone\"] = \"Phone cannot be empty\";\n  } else {\n    if(typeof fields[\"phone\"] !== \"undefined\"){\n      if(!fields[\"phone\"].match(/^[0-9\\-\\\\+]{9,15}$/)){\n        errors[\"phone\"] = \"Not phone number\";\n      }      \n    }\n  }\n  // Email\n  if(fields[\"email\"].trim() === \"\"){\n    errors[\"email\"] = \"Cannot be empty\";\n  } else {\n    if(typeof fields[\"email\"] !== \"undefined\"){\n      let lastAtPos = fields[\"email\"].lastIndexOf('@');\n      let lastDotPos = fields[\"email\"].lastIndexOf('.');\n      if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"email\"].indexOf('@@') === -1 && lastDotPos > 2 && (fields[\"email\"].length - lastDotPos) > 2)) {\n        errors[\"email\"] = \"Email is not valid\";\n      }\n    }\n  }\n  // Linkedin profile\n  if(fields[\"linkedin_profile\"].trim() === \"\"){\n    errors[\"linkedin_profile\"] = \"Cannot be empty\";\n  } else {\n    if(typeof fields[\"linkedin_profile\"] !== \"undefined\"){\n      let re=/^((https?|ftp|smtp):\\/\\/)+(www.)?[a-z0-9]+(\\.[a-z]{2,}){1,3}(#?\\/?[a-zA-Z0-9-_#]+)*\\/?(\\?[a-zA-Z0-9-_]+=[a-zA-Z0-9-%]+&?)?$/;\n      if (!re.test(fields[\"linkedin_profile\"])) {\n        errors[\"linkedin_profile\"] = \"Not Linkedin URL\";\n      }\n    }\n  }\n  // Website\n  if(fields[\"website\"].trim() === \"\"){\n  } else {\n    if(typeof fields[\"website\"] !== \"undefined\"){\n      let re=/^((https?|ftp|smtp):\\/\\/)+(www.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_+.~#?&//=]*)?$/;\n      if (!re.test(fields[\"website\"])) {\n        errors[\"website\"] = \"URL is not valid\";\n      }\n    }\n  }\n\n  return errors;\n}","import React, { Component } from 'react'\n\nimport * as notes from \"../../../actions/notesActions\";\nimport {connect} from 'react-redux';\nimport { Link } from 'react-router-dom'\nimport { Form, FormText,  \n  FormGroup, Button,\n  Table, CustomInput,\n  Modal, ModalHeader, ModalBody, ModalFooter, } from 'reactstrap';\nimport { LoadScreen } from '../Molecules/LoadScreen/LoadScreen'\nimport { ModalDelete } from '../Organisms/Modal/Modal'\n\nimport { InputFormNoteQuickAdd } from '../Molecules/Forms/InputFormNoteQuickAdd'\nimport { handleValidation } from '../../../utils/helpers'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEdit, faTrash, faMale, \n  faUsers, faSave, faPlusSquare, \n  faSearch, faExchangeAlt, faLongArrowAltDown,\n  faCheckCircle, faHandHoldingUsd, faTimes } from '@fortawesome/free-solid-svg-icons'\n\n\nclass Notes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: \"\",\n      phone: \"\",\n      status: 'Candidate',\n      email: \"\",\n      linkedin_profile: \"\",\n      website: \"\",\n      correspondence: \"\",\n      is_corporate: false,\n      is_payed: false,\n      searchtext: \"\",\n      updateNoteId: null,\n      updateNoteIndex: null,\n      dropdownOpen: false,\n      is_ordering_name: false,\n      modal: false,\n      modaldelete: false,\n      is_staff: false,\n      loading: true,\n      nextafterdelete: \"\",\n      deleted: false,\n      order: [],\n      errors: {},\n      notes: [\n          {\n            count: null,\n            next: null,\n            previous: null,\n            noteitems: []\n          },\n        ],\n      }\n  }\n\n  // // END FETCH DATA AFTER PROPS\n  componentDidMount () {\n    this.props.fetchNotes()\n  }\n\n  resetForm = () => {\n    this.setState({text: \"\", phone: '', email:'', errors: {}, \n      updateNoteId: null, status: 'Candidate', is_corporate: false, \n      is_payed: false, linkedin_profile: \"\", website: \"\",\n      correspondence: \"\", });\n  }\n  addNew = () => {\n    this.setState({text: \"\", phone: '', email:'', errors: {}, \n      updateNoteId: null, status: 'Candidate', is_corporate: false, \n      is_payed: false, linkedin_profile: \"\", website: \"\", \n      modal: true, correspondence: \"\", });\n  }\n  resetSearch = () => {\n    this.setState({ searchtext: \"\" });\n  }\n  resetSort = () => {\n    this.setState({order: []}, function () {\n        this.handleOrderNotes();\n    });\n  }  \n  selectForEdit = (index, id) => {\n    let note = this.props.notes[index].noteitems[id];\n    this.setState({text: note.text, phone: note.phone, \n      status: note.status, is_payed: note.is_payed, \n      is_corporate: note.is_corporate, email: note.email, \n      linkedin_profile: note.linkedin_profile, \n      website: note.website, correspondence:note.correspondence,\n      updateNoteId: id, updateNoteIndex: index, modal: true, });\n  }\n\n  selectForDelete = (index, id) => {\n    this.props.deleteNote(index, id)\n    this.setState({\n      modaldelete: false,\n    })     \n  }\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      loading: nextProps.notes[0].loading,\n    }) \n    // если длина массива меньше чем предыдущая длина (один элемент удален)\n    // то пересчитываем эндпоинт для фетча (вычитаем из последнего символа next\n    // число \"1\" чтобы получить текущий фетч), если в нексте на конце \"1\", то обрезаем\n    // до знака \"?\"\n    let nextForDelete = \"\";\n    if(nextProps.notes[0].deleted && nextProps.notes[0].next) {\n      nextForDelete = nextProps.notes[0].next\n      console.log(nextForDelete)\n      let lastChar = parseInt(nextForDelete.slice(-1), 10)\n      if ((lastChar-1) >= 2) {\n        nextForDelete = nextForDelete.slice(0, -1)+(lastChar-1);\n        console.log(nextForDelete)\n      }\n      \n      //add flag nextafterdelete to correctly fetch\n      this.setState({nextafterdelete: nextForDelete,\n        deleted: false})\n    }\n  }  \n    \n  toggle = () => {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  }\n  toggleModal = () => {\n    this.setState(prevState => ({\n      modal: !prevState.modal,\n    }));\n  }\n  toggleModalDelete = (index, id) => {\n    let text = \"\"\n    if (id !== undefined) {\n      text = this.props.notes[index].noteitems[id].text\n    }\n    this.setState(prevState => ({\n      modaldelete: !prevState.modaldelete,\n      index: index,\n      id: id,\n      text: text\n    }));\n  }\n\n  handleChange = (e) => {\n    e.preventDefault();\n    let key = e.target.name\n    let value = e.target.value\n\n    this.setState({\n        [key]: value,\n        errors: {}\n    })\n\n  }\n\n  changeValue = (e) => {\n    this.setState({status: e.currentTarget.textContent})\n  }\n  loadMorePosts = () => {\n    const {next} = this.props.notes[this.props.notes.length - 1]\n    // Check if investor is after delete to correct fetch \n    if (this.state.nextafterdelete) {\n      this.props.fetchNotes(this.state.nextafterdelete)\n      //clear flag nextafterdelete\n      this.setState({nextafterdelete: \"\"})\n    } else {\n      if (next !== null || next !== undefined) {\n        this.props.fetchNotes(next)              \n      }\n    }\n     \n  }\n  searchNotes = () => {\n      const {searchtext} = this.state\n      if (searchtext !== null || searchtext !== undefined) {\n          this.props.searchNotes(searchtext) \n          this.setState({\n            is_ordering_name: false,\n            order: [],\n          });             \n      }     \n  }\n\n  onCheckboxIsCorpBtnClick = () => {\n    this.setState({\n      is_corporate: !this.state.is_corporate,\n    });\n  }\n  onCheckboxIsPayBtnClick = () => {\n    this.setState({\n      is_payed: !this.state.is_payed,\n    });\n  }\n  onBtnClickOrderingName = (ordername) => {\n    // Create a new array based on current state:\n    let order = [...this.state.order];\n    let newordername = \"-\"+ordername\n    let is_ordering_name = false\n\n    // if ordername starts from \"C\"-character - clear that order!\n    if (ordername.charAt(0) === \"C\"){\n      let index = order.indexOf(ordername.slice(1, ordername.length))\n      // Clear ordername (remove from array)\n      if (index !== -1) {\n        order.splice(index, 1);\n      }\n    } else {\n      // Add or remove item to it\n      if (order.includes(ordername)){\n        let index = order.indexOf(ordername)\n        if (index !== -1) {          \n          order.splice(index, 1);\n          order.splice(index, 0, newordername);         \n        }\n      } else if (order.includes(newordername)) {\n        let index = order.indexOf(newordername)\n        if (index !== -1) {\n          order.splice(index, 1);\n          order.splice(index, 0, ordername);\n        }\n      } else {\n        order.push(ordername);\n\n      }\n    }\n    if (order.length > 0) {\n      is_ordering_name = true\n    } \n\n    // FIX BUG with \"owner\" negative ordering\n    if (order.includes(\"-owner\")&&order.length===1) {\n      // adding \"-id\" field to multiply filter\n      // if has only \"-owner\" field\n      order.push(\"-id\");\n    } else {\n      // remove \"-id\" in all other variants\n      let index = order.indexOf(\"-id\")\n      if (index !== -1) {        \n        order.splice(index, 1);\n      }      \n    }\n\n    // Set state\n    this.setState({is_ordering_name: is_ordering_name, searchtext: \"\", order}, function () {\n        this.handleOrderNotes();\n    });\n  }\n  handleOrderNotes = () => {\n    // Array to string with ','\n    let mapped = this.state.order.map((item)=>(item)).join(\",\");\n\n    if (this.state.order.length) {      \n      this.props.orderNotes(mapped)              \n    } else {\n      this.setState({order: []});\n      this.props.orderNotes(\"\")   \n    }    \n  }\n  submitNote = (e) => {\n      e.preventDefault();\n      // check validation from helper file\n      const validation_errors = handleValidation(this.state)\n      // check validation_errors dictionary is empty or has any errors\n      if (Object.keys(validation_errors).length === 0) {\n        // Check what do you want add or edit?\n        if (this.state.updateNoteId === null) {\n            this.props.addNote(this.state.text, this.state.phone, this.state.status, \n              this.state.is_corporate, this.state.is_payed, this.state.email, \n              this.state.linkedin_profile, this.state.website, this.state.correspondence,)\n              .then(this.resetForm)\n              .then(this.toggleModal)            \n              .catch(function (error) {\n                 console.log(\"error\", error);\n               });\n        } else {\n            this.props.updateNote(this.state.updateNoteIndex, this.state.updateNoteId, \n              this.state.text, this.state.phone, this.state.status, this.state.is_corporate, \n              this.state.is_payed, this.state.email, this.state.linkedin_profile, \n              this.state.website, this.state.correspondence)\n              .then(this.resetForm)\n              .then(this.toggleModal)              \n              .catch(function (error) {\n                 console.log(\"error\", error);\n               });\n        }\n      } else {\n        this.setState({errors: validation_errors}); \n      }\n  }\n  renderModal() {\n      const { modal, \n        text, phone, email, linkedin_profile,\n        website, correspondence, is_corporate,\n        status, is_payed, dropdownOpen,\n        updateNoteId,\n        errors } = this.state;\n      const { is_staff } = this.props;\n      \n      if (this.state.modal) {\n        return (\n          <Modal isOpen={modal} toggle={this.toggleModal}>\n            <Form onSubmit={this.submitNote}>            \n\n              <ModalHeader toggle={this.toggleModal}>{updateNoteId === null ? \"New Investor\" : \"Edit Investor\"}</ModalHeader>\n              <ModalBody>                    \n                <InputFormNoteQuickAdd\n                  onInputChange={this.handleChange}\n                  handleCheckboxIsCorpBtnClick={this.onCheckboxIsCorpBtnClick}\n                  handleCheckboxIsPayBtnClick={this.onCheckboxIsPayBtnClick} \n                  onToggle={this.toggle} \n                  onChangeValue={this.changeValue}\n\n                  text={text} \n                  phone={phone}\n                  email={email}\n                  linkedin_profile={linkedin_profile}\n                  website={website}\n                  correspondence={correspondence}\n                  is_corporate={is_corporate}\n                  is_staff={is_staff}\n                  status={status}\n                  is_payed={is_payed}\n                  dropdownOpen={dropdownOpen}\n                  updateNoteId={updateNoteId}\n\n                  errors={errors} \n                />                              \n              </ModalBody>\n              <ModalFooter> \n                <FormGroup row>                   \n                <Button className=\"rounded-0\" color=\"info\" type=\"submit\"><FontAwesomeIcon icon={faSave} color=\"white\"/></Button>              \n                {updateNoteId === null ? <Button className=\"rounded-0\" outline onClick={this.resetForm}>Clear</Button> : null}\n                <Button className=\"rounded-0\" onClick={this.toggleModal}>Cancel</Button>\n                </FormGroup>\n              </ModalFooter>\n            </Form>\n          </Modal>            \n        );\n      }\n    }\n\n  renderNotes () {\n    const { notes } = this.props\n    const { errors, modal, searchtext, order, modaldelete, index, id, text } = this.state;\n    const { next } = this.props.notes[this.props.notes.length - 1];\n\n    return (\n      <div>\n        <div className=\"centering mt-2\"> \n          <div className=\"centering-left\"> \n            <Link to={\"/investors/add\"}><Button className=\"rounded-0 btn-add\" color=\"info\"><FontAwesomeIcon icon={faPlusSquare} color=\"white\"/> Add New</Button></Link>\n          </div>\n          <div className=\"centering-center\">\n          {modal ? this.renderModal() : null}\n          {modaldelete ? \n            <ModalDelete \n              modaldelete={modaldelete} index={index} \n              id={id} text={text}\n              toggle={this.toggleModalDelete}\n              onSelectForDelete={this.selectForDelete}\n            /> \n          : null}\n            <FormGroup row>\n              <Button className=\"rounded-0\" color=\"info\" onClick={this.addNew}><FontAwesomeIcon icon={faPlusSquare} color=\"white\"/><span className=\"btn-quick__text\"> Quick Add</span></Button>\n              <CustomInput inline\n                id=\"searchtext\"\n                type=\"text\" \n                name=\"searchtext\"\n                value={searchtext || ''}\n                placeholder=\"Search by Name...\"\n                onChange={this.handleChange}\n                \n                />\n                {errors.searchtext ? <FormText color=\"danger\">{errors.searchtext}</FormText>: \"\"}\n              <Button className=\"rounded-0\" onClick={this.searchNotes}><FontAwesomeIcon icon={faSearch} color=\"white\"/></Button>\n              {searchtext !== \"\" ? <Button outline className=\"rounded-0\" onClick={this.resetSearch}>Clear</Button> : \"\"}          \n            </FormGroup>\n          </div>\n          <div className=\"centering-right\"> \n          </div>\n        </div>          \n        <div className=\"centering\"> \n          <div className=\"centering-left\"></div>\n          <h3 className=\"centering-center\">Leads</h3>\n          <div className=\"centering-right centering-right__tablepreffix\">\n            {order.length > 0 ? <Button color=\"info\" onClick={this.resetSort}>Clear Sort</Button> : <Button outline color=\"info\" disabled>Clear Sort</Button>}\n          </div>\n        </div>\n        <Table className=\"table text-center\" striped>\n          <thead>\n            <tr>\n              <th className=\"table-num__title\">#</th>\n              <th className=\"table-investor__title\"><FontAwesomeIcon icon={faMale} color=\"black\"/> / <FontAwesomeIcon icon={faUsers} color=\"black\"/></th>\n              <th>Name <Button color=\"link\" onClick={() => this.onBtnClickOrderingName(\"text\")}>\n                {order.includes(\"text\") ? <FontAwesomeIcon icon={faLongArrowAltDown} color=\"black\"/>\n                :order.includes(\"-text\") ? <FontAwesomeIcon rotation={180} icon={faLongArrowAltDown} color=\"black\"/>\n                :<FontAwesomeIcon rotation={90} icon={faExchangeAlt} color=\"grey\"/>}</Button>\n                {order.includes(\"text\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"Ctext\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                :order.includes(\"-text\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"C-text\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                :\"\"}\n              </th>\n              <th>Dev <Button color=\"link\" onClick={() => this.onBtnClickOrderingName(\"owner\")}>\n                {order.includes(\"owner\") ? <FontAwesomeIcon icon={faLongArrowAltDown} color=\"black\"/>\n                :order.includes(\"-owner\") ? <FontAwesomeIcon rotation={180} icon={faLongArrowAltDown} color=\"black\"/>\n                :<FontAwesomeIcon rotation={90} icon={faExchangeAlt} color=\"grey\"/>}</Button>\n                {order.includes(\"owner\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"Cowner\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                :order.includes(\"-owner\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"C-owner\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                :\"\"}\n              </th>\n              <th className=\"table-phone__title\">Phone</th>\n              <th>Status <Button color=\"link\" onClick={() => this.onBtnClickOrderingName(\"status\")}>\n                {order.includes(\"status\") ? <FontAwesomeIcon icon={faLongArrowAltDown} color=\"black\"/>\n                :order.includes(\"-status\") ? <FontAwesomeIcon rotation={180} icon={faLongArrowAltDown} color=\"black\"/>\n                :<FontAwesomeIcon rotation={90} icon={faExchangeAlt} color=\"grey\"/>}</Button>\n                {order.includes(\"status\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"Cstatus\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                :order.includes(\"-status\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"C-status\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                :\"\"}\n              </th>\n              <th>Payment <Button color=\"link\" onClick={() => this.onBtnClickOrderingName(\"is_payed\")}>\n                {order.includes(\"is_payed\") ? <FontAwesomeIcon icon={faLongArrowAltDown} color=\"black\"/>\n                :order.includes(\"-is_payed\") ? <FontAwesomeIcon rotation={180} icon={faLongArrowAltDown} color=\"black\"/>\n                :<FontAwesomeIcon rotation={90} icon={faExchangeAlt} color=\"grey\"/>}</Button>\n                {order.includes(\"is_payed\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"Cis_payed\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                :order.includes(\"-is_payed\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"C-is_payed\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                :\"\"}\n              </th>\n              <th>Manage</th>\n            </tr>\n          </thead>  \n               \n          {notes !== undefined ? notes.map((post, index)=>{\n            return ( \n                <tbody key={index}>\n                    {post.noteitems !== undefined && post.noteitems.length > 0 ? post.noteitems.map((note, id) => {\n                      return (                                    \n                          <tr key={id}>\n                              <th scope=\"row\" className=\"table-num__text\">{id+1}</th>\n                              <td className=\"table-investor__text\">{note.is_corporate ? <FontAwesomeIcon icon={faUsers} color=\"black\"/> : <FontAwesomeIcon icon={faMale} color=\"black\"/>}</td>\n                              <td>\n                                <Link className=\"info-link\" to={{pathname:`/investors/${note.id}`,\n                                      state: {fromDashboard: false}\n                                      }}>{note.text}</Link>\n                              </td>\n                              <td>{note.owner_username}</td>\n                              <td className=\"table-phone__text\">{note.phone}</td>\n                              <td>{note.status}</td>\n                              <td>{note.is_payed ? <FontAwesomeIcon icon={faCheckCircle} color=\"black\"/> : <FontAwesomeIcon icon={faHandHoldingUsd} color=\"black\"/>}</td>\n                              <td>\n                                <Button className=\"rounded-0\" color=\"info\" title=\"edit investor\" onClick={() => this.selectForEdit(index, id)}><FontAwesomeIcon icon={faEdit} color=\"white\"/></Button>\n                                <Button className=\"rounded-0\" onClick={() => this.toggleModalDelete(index, id)} title=\"delete investor\"><FontAwesomeIcon icon={faTrash} color=\"white\"/></Button>\n                              </td>\n                          </tr>                                        \n                        )\n                      }\n                    ) : null}\n                </tbody>\n              )\n            }) : null}\n        </Table>\n        {next !== null ? <Button onClick={this.loadMorePosts}>Load more</Button> : ''}\n      </div>\n    )\n  }\n  render () {\n    const { loading } = this.state\n    return(\n      <div>\n        { loading ? <LoadScreen /> : this.renderNotes() }\n      </div>      \n    )\n  }\n}\n\nconst mapStateToProps = state => {\n    return {\n      notes: state.notes,\n      deleted: state.deleted,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchNotes: (next) => {\n            dispatch(notes.fetchNotes(next));\n        },\n        addNote: (text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence) => {\n            return dispatch(notes.addNote(text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence));\n        },\n        updateNote: (index, id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence) => {\n            return dispatch(notes.updateNote(index, id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence));\n        },\n        deleteNote: (index, id) => {\n            dispatch(notes.deleteNote(index, id));\n        },\n        searchNotes: (searchtext) => {\n            dispatch(notes.searchNotes(searchtext));\n        },\n        orderNotes: (order) => {\n            dispatch(notes.orderNotes(order));\n        },\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notes);","import React, { Component } from 'react'\nimport { Button, \n  FormGroup, Label, } from 'reactstrap';\nimport DatePicker from \"react-datepicker\";\nimport moment from \"moment\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n// Checkbox is corporate\nexport class DatePickLastCall extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      add_call: false,\n      last_call: \"\",      \n    }\n  }\n  handleChangeDate = (date) => {\n    if (date) {\n      this.props.handleChangeDate(moment(date, moment.defaultFormat).toDate());\n    } else {\n      this.props.handleChangeDate(null);\n    }\n    \n  }\n\n  render() {\n    // const { last_call } = this.state;\n    const { last_call } = this.props;\n    const is_valid_date = moment(last_call).isValid()\n\n    return ( \n      <div>\n        <FormGroup>\n          <Label>Last Call {is_valid_date ? <Button className=\"btn\" onClick={this.props.handleResetCallClick}>Reset</Button>: \"\"}</Label>\n          {is_valid_date ?\n          <div>\n            <DatePicker     \n              selected={is_valid_date ? moment(last_call, moment.defaultFormat).toDate() : moment(this.state.last_call, moment.defaultFormat).toDate()}\n              onChange={this.handleChangeDate}\n              showTimeSelect\n              timeFormat=\"HH:mm\"\n              timeIntervals={15}\n              dateFormat=\"d MMMM yyyy HH:mm\"\n              timeCaption=\"time\"\n            />\n          </div>\n          :                     \n            <Button className=\"btn btn-block\" onClick={this.props.handleAddCallClick}>Add Last Call</Button>\n          }\n        </FormGroup>\n      </div>\n    )    \n  }\n}","import React, { Component } from 'react'\nimport Dropzone from 'react-dropzone'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFileUpload } from '@fortawesome/free-solid-svg-icons'\nimport './style.scss'\n\nconst imageMaxSize = 10000000; //bytes\n\nclass FileDrop extends Component {\n\n\tonDrop = (acceptedFiles, rejectedFiles) => {\n\t\t// console.log(acceptedFiles, rejectedFiles)\n\t\tthis.props.onSelectDrop(acceptedFiles);\n\t}\n\trender () {\n\t\t\n\t\tconst { documents, detail } = this.props;\n\t\tlet drop_class\n\t\tlet drop_text\n\n\t\tif (documents) {\n\t\t\tif (detail) {\n\t\t\t\tif (documents === detail) {\n\t\t\t\t  drop_class = \"dropzone-field dropzone-field__default\"\n\t\t\t\t  drop_text = \"  Replace Document\"\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t  drop_class = \"dropzone-field dropzone-field__success\";\n\t\t\t  \t  drop_text = \"  Save to Attach\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdrop_class = \"dropzone-field dropzone-field__success\";\n\t\t\t\tdrop_text = \"  Save to Attach\";\n\t\t\t}\n\t\t} else {\n\t\t\tdrop_class = \"dropzone-field dropzone-field__default\";\n\t\t\tdrop_text = \"  Add Document\"\n\t\t} \n\n\t\treturn (\n\t\t  <div>Documents:\n            <span className=\"document-title\">{detail !== \"null\" ? \" (\"+detail.split(\"/\").slice(-1)[0]+\")\" : \"\"}</span>\n\t\t    <Dropzone\n\t            onDrop={this.onDrop}\t\t            \n\t            multiple={false}\n\t            maxSize={imageMaxSize}\n\t            >\n\t                {({getRootProps, getInputProps}) => (\n\t                    <div {...getRootProps()} className={`${drop_class}`}>\n\t                        <input {...getInputProps()} />\n\t                       \t<div>\n\t                       \t\t<FontAwesomeIcon icon={faFileUpload} color=\"white\"/>\n\t                       \t\t\t<span className=\"dropzone-field__text\">{`${drop_text}`}</span>\n\t\t\t\t\t\t\t</div>\n\t                    </div>\n\t                )}\n\t\t\t</Dropzone>﻿\n\t\t  </div>\n\t\t  )\n\t}\n}\nexport default FileDrop","import React, { Component } from 'react'\n\nimport * as Inputs from '../../Atoms/AddInputs/AddInputs'\nimport { CheckboxIsCorp } from '../../Atoms/Checkboxes/CheckboxIsCorp'\nimport { CheckboxIsPayed } from '../../Atoms/Checkboxes/CheckboxIsPayed'\nimport { CustomDropdown } from '../../Atoms/Dropdown/Dropdown'\nimport { DatePickLastCall } from '../../Atoms/DatePick/DatePickLastCall'\nimport FileDrop from '../../Atoms/FileDrop/FileDrop'\n\nexport class InputFormNoteDetail extends Component {\n  render() {\n    const { text, phone, email,  \n      linkedin_profile, website, \n      correspondence, is_corporate,\n      status, dropdownOpen, is_payed,\n      is_staff, add_call, last_call,\n      documents, detail,\n      errors, } = this.props;\n      \n    return (\n      <div>\n        <Inputs.InputName \n          onInputChange={this.props.onInputChange} \n          text={text} \n          errors={errors} \n        />\n        <Inputs.InputPhone \n          onInputChange={this.props.onInputChange} \n          phone={phone} \n          errors={errors} \n        />\n        <Inputs.InputEmail \n          onInputChange={this.props.onInputChange} \n          email={email} \n          errors={errors} \n        />      \n        <Inputs.InputLinkedin \n          onInputChange={this.props.onInputChange} \n          linkedin_profile={linkedin_profile} \n          errors={errors} \n        />\n        <Inputs.InputWebsite \n          onInputChange={this.props.onInputChange} \n          website={website} \n          errors={errors} \n        />      \n        <Inputs.InputCorrespondence \n          onInputChange={this.props.onInputChange} \n          correspondence={correspondence} \n          errors={errors} \n        />      \n        \n        <CheckboxIsCorp \n          handleCheckboxIsCorpBtnClick={this.props.handleCheckboxIsCorpBtnClick} \n          is_corporate={is_corporate} \n        />\n        <CheckboxIsPayed \n          handleCheckboxIsPayBtnClick={this.props.handleCheckboxIsPayBtnClick} \n          status={status} \n          is_staff={is_staff} \n          is_payed={is_payed}\n        />      \n      \n        <CustomDropdown \n          onChangeValue={this.props.onChangeValue} \n          onToggle={this.props.onToggle} \n          status={status} \n          dropdownOpen={dropdownOpen} \n        />      \n        <DatePickLastCall \n          handleChangeDate={this.props.handleChangeDate} \n          handleResetCallClick={this.props.handleResetCallClick} \n          handleAddCallClick={this.props.handleAddCallClick} \n          add_call={add_call} \n          last_call={last_call} \n        />      \n        <FileDrop \n          onSelectDrop={this.props.onSelectDrop} \n          documents={documents}\n          detail={detail}\n        />\n      </div>\n    )\n    \n  }\n}","import React, { Component } from 'react'\nimport { Table } from 'reactstrap';\n\nimport moment from \"moment\";\n\nexport class DetailPreviewTable extends Component {\n  render() {\n    const { text, phone, email,  \n      linkedin_profile, website, \n      correspondence, is_corporate,\n      status, is_payed,\n      last_call, documents, \n    } = this.props;\n\n    return (\n            <div className=\"col col-12 col-xs-12 col-sm-12 col-md-8 col-lg-8\">\n              <h3>Detailed Preview</h3>\n                <Table striped>\n                  <tbody>\n                    <tr>\n                      <th>Investor</th>\n                      <td>{is_corporate ? \"Corporate\" : \"Individual\" }</td>\n                    </tr>\n                    <tr>\n                      <th>Name</th>\n                      <td>{text}</td>\n                    </tr>\n                    <tr>\n                      <th>Phone</th>\n                      <td>{phone}</td>\n                    </tr>\n                    <tr>\n                      <th>Status</th>\n                      <td>{status}</td>\n                    </tr>\n                    <tr>\n                      <th>Email</th>\n                      <td className=\"table-correspondence__data\">{email}</td>\n                    </tr>\n                    <tr>\n                      <th>Linkedin</th>\n                      <td className=\"table-correspondence__data\"><a className=\"table-correspondence__url\" href={`${linkedin_profile}`} >{linkedin_profile}</a></td>\n                    </tr>\n                    <tr>\n                      <th>Website</th>\n                      <td className=\"table-correspondence__data\"><a className=\"table-correspondence__url\" href={`${website}`} >{website}</a></td>\n                    </tr>\n                    <tr>\n                      <th>Correspondence</th>\n                      <td className=\"table-correspondence__data\">{correspondence}</td>\n                    </tr>\n                    <tr>\n                      <th>Payment</th>\n                      <td>{is_payed ? \"Payed\" : \"New\" }</td>\n                    </tr>\n                    <tr>\n                      <th>Calls</th>\n                      <td>{last_call ? moment(last_call).format(\"D MMM YYYY HH:mm\") : \"\"}</td>\n                    </tr>\n                    <tr>\n                      <th>Documents</th>\n                      <td>{documents ? <a className=\"table-correspondence__url\" href={`${documents}`} >{documents.split(\"/\").slice(-1)[0]}</a> : \"\"}</td>\n                    </tr>\n                  </tbody>\n                </Table>\n            </div>\n    )\n    \n  }\n}","import React, {Component} from 'react'\nimport { Link } from \"react-router-dom\";\nimport * as detail from \"../../../actions/noteDetailActions\";\nimport {connect} from 'react-redux';\nimport { Form, Container, Row,\n  Button, } from 'reactstrap';\n\nimport moment from \"moment\";\n\nimport { LoadScreen } from '../Molecules/LoadScreen/LoadScreen'\nimport { InputFormNoteDetail } from '../Molecules/Forms/InputFormNoteDetail'\nimport { DetailPreviewTable } from '../Molecules/Tables/DetailPreviewTable'\nimport { handleValidation } from '../../../utils/helpers'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUndoAlt, faSave,\n       } from '@fortawesome/free-solid-svg-icons'\n\nclass NoteDetail extends Component {\n\n    constructor(props){\n        super(props);\n  \n        this.state = {\n          text: \"\",\n          phone: \"\",\n          status: \"\",\n          email:\"\",\n          linkedin_profile: \"\",\n          website: \"\",\n          correspondence: \"\",\n          is_corporate: false,\n          is_payed: false,\n          id: null,\n          loading: true,\n          errors: {},\n          hasError: false,\n          dropdownOpen: false,\n          detail: {},\n          add_call: false,\n          last_call: \"\", \n          documents: null,\n          attached: false,      \n        }\n    }\n\n    componentDidMount(){\n      if (this.props.match){\n        const {id} = this.props.match.params\n        this.setState({\n            id: id,\n        })\n        this.props.fetchDetailNote(id)        \n      }\n      \n    }\n\n    componentWillReceiveProps(nextProps) {\n      const detailed = nextProps.detail\n\n      if (Object.keys(detailed).length) {\n        this.setState({\n          text: detailed.text,\n          phone: detailed.phone,\n          status: detailed.status,\n          is_corporate: detailed.is_corporate,\n          is_payed: detailed.is_payed,\n          email: detailed.email,\n          linkedin_profile: detailed.linkedin_profile,\n          website: detailed.website,\n          correspondence: detailed.correspondence,\n          last_call: moment(detailed.last_call, moment.defaultFormat).toDate(),\n          documents: detailed.documents,\n          hasError: detailed.hasError,\n          loading: detailed.loading,\n        }) \n      }        \n    }    \n    toggle = () => {\n      this.setState(prevState => ({\n        dropdownOpen: !prevState.dropdownOpen\n      }));\n    }\n    handleChange = (e) => {\n      e.preventDefault();\n      let key = e.target.name\n      let value = e.target.value\n      this.setState({\n          [key]: value,\n          errors: {}\n      })\n    }\n    changeDate = (date) => {      \n      this.setState({last_call: date})\n    }\n\n    changeValue = (e) => {\n      this.setState({status: e.currentTarget.textContent})\n    }\n\n    getData = (documents) => {\n      console.log(\"getData!\")\n      this.setState({\n        documents: documents[0],\n        attached: true,\n      })\n    }\n\n    onCheckboxIsCorpBtnClick = () => {\n      this.setState({\n        is_corporate: !this.state.is_corporate,\n      });\n    }\n    onCheckboxIsPayBtnClick = () => {\n      this.setState({\n        is_payed: !this.state.is_payed,\n      });\n    }\n    onAddCallClick = () => {\n      this.setState({\n        add_call: true,\n        last_call: moment(new Date(), moment.defaultFormat).toDate(),\n      });\n    }\n\n    onResetCallClick = () => {\n      this.setState({\n        add_call: false,\n        last_call: \"\",\n      });\n    }\n    // Force update page to /investors\n    refreshPage = () => {\n      window.location.href = '/investors';\n    }\n    submitNote = (e) => {\n      e.preventDefault();\n      // check validation from helper file\n      const validation_errors = handleValidation(this.state)\n      // check validation_errors dictionary is empty or has any errors\n      if (Object.keys(validation_errors).length === 0) {\n        this.props.updateDetailNote(this.state.id, this.state.text, \n          this.state.phone, this.state.status, this.state.is_corporate, \n          this.state.is_payed, this.state.email, this.state.linkedin_profile, \n          this.state.website, this.state.correspondence, this.state.last_call,\n          this.state.documents, this.state.attached,)\n      } else {\n        this.setState({errors: validation_errors}); \n      }\n    }\n\n    renderNote() {\n        const { detail, is_staff } = this.props;\n        const { text, phone, email, \n          linkedin_profile, website,\n          correspondence, is_corporate,\n          status, dropdownOpen, is_payed,\n          add_call, last_call, documents,\n          errors, hasError } = this.state;\n\n        if (!detail.detail && !hasError) {\n          return (\n                <Container fluid>\n                  <Row>\n                    <Form onSubmit={this.submitNote} className=\"form col-12 col-xs-12 col-sm-12 col-md-4 col-lg-4 mt-2 p-2\">\n                      <InputFormNoteDetail \n                        onInputChange={this.handleChange}\n                        handleCheckboxIsCorpBtnClick={this.onCheckboxIsCorpBtnClick}\n                        handleCheckboxIsPayBtnClick={this.onCheckboxIsPayBtnClick} \n                        onToggle={this.toggle} \n                        onChangeValue={this.changeValue}\n                        handleChangeDate={this.changeDate}\n                        handleResetCallClick={this.onResetCallClick}\n                        handleAddCallClick={this.onAddCallClick}\n                        onSelectDrop={this.getData}\n\n                        text={text} \n                        phone={phone}\n                        email={email}\n                        linkedin_profile={linkedin_profile}\n                        website={website}\n                        correspondence={correspondence}\n                        is_corporate={is_corporate}\n                        status={status}\n                        is_staff={is_staff}\n                        is_payed={is_payed}\n                        dropdownOpen={dropdownOpen}\n                        add_call={add_call}\n                        last_call={last_call}\n                        documents={documents}\n                        detail={`${detail.documents}`}\n\n                        errors={errors} \n                      />                \n\n                    <Button color=\"info\" className=\"rounded-0\" size=\"lg\" type=\"submit\"><FontAwesomeIcon icon={faSave} color=\"white\"/></Button>\n                    <Link to=\"/investors\" onClick={this.refreshPage} ><Button className=\"rounded-0\" size=\"lg\"><FontAwesomeIcon icon={faUndoAlt} color=\"white\"/> Cancel</Button></Link>\n                  </Form>\n\n                  <DetailPreviewTable \n                    {...detail}\n                  />\n              </Row>\n            </Container>              \n          );\n\n        } else {\n            return (\n              <div>\n                <h1>404 error. Message Not Found</h1>\n              </div>\n            );\n        }\n    }\n    render () {\n        const {loading} = this.state\n        return(\n            <div>\n              {loading ?<LoadScreen />:this.renderNote()}\n          </div>               \n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      detail: state.detail,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      fetchDetailNote: (id) => {\n          dispatch(detail.fetchDetailNote(id));\n      },\n      updateDetailNote: (id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence, last_call, documents, attached) => {\n          dispatch(detail.updateDetailNote(id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence, last_call, documents, attached));\n      }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteDetail);","import { toast } from 'react-toastify';\nexport const fetchDetailNote = (id) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        const endpoint = `/api/investors/${id}/` \n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        \n        return fetch(endpoint, {headers, })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n               \n                } else {\n                    toast.error(\"Server Error...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'FETCH_DETAIL_NOTE', detail: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authentication Error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", detail: res.data});\n                    throw res.data;\n                } \n                else if (res.status === 404) {\n                    toast.error(\"Investor is not found...\")\n                    dispatch({type: \"MESSAGE_NOT_FOUND\"});\n\n                }\n            })\n            .catch(error => {                \n                //error.redirect('/404');\n                //Handle error\n                console.log(\"error\", error);\n                // return dispatch({type: \"MESSAGE_NOT_FOUND\", detail: error});\n                // dispatch({type: \"MESSAGE_NOT_FOUND\", detail: error});\n            });\n    }\n}\n\nexport const updateDetailNote = (id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence, last_call, documents, attached) => {\n    return (dispatch, getState) => {\n\n        let headers = {'Accept': 'application/json'};\n        // let headers = {\"Content-Type\": \"multipart/form-data\"};\n\n        let {token} = getState().auth;\n\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        let formData = new FormData();\n        formData.append('text', text);\n        formData.append('phone', phone);\n        formData.append('status', status);\n        formData.append('is_corporate', is_corporate);\n        formData.append('is_payed', is_payed);\n        formData.append('email', email);\n        formData.append('linkedin_profile', linkedin_profile);\n        formData.append('website', website);\n        // Not required fields\n        if (correspondence) {\n            formData.append('correspondence', correspondence);\n        }\n        //check if attached & if documents(file) is not string\n        //if documents is string don't append formData\n        if (attached && \n          !(typeof documents === 'string' || documents instanceof String)) {\n            formData.append('documents', documents);\n        }\n\n        // formData need to convert ISO format string\n        if (last_call){\n            if (String(last_call) !==\"Invalid Date\") {\n                formData.append('last_call', last_call.toISOString());\n            }            \n        } else {\n            formData.append('last_call', \"\");\n        }\n        console.log(formData, documents)\n        let noteId = id;\n        return fetch(`/api/investors/${noteId}/`, {headers, method: \"PUT\", body: formData})\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    toast.error(\"Server error...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 200) {\n                    toast.info(\"Investor \"+res.data.text+\" edited\")\n                    return dispatch({type: 'UPDATE_DETAIL_NOTE', detail: res.data, id});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authentication Error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\n\nexport const addDetailNote = (text, phone, status, is_corporate, email, linkedin_profile, website, correspondence) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n\n        let body = JSON.stringify({text, phone, status, is_corporate, email, linkedin_profile, website, correspondence });\n        return fetch(\"/api/investors/\", {headers, method: \"POST\", body})\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 201) {\n                    toast.info(\"Investor \"+res.data.text+\" added\")\n                    return dispatch({type: 'ADD_DETAIL_NOTE', detail: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\n","import React, { Component } from 'react'\n\nimport * as Inputs from '../../Atoms/AddInputs/AddInputs'\nimport { CheckboxIsCorp } from '../../Atoms/Checkboxes/CheckboxIsCorp'\n\nexport class InputFormNoteAdd extends Component {\n  render() {\n    const { text, phone, email,  \n      linkedin_profile, website, \n      correspondence, is_corporate,\n\n      errors, \n    } = this.props;\n\n    return (\n      <div>\n        <Inputs.InputName \n          onInputChange={this.props.onInputChange} \n          text={text} \n          errors={errors} \n        />\n        <Inputs.InputPhone \n          onInputChange={this.props.onInputChange} \n          phone={phone} \n          errors={errors} \n        />\n        <Inputs.InputEmail \n          onInputChange={this.props.onInputChange} \n          email={email} \n          errors={errors} \n        />      \n        <Inputs.InputLinkedin \n          onInputChange={this.props.onInputChange} \n          linkedin_profile={linkedin_profile} \n          errors={errors} \n        />\n        <Inputs.InputWebsite \n          onInputChange={this.props.onInputChange} \n          website={website} \n          errors={errors} \n        />      \n        <Inputs.InputCorrespondence \n          onInputChange={this.props.onInputChange} \n          correspondence={correspondence} \n          errors={errors} \n        />      \n        \n        <CheckboxIsCorp \n          handleCheckboxIsCorpBtnClick={this.props.handleCheckboxIsCorpBtnClick} \n          is_corporate={is_corporate} \n        />\n\n      </div>\n    )\n    \n  }\n}","import React, {Component} from 'react'\n\nimport { Link, Redirect } from 'react-router-dom'\nimport * as detail from \"../../../actions/noteDetailActions\";\nimport {connect} from 'react-redux';\nimport { Form, Button } from 'reactstrap';\n\nimport { InputFormNoteAdd } from '../Molecules/Forms/InputFormNoteAdd'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSave, } from '@fortawesome/free-solid-svg-icons'\n\nimport { handleValidation } from '../../../utils/helpers'\n\nclass NoteNew extends Component {\n    constructor(props){\n        super(props)       \n        this.state = {\n          text: \"\",\n          phone: \"\",\n          email: \"\",\n          status: \"Candidate\",\n          linkedin_profile: \"\",\n          website: \"\",\n          correspondence: \"\",\n          is_corporate: false,\n          id: null,\n          doneLoading: false,\n          errors: {},        \n          redirectToNewPage: false          \n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n      if (this.state.redirectToNewPage) {  \n        this.setState({\n          id: nextProps.detail.id,\n        })\n      }\n    }    \n\n    resetForm = () => {\n      this.setState({text: \"\", phone: '', email:'', errors: {}, status: 'Candidate', \n        is_corporate: false, linkedin_profile: \"\", website: \"\",\n        correspondence: \"\",\n      });\n    }\n    handleChange = (e) => {\n      e.preventDefault();\n      let key = e.target.name\n      let value = e.target.value\n      this.setState({\n          [key]: value,\n          errors: {}\n      })\n    }\n    changeValue = (e) => {\n      this.setState({status: e.currentTarget.textContent})\n    }\n\n    onCheckboxIsCorpBtnClick = () => {\n      this.setState({\n        is_corporate: !this.state.is_corporate,\n      });\n    }\n    // Force update page to /investors\n    refreshPage = () => {\n      window.location.href = '/investors';\n    }\n    submitNote = (e) => {\n      e.preventDefault();\n      // check validation from helper file\n      const validation_errors = handleValidation(this.state)\n      // check validation_errors dictionary is empty or has any errors\n      if (Object.keys(validation_errors).length === 0) {\n        this.props.addDetailNote(this.state.text, this.state.phone, this.state.status, \n          this.state.is_corporate, this.state.email, this.state.linkedin_profile, \n          this.state.website, this.state.correspondence)\n          .then(this.setState({ redirectToNewPage: true }))            \n          .catch(function (error) {\n             console.log(\"error\", error);\n           });\n      } else {\n        this.setState({errors: validation_errors}); \n      }\n    }\n\n    render () {\n        const { text, phone, email, \n          linkedin_profile, website,\n          correspondence, is_corporate,\n          errors } = this.state;\n        // The part that makes the redirect happen\n        if (this.state.redirectToNewPage && this.state.id) {\n          return (\n            <Redirect to={{pathname:`/investors/${this.state.id}`}} />\n          )\n        }\n        return(\n            <div>\n              <div className=\"mt-2 mb-2\">\n                <h3>Add New</h3>\n              </div>\n              <Form onSubmit={this.submitNote} className=\"form col col-sm-4 mt-2 p-2\">\n                <InputFormNoteAdd\n                  onInputChange={this.handleChange}\n                  handleCheckboxIsCorpBtnClick={this.onCheckboxIsCorpBtnClick} \n\n                  text={text} \n                  phone={phone}\n                  email={email}\n                  linkedin_profile={linkedin_profile}\n                  website={website}\n                  correspondence={correspondence}\n                  is_corporate={is_corporate}\n\n                  errors={errors} \n                /> \n                <div>\n                  <Button className=\"rounded-0\" color=\"info\" type=\"submit\"><FontAwesomeIcon icon={faSave} color=\"white\"/></Button>\n                  <Button className=\"rounded-0\" outline onClick={this.resetForm}>Clear</Button>\n                  <Link to=\"/investors\" onClick={this.refreshPage} ><Button className=\"rounded-0\">Cancel</Button></Link>\n                </div>\n            </Form>\n          </div>               \n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      detail: state.detail,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addDetailNote: (text, phone, status, is_corporate, email, linkedin_profile, website, correspondence) => {\n            return dispatch(detail.addDetailNote(text, phone, status, is_corporate, email, linkedin_profile, website, correspondence));\n        },\n    }\n}\n\n// export default NewNote;\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteNew);","import React, {Component} from 'react'\nimport * as lead from \"../../../actions/paymentsActions\";\nimport {connect} from 'react-redux';\nimport { LoadScreen } from '../Molecules/LoadScreen/LoadScreen'\nimport { Table } from 'reactstrap';\n\nclass Payments extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {         \n        loading: true,\n        errors: {},\n        lead: {},\n      };\n    }\n\n    componentDidMount(){\n      if (this.props.match){\n        this.props.fetchPaymentsLead()\n      }\n    }\n   \n    renderPayments() {\n      const { lead } = this.props;\n        if (lead.leads) {\n          return (\n            <div>\n              <h3>Leads View</h3>\n              <Table className=\"table text-center\" striped>\n                <thead>\n                  <tr>\n                    <th className=\"table-num__title table-payments\">#</th>\n                    <th className=\"table-payments\">Developer</th>\n                    <th className=\"table-payments\">Total Leads</th>\n                    <th className=\"table-payments\">Processed</th>\n                    <th className=\"table-payments\">Converted</th>\n                    <th className=\"table-payments\">Rejected</th>\n                    <th className=\"table-payments\">Next Payment</th>\n                  </tr>\n                </thead>  \n                <tbody>\n                  {lead.leads.length > 0 ? lead.leads.map((item,id) => (\n                    <tr key={id}>\n                        <th scope=\"row\" className=\"table-num__text\">{id+1}</th>\n                        <td>{item.owner}</td>\n                        <td>{item.total}</td>\n                        <td>{item.processed}</td>\n                        <td>{item.converted}</td>\n                        <td>{item.rejected}</td>\n                        <td>{item.price}</td>\n                    </tr>\n                  )) : <tr><td colSpan=\"7\">Table is empty. Add your investors</td></tr>}\n                </tbody>                     \n              </Table>\n            </div>              \n          );\n        }\n    }\n    render () {\n      const { loading } = this.props\n      return(\n          <div>\n            { loading ? <LoadScreen /> : this.renderPayments() }\n        </div>               \n      )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      lead: state.lead,\n      loading: state.lead.loading\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      fetchPaymentsLead: () => {\n          dispatch(lead.fetchPaymentsLead());\n      },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Payments);","export const fetchPaymentsLead = () => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        const endpoint = `/api/payments/` \n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        \n        return fetch(endpoint, {headers, })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                // } else if (res.status === 404) {\n                //     dispatch({type: \"MESSAGE_NOT_FOUND\", data: res.data});\n                //     throw res.data;\n                } else {\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'FETCH_PAYMENTS_LEAD', leads: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                } else if (res.status === 404) {\n                    dispatch({type: \"ERROR_NOT_FOUND\", leads: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport RequireAuth from \"./auth/RequireAuth\";\nimport Landing from \"./Landing\";\nimport Login from \"./auth/Login\";\nimport Logout from \"./auth/Logout\";\nimport Signup from \"./auth/Signup\";\nimport SignupDone from \"./auth/SignupDone\";\nimport AccountActivation from \"./auth/AccountActivation\";\nimport UserProfile from \"./auth/UserProfile\";\nimport UserProfileEdit from \"./auth/UserProfileEdit\";\nimport PasswordChange from \"./auth/PasswordChange\";\nimport PasswordReset from \"./auth/PasswordReset\";\nimport PasswordResetDone from \"./auth/PasswordResetDone\";\nimport PasswordResetConfirm from \"./auth/PasswordResetConfirm\";\nimport NoMatch from \"./NoMatch\";\n\nimport ReactifyComp from '../routingComps/ReactifyComp'\nimport PostDetail from '../reactify/PostDetail';\nimport PostCreate from '../reactify/PostCreate'\nimport Notes from './notes/Templates/Notes'\nimport NoteDetail from './notes/Templates/NoteDetail'\nimport NoteNew from './notes/Templates/NoteNew'\nimport Payments from './notes/Templates/Payments'\n\nconst MainContent = () => (\n    <div>\n        <Switch>\n            <Route exact path=\"/\" component={props => <Landing {...props} />} />\n            <Route path=\"/reload\" component={null} key=\"reload\" />\n            <Route path=\"/login\" component={props => <Login {...props} />} />\n            <Route path=\"/logout\" component={props => <Logout {...props} />}/>\n            <Route path=\"/signup\" component={props => <Signup {...props} />}/>\n            <Route path=\"/activation/confirm-email/:key\" component={props => <AccountActivation {...props} />}/>\n            <Route path=\"/signup_done\" component={props => <SignupDone {...props} />}/>\n            <Route path=\"/reset_password\" component={props => <PasswordReset {...props} />}/>\n            <Route path=\"/reset_password_done\" component={props => <PasswordResetDone {...props} />}/>\n            <Route path=\"/pass/reset/:uid/:token/\" component={props => <PasswordResetConfirm {...props} />}/>\n            <Route path=\"/profile\" component={RequireAuth(UserProfile)}/>\n            <Route path=\"/profile_edit\" component={RequireAuth(UserProfileEdit)}/>\n            <Route path=\"/change_password\" component={RequireAuth(PasswordChange)}/>\n            <Route path='/react/posts/create' component={RequireAuth(PostCreate)}/>\n            <Route path='/react/posts/:slug' component={RequireAuth(PostDetail)}/>\n            <Route path='/react/posts' component={RequireAuth(ReactifyComp)} />\n            <Route exact path='/investors' component={RequireAuth(Notes)} />\n            <Route path='/investors/add' component={RequireAuth(NoteNew)}/>\n            <Route path='/investors/:id' component={RequireAuth(NoteDetail)}/>\n            <Route exact path='/payments' component={RequireAuth(Payments)} />\n\n            <Route component={props => <NoMatch {...props} />}/>\n        </Switch>\n    </div>\n);\n\nexport default MainContent;\n","import React, {Component} from \"react\";\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css'; \n\nimport Header from \"./Header\";\nimport MainContent from \"./MainContent\";\n\nexport default class App extends Component {\n\n    render() {\n        return (\n            <div>                \n                <Header />\n                <div className=\"container\">\n                    <ToastContainer \n                      hideProgressBar={true} \n                      position=\"bottom-right\"\n                      autoClose={3000}\n                      removeCloseButton={true}\n                    />\n                \t<MainContent />\n                </div>\n            </div>\n        );\n    }\n}","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"bootstrap/dist/css/bootstrap.css\";\n\nimport \"./styles/style.scss\"\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import { Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport store from \"./store\";\n// import history from \"./utils/historyUtils\";\nimport { authLogin } from \"./actions/authActions\";\nimport App from \"./components/App\";\nimport registerServiceWorker from './registerServiceWorker';\n\n// import { syncHistoryWithStore } from 'react-router-redux'\n\n\n// const browserhistory = syncHistoryWithStore(history, store)\n\nregisterServiceWorker();\n\nconst token = localStorage.getItem(\"token\");\n\nif (token) {\n    store.dispatch(authLogin(token));\n}\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <App />\n        </Router>\n    </Provider>\n    , document.getElementById(\"root\"));\n"],"sourceRoot":""}