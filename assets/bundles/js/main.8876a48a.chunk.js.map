{"version":3,"sources":["../config/polyfills.js","reducers/notesReducer.js","constants/actionTypes.js","reducers/index.js","reducers/authReducer.js","reducers/noteDetailReducer.js","reducers/paymentsReducer.js","reducers/userDetailReducer.js","store/index.js","constants/urls.js","utils/authUtils.js","actions/authActions.js","utils/renderUtils.js","components/general/Atoms/Links/Links.js","components/Header.js","components/auth/RequireAuth.js","components/Landing.js","components/auth/Login.js","components/auth/Logout.js","components/auth/Signup.js","components/auth/SignupDone.js","components/auth/AccountActivation.js","components/general/Organisms/LoadScreen/LoadScreen.js","components/general/Atoms/Buttons/Buttons.js","components/auth/Molecules/Tables/UserDetailTable.js","components/auth/Templates/UserProfile.js","components/auth/Templates/UserProfileDetail.js","actions/userDetailActions.js","components/auth/Atoms/ImageDrop/ImageDrop.js","components/auth/UserProfileEdit.js","components/auth/PasswordChange.js","components/auth/PasswordReset.js","components/auth/PasswordResetDone.js","components/auth/PasswordResetConfirm.js","components/NoMatch.js","reactify/PostInline.js","reactify/Posts.js","routingComps/ReactifyComp.js","reactify/PostForm.js","reactify/PostDetail.js","reactify/PostCreate.js","actions/notesActions.js","components/notes/Organisms/Modal/Modal.js","components/notes/Atoms/AddInputs/AddInputs.js","components/notes/Atoms/Checkboxes/CheckboxIsCorp.js","components/notes/Atoms/Checkboxes/CheckboxIsPayed.js","components/notes/Atoms/Dropdown/Dropdown.js","components/notes/Molecules/Forms/InputFormNoteQuickAdd.js","components/notes/Molecules/Tables/OrderingHeaderTable.js","utils/helpers.js","components/notes/Templates/Notes.js","components/notes/Atoms/DatePick/DatePickLastCall.js","components/notes/Atoms/FileDrop/FileDrop.js","components/notes/Molecules/Forms/InputFormNoteDetail.js","components/notes/Molecules/Tables/DetailPreviewTable.js","components/notes/Templates/NoteDetail.js","actions/noteDetailActions.js","components/notes/Molecules/Forms/InputFormNoteAdd.js","components/notes/Templates/NoteNew.js","components/notes/Templates/Payments.js","utils/paymentsUtils.js","actions/paymentsActions.js","components/MainContent.js","components/App.js","registerServiceWorker.js","index.js"],"names":["Promise","__webpack_require__","enable","window","Object","assign","initialState","noteitems","loading","AuthTypes","LOGIN","LOGOUT","CHANGE_PASSWORD","USER_PROFILE","rootReducer","combineReducers","form","formReducer","auth","state","arguments","length","undefined","action","type","objectSpread","authenticated","token","payload","user","notes","noteList","map","a","reduce","b","concat","toConsumableArray","slice","filter","index","self","findIndex","t","created_at","id","unshift","note","selectById","indexEdit","p","noteToUpdate","text","phone","status","is_corporate","is_payed","email","linkedin_profile","website","correspondence","splice","deleteById","indexDel","nextafterdelete","next","deleted","detail","updated","hasError","errors","page","lead","leads","loaded","error","userdetail","store","logger","createLogger","middleware","applyMiddleware","thunk","compose","createStoreWithMiddleware","createStore","configureStore","ROOT_URL","HOMEPAGE_URL","require","homepage","AuthUrls","SIGNUP","RESET_PASSWORD","RESET_PASSWORD_CONFIRM","USER_ACTIVATION","getUserToken","authLogin","getUserProfile","dispatch","getState","axios","get","headers","authorization","then","response","data","catch","console","log","processServerError","keys","newDict","key","push","_error","renderUser","react_default","createElement","avatar","src","className","alt","username","renderField","_ref","input","label","_ref$meta","meta","touched","renderTextAreaField","_ref2","_ref2$meta","renderError","errorMessages","JSON","stringify","toast","NavigationLink","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","forceLink","url","location","href","inherits","createClass","value","_this2","_this$props","props","urltext","customclass","toLowerCase","NavItem_default","Link","onClick","e","preventDefault","to","pathname","fromDashboard","prevLink","Component","contextTypes","router","PropTypes","object","NavigationUserLink","_Component2","_getPrototypeOf3","_this3","_len2","_key2","_this4","_this$props2","Header","toggleNavbar","setState","collapsed","Nav","navbar","Links_NavigationLink","Links_NavigationUserLink","Navbar","color","dark","expand","NavbarBrand","NavbarToggler","Collapse","isOpen","renderLinks","connect","RequireAuth","ComposedComponent","Authentication","checkAuthentication","nextProps","history","is_staff","is_superuser","Landing","Login","handleSubmit","pristine","submitting","onSubmit","Field","name","component","validate","required","message","role","Button","disabled","reduxForm","formValues","loginUrl","post","localStorage","setItem","processedError","SubmissionError","onChange","values","clearSubmitErrors","test","Logout","logoutUser","removeItem","Signup","password1","password2","signupUrl","SignupDone","AccountActivation","match","params","activateUserUrl","info","LoadScreen","ReturnButton","returnPage","context","locState","Button_default","size","index_es","icon","faUndoAlt","SaveButton","faSave","ClearButton","outline","onClear","UserDetailTable","Table","striped","Buttons_ReturnButton","style","backgroundImage","first_name","last_name","about","UserProfile","UserDetailTable_UserDetailTable","LoadScreen_LoadScreen","UserProfileDetail","fetchUserDetail","_this$state","renderNote","prevState","Content-Type","endpoint","fetch","res","json","ImageDrop","attached","handleDrop","files","_this$props$meta","classNameLabel","cbFunction","drop_class","drop_text","dist_es","onDrop","f","maxSize","getRootProps","getInputProps","defaultProps","Atoms_ImageDrop_ImageDrop","dropzone_options","multiple","accept","initialValues","formData","FormData","String","forEach","append","patch","PasswordChange","changePasswordUrl","new_password1","new_password2","PasswordReset","resetPasswordUrl","PasswordResetDone","PasswordResetConfirm","_props$match$params","uid","resetPasswordConfirmUrl","NoMatch","PostInline","elClass","showContent","slug","title","content","Posts","togglePostListClass","bind","assertThisInitialized","handleNewPost","loadMorePosts","posts","postsListClass","previous","author","count","loadPosts","nextEndpoint","thisComp","lookupOptions","method","csrfToken","cookie","load","responseData","results","postItemData","currentPosts","event","postItem","reactify_PostInline","ReacTifyComp","reactify_Posts","PostForm","handleInputChange","handleDraftChange","clearForm","postTitleRef","React","createRef","postContentRef","deletePost","draft","publish","moment","Date","format","X-CSRFToken","Authorization","body","credentials","newPostItemUpdated","alert","newPostItemCreated","defaultState","postCreateForm","reset","current","updatePost","createPost","target","defineProperty","cancelClass","deleteClass","ref","el","htmlFor","placeholder","checked","PostDetail","handlePostItemUpdated","doneLoading","loadPost","owner","reactify_PostForm","postItemUpdated","PostCreate","fetchNotes","ModalDelete","modaldelete","toggle","Modal","ModalHeader","ModalBody","ModalFooter","FormGroup","row","onSelectForDelete","faTrash","InputName","Label","Input","onInputChange","FormText","InputPhone","InputEmail","_Component3","_this$props3","InputLinkedin","_Component4","_this$props4","InputWebsite","_Component5","_this$props5","InputCorrespondence","_Component6","_this$props6","CheckboxIsCorp","faMale","faUsers","handleCheckboxIsCorpBtnClick","active","CheckboxIsPayed","faHandHoldingUsd","faCheckCircle","handleCheckboxIsPayBtnClick","CustomDropdown","dropdownOpen","Dropdown","onToggle","DropdownToggle","caret","DropdownMenu","DropdownItem","onChangeValue","InputFormNoteQuickAdd","updateNoteId","AddInputs_InputName","AddInputs_InputPhone","AddInputs_InputEmail","AddInputs_InputLinkedin","AddInputs_InputWebsite","AddInputs_InputCorrespondence","CheckboxIsCorp_CheckboxIsCorp","Dropdown_CustomDropdown","CheckboxIsPayed_CheckboxIsPayed","OrderingHeaderTable","order","is_ordering_name","searchtext","handleOrderNotes","mapped","item","join","orderNotes","onBtnClickOrderingName","ordername","newordername","charAt","indexOf","includes","onOrderNotes","faLongArrowAltDown","rotation","faExchangeAlt","faTimes","handleValidation","fields","trim","lastAtPos","lastIndexOf","lastDotPos","Notes","resetForm","addNew","modal","resetSearch","selectForEdit","updateNoteIndex","selectForDelete","deleteNote","toggleModal","toggleModalDelete","handleChange","_this$setState","changeValue","currentTarget","textContent","searchNotes","onCheckboxIsCorpBtnClick","onCheckboxIsPayBtnClick","dataFromCallback","submitNote","validation_errors","addNote","updateNote","nextForDelete","lastChar","parseInt","Form","InputFormNoteQuickAdd_InputFormNoteQuickAdd","_this$state2","faPlusSquare","renderModal","Modal_ModalDelete","CustomInput","inline","faSearch","OrderingHeaderTable_OrderingHeaderTable","scope","owner_username","faEdit","renderNotes","noteId","DatePickLastCall","handleChangeDate","date","defaultFormat","toDate","add_call","last_call","is_valid_date","isValid","handleResetCallClick","react_datepicker_es","selected","showTimeSelect","timeFormat","timeIntervals","dateFormat","timeCaption","handleAddCallClick","FileDrop","acceptedFiles","rejectedFiles","onSelectDrop","documents","split","faFileUpload","InputFormNoteDetail","DatePickLastCall_DatePickLastCall","Atoms_FileDrop_FileDrop","DetailPreviewTable","NoteDetail","changeDate","getData","onAddCallClick","onResetCallClick","updateDetailNote","fetchDetailNote","detailed","Container","fluid","Row","InputFormNoteDetail_InputFormNoteDetail","Buttons_SaveButton","DetailPreviewTable_DetailPreviewTable","Accept","toISOString","InputFormNoteAdd","NoteNew","addDetailNote","redirectToNewPage","Redirect","Form_default","InputFormNoteAdd_InputFormNoteAdd","Buttons_ClearButton","Payments","fetchPaymentsLead","prevProps","snapshot","newstate","true_investors","converted","processed","rejected","count_payed","payed","price_all","price_payed","prices","Math","ceil","price","paymentsUtil","total","colSpan","renderPayments","MainContent","Switch","Route","exact","path","components_Landing","auth_Login","auth_Logout","auth_Signup","auth_AccountActivation","SignupDone_SignupDone","auth_PasswordReset","PasswordResetDone_PasswordResetDone","auth_PasswordResetConfirm","UserProfileEdit","ReactifyComp","components_NoMatch","App","components_Header","lib","hideProgressBar","position","autoClose","removeCloseButton","components_MainContent","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","URL","process","origin","addEventListener","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","getItem","ReactDOM","render","es","BrowserRouter","App_App","document","getElementById"],"mappings":"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","file":"js/main.8876a48a.chunk.js","sourcesContent":["'use strict';\n\nif (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where React gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes React's erratic future behavior.\n  require('promise/lib/rejection-tracking').enable();\n\n  window.Promise = require('promise/lib/es6-extensions.js');\n} // fetch() polyfill for making API calls.\n\n\nrequire('whatwg-fetch'); // Object.assign() is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\n\n\nObject.assign = require('object-assign'); // In tests, polyfill requestAnimationFrame since jsdom doesn't provide it yet.\n// We don't polyfill it in the browser--this is user's responsibility.\n\nif (process.env.NODE_ENV === 'test') {\n  require('raf').polyfill(global);\n}","const initialState = [{noteitems: [], \n                       loading: true\n                    }]\n\nexport default function notes(state=initialState, action) {\n    //собрать все массивы с ключами noteitems и объединить в один массив\n    let noteList = state.map(a => a.noteitems).reduce((a, b) => [...a, ...b], []).slice();\n\n    switch (action.type) {\n\n        case 'FETCH_NOTES':\n            //удаление дубликатов\n            noteList = noteList.filter((noteList, index, self) => self.findIndex(t => t.created_at === noteList.created_at && t.id === noteList.id) === index)\n            \n            return [                    \n                    {...state[state.length-1],\n                    noteitems: noteList,\n                    loading: false,\n                    // deleted: false\n                    // ...action.notes\n                    },\n                ];\n        case 'SEARCH_NOTES':\n            noteList = action.notes\n        \n            return [                    \n\n                    {...state,\n                    ...action.notes,\n                    loading: false,},\n                ];\n\n        case 'ORDER_NOTES':\n            noteList = action.notes\n       \n            return [                    \n\n                    {...state,\n                    ...action.notes,\n                    loading: false,},\n                ];\n\n\n        case 'ADD_NOTE':\n            // Добавляем заметку\n            noteList.unshift(action.note);\n            // Удаляем нижнюю\n            // if (noteList.length > 0) {\n            //     noteList.pop();\n            // }\n\n            return [\n                        //берем последний стейт и добавляем к нему общий массив\n                        {...state[state.length-1],\n                            noteitems: noteList,\n                            loading: false,},\n\n                    ];\n\n        case 'UPDATE_NOTE':\n\n            //Поиск в общем массиве элемента по id и index (2мерный массив)\n            let selectById = state[action.index].noteitems[action.id].id\n            let indexEdit = noteList.findIndex(p => p.id === selectById) \n\n            let noteToUpdate = noteList[indexEdit]\n            noteToUpdate.text = action.note.text;\n            noteToUpdate.phone = action.note.phone;\n            noteToUpdate.status = action.note.status;\n            noteToUpdate.is_corporate = action.note.is_corporate;\n            noteToUpdate.is_payed = action.note.is_payed;\n            noteToUpdate.email = action.note.email;\n            noteToUpdate.linkedin_profile = action.note.linkedin_profile;\n            noteToUpdate.website = action.note.website;\n            noteToUpdate.correspondence = action.note.correspondence;\n            noteList.splice(indexEdit, 1, noteToUpdate);\n            return [\n                    {...state[state.length-1],\n                        noteitems: noteList,\n                        loading: false,},\n                    ];\n\n        case 'DELETE_NOTE':\n            //Поиск в общем массиве элемента по id и index (2мерный массив)\n            let deleteById = state[action.id].noteitems[action.index].id\n            let indexDel = noteList.findIndex(p => p.id === deleteById)                      \n            noteList.splice(indexDel, 1);\n            return [\n                        {...state[state.length-1],\n                            noteitems: noteList,\n                            loading: false,\n                            nextafterdelete: state[0].next,\n                            deleted: true\n                        }\n                    ];\n\n        default:\n            \n    }\n    return state;\n}\n","export const AuthTypes = {\n    LOGIN: \"LOGIN\",\n    LOGOUT: \"LOGOUT\",\n    CHANGE_PASSWORD: \"CHANGE_PASSWORD\",\n    USER_PROFILE: \"USER_PROFILE\",\n    // WITH_ERROR: \"WITH_ERROR\"\n};","import {combineReducers} from \"redux\";\nimport { reducer as formReducer } from \"redux-form\";\n\nimport notesReducer from \"./notesReducer\";\nimport noteDetailReducer from \"./noteDetailReducer\";\nimport userDetailReducer from \"./userDetailReducer\";\nimport authReducer from \"./authReducer\";\nimport paymentsReducer from \"./paymentsReducer\";\n// import { routerReducer } from 'react-router-redux'\n\nconst rootReducer = combineReducers({\n    form: formReducer,\n    auth: authReducer,\n    notes: notesReducer,\n    detail: noteDetailReducer,\n    lead: paymentsReducer,\n    userdetail: userDetailReducer,\n    // routing: routerReducer\n});\n\nexport default rootReducer;\n\n\n","import { AuthTypes } from \"../constants/actionTypes\";\n\nexport default function(state = {loading: true}, action) {\n    switch(action.type) {\n        case AuthTypes.LOGIN:\n            return { ...state, authenticated: true, token: action.payload};\n        case AuthTypes.LOGOUT:\n            return { ...state, authenticated: false, token: null};\n        case AuthTypes.USER_PROFILE:\n            return { ...state, user: action.payload, loading: false};\n        // case AuthTypes.WITH_ERROR:\n        //     return { ...state, error: action.payload};\n        default:\n        \t// will NOT execute because of the line preceding the switch.\n    }\n    return state;\n}","export default function noteDetailReducer(state = {loading: true, updated: false}, action) {\n    switch(action.type) {\n\n        case 'FETCH_DETAIL_NOTE':\n            return { ...state, ...action.detail, loading: false};\n        case 'UPDATE_DETAIL_NOTE':\n            return { ...state, ...action.detail, loading: false, updated: true};\n        case 'ADD_DETAIL_NOTE':\n            return { ...state, ...action.detail, loading: false};\n\n        case 'MESSAGE_NOT_FOUND':\n            return {...state, \n                hasError: true,\n                errors: {page: \"Page not found\"},\n                loading: false,\n            };\n\n        default:\n          // will NOT execute because of the line preceding the switch.\n    }\n    return state;\n}","export default function paymentsReducer(state = {leads: \"\", loading: true, loaded: false}, action) {\n    switch(action.type) {\n        case 'FETCH_PAYMENTS_LEAD':\n            return { ...state, leads: [...action.leads], loading: false, loaded: true }\n        case 'LEAD_NOT_FOUND':\n            return {...state, loading: false, error: \"Not found\"};\n        default:\n          // will NOT execute because of the line preceding the switch.\n    }\n    return state;\n}","export default function userDetailReducer(state = {loading: true}, action) {\n    switch(action.type) {\n\n        case 'FETCH_USER_DETAIL':\n            return { ...state, ...action.userdetail, loading: false};\n        // case 'UPDATE_DETAIL_NOTE':\n        //     return { ...state, ...action.detail, loading: false, updated: true};\n        // case 'ADD_DETAIL_NOTE':\n        //     return { ...state, ...action.detail, loading: false};\n\n        case 'USER_NOT_FOUND':\n            return {...state, \n                hasError: true,\n                errors: {page: \"User not found\"},\n                loading: false,\n            };\n\n        default:\n          // will NOT execute because of the line preceding the switch.\n    }\n    return state;\n}","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from '../reducers';\n\nfunction configureStore(initialState) {\n    let createStoreWithMiddleware;\n\n    const logger = createLogger();\n    const middleware = applyMiddleware(thunk, logger);\n\n    createStoreWithMiddleware = compose(\n        middleware\n    );\n\n    return createStoreWithMiddleware(createStore)(rootReducer, initialState);\n}\n\nlet store = configureStore();\n\nexport default store;","let ROOT_URL = \"http://localhost:8000/\";\n\n// FOR PRODUCTION URLS\nconst HOMEPAGE_URL = require('../../package.json').homepage;\n\nif (process.env.NODE_ENV === \"production\") {\n\tROOT_URL = HOMEPAGE_URL\n}\n\nexport const AuthUrls = {\n    LOGIN: `${ROOT_URL}rest-auth/login/`,\n    SIGNUP: `${ROOT_URL}rest-auth/registration/`,\n    CHANGE_PASSWORD: `${ROOT_URL}rest-auth/password/change/`,\n    RESET_PASSWORD: `${ROOT_URL}rest-auth/password/reset/`,\n    RESET_PASSWORD_CONFIRM: `${ROOT_URL}rest-auth/password/reset/confirm/`,\n    USER_ACTIVATION: `${ROOT_URL}rest-auth/registration/verify-email/`,\n    USER_PROFILE: `${ROOT_URL}rest-auth/user/`\n};","export function getUserToken(state) {\n    return state.auth.token;\n}","import axios from \"axios\";\nimport { SubmissionError } from 'redux-form';\n// import { actions as notifActions } from 'redux-notifications';\nimport { AuthTypes } from \"../constants/actionTypes\";\nimport { AuthUrls } from \"../constants/urls\";\nimport store from \"../store\";\nimport { getUserToken } from \"../utils/authUtils\";\nimport { toast } from 'react-toastify';\n\n// const { notifSend } = notifActions;\nexport function authLogin(token) {\n    return {\n        type: AuthTypes.LOGIN,\n        payload: token,\n    };\n}\n\nexport function loginUser(formValues, dispatch, props) {\n        const loginUrl = AuthUrls.LOGIN;\n\n        return axios.post(loginUrl, formValues).then((response) => {\n            // If request is good...\n            // Update state to indicate user is authenticated\n            const token = response.data.key; \n\n            dispatch(authLogin(token));\n            localStorage.setItem(\"token\", token);\n\n            // redirect to the route '/'\n            props.history.push(\"/investors\");\n            // to getUserProfile in Header\n            dispatch(getUserProfile())\n        }).catch(error => {            \n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n\nexport function logoutUser() {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"csrftoken\");\n    return {\n        type: AuthTypes.LOGOUT\n    };\n}\n\nexport function signupUser(formValues, dispatch, props) {\n    const signupUrl = AuthUrls.SIGNUP;\n\n    return axios.post(signupUrl, formValues)\n        .then((response) => {\n            // If request is good...\n            // you can login if email verification is turned off.\n            // const token = response.data.key;\n            // dispatch(authLogin(token));\n            // localStorage.setItem(\"token\", token);\n\n            // email need to be verified, so don't login and send user to signup_done page.\n            // redirect to signup done page.\n            props.history.push(\"/signup_done\");\n        })\n        .catch((error) => {\n            // If request is bad...\n            // Show an error to the user\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n\nfunction setUserProfile(payload) {\n    return {\n        type: AuthTypes.USER_PROFILE,\n        payload: payload\n    };\n}\n\nexport function getUserProfile() {\n    return function(dispatch) {\n        const token = getUserToken(store.getState());\n\n        if (token) {\n            axios.get(AuthUrls.USER_PROFILE, {\n                headers: {\n                    authorization: 'Token ' + token\n                }\n            }).then(response => {\n                dispatch(setUserProfile(response.data))\n            }).catch((error) => {\n                // If request is bad...\n                // Show an error to the user\n                console.log(error);\n                // TODO: send notification and redirect\n            });\n        }\n    };\n}\n\nexport function changePassword(formValues, dispatch, props) {\n    const changePasswordUrl = AuthUrls.CHANGE_PASSWORD;\n    const token = getUserToken(store.getState());\n\n    if (token) {\n        return axios.post(changePasswordUrl, formValues, {\n            headers: {\n                authorization: 'Token ' + token\n            }\n        })\n            .then((response) => {\n                toast.info('Password has been changed successfully')\n                // dispatch(notifSend({\n                //     message: \"Password has been changed successfully\",\n                //     kind: \"info\",\n                //     dismissAfter: 5000\n                // }));\n                // redirect to the route '/profile'\n                props.history.push(\"/profile\");\n            })\n            .catch((error) => {\n                // If request is bad...\n                // Show an error to the user\n                const processedError = processServerError(error.response.data);\n                throw new SubmissionError(processedError);\n            });\n    }\n}\n\nexport function resetPassword(formValues, dispatch, props) {\n    const resetPasswordUrl = AuthUrls.RESET_PASSWORD;\n\n    return axios.post(resetPasswordUrl, formValues)\n        .then(response => {\n            // redirect to reset done page\n            props.history.push(\"/reset_password_done\");\n        }).catch((error) => {\n            // If request is bad...\n            // Show an error to the user\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n\nexport function confirmPasswordChange(formValues, dispatch, props) {\n    const { uid, token } = props.match.params;\n    const resetPasswordConfirmUrl = AuthUrls.RESET_PASSWORD_CONFIRM;\n    const data = Object.assign(formValues, { uid, token });\n\n    return axios.post(resetPasswordConfirmUrl, data)\n        .then(response => {\n            toast.info('Password has been reset successfully, please log in')\n            props.history.push(\"/login\");\n        }).catch((error) => {\n            // If request is bad...\n            // Show an error to the user\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n\nexport function activateUserAccount(formValues, dispatch, props) {\n    const { key } = props.match.params;\n    const activateUserUrl = AuthUrls.USER_ACTIVATION;\n    const data = Object.assign(formValues, { key });\n\n    return axios.post(activateUserUrl, data)\n        .then(response => {\n            toast.info('Your account has been activated successfully, please log in')\n            props.history.push(\"/login\");\n        }).catch((error) => {\n            // If request is bad...\n            // Show an error to the user\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n\nexport function updateUserProfile(formValues, dispatch, props) {\n    const token = getUserToken(store.getState());\n\n    let object = formValues\n\n    // Fix problem with update profile without upload avatar\n    const formData = new FormData(); \n    if (typeof formValues.avatar === 'string' || \n        formValues.avatar instanceof String ||\n        formValues.avatar === null) {\n        Object.keys(object).forEach(key => \n            (key !== \"avatar\") && formData.append(key, object[key])      \n        );\n    } else {\n        Object.keys(object).forEach(key => \n            formData.append(key, object[key])      \n        );\n    }\n\n    // adding \"Content-Type\": \"multipart/form-data\", for images\n    return axios.patch(AuthUrls.USER_PROFILE, formData, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\",\n                authorization: 'Token ' + token\n            }\n        })\n        .then(response => {\n            toast.info('Your profile has been updated successfully')\n            props.history.push(\"/profile\");\n        }).catch((error) => {\n            // If request is bad...\n            // Show an error to the user\n            const processedError = processServerError(error.response.data);\n            throw new SubmissionError(processedError);\n        });\n}\n// util functions\nfunction processServerError(error) {\n\n    return  Object.keys(error).reduce(function(newDict, key) {\n        if (key === \"non_field_errors\") {\n            newDict[\"_error\"].push(error[key]);\n        } else if (key === \"token\") {\n            // token sent with request is invalid\n            newDict[\"_error\"].push(\"The link is not valid any more.\");\n        } else {\n            newDict[key] = error[key];\n        }\n        return newDict\n    }, {\"_error\": []});\n}","import React from \"react\";\nimport { toast } from 'react-toastify';\n\nexport const renderUser = (user) => {\n  if (user) {\n      return (\n        <div>\n            {user.avatar ? <img src={`${user.avatar}`} className=\"user-avatar\" alt=\"Avatar\" /> : \"\"}            \n            <span className=\"user-username\">{user.username}</span>\n        </div>\n      );\n  }\n};\n\nexport const renderField = ({ input, label, type, meta: { touched, error } }) => (\n    <div>\n        <label>{label}</label>\n        <div>\n            <input className=\"form-control\" {...input} type={type}/>\n        </div>\n        {touched && ((error && <div className=\"alert alert-danger p-1\"><small>{error}</small></div>))}\n    </div>\n);\n\nexport const renderTextAreaField = ({ input, label, type, meta: { touched, error } }) => (\n    <div>\n        <label>{label}</label>\n        <div>\n            <textarea className=\"form-control\" {...input} type={type} />\n        </div>\n        {touched && ((error && <div className=\"alert alert-danger p-1\"><small>{error}</small></div>))}\n    </div>\n);\nexport const renderImageField = ({ input, label, type, meta: { touched, error } }) => (\n    <div>\n        <label>{label}</label>\n        <div>\n            <input className=\"form-control\" {...input} type={type}/>\n        </div>\n        {touched && ((error && <div className=\"alert alert-danger p-1\"><small>{error}</small></div>))}\n    </div>\n);\nexport const renderError = (errorMessages) => {\n    if ( errorMessages ) {\n        if (JSON.stringify(errorMessages)!==\"[]\") {\n            toast.error(errorMessages[0][0])          \n        } else {\n            toast.error(\"Error...\")\n        }  \n    } \n};\n","import React, { Component } from 'react'\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport NavItem from 'reactstrap/lib/NavItem';\n\nimport { renderUser } from \"../../../../utils/renderUtils\";\n\nexport class NavigationLink extends Component {\n  static contextTypes = {\n    router: PropTypes.object\n  }\n  forceLink = (url) => {\n  \t// this.context.router.history.location.state = {fromDashboard: false, prevLink: window.location.pathname}\n  \twindow.location.href = '/'+url;\n  }\n  render() {\n  \tconst { urltext, customclass, user } = this.props;\n  \tconst url = urltext.toLowerCase()\n    return (               \n    \t\t<NavItem key={`/${url}`}>\n    \t\t\t<Link className={`nav-link ${customclass}`} \n    \t\t\t  onClick={(e) => {\n    \t\t\t  \te.preventDefault() \n    \t\t\t  \tthis.forceLink(url)}}\n    \t\t\t  to={{\n\t\t\t    \t  pathname: `/${url}`,\n      \t\t\t\t  state: {fromDashboard: false, prevLink: window.location.pathname}\n      \t\t\t  }}>\n      \t\t\t  \t{user ? renderUser(user) : urltext}\n    \t\t\t</Link>\n    \t\t</NavItem>\n        )    \n  }\n}\n\nexport class NavigationUserLink extends Component {\n  static contextTypes = {\n    router: PropTypes.object\n  }\n  forceLink = (url) => {\n  \twindow.location.href = '/'+url;\n  }\n  render() {\n  \tconst { urltext, customclass, user } = this.props;\n  \tconst url = urltext.toLowerCase()\n    return (               \n    \t\t<NavItem key={`/${url}`}>\n    \t\t\t<Link className={`nav-link ${customclass}`} \n    \t\t\t  onClick={(e) => {\n    \t\t\t  \te.preventDefault() \n    \t\t\t  \tthis.forceLink(url)}}\n    \t\t\t  to={{\n\t\t\t    \t  pathname: `/${url}`,\n      \t\t\t\t  state: {fromDashboard: false, prevLink: window.location.pathname}\n      \t\t\t  }}>\n      \t\t\t  \t{user ? renderUser(user) : \"\"}\n    \t\t\t</Link>\n    \t\t</NavItem>\n        )    \n  }\n}","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n// import { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n    } from 'reactstrap';\n\nimport { NavigationLink, NavigationUserLink } from './general/Atoms/Links/Links'\nimport { getUserProfile } from \"../actions/authActions\";\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            collapsed: true\n        };\n    }\n    toggleNavbar = () => {\n        this.setState({\n            collapsed: !this.state.collapsed\n        });\n    }\n\n    static propTypes = {\n        authenticated: PropTypes.bool,\n        getUserProfile: PropTypes.func.isRequired,\n        user: PropTypes.object\n    };\n    componentWillMount() {\n        this.props.getUserProfile();\n    } \n\n    renderLinks() {\n        if (this.props.authenticated) {\n            const { user } = this.props\n            return (\n                \n                    <Nav navbar>\n                        <NavigationLink\n                          urltext=\"Investors\"\n                        />\n                        <NavigationLink\n                          urltext=\"Payments\"\n                        />\n                        <div className=\"navbar-profile\">\n                            <NavigationUserLink\n                                urltext=\"profile\"\n                                user={user}\n                            />\n                            <NavigationLink\n                                urltext=\"Logout\"\n                                customclass=\"nav-logout\"\n                            />\n                        </div>\n                    </Nav>                \n            );\n        } else {\n            return (\n                    <Nav className=\"ml-auto\" navbar>\n                        <NavigationLink\n                          urltext=\"Login\"\n                        />\n                       <NavigationLink\n                          urltext=\"SignUp\"\n                        />\n                    </Nav>\n            );\n        }\n    }\n\n    render() {\n        return (\n            <Navbar color=\"info\" dark expand=\"md\">\n                <NavbarBrand href=\"/\">Lead Platform</NavbarBrand>\n                <NavbarToggler onClick={this.toggleNavbar} />\n                  <Collapse isOpen={!this.state.collapsed} navbar>                    \n                        {this.renderLinks()}\n                  </Collapse>\n            </Navbar>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        authenticated: state.auth.authenticated,\n        user: state.auth.user\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getUserProfile: () => {\n            return dispatch(getUserProfile());\n        }\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n// import {withRouter} from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nexport default function(ComposedComponent) {\n    class Authentication extends Component {\n\n        static propTypes = {\n            history: PropTypes.object\n        };\n\n        componentWillMount() {\n            this.checkAuthentication(this.props);\n\n        }\n\n        componentWillUpdate(nextProps) {\n            this.checkAuthentication(nextProps);\n        }\n\n        checkAuthentication(props) {\n            if (!props.authenticated) {\n                this.props.history.push(\"/login\");\n            }\n        }\n\n        render() {\n            return <ComposedComponent {...this.props} />\n        }\n    }\n\n    function mapStateToProps(state) {\n\n        // provide is_staff to props\n        let is_staff = false;\n        if (state.auth.user && (state.auth.user.is_staff || state.auth.user.is_superuser)) {\n            is_staff = true;\n        }\n        return { authenticated: state.auth.authenticated, \n                is_staff: is_staff, \n            }\n    }\n    // return withRouter(connect(mapStateToProps)(Authentication));\n    return connect(mapStateToProps)(Authentication);\n}\n","import React, { Component } from 'react'\n// import PostList from '../posts/PostList';\n// import { Link } from 'react-router-dom'\n\nclass Landing extends Component {\n  render () {\n    return (\n      \t<div className='text-center'>\t\n\t\t\t<h2>Lead Platform based on DRF+React+Redux. Login or Signup to test</h2>             \n\t\t</div>\n    )\n  }\n}\nexport default Landing\n","import React, { Component } from \"react\";\n// import T from \"prop-types\";\n\nimport { reduxForm, Field, clearSubmitErrors, propTypes } from \"redux-form\";\nimport { Link } from \"react-router-dom\";\nimport { required } from \"redux-form-validators\"\n\nimport { renderField, renderError} from \"../../utils/renderUtils\";\nimport { loginUser } from \"../../actions/authActions\";\n\nimport { Button, } from 'reactstrap';\n\nclass Login extends Component {\n    static propTypes = {\n        ...propTypes\n    };\n    // static propTypes = {\n    //     form: T.string.isRequired,\n    //     onSubmit: T.func.isRequired,\n    // }\n\n    render() {\n        const { handleSubmit, error, pristine, submitting } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Please Log In</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"email\" label=\"Email\" component={renderField}\n                               type=\"text\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"password\" label=\"Password\" component={renderField}\n                               type=\"password\"  validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        { renderError(error) }\n                        <div className=\"form-button\">\n                            <Link role=\"button\" to=\"/signup\" className=\"btn btn-outline-info rounded-0 form-button__part\">SignUp</Link>\n                            <Button action=\"submit\" color=\"info\" className=\"rounded-0 form-button__part\" disabled={pristine || submitting}>Login</Button>\n                        </div>\n                    </fieldset>\n\n                    <Link to=\"/reset_password\" className=\"text-center info-link\">forgot password?</Link>\n                </form>\n            </div>\n        )\n    }\n}\n// Sync field level validation for password match\nconst validateLoginForm = values => {\n    const errors = {};\n    const { email } = values;\n\n    if (!email) {\n        errors.email = 'This field is required.'\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\n        errors.email = 'Invalid email address'\n    }\n    \n    return errors;\n};\nexport default reduxForm({\n    form: \"login\",\n    onSubmit: loginUser,\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('login'));\n    },\n    validate: validateLoginForm\n})(Login);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\n\nclass Logout extends Component {\n\n    static propTypes = {\n        logoutUser: PropTypes.func.isRequired\n    };\n\n    componentWillMount() {\n        this.props.logoutUser();\n    }\n\n    render() {\n        return (\n            <h2>Welcome to Lead Platform. Please Login or Signup...</h2>\n        );\n    }\n}\n\nexport default connect(null, { logoutUser })(Logout);","import React, { Component } from \"react\";\n// import PropTypes from \"prop-types\";\nimport { reduxForm, Field, propTypes, clearSubmitErrors } from \"redux-form\";\nimport { required } from \"redux-form-validators\"\nimport { renderField, renderError } from \"../../utils/renderUtils\";\nimport { signupUser } from \"../../actions/authActions\";\nimport { Link } from \"react-router-dom\";\nimport { Button, } from 'reactstrap';\n\nclass Signup extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n\n    render() {\n        const { handleSubmit, error, pristine, submitting } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Sign Up</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"email\" label=\"Email\" component={renderField}\n                               type=\"text\"/>\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"username\" label=\"Username\" component={renderField}\n                               type=\"text\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"password1\" label=\"Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"password2\" label=\"Confirm Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    { renderError(error) }\n\n                    <fieldset className=\"form-group\">\n                        <div className=\"form-button\">\n                            <Link role=\"button\" to=\"/login\" className=\"btn btn-outline-info rounded-0 form-button__part\">Login</Link>\n                            <Button action=\"submit\" color=\"info\" className=\"rounded-0 form-button__part\" disabled={pristine || submitting}>Sign Up</Button>\n                        </div>\n                    </fieldset>\n                </form>\n            </div>\n        );\n    }\n}\n\n// Sync field level validation for password match\nconst validateForm = values => {\n    const errors = {};\n    const { email, username, password1, password2 } = values;\n\n    if (!username) {\n        errors.username = 'This field is required.'\n    } else if (username.length > 15) {\n        errors.username = 'Must be 15 characters or less'\n    }\n    if (!email) {\n        errors.email = 'This field is required.'\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\n        errors.email = 'Invalid email address'\n    }\n    \n    if (password1 !== password2) {\n        errors.password2 = \"Password does not match.\"\n    }\n    return errors;\n};\n\nexport default reduxForm({\n    form: \"signup\",\n    validate: validateForm,\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('signup'));\n    },\n    onSubmit: signupUser\n})(Signup);\n","import React, { Component } from \"react\";\n\nexport default class SignupDone extends Component {\n    render() {\n        return (\n            <h3 className=\"mx-5\">\n                Thanks for your registration, please follow the link sent to your provided email to activate\n                your account.\n            </h3>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { reduxForm, propTypes, clearSubmitErrors } from \"redux-form\";\nimport { activateUserAccount } from \"../../actions/authActions\";\nimport { renderError } from \"../../utils/renderUtils\";\n\nclass AccountActivation extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Please click the button below to activate your account</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group text-center\">\n                        {renderError(error)}\n                        <button action=\"submit\" className=\"btn btn-info rounded-0\">Activate</button>\n                    </fieldset>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default reduxForm({\n    form: \"user_account_activation\",\n    onSubmit: activateUserAccount,\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('user_account_activation'));\n    },\n})(AccountActivation);\n","import React from \"react\";\nimport './styles.scss'\n\nexport const LoadScreen = () => (\n  <div className=\"loadscreen\">\n    <div className=\"load-9\">\n      <div className=\"spinner\">\n        <div className=\"bubble-1\"></div>\n        <div className=\"bubble-2\"></div>\n      </div>\n    </div>\n  </div>\n)","import React, { Component } from 'react'\n\nimport PropTypes from \"prop-types\";\nimport Button from 'reactstrap/lib/Button';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUndoAlt, faSave } from '@fortawesome/free-solid-svg-icons'\n\n\nexport class ReturnButton extends Component {\n  static contextTypes = {\n    router: PropTypes.object\n  }\n  // Force update page if previous link was /investors or /payments for correctly fetch\n  returnPage = () => {\n    const { history } = this.context.router\n\n    let locState = history.location.state\n    if (locState) {\n      if (locState.prevLink && \n        (locState.prevLink === \"/investors\" || locState.prevLink === \"/payments\")) {\n          window.location.href = locState.prevLink;\n      } else {\n        history.push(locState.prevLink);\n      }      \n    } else {\n      window.location.href = '/investors';\n    }\n  }\n  render() {\n    return (               \n        <Button className=\"rounded-0\" size=\"lg\" \n          onClick={this.returnPage}><FontAwesomeIcon icon={faUndoAlt} color=\"white\"/>\n          {\" \"} Cancel\n        </Button>   \n        )    \n  }\n}\n\n\nexport const SaveButton = props => (\n    <Button color=\"info\" className=\"rounded-0\" size=\"lg\" type=\"submit\">\n      <FontAwesomeIcon icon={faSave} color=\"white\"/>\n    </Button>\n);\n\nexport const ClearButton = props => (\n    <Button outline className=\"rounded-0\" size=\"lg\" type=\"button\"\n      onClick={props.onClear}\n    >\n      Clear\n    </Button>\n);\n\n","import React from 'react'\nimport { Table } from 'reactstrap';\n\nimport { ReturnButton } from '../../../general/Atoms/Buttons/Buttons'\nexport const UserDetailTable = (userdetail) => {\n  if (userdetail) {\n    return (\n      <div className=\"mx-2 mt-2 text-center\">\n        <Table striped className=\"table-userprofile\">\n          <thead>\n            <tr>\n              <th>Profile {userdetail.username}</th>\n              <td>\n                <ReturnButton />\n              </td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <th>Avatar:</th>\n              <td>\n                <div className=\"avatar\"\n                    style={{ backgroundImage: `url(${userdetail.avatar})` }}>\n                </div>\n              </td>\n            </tr>\n            <tr>\n              <th>First Name:</th>\n              <td>{userdetail.first_name}</td>\n            </tr>                    \n            <tr>\n              <th>Last Name:</th>\n              <td>{userdetail.last_name}</td>\n            </tr>\n            <tr>\n              <th>Email:</th>\n              <td>{userdetail.email}</td>\n            </tr>\n            <tr>\n              <th>Website:</th>\n              <td><a className=\"table-correspondence__url\" href={`${userdetail.website}`} >{userdetail.website}</a></td>\n            </tr>                    \n            <tr>\n              <th>About:</th>\n              <td>{userdetail.about}</td>\n            </tr>\n          </tbody>\n        </Table>\n      </div>\n    )\n  } \n  return null\n\n\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getUserProfile } from \"../../../actions/authActions\";\n\nimport { LoadScreen } from '../../general/Organisms/LoadScreen/LoadScreen'\nimport { UserDetailTable } from '../Molecules/Tables/UserDetailTable'\n\nclass UserProfile extends Component {\n\n    static propTypes = {\n        getUserProfile: PropTypes.func.isRequired,\n        user: PropTypes.object,\n        loading: PropTypes.bool\n    };\n\n    componentWillMount() {\n        this.props.getUserProfile();\n    }\n\n    renderUser() {\n        const { user } = this.props;\n\n        if (user) {\n            return (\n\n              <div className=\"mx-2 mt-2 text-center\">\n                <UserDetailTable \n                    {...user}\n                  />  \n              </div>\n            );\n        }\n        return null;\n    }\n\n    render() {\n        const {loading} = this.props\n\n        return(\n            <div>\n              {loading ?\n                <LoadScreen />\n              :\n                <div>\n                    {this.renderUser()}\n                    <hr />                \n                    <fieldset className=\"form-group\">\n                        <div className=\"form-button\">\n                            <Link to=\"/profile_edit\" className=\"btn btn-info rounded-0 form-button__part\">Update Profile</Link>\n                            <Link to=\"/change_password\" className=\"btn btn-outline-info rounded-0 form-button__part\">Change Password</Link>\n                        </div>\n                    </fieldset>\n                </div>\n              }\n          </div>               \n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        user: state.auth.user,\n        loading: state.auth.loading\n    }\n}\n\nexport default connect(mapStateToProps, { getUserProfile } )(UserProfile);","import React, {Component} from 'react'\nimport {connect} from 'react-redux';\nimport { LoadScreen } from '../../general/Organisms/LoadScreen/LoadScreen'\nimport * as userdetail from \"../../../actions/userDetailActions\";\nimport { UserDetailTable } from '../Molecules/Tables/UserDetailTable'\n\nclass UserProfileDetail extends Component {\n    constructor(props){\n        super(props);  \n        this.state = {\n        \tuserdetail: {},\n        \tloading: true,\n        \thasError: false      \n        }\n    }\n\tstatic getDerivedStateFromProps(nextProps, prevState){\n\t\tif(nextProps.userdetail!==prevState.userdetail){\n\t\t  \n\t\t  return {\n\t\t  \t\t\tuserdetail : nextProps.userdetail,\n\t\t  \t\t\tloading: nextProps.userdetail.loading,\n\t\t  \t\t\thasError: nextProps.userdetail.hasError,\n\t\t  \t\t\terrors: nextProps.userdetail.errors,\n\t\t  \t\t};\n\n\t\t}\n\t\telse return null;\n\t}\n    componentDidMount(){\n      if (this.props.match){\n        const {id} = this.props.match.params\n        this.setState({\n            id: id,\n        })\n        this.props.fetchUserDetail(id)        \n      }      \n    }\n\n    renderNote() {\n        const { userdetail } = this.props;\n        const { hasError, errors } = this.state;\n\n        if (!hasError) {\n          return (\n                  <UserDetailTable \n                    {...userdetail}\n                  />             \n          );\n\n        } else {\n            return (\n              <div>\n                {errors ? <h1>{errors.page}</h1> : <h1>Unknown Server error</h1>}\n              </div>\n            );\n        }\n    }\n    render () {\n        const {loading} = this.state\n        return(\n            <div>\n              {loading ?<LoadScreen />:this.renderNote()}\n          </div>               \n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      userdetail: state.userdetail,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      fetchUserDetail: (id) => {\n          dispatch(userdetail.fetchUserDetail(id));\n      },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserProfileDetail);","import { toast } from 'react-toastify';\nexport const fetchUserDetail = (id) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        const endpoint = `/api/user/${id}/` \n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        \n        return fetch(endpoint, {headers, })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n               \n                } else {\n                    toast.error(\"Server Error...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'FETCH_USER_DETAIL', userdetail: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authentication Error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", userdetail: res.data});\n                    throw res.data;\n                } \n                else if (res.status === 404) {\n                    toast.error(\"User is not found...\")\n                    dispatch({type: \"USER_NOT_FOUND\"});\n\n                }\n            })\n            .catch(error => {                \n                //error.redirect('/404');\n                //Handle error\n                console.log(\"error\", error);\n                // return dispatch({type: \"MESSAGE_NOT_FOUND\", detail: error});\n                // dispatch({type: \"MESSAGE_NOT_FOUND\", detail: error});\n            });\n    }\n}\n","import React, {Component} from 'react';\nimport Dropzone from 'react-dropzone';\nimport PropTypes from \"prop-types\";\n// import { Form } from 'elements';\nimport { Field } from 'redux-form';\nimport './styles.scss'\n\nconst imageMaxSize = 1000000; //bytes\n\nclass ImageDrop extends Component {\n  static propTypes = {\n    dropzone_options: PropTypes.object,\n    meta: PropTypes.object,\n    label: PropTypes.string,\n    classNameLabel: PropTypes.string,\n    input: PropTypes.object,\n    className: PropTypes.string,\n    // children: PropTypes.node,\n\t//    children: PropTypes.oneOfType([\n\t//      PropTypes.node,\n\t//   PropTypes.object,\n\t//   PropTypes.func,\n\t// ]),\n    cbFunction: PropTypes.func,\n  };\n\n  static defaultProps = {\n    className: '',\n    cbFunction: () => {},\n  };\n  state = { attached: false };\n  handleDrop = (files) => {\n\tthis.setState({attached: true})\n  }\n  render() {\n    const { className, input: { onChange }, meta: { error, touched }, label, classNameLabel, name, cbFunction } = this.props;\n    console.log(this.props.input.value)\n\tlet drop_class = \"dropimage-field dropimage-field__default avatar\"\n\tlet drop_text = \"\"\n\n\tif (this.props.input.value && this.state.attached) {\n\t\tdrop_class = \"dropimage-field dropimage-field__success\";\n\t\tdrop_text = \"Press Save to Add\";\n\t} else {\n\t\tdrop_class = \"dropimage-field dropimage-field__default avatar\";\n\t\t// drop_text = \"Add Document\"\n\t} \n    return (\n      <div className={`${className}` + (error && touched ? ' has-error ' : '')}>\n        {label && <p className={classNameLabel || ''}>{label}</p>}\n        <Dropzone\n          onDrop={(f) => {\n            cbFunction(f);\n            this.handleDrop(f);\n            return onChange(f[0]);\n          }}\n          name={name}\n          maxSize={imageMaxSize}\n        >\n            {({getRootProps, getInputProps}) => (\n                <div {...getRootProps()} className={`${drop_class}`} \n                  style={{ backgroundImage: `url(${this.props.input.value})`}}>\n                    <input {...getInputProps()} />\n                    <span className=\"dropimage-field__text\">{`${drop_text}`}</span>\n                </div>\n            )}\n        </Dropzone>\n        {error && touched ? <div className=\"alert alert-danger p-1\"><small>{error}</small></div> : ''}\n      </div>\n    );\n  }\n}\nexport default props => <Field {...props} component={ImageDrop} />;","import React, { Component } from \"react\";\nimport { reduxForm, Field, propTypes, clearSubmitErrors } from \"redux-form\";\nimport { connect } from 'react-redux'\nimport { Link } from \"react-router-dom\";\n\nimport { renderField, renderTextAreaField,\n    renderError} from \"../../utils/renderUtils\";\nimport { updateUserProfile } from \"../../actions/authActions\";\nimport ImageDrop from './Atoms/ImageDrop/ImageDrop'\n\nclass Login extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Edit Profile</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"username\" label=\"Username\" component={renderField}\n                               type=\"text\"\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"first_name\" label=\"First Name\" component={renderField}\n                               type=\"text\"\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"last_name\" label=\"Last Name\" component={renderField}\n                               type=\"text\"\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"website\" label=\"Website\" component={renderField}\n                               type=\"text\"\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"about\" label=\"About Yourself\" component={renderTextAreaField}\n                               type=\"text\"\n                        />\n                    </fieldset>\n                    <fieldset className=\"form-group\">\n                        <ImageDrop\n                         name=\"avatar\"\n                         label=\"Avatar:\"\n                          classNameLabel=\"file-input-label\"\n                          className=\"file-input\"\n                          dropzone_options={{\n                            multiple: false,\n                            accept: 'image/*'\n                          }}\n                        >\n                          <span>Add more</span>\n                        </ImageDrop>\n                    </fieldset>\n                    <fieldset className=\"form-group\">\n                        {renderError(error)}\n                        <div className=\"form-button\">\n                            <button action=\"submit\" className=\"btn btn-info rounded-0 form-button__part\">Save</button>\n                            <Link to=\"/profile\" className=\"btn btn-outline-info rounded-0 form-button__part\">Cancel</Link>\n                        </div>\n                    </fieldset>\n\n                </form>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        initialValues: state.auth.user\n    }\n}\n\nexport default connect(mapStateToProps)(reduxForm({\n    form: \"update_user_profile\",\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('update_user_profile'));\n    },\n    onSubmit: updateUserProfile\n})(Login));","import React, { Component } from \"react\";\n// import PropTypes from \"prop-types\";\nimport { reduxForm, Field, propTypes, clearSubmitErrors } from \"redux-form\";\nimport { required } from \"redux-form-validators\"\nimport { changePassword } from \"../../actions/authActions\";\nimport { renderField, renderError } from \"../../utils/renderUtils\";\nimport { Link } from \"react-router-dom\";\nimport { Button, } from 'reactstrap';\nclass PasswordChange extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error, pristine, submitting } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Change Password</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"old_password\" label=\"Old Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"new_password1\" label=\"New Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"new_password2\" label=\"Confirm New Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        {renderError(error)}\n                        <div className=\"form-button\">\n                            <Button action=\"submit\" color=\"info\" className=\"rounded-0 form-button__part\" disabled={pristine || submitting}>Submit</Button>\n                            <Link to=\"/profile\" className=\"btn btn-outline-info rounded-0 form-button__part\">Cancel</Link>\n                        </div>\n                    </fieldset>\n                </form>\n            </div>\n        );\n    }\n}\n\n// Sync field level validation for password match\nconst validateForm = values => {\n    const errors = {};\n    const { new_password1, new_password2 } = values;\n    if (new_password1 !== new_password2) {\n        errors.new_password2 = \"Password does not match.\"\n    }\n    return errors;\n};\n\nexport default reduxForm({\n    form: \"change_password\",\n    onSubmit: changePassword,\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('change_password'));\n    },\n    validate: validateForm\n})(PasswordChange);\n","import React, { Component } from \"react\";\nimport { reduxForm, Field, propTypes, clearSubmitErrors } from \"redux-form\";\nimport { required } from \"redux-form-validators\"\n\nimport { renderField, renderError} from \"../../utils/renderUtils\";\nimport { resetPassword } from \"../../actions/authActions\";\n\nclass PasswordReset extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Reset Your Password</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"email\" label=\"Please enter your email\" component={renderField}\n                               type=\"text\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n                    <fieldset className=\"form-group text-center\">\n                        {renderError(error)}\n                        <button action=\"submit\" className=\"btn btn-info rounded-0\">Submit</button>\n                    </fieldset>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default reduxForm({\n    form: \"password_reset\",\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('password_reset'));\n    },\n    onSubmit: resetPassword\n})(PasswordReset);\n","import React, { Component } from \"react\";\n\nexport default class PasswordResetDone extends Component {\n    render() {\n        return (\n            <h3 className=\"mx-5\">An password reset email has been sent to your email. Please follow the link to reset your password.</h3>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { reduxForm, Field, propTypes, clearSubmitErrors } from \"redux-form\";\nimport { required } from \"redux-form-validators\"\nimport { confirmPasswordChange } from \"../../actions/authActions\";\nimport { renderField, renderError } from \"../../utils/renderUtils\";\n\nclass PasswordResetConfirm extends Component {\n\n    static propTypes = {\n        ...propTypes\n    };\n\n    render() {\n        const { handleSubmit, error } = this.props;\n\n        return (\n            <div className=\"row justify-content-center\">\n                <form\n                    className=\"col col-sm-4 card mt-5 p-2\"\n                    onSubmit={handleSubmit}\n                >\n                    <h4 className=\"text-md-center\">Create New Password</h4>\n                    <hr/>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"new_password1\" label=\"New Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                        <Field name=\"new_password2\" label=\"Confirm New Password\" component={renderField}\n                               type=\"password\" validate={[required({message: \"This field is required.\"})]}\n                        />\n                    </fieldset>\n\n                    <fieldset className=\"form-group text-center\">\n                        {renderError(error)}\n                        <button action=\"submit\" className=\"btn btn-info rounded-0\">Submit</button>\n                    </fieldset>\n                </form>\n            </div>\n        );\n    }\n}\n\n// Sync field level validation for password match\nconst validateForm = values => {\n    const errors = {};\n    const { new_password1, new_password2 } = values;\n    if (new_password1 !== new_password2) {\n        errors.new_password2 = \"Password does not match.\"\n    }\n    return errors;\n};\n\nexport default reduxForm({\n    form: \"password_reset_confirm\",\n    onSubmit: confirmPasswordChange,\n    onChange: (values, dispatch, props) => {\n        if (props.error) dispatch(clearSubmitErrors('password_reset_confirm'));\n    },\n    validate: validateForm\n})(PasswordResetConfirm);\n","import React from \"react\";\n\nconst NoMatch = () => (\n    <h2 className=\"mt-2\">{\"Sorry, the page you are looking for doesn't exist.\"}</h2>\n);\n\nexport default NoMatch;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\n\nclass PostInline extends Component {\n  // {post !== undefined ? <div className={elClass}>\n  //    <h1><Link maintainScrollPosition={false} to={{\n  //        pathname:`/react/posts/${post.slug}`,\n  //        state: {fromDashboard: false}\n  //    }}>{post.title}</Link></h1>\n\n  //   <p className={showContent}>{post.content}</p>\n  //   </div>\n  //   : \"\"}\n  render() {\n      const {post} = this.props\n      const {elClass} = this.props\n      const showContent = elClass === 'card' ? 'd-block' : 'd-none'\n    return (\n      <div>\n          {post !== undefined ? \n            <div className={elClass}>\n            <Link \n              to={{pathname:`/react/posts/${post.slug}`,\n              state: {fromDashboard: false}\n            }}>\n                <h1>{post.title}</h1>\n            </Link>\n                  <p className={showContent}>{post.content}</p>\n            </div>\n          : ''}\n      </div>\n    );\n  }\n}\n\nexport default PostInline;\n","import React, { Component } from 'react';\nimport 'whatwg-fetch'\nimport cookie from 'react-cookies'\nimport { Link } from 'react-router-dom'\nimport PostInline from './PostInline'\n// import PostCreate from './PostCreate'\n// import PostForm from './PostForm'\nimport { connect } from 'react-redux'\n\nimport store from \"../store\";\nimport { getUserToken } from \"../utils/authUtils\";\n\nclass Posts extends Component {\n\n  constructor(props){\n      super(props)\n      this.togglePostListClass = this.togglePostListClass.bind(this)\n      this.handleNewPost = this.handleNewPost.bind(this)\n      this.loadMorePosts =this.loadMorePosts.bind(this)\n      this.state = {\n          posts: [],\n          postsListClass: \"card\",\n          next: null,\n          previous: null,\n          author: false,\n          count: 0,\n          authenticated: false, //adding redux-props\n      }\n  }\n\n  loadMorePosts(){\n      const {next} = this.state \n      if (next !== null || next !== undefined) {\n           this.props.loadPosts(next)\n      }\n     \n  }\n    \n  loadPosts(nextEndpoint){\n      let endpoint = '/api/posts/' \n      if (nextEndpoint !== undefined) {\n          endpoint = nextEndpoint\n      }\n      let thisComp = this\n      let lookupOptions = {\n          method: \"GET\",\n          headers: {\n              'Content-Type': 'application/json'\n          }\n      }\n      const csrfToken = cookie.load('csrftoken')\n      const token = getUserToken(store.getState());\n      console.log('token', token);\n      console.log('csrftoken', csrfToken);\n\n      if (csrfToken !== undefined) {\n          lookupOptions['credentials'] = 'include'\n          lookupOptions['headers']['X-CSRFToken'] = csrfToken\n       } \n\n      fetch(endpoint, lookupOptions)\n      .then(function(response){\n          return response.json()\n      }).then(function(responseData){\n          console.log(responseData)\n          // let currentPosts = thisComp.state.posts\n          // let newPosts = currentPosts.concat(responseData.results)\n          // console.log(currentPosts)\n           thisComp.setState({\n                  posts: thisComp.state.posts.concat(responseData.results),\n                  next: responseData.next,\n                  previous: responseData.previous,\n                  author: responseData.author,\n                  count: responseData.count,\n                  authenticated: thisComp.props.state.auth.authenticated //adding redux-props\n              })\n      }).catch(function(error){\n          console.log(\"error\", error)\n      })\n  }\n\n  handleNewPost(postItemData){\n      // console.log(postItemData)\n      let currentPosts = this.state.posts\n      currentPosts.unshift(postItemData) // unshift\n      this.setState({\n          posts: currentPosts\n      })\n  }\n\n  \n\n  togglePostListClass(event){\n      event.preventDefault()\n      let currentListClass = this.state.postsListClass\n      if (currentListClass === \"\"){\n          this.setState({\n              postsListClass: \"card\",\n          })\n      } else {\n          this.setState({\n              postsListClass: \"\",\n          })\n      }\n      \n  }\n\n  componentDidMount(){\n      this.setState({\n          posts: [],\n          postsListClass: \"card\",\n          next: null,\n          previous: null,\n          author: false,\n          count: 0,\n          authenticated: false,\n      })\n      this.loadPosts()\n  }\n  // {author === true ? <Link className='mr-2' maintainScrollPosition={false} to={{\n  //           pathname: `/posts/create/`,\n  //           state: { fromDashboard: false }\n  //         }}>Create Post</Link> : \"\"}\n  \n  // <button onClick={this.togglePostListClass}>Toggle Class</button>\n  // {posts.length > 0 ? posts.map((postItem, index)=>{\n  //     return (\n  //             <PostInline post={postItem} elClass={postsListClass} />\n  //     )\n  // }) : <p>No Posts Found</p>}\n  // {next !== null ? <button onClick={this.loadMorePosts}>Load more</button> : ''}\n  render() {\n      const {posts} = this.state\n      const {postsListClass} = this.state\n      // const {author} = this.state\n      const {next} = this.state \n      // const {auth} = this.props.state.auth.authenticated\n      const {authenticated} = this.state //adding redux-props\n      // const csrfToken = cookie.load('csrftoken')\n    return (\n      <div>\n        {authenticated === true ?\n          <Link className='mr-2' to={{\n            pathname: `/react/posts/create/`,\n            state: { fromDashboard: false }\n          }}>Create Post</Link>\n        : ''}\n          <button onClick={this.togglePostListClass}>Toggle Class</button>\n          {posts.length > 0 ? posts.map((postItem, index)=>{\n            return (\n              <PostInline post={postItem} key={`post-list-key ${index}`} elClass={postsListClass} />\n            )\n          }) : <p>No Posts Found</p>}\n        {next !== null ? <button onClick={this.loadMorePosts}>Load more</button> : ''}\n\n      </div>\n    );\n  }\n}\n\n// export default Posts;\n\n\nconst mapStateToProps = (state) => {\n  return {\n    state: state\n  }\n}\n\nexport default connect(mapStateToProps)(Posts);\n// {(csrfToken !== 'undefined' && csrfToken !== null) ?\n// <div className='my-5'>\n//   <PostForm newPostItemCreated={this.handleNewPost} />\n// </div>\n// : ''}","import React, { Component } from 'react'\n\nimport { Link } from 'react-router-dom'\nimport Posts from '../reactify/Posts';\n\nclass ReacTifyComp extends Component {\n  componentDidMount () {\n\n  }\n\n  render () {\n    return (\n      <div>\n        <Link className='some-link' to='/about/'>Static Page</Link>\n        <Posts />\n      </div>\n      \n    )\n  }\n}\n\nexport default ReacTifyComp","import React, {Component} from 'react'\nimport 'whatwg-fetch'\nimport cookie from 'react-cookies'\nimport moment from 'moment'\n// import { Redirect } from 'react-router-dom'\n\nimport store from \"../store\";\nimport { getUserToken } from \"../utils/authUtils\";\n\n\nclass PostForm extends Component {\n    constructor(props){\n        super(props)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleInputChange = this.handleInputChange.bind(this)\n        this.handleDraftChange = this.handleDraftChange.bind(this)\n        this.clearForm = this.clearForm.bind(this)\n        this.postTitleRef = React.createRef()\n        this.postContentRef = React.createRef()\n        this.deletePost= this.deletePost.bind(this)\n        this.state = {\n            draft: false,\n            title: null,\n            slug: null,\n            content: null,\n            publish: moment(new Date()).format('YYYY-MM-DD'),\n            errors: {}\n        }\n    }\n\n    updatePost(data){\n      const {post} = this.props\n      const endpoint = `/api/posts/${post.slug}/` \n      const csrfToken = cookie.load('csrftoken')\n      const token = getUserToken(store.getState());\n      console.log('token', token);\n      console.log('csrftoken', csrfToken);\n      let thisComp = this\n      if (csrfToken !== undefined) {\n          let lookupOptions = {\n              method: \"PUT\",\n              headers: {\n                  'Content-Type': 'application/json',\n                  'X-CSRFToken': csrfToken,\n                  'Authorization': 'Token ' + token\n              },\n              body: JSON.stringify(data),\n              credentials: 'include'\n          }\n\n          fetch(endpoint, lookupOptions)\n          .then(function(response){\n              return response.json()\n          }).then(function(responseData){\n              console.log(responseData)\n              if (thisComp.props.newPostItemUpdated){\n                  thisComp.props.newPostItemUpdated(responseData)\n              }\n              thisComp.clearForm()\n          }).catch(function(error){\n              console.log(\"error\", error)\n              alert(\"An error occured, please try again later.\")\n          })\n      } \n      \n  \t} \n    createPost(data){\n      const endpoint = '/api/posts/' \n      const csrfToken = cookie.load('csrftoken')\n      let thisComp = this\n      console.log('csrf', csrfToken)\n      if (csrfToken !== undefined) {\n          let lookupOptions = {\n              method: \"POST\",\n              headers: {\n                  'Content-Type': 'application/json',\n                  'X-CSRFToken': csrfToken\n              },\n              body: JSON.stringify(data),\n              credentials: 'include'\n          }\n\n          fetch(endpoint, lookupOptions)\n          .then(function(response){              \n              return response.json()\n          }).then(function(responseData){\n              console.log(responseData)\n              if (thisComp.props.newPostItemCreated){\n                  thisComp.props.newPostItemCreated(responseData)\n              }\n              thisComp.clearForm()\n              thisComp.defaultState()\n          }).catch(function(error){\n              console.log(\"error\", error)\n              alert(\"An error occured, please try again later.\")\n          })\n      } \n      \n    }\n    deletePost(event) {\n      event.preventDefault();\n      const {post} = this.props\n      const endpoint = `/api/posts/${post.slug}/` \n      const csrfToken = cookie.load('csrftoken')\n      console.log(post)\n      return fetch(endpoint, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': csrfToken\n            },\n            credentials: 'include'\n        }).then(function(response){\n          return response\n        }).then(data => {\n          if(data.status === 204){\n            // this.UpdateRoute();\n            console.log('Successfully Delete');\n          }   \n        }).catch(function(error){\n            console.log(\"error\", error)\n            alert(\"An error occured, please try again later.\")\n        })\n    };\n\n  \tclearForm(event){\n      if (event){\n        event.preventDefault()\n      }\n      this.postCreateForm.reset()\n      \n    } \n    clearFormRefs(){\n      this.postTitleRef.current=''\n      this.postContentRef.current=''\n    }  \t\n\thandleSubmit(event){      \n\t    event.preventDefault()\n\t    let data = this.state\n      const {post} = this.props\n      if (post !== undefined) {\n        this.updatePost(data)\n      } else {\n        this.createPost(data)\n      }\n\t    \n      console.log({post})\n\t}\n\thandleInputChange(event){\n        event.preventDefault()\n        let key = event.target.name\n        let value = event.target.value\n\n        if (key === 'title'){\n            if (value.length > 120){\n                alert(\"This title is too long\")\n            }\n        }\n        this.setState({\n            [key]: value\n\n        })\n    }\n  //fix doubleclick checkbox\n  handleDraftChange(event){\n    this.setState({\n      draft: !this.state.draft\n    })\n  }\n  defaultState(){\n    this.setState({\n        draft: false,\n        title: null,\n        content: null,\n        slug: null,\n        publish: moment(new Date()).format('YYYY-MM-DD'),\n    })   \n  }\n  componentDidMount(){\n    const {post} = this.props\n    // this.loginCheck()\n    if (post !== undefined) {\n      this.setState({\n          draft: post.draft,\n          title: post.title,\n          content: post.content,\n          slug: post.slug,\n          publish: moment(post.publish).format('YYYY-MM-DD'),\n      })\n    } else {\n      this.defaultState()\n    }\n    // this.postTitleRef.current.focus()\n  }\n\trender(){\n\t\tconst {publish} = this.state\n    const {title} = this.state\n    const {content} = this.state\n    const {slug} = this.state\n    const cancelClass = this.props.post !== undefined ? \"d-none\" : \"\"\n    const deleteClass = this.props.post === undefined ? \"d-none\" : \"\"\n\t\treturn (\n\t\t  <div>\n\t\t    <form onSubmit={this.handleSubmit} ref={(el)=> this.postCreateForm = el}>\n\t\t        <div className=\"form-group\">\n\t\t\t\t\t<label htmlFor='blogTitle'>Title</label>\n\t\t\t\t\t<input \n\t\t\t\t\t  type='text' \n\t\t\t\t\t  id='blogTitle' \n\t\t\t\t\t  name='title' \n\t\t\t\t\t  className='form-control' \n\t\t\t\t\t  placeholder='Blog post title'\n            value={title || ''}            \n\t\t\t\t\t  ref={this.postTitleRef} \n\t\t\t\t\t  onChange={this.handleInputChange} \n\t\t\t\t\t  required='required' />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label htmlFor='content'>Content</label>\n\t\t\t\t\t<textarea \n\t\t\t\t\t  id='content' \n\t\t\t\t\t  name='content' \n\t\t\t\t\t  className='form-control' \n\t\t\t\t\t  placeholder='Post content'\n            value={content || ''}\n\t\t\t\t\t  ref={this.postContentRef} \n\t\t\t\t\t  onChange={this.handleInputChange} \n\t\t\t\t\t  required='required' />\n\t\t\t\t</div>\n\t\t\t\t<div className='form-group'>\n                    <label htmlFor='slug'>Slug</label>\n                    <input \n                      type='text' \n                      id='slug' \n                      name='slug' \n                      className='form-control'\n                      placeholder='Type Slug'\n                      value={slug || ''}  \n                      onChange={this.handleInputChange} \n                      required='required'/>\n                </div>\n\t\t        <div className=\"form-group\">\n\t\t\t\t\t<label htmlFor='draft'>\n\t\t\t\t\t\t<input \n\t\t\t\t\t\t  type='checkbox' \n\t\t\t\t\t\t  id='draft' \n\t\t\t\t\t\t  name='draft' \n\t\t\t\t\t\t  className='mr-2' \n\t\t\t\t\t\t  onChange={this.handleDraftChange} \n\t\t\t\t\t\t  checked={this.state.draft}\n\t\t\t\t\t\t  />\n\t\t\t\t\tDraft</label>\n                <button onClick={(event)=>{event.preventDefault();this.handleDraftChange()}}>Toggle Draft</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label htmlFor='publish'>Publish Date</label>\n\t\t\t\t\t<input \n\t\t\t\t\t  type='date' \n\t\t\t\t\t  id='publish' \n\t\t\t\t\t  name='publish' \n\t\t\t\t\t  className='form-control' \n\t\t\t\t\t  onChange={this.handleInputChange} \n\t\t\t\t\t  required='required'\n\t\t\t\t\t  value={publish}\n\t\t\t\t\t   />\n\t\t\t\t</div>\n\t\t\t\t<button type='submit' className='btn btn-primary '>Save</button>\n\t\t\t\t<button className={`btn btn-secondary ${cancelClass}`} onClick={this.clearForm}>Clear</button>\n        <button className={`btn btn-danger' ${deleteClass}`} onClick={this.deletePost}>Delete</button>\n\n\t\t    </form>\n\t\t  </div>\n\t\t)\n\t}\n\n}\n\nexport default PostForm\n","import React, {Component} from 'react'\nimport 'whatwg-fetch'\nimport cookie from 'react-cookies'\nimport { Link } from 'react-router-dom'\n\nimport PostForm from './PostForm'\n\nclass PostDetail extends Component {\n    constructor(props){\n        super(props)\n        this.handlePostItemUpdated= this.handlePostItemUpdated.bind(this)        \n        this.state = {\n             slug: null,\n             post: null,\n             doneLoading: false,\n        }\n    }\n\n    handlePostItemUpdated(postItemData){\n        this.setState({\n            post: postItemData\n        })\n    }\n    loadPost(slug){\n      const endpoint = `/api/posts/${slug}/` \n      let thisComp = this\n      let lookupOptions = {\n          method: \"GET\",\n          headers: {\n              'Content-Type': 'application/json'\n          }\n      }\n\n      const csrfToken = cookie.load('csrftoken')\n      if (csrfToken !== undefined) {\n          lookupOptions['credentials'] = 'include'\n          lookupOptions['headers']['X-CSRFToken'] = csrfToken\n       }\n\n      fetch(endpoint, lookupOptions)\n      .then(function(response){\n          if (response.status === 404){\n              console.log('Page not found')\n          }\n          return response.json()\n      }).then(function(responseData){\n          if (responseData.detail){\n              thisComp.setState({\n                  doneLoading: true,\n                  post: null\n              })\n          } else {\n           thisComp.setState({\n                  doneLoading: true,\n                  post: responseData\n              })\n          }\n      }).catch(function(error){\n          console.log(\"error\", error)\n      })\n  }\n\n    componentDidMount(){\n        this.setState({\n                slug: null,\n                post: null\n            })\n        if (this.props.match){\n            const {slug} = this.props.match.params\n            this.setState({\n                slug: slug,\n                doneLoading: false\n            })\n            this.loadPost(slug)\n        }\n    }\n    // const {doneLoading} = this.state\n    //     const {post} = this.state\n    //     return(\n    //         <p>{(doneLoading === true) ? <div>\n    //             {post === null ? \"Not Found\": \n    //             <div>\n    //             <h1>{post.title}</h1>\n    //             {post.slug}\n\n    //             <p className='lead'>\n    //             <Link maintainScrollPosition={false} to={{\n    //                 pathname: `/react/posts`,\n    //                 state: { fromDashboard: false }\n    //               }}>Posts</Link>\n\n    //               {post.owner === true ? <Link maintainScrollPosition={false} to={{\n    //                 pathname: `/react/posts/create/`,\n    //                 state: { fromDashboard: false }\n    //               }}>Create Post</Link> : \"\" }\n    //            </p>\n\n    //               {post.owner === true ? <PostForm post={post} postItemUpdated={this.handlePostItemUpdated} /> : \"\"}\n    //             </div>\n    //            }\n    //        </div> : \"Loading...\"}</p>\n    //     )\n    // }\n    render(){\n        const {doneLoading} = this.state\n        // const {slug} = this.state\n        const {post} = this.state\n        return(\n          <div>\n            {(doneLoading === true) ? <div>\n              {(post === null) ? \"Not Found\": \n                <div> \n                  <p className=\"lead\"><Link \n                      to={{pathname:`/react/posts/`,\n                      state: {fromDashboard: false}\n                    }}>\n                      BACK\n                    </Link>\n                    {post.owner === true ? <Link to={{\n                      pathname: `/react/posts/create/`,\n                      state: { fromDashboard: false }\n                    }}>Create Post</Link> : \"\"}\n                  </p>                 \n                  <h1>{post.slug}</h1>\n                  <h1>{post.title}</h1>\n                  {post.owner === true ? <PostForm post={post} postItemUpdated={this.handlePostItemUpdated} /> : \"\"}\n                </div>\n              }\n\n            </div> : \"Loading...\"}\n          </div>               \n        )\n    }\n}\n\nexport default PostDetail","import React, {Component} from 'react'\nimport { Link } from 'react-router-dom'\nimport PostForm from './PostForm'\n\nclass PostCreate extends Component {\n\n  render(){\n    return (\n      <div>\n      \t<Link \n          to={{pathname:`/react/posts/`,\n          state: {fromDashboard: false}\n        }}>\n          BACK\n        </Link>\n      \t<h1>Create Post</h1>\n        \t<PostForm />\n      </div>\n    )\n  }\n\n}\n\nexport default PostCreate\n// // left for reference\n\n\n\n\n// // import React, {Component} from 'react'\n// // import 'whatwg-fetch'\n// // import cookie from 'react-cookies'\n// // import moment from 'moment'\n\n// // class PostCreate extends Component {\n// //     constructor(props){\n// //         super(props)\n// //         this.handleSubmit = this.handleSubmit.bind(this)\n// //         this.handleInputChange = this.handleInputChange.bind(this)\n// //         this.handleDraftChange = this.handleDraftChange.bind(this)\n// //         this.clearForm = this.clearForm.bind(this)\n// //         this.postTitleRef = React.createRef()\n// //         this.postContentRef = React.createRef()\n// //         this.state = {\n// //             draft: false,\n// //             title: null,\n// //             content: null,\n// //             publish: null,\n// //             errors: {}\n// //         }\n// //     }\n// //     createPost(data){\n// //       const endpoint = '/api/posts/' \n// //       const csrfToken = cookie.load('csrftoken')\n// //       let thisComp = this\n// //       if (csrfToken !== undefined) {\n// //           let lookupOptions = {\n// //               method: \"POST\",\n// //               headers: {\n// //                   'Content-Type': 'application/json',\n// //                   'X-CSRFToken': csrfToken\n// //               },\n// //               body: JSON.stringify(data),\n// //               credentials: 'include'\n// //           }\n\n// //           fetch(endpoint, lookupOptions)\n// //           .then(function(response){\n// //               return response.json()\n// //           }).then(function(responseData){\n// //               console.log(responseData)\n// //               if (thisComp.props.newPostItemCreated){\n// //                   thisComp.props.newPostItemCreated(responseData)\n// //               }\n// //               thisComp.clearForm()\n// //           }).catch(function(error){\n// //               console.log(\"error\", error)\n// //               alert(\"An error occured, please try again later.\")\n// //           })\n// //       } \n      \n// //   }\n\n// //     handleSubmit(event){\n// //         event.preventDefault()\n// //         let data = this.state\n// //         this.createPost(data)\n// //     }\n\n// //     handleInputChange(event){\n// //         event.preventDefault()\n// //         let key = event.target.name\n// //         let value = event.target.value\n// //         if (key === 'title'){\n// //             if (value.length > 120){\n// //                 alert(\"This title is too long\")\n// //             }\n// //         }\n// //         this.setState({\n// //             [key]: value\n// //         })\n// //     }\n\n// //     handleDraftChange(event){\n// //       this.setState({\n// //         draft: !this.state.draft\n// //       })\n// //     }\n\n// //     clearForm(event){\n// //       if (event){\n// //         event.preventDefault()\n// //       }\n// //       this.postCreateForm.reset()\n// //     }\n\n\n// //     clearFormRefs(){\n// //       this.postTitleRef.current=''\n// //       this.postContentRef.current=''\n// //     }\n\n\n// //     componentDidMount(){\n// //         this.setState({\n// //             draft: false,\n// //             title: null,\n// //             content: null,\n// //             publish: moment(new Date()).format('YYYY-MM-DD'),\n// //         })\n// //         this.postTitleRef.current.focus()\n// //     }\n\n// //     render(){\n// //         const {publish} = this.state\n// //         let thisComp = this\n// //         return (\n// //             <form onSubmit={this.handleSubmit} ref={(el) => this.postCreateForm = el}>\n// //                 <div className='form-group'>\n// //                     <label for='title'>Post title</label>\n// //                     <input \n// //                       type='text' \n// //                       id='title' \n// //                       name='title' \n// //                       className='form-control'\n// //                       placeholder='Blog post title' \n// //                       ref = {this.postTitleRef}\n// //                       onChange={this.handleInputChange} \n// //                       required='required'/>\n// //                 </div>\n// //                  <div className='form-group'>\n// //                     <label for='content'>Content</label>\n// //                     <textarea id='content' ref = {this.postContentRef} name='content' className='form-control' placeholder='Post content' onChange={this.handleInputChange} required='required'/>\n                   \n// //                 </div>\n// //                 <div className='form-group'>\n// //                     <label for='draft'>\n// //                     <input type='checkbox' checked={this.state.draft} id='draft' name='draft' className='mr-2' onChange={this.handleDraftChange}/>\n// //                      Draft </label>\n// //                      <button onClick={(event)=>{event.preventDefault();this.handleDraftChange()}}>Toggle Draft</button>\n// //                 </div>\n// //                 <div className='form-group'>\n// //                     <label for='publish'>Publish Date</label>\n// //                     <input \n// //                     type='date' \n// //                     id='publish' \n// //                     name='publish' \n// //                     className='form-control' \n// //                     onChange={this.handleInputChange}\n// //                      value={publish}\n// //                      required='required'/>\n// //                 </div>\n// //                 <button type='submit' className='btn btn-primary'>Save</button>\n// //                 <button className='btn btn-secondary' onClick={this.clearForm}>Cancel</button>\n// //             </form>\n// //         )\n// //     }\n\n// // }\n\n// // export default PostCreate","import { toast } from 'react-toastify';\n\nexport const fetchNotes = (nextEndpoint) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        let endpoint = '/api/investors/' \n\n        if (nextEndpoint !== undefined && nextEndpoint !== null) {\n          endpoint = nextEndpoint\n        }\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        let {notes} = getState();\n        return fetch(endpoint, {headers, })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    toast.error(\"Error! Can't load investors...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            // getState().notes[0].concat(res.data)}\n            .then(res => {\n                if (res.status === 200) {               \n                    return dispatch({type: 'FETCH_NOTES', notes: notes.push(res.data), loading: false});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authetication error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\nexport const searchNotes = (searchtext) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        let endpoint = '/api/investors/' \n        if (searchtext !== undefined && searchtext !== null) {\n          endpoint = `/api/investors/?search=${searchtext}`\n        }\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        return fetch(endpoint, {headers, method: \"GET\", })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        // console.log(res)\n                        return {status: res.status, data};\n                    })\n                } else {\n                    toast.error(\"Error! Can't load investors...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'SEARCH_NOTES', notes: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authetication error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\nexport const orderNotes = (order) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        let endpoint = '/api/investors/' \n        if (order !== undefined && order !== null) {\n          endpoint = `/api/investors/?ordering=${order}`\n        }\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        return fetch(endpoint, {headers, method: \"GET\", })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        // console.log(res)\n                        return {status: res.status, data};\n                    })\n                } else {\n                    toast.error(\"Error! Can't load investors...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'ORDER_NOTES', notes: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authetication error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\nexport const addNote = (text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n\n        let body = JSON.stringify({text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence });\n        return fetch(\"/api/investors/\", {headers, method: \"POST\", body})\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    toast.error(\"Error! Can't load investors...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 201) {\n                    toast.info(\"Investor \"+res.data.text+\" added\")\n                    return dispatch({type: 'ADD_NOTE', note: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authetication error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\n\nexport const updateNote = (index, id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence) => {\n    return (dispatch, getState) => {\n\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n\n        let body = JSON.stringify({text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence });\n        // console.log(\"id\", id, \"index\", index)\n        let noteId = getState().notes[index].noteitems[id].id;\n\n        return fetch(`/api/investors/${noteId}/`, {headers, method: \"PUT\", body})\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    toast.error(\"Error! Can't load investors...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 200) {\n                    toast.info(\"Investor \"+res.data.text+\" edited\")\n                    return dispatch({type: 'UPDATE_NOTE', note: res.data, index, id});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authetication error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\n\nexport const deleteNote = (id, index) => {\n    return (dispatch, getState) => {\n\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        let noteId = getState().notes[id].noteitems[index].id;\n\n        return fetch(`/api/investors/${noteId}/`, {headers, method: \"DELETE\"})\n            .then(res => {\n                if (res.status === 204) {\n                    toast.info(\"Investor deleted\")\n                    return {status: res.status, data: {}};\n                } else if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 204) {\n                    // toast.info(\"Investor deleted\")\n                    return dispatch({type: 'DELETE_NOTE', id, index});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authetication error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n            .then(res => {dispatch(fetchNotes())})\n    }\n}\n","import React, { Component } from 'react'\nimport {   \n  FormGroup, Button, Modal, \n  ModalHeader, ModalBody, \n  ModalFooter, } from 'reactstrap';\nimport './styles.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\n\nexport class ModalDelete extends Component {\n  render() {\n    const { modaldelete, text, index, id, toggle} = this.props;\n\n    return (\n      <div>\n        <Modal isOpen={modaldelete} toggle={toggle}>\n            <ModalHeader color=\"info\">Are you sure?</ModalHeader>           \n            <ModalBody>Delete <b>{text}</b> Investor?</ModalBody>\n            <ModalFooter> \n              <FormGroup row>                   \n              <Button className=\"rounded-0\" color=\"info\" onClick={() => this.props.onSelectForDelete(index, id)}><FontAwesomeIcon icon={faTrash} color=\"white\"/></Button>              \n              <Button className=\"rounded-0\" onClick={toggle}>Cancel</Button>\n              </FormGroup>\n            </ModalFooter>\n        </Modal> \n      </div>\n    )\n    \n  }\n}\n","import React, { Component } from 'react'\nimport { FormText,  \n  FormGroup, Label, Input,  } from 'reactstrap';\n\n// REQUIRED FIELDS\nexport class InputName extends Component {\n  render() {\n    const { text, errors } = this.props;\n    return (\n      <div>\n        <FormGroup>\n          <Label>Name <span className=\"text-danger\">*</span></Label>\n          <Input\n            name=\"text\"\n            value={text || ''}\n            placeholder=\"Enter name...\"\n            onChange={this.props.onInputChange}\n            required />\n            {errors.text ? <FormText color=\"danger\">{errors.text}</FormText>: \"\"}\n        </FormGroup>\n      </div>\n    )\n    \n  }\n}\nexport class InputPhone extends Component {\n  render() {\n    const { phone, errors } = this.props;\n    return (\n      <div>\n        <FormGroup>\n          <Label>Phone <span className=\"text-danger\">*</span></Label>\n          <Input\n            name=\"phone\"\n            value={phone || ''}\n            placeholder=\"Enter phone...\"\n            onChange={this.props.onInputChange}\n            required />\n            {errors.phone ? <FormText color=\"danger\">{errors.phone}</FormText>: \"\"}\n        </FormGroup>\n      </div>\n    )\n    \n  }\n}\nexport class InputEmail extends Component {\n  render() {\n    const { email, errors } = this.props;\n    return (\n      <div>\n        <FormGroup>\n          <Label>Email <span className=\"text-danger\">*</span></Label>\n          <Input\n            name=\"email\"\n            value={email || ''}\n            placeholder=\"Enter email...\"\n            onChange={this.props.onInputChange}\n            required />\n            {errors.email ? <FormText color=\"danger\">{errors.email}</FormText>: \"\"}\n        </FormGroup>\n      </div>\n    )    \n  }\n}\nexport class InputLinkedin extends Component {\n  render() {\n    const { linkedin_profile, errors } = this.props;\n    return (\n      <div>\n        <FormGroup>\n          <Label>Linkedin <span className=\"text-danger\">*</span></Label>\n          <Input\n            name=\"linkedin_profile\"\n            value={linkedin_profile || ''}\n            placeholder=\"Enter linkedin url...\"\n            onChange={this.props.onInputChange}\n            required />\n            {errors.linkedin_profile ? <FormText color=\"danger\">{errors.linkedin_profile}</FormText>: \"\"}\n        </FormGroup>\n      </div>\n    )    \n  }\n}\n// NOT REQUIRED FIELDS\nexport class InputWebsite extends Component {\n  render() {\n    const { website, errors } = this.props;\n    return (\n      <div>\n        <FormGroup>\n          <Label>Website</Label>\n          <Input\n            name=\"website\"\n            value={website || ''}\n            placeholder=\"Enter website url...\"\n            onChange={this.props.onInputChange}\n            />\n            {errors.website ? <FormText color=\"danger\">{errors.website}</FormText>: \"\"}\n        </FormGroup>\n      </div>\n    )    \n  }\n}\nexport class InputCorrespondence extends Component {\n  render() {\n    const { correspondence, errors } = this.props;\n    return (\n      <div>\n        <FormGroup>\n          <Label>Correspondence</Label>\n          <Input\n            name=\"correspondence\"\n            value={correspondence || ''}\n            placeholder=\"Enter correspondence...\"\n            onChange={this.props.onInputChange}\n            type='textarea'\n            />\n            {errors.correspondence ? <FormText color=\"danger\">{errors.correspondence}</FormText>: \"\"}\n        </FormGroup>\n      </div>\n    )    \n  }\n}","import React, { Component } from 'react'\nimport { Button, \n  FormGroup, Label, } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMale, faUsers, \n       } from '@fortawesome/free-solid-svg-icons'\n\n// Checkbox is corporate\nexport class CheckboxIsCorp extends Component {\n  render() {\n    const { is_corporate } = this.props;\n    return (\n      <div>\n        <FormGroup>\n            <Label>Individual <FontAwesomeIcon icon={faMale} color={!is_corporate ? \"black\": \"grey\"}/> / Corporate <FontAwesomeIcon icon={faUsers} color={is_corporate ? \"black\": \"grey\"}/></Label>\n            <Button className=\"btn btn-block\" onClick={this.props.handleCheckboxIsCorpBtnClick} active={is_corporate}>{is_corporate ? 'Change to Individual' : 'Change to Corporate'}</Button>\n        </FormGroup>\n      </div>\n    )    \n  }\n}","import React, { Component } from 'react'\nimport { Button, \n  FormGroup, Label, } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHandHoldingUsd, faCheckCircle, \n       } from '@fortawesome/free-solid-svg-icons'\n\n// Checkbox is corporate\nexport class CheckboxIsPayed extends Component {\n  render() {\n    const { status, is_staff, is_payed } = this.props;\n    return (\n      <div>\n        {status !== \"Candidate\" && is_staff ?\n          <FormGroup>\n              <Label>New <FontAwesomeIcon icon={faHandHoldingUsd} color={!is_payed ? \"black\": \"grey\"}/> / Payed <FontAwesomeIcon icon={faCheckCircle} color={is_payed ? \"black\": \"grey\"}/></Label>\n              <Button className=\"btn btn-block\" onClick={this.props.handleCheckboxIsPayBtnClick} active={is_payed}>{is_payed ? 'Change to New' : 'Change to Payed'}</Button>\n          </FormGroup>\n          : null} \n      </div>\n    )    \n  }\n}","import React, { Component } from 'react'\nimport { \n  FormGroup, Label, Dropdown, \n  DropdownToggle, \n  DropdownMenu, DropdownItem, } from 'reactstrap';\n\n// Checkbox is corporate\nexport class CustomDropdown extends Component {\n  render() {\n    const { status, dropdownOpen } = this.props;\n    return (\n      <div>\n        <FormGroup>\n          <Label>Status</Label>\n          <Dropdown className=\"form-group\" isOpen={dropdownOpen} toggle={this.props.onToggle}>\n            <DropdownToggle className=\"btn-block\" caret>\n              {status || ''}\n            </DropdownToggle>\n            <DropdownMenu className=\"btn-block\">\n              <DropdownItem onClick={this.props.onChangeValue}>Candidate</DropdownItem>\n              <DropdownItem onClick={this.props.onChangeValue}>Processed</DropdownItem>\n              <DropdownItem onClick={this.props.onChangeValue}>Converted</DropdownItem>\n              <DropdownItem onClick={this.props.onChangeValue}>Rejected</DropdownItem>\n            </DropdownMenu>\n          </Dropdown>\n        </FormGroup>\n      </div>\n    )    \n  }\n}","import React, { Component } from 'react'\n\nimport * as Inputs from '../../Atoms/AddInputs/AddInputs'\nimport { CheckboxIsCorp } from '../../Atoms/Checkboxes/CheckboxIsCorp'\nimport { CheckboxIsPayed } from '../../Atoms/Checkboxes/CheckboxIsPayed'\nimport { CustomDropdown } from '../../Atoms/Dropdown/Dropdown'\n// import { DatePickLastCall } from '../../Atoms/DatePick/DatePickLastCall'\n// import FileDrop from '../../Atoms/FileDrop/FileDrop'\n\nexport class InputFormNoteQuickAdd extends Component {\n  render() {\n    const { text, phone, email,  \n      linkedin_profile, website, \n      correspondence, is_corporate,\n      is_staff, is_payed, dropdownOpen,\n      status, updateNoteId,\n      errors, \n    } = this.props;\n\n    return (\n      <div>\n        <Inputs.InputName \n          onInputChange={this.props.onInputChange} \n          text={text} \n          errors={errors} \n        />\n        <Inputs.InputPhone \n          onInputChange={this.props.onInputChange} \n          phone={phone} \n          errors={errors} \n        />\n        <Inputs.InputEmail \n          onInputChange={this.props.onInputChange} \n          email={email} \n          errors={errors} \n        />      \n        <Inputs.InputLinkedin \n          onInputChange={this.props.onInputChange} \n          linkedin_profile={linkedin_profile} \n          errors={errors} \n        />\n        <Inputs.InputWebsite \n          onInputChange={this.props.onInputChange} \n          website={website} \n          errors={errors} \n        />      \n        <Inputs.InputCorrespondence \n          onInputChange={this.props.onInputChange} \n          correspondence={correspondence} \n          errors={errors} \n        />      \n        \n        <CheckboxIsCorp \n          handleCheckboxIsCorpBtnClick={this.props.handleCheckboxIsCorpBtnClick} \n          is_corporate={is_corporate} \n        />\n        {updateNoteId !== null ?\n        <CustomDropdown \n          onChangeValue={this.props.onChangeValue} \n          onToggle={this.props.onToggle} \n          status={status} \n          dropdownOpen={dropdownOpen} \n        />:null}\n        {updateNoteId !== null && status!==\"Candidate\" && is_staff ?\n          <CheckboxIsPayed \n            handleCheckboxIsPayBtnClick={this.props.handleCheckboxIsPayBtnClick} \n            status={status} \n            is_staff={is_staff} \n            is_payed={is_payed}\n          />\n        : null}      \n         \n      </div>\n    )\n    \n  }\n}","import React, { Component } from 'react'\nimport { Button } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMale, \n  faUsers, faExchangeAlt, faLongArrowAltDown,\n  faTimes } from '@fortawesome/free-solid-svg-icons'\n\n\nexport class OrderingHeaderTable extends Component {\n\n  state = { order: [], is_ordering_name: false, searchtext: \"\" }\n\n  handleOrderNotes = () => {\n    // Array to string with ','\n    let mapped = this.state.order.map((item)=>(item)).join(\",\");\n\n    if (this.state.order.length) {      \n      this.props.orderNotes(mapped)              \n    } else {\n      this.setState({order: []});\n      this.props.orderNotes(\"\")   \n    }    \n  }\n  onBtnClickOrderingName = (ordername) => {\n    // Create a new array based on current state:\n    let order = [...this.state.order];\n    let newordername = \"-\"+ordername\n    let is_ordering_name = false\n\n    // if ordername starts from \"C\"-character - clear that order!\n    if (ordername.charAt(0) === \"C\"){\n      let index = order.indexOf(ordername.slice(1, ordername.length))\n      // Clear ordername (remove from array)\n      if (index !== -1) {\n        order.splice(index, 1);\n      }\n    } else {\n      // Add or remove item to it\n      if (order.includes(ordername)){\n        let index = order.indexOf(ordername)\n        if (index !== -1) {          \n          order.splice(index, 1);\n          order.splice(index, 0, newordername);         \n        }\n      } else if (order.includes(newordername)) {\n        let index = order.indexOf(newordername)\n        if (index !== -1) {\n          order.splice(index, 1);\n          order.splice(index, 0, ordername);\n        }\n      } else {\n        order.push(ordername);\n\n      }\n    }\n    if (order.length > 0) {\n      is_ordering_name = true\n    } \n\n    // FIX BUG with \"owner\" negative ordering\n    if (order.includes(\"-owner\")&&order.length===1) {\n      // adding \"-id\" field to multiply filter\n      // if has only \"-owner\" field\n      order.push(\"-id\");\n    } else {\n      // remove \"-id\" in all other variants\n      let index = order.indexOf(\"-id\")\n      if (index !== -1) {        \n        order.splice(index, 1);\n      }      \n    }\n\n    // Set state\n    this.setState({is_ordering_name: is_ordering_name, searchtext: \"\", order}, function () {\n        // console.log(this.state)\n        this.props.onOrderNotes(this.state);\n    });\n  }\n\n  render() {\n\n    const {order} = this.state;\n\n    return (\n          <thead>\n            <tr>\n              <th className=\"table-num__title\">#</th>\n              <th className=\"table-investor__title\"><FontAwesomeIcon icon={faMale} color=\"black\"/> / <FontAwesomeIcon icon={faUsers} color=\"black\"/></th>\n              <th>Name <Button color=\"link\" onClick={() => this.onBtnClickOrderingName(\"text\")}>\n                {order.includes(\"text\") ? <FontAwesomeIcon icon={faLongArrowAltDown} color=\"black\"/>\n                :order.includes(\"-text\") ? <FontAwesomeIcon rotation={180} icon={faLongArrowAltDown} color=\"black\"/>\n                :<FontAwesomeIcon rotation={90} icon={faExchangeAlt} color=\"grey\"/>}</Button>\n                {order.includes(\"text\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"Ctext\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                :order.includes(\"-text\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"C-text\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                :\"\"}\n              </th>\n              <th>Dev <Button color=\"link\" onClick={() => this.onBtnClickOrderingName(\"owner\")}>\n                {order.includes(\"owner\") ? <FontAwesomeIcon icon={faLongArrowAltDown} color=\"black\"/>\n                :order.includes(\"-owner\") ? <FontAwesomeIcon rotation={180} icon={faLongArrowAltDown} color=\"black\"/>\n                :<FontAwesomeIcon rotation={90} icon={faExchangeAlt} color=\"grey\"/>}</Button>\n                {order.includes(\"owner\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"Cowner\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                :order.includes(\"-owner\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"C-owner\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                :\"\"}\n              </th>\n              <th className=\"table-phone__title\">Phone</th>\n              <th>Status <Button color=\"link\" onClick={() => this.onBtnClickOrderingName(\"status\")}>\n                {order.includes(\"status\") ? <FontAwesomeIcon icon={faLongArrowAltDown} color=\"black\"/>\n                :order.includes(\"-status\") ? <FontAwesomeIcon rotation={180} icon={faLongArrowAltDown} color=\"black\"/>\n                :<FontAwesomeIcon rotation={90} icon={faExchangeAlt} color=\"grey\"/>}</Button>\n                {order.includes(\"status\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"Cstatus\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                :order.includes(\"-status\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"C-status\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                :\"\"}\n              </th>\n              <th>Payment <Button color=\"link\" onClick={() => this.onBtnClickOrderingName(\"is_payed\")}>\n                {order.includes(\"is_payed\") ? <FontAwesomeIcon icon={faLongArrowAltDown} color=\"black\"/>\n                :order.includes(\"-is_payed\") ? <FontAwesomeIcon rotation={180} icon={faLongArrowAltDown} color=\"black\"/>\n                :<FontAwesomeIcon rotation={90} icon={faExchangeAlt} color=\"grey\"/>}</Button>\n                {order.includes(\"is_payed\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"Cis_payed\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                :order.includes(\"-is_payed\") ? <Button color=\"link\" className=\"btn-sort__clear\" onClick={() => this.onBtnClickOrderingName(\"C-is_payed\")}><FontAwesomeIcon icon={faTimes} color=\"black\" /></Button>\n                :\"\"}\n              </th>\n              <th>Manage</th>\n            </tr>\n          </thead>\n    )\n    \n  }\n}","export const handleValidation = (fields) => {\n  // let fields = this.state;\n  let errors = {};\n\n  //Name\n  if(fields[\"text\"].trim() === \"\"){\n     errors[\"text\"] = \"Cannot be empty\";\n  } else {\n    if(typeof fields[\"text\"] !== \"undefined\"){\n       if(!fields[\"text\"].match(/^[a-zA-Z]+$/)){\n          errors[\"text\"] = \"Name must be only letters\";\n       } else if (fields[\"text\"].length > 15) {\n          errors[\"text\"] = \"Your name is too long\";\n       }        \n    }\n  }\n\n  //Phone\n  if(fields[\"phone\"].trim() === \"\"){\n     errors[\"phone\"] = \"Phone cannot be empty\";\n  } else {\n    if(typeof fields[\"phone\"] !== \"undefined\"){\n      if(!fields[\"phone\"].match(/^[0-9\\-\\\\+]{9,15}$/)){\n        errors[\"phone\"] = \"Not phone number\";\n      }      \n    }\n  }\n  // Email\n  if(fields[\"email\"].trim() === \"\"){\n    errors[\"email\"] = \"Cannot be empty\";\n  } else {\n    if(typeof fields[\"email\"] !== \"undefined\"){\n      let lastAtPos = fields[\"email\"].lastIndexOf('@');\n      let lastDotPos = fields[\"email\"].lastIndexOf('.');\n      if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"email\"].indexOf('@@') === -1 && lastDotPos > 2 && (fields[\"email\"].length - lastDotPos) > 2)) {\n        errors[\"email\"] = \"Email is not valid\";\n      }\n    }\n  }\n  // Linkedin profile\n  if(fields[\"linkedin_profile\"].trim() === \"\"){\n    errors[\"linkedin_profile\"] = \"Cannot be empty\";\n  } else {\n    if(typeof fields[\"linkedin_profile\"] !== \"undefined\"){\n      let re=/^((https?|ftp|smtp):\\/\\/)+(www.)?[a-z0-9]+(\\.[a-z]{2,}){1,3}(#?\\/?[a-zA-Z0-9-_#]+)*\\/?(\\?[a-zA-Z0-9-_]+=[a-zA-Z0-9-%]+&?)?$/;\n      if (!re.test(fields[\"linkedin_profile\"])) {\n        errors[\"linkedin_profile\"] = \"Not Linkedin URL\";\n      }\n    }\n  }\n  // Website\n  if(fields[\"website\"].trim() === \"\"){\n  } else {\n    if(typeof fields[\"website\"] !== \"undefined\"){\n      let re=/^((https?|ftp|smtp):\\/\\/)+(www.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_+.~#?&//=]*)?$/;\n      if (!re.test(fields[\"website\"])) {\n        errors[\"website\"] = \"URL is not valid\";\n      }\n    }\n  }\n\n  return errors;\n}","import React, { Component } from 'react'\n\nimport * as notes from \"../../../actions/notesActions\";\nimport {connect} from 'react-redux';\nimport { Link } from 'react-router-dom'\nimport { Form, FormText,  \n  FormGroup, Button,\n  Table, CustomInput,\n  Modal, ModalHeader, ModalBody, ModalFooter, } from 'reactstrap';\nimport { LoadScreen } from '../../general/Organisms/LoadScreen/LoadScreen'\nimport { ModalDelete } from '../Organisms/Modal/Modal'\n\nimport { InputFormNoteQuickAdd } from '../Molecules/Forms/InputFormNoteQuickAdd'\nimport { OrderingHeaderTable } from '../Molecules/Tables/OrderingHeaderTable'\n\nimport { handleValidation } from '../../../utils/helpers'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEdit, faTrash, faMale, \n  faUsers, faSave, faPlusSquare, \n  faSearch, faCheckCircle, faHandHoldingUsd,\n  faTimes,  } from '@fortawesome/free-solid-svg-icons'\n\n\nclass Notes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: \"\",\n      phone: \"\",\n      status: 'Candidate',\n      email: \"\",\n      linkedin_profile: \"\",\n      website: \"\",\n      correspondence: \"\",\n      is_corporate: false,\n      is_payed: false,\n      searchtext: \"\",\n      updateNoteId: null,\n      updateNoteIndex: null,\n      dropdownOpen: false,\n      is_ordering_name: false,\n      modal: false,\n      modaldelete: false,\n      is_staff: false,\n      loading: true,\n      nextafterdelete: \"\",\n      deleted: false,\n      order: [],\n      errors: {},\n      notes: [\n          {\n            count: null,\n            next: null,\n            previous: null,\n            noteitems: []\n          },\n        ],\n      }\n  }\n\n  // // END FETCH DATA AFTER PROPS\n  componentDidMount () {\n    this.props.fetchNotes()\n  }\n\n  resetForm = () => {\n    this.setState({text: \"\", phone: '', email:'', errors: {}, \n      updateNoteId: null, status: 'Candidate', is_corporate: false, \n      is_payed: false, linkedin_profile: \"\", website: \"\",\n      correspondence: \"\", });\n  }\n  addNew = () => {\n    this.setState({text: \"\", phone: '', email:'', errors: {}, \n      updateNoteId: null, status: 'Candidate', is_corporate: false, \n      is_payed: false, linkedin_profile: \"\", website: \"\", \n      modal: true, correspondence: \"\", });\n  }\n  resetSearch = () => {\n    this.setState({ searchtext: \"\" });\n  }\n \n  selectForEdit = (index, id) => {\n    let note = this.props.notes[index].noteitems[id];\n    this.setState({text: note.text, phone: note.phone, \n      status: note.status, is_payed: note.is_payed, \n      is_corporate: note.is_corporate, email: note.email, \n      linkedin_profile: note.linkedin_profile, \n      website: note.website, correspondence:note.correspondence,\n      updateNoteId: id, updateNoteIndex: index, modal: true, });\n  }\n\n  selectForDelete = (index, id) => {\n    this.props.deleteNote(index, id)\n    this.setState({\n      modaldelete: false,\n    })     \n  }\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      loading: nextProps.notes[0].loading,\n    }) \n    // если длина массива меньше чем предыдущая длина (один элемент удален)\n    // то пересчитываем эндпоинт для фетча (вычитаем из последнего символа next\n    // число \"1\" чтобы получить текущий фетч), если в нексте на конце \"1\", то обрезаем\n    // до знака \"?\"\n    let nextForDelete = \"\";\n    if(nextProps.notes[0].deleted && nextProps.notes[0].next) {\n      nextForDelete = nextProps.notes[0].next\n      console.log(nextForDelete)\n      let lastChar = parseInt(nextForDelete.slice(-1), 10)\n      if ((lastChar-1) >= 2) {\n        nextForDelete = nextForDelete.slice(0, -1)+(lastChar-1);\n        console.log(nextForDelete)\n      }\n      \n      //add flag nextafterdelete to correctly fetch\n      this.setState({nextafterdelete: nextForDelete,\n        deleted: false})\n    }\n  }  \n    \n  toggle = () => {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  }\n  toggleModal = () => {\n    this.setState(prevState => ({\n      modal: !prevState.modal,\n    }));\n  }\n  toggleModalDelete = (index, id) => {\n    let text = \"\"\n    if (id !== undefined) {\n      text = this.props.notes[index].noteitems[id].text\n    }\n    this.setState(prevState => ({\n      modaldelete: !prevState.modaldelete,\n      index: index,\n      id: id,\n      text: text\n    }));\n  }\n\n  handleChange = (e) => {\n    e.preventDefault();\n    let key = e.target.name\n    let value = e.target.value\n\n    this.setState({\n        [key]: value,\n        errors: {}\n    })\n\n  }\n\n  changeValue = (e) => {\n    this.setState({status: e.currentTarget.textContent})\n  }\n  loadMorePosts = () => {\n    const {next} = this.props.notes[this.props.notes.length - 1]\n    // Check if investor is after delete to correct fetch \n    if (this.state.nextafterdelete) {\n      this.props.fetchNotes(this.state.nextafterdelete)\n      //clear flag nextafterdelete\n      this.setState({nextafterdelete: \"\"})\n    } else {\n      if (next !== null || next !== undefined) {\n        this.props.fetchNotes(next)              \n      }\n    }\n     \n  }\n  searchNotes = () => {\n      const {searchtext} = this.state\n      if (searchtext !== null || searchtext !== undefined) {\n          this.props.searchNotes(searchtext) \n          this.setState({\n            is_ordering_name: false,\n            order: [],\n          });             \n      }     \n  }\n\n  onCheckboxIsCorpBtnClick = () => {\n    this.setState({\n      is_corporate: !this.state.is_corporate,\n    });\n  }\n  onCheckboxIsPayBtnClick = () => {\n    this.setState({\n      is_payed: !this.state.is_payed,\n    });\n  }\n\n  onOrderNotes = (dataFromCallback) => {\n    // Array to string with ','\n    \n    if (dataFromCallback && dataFromCallback.order.length) {\n      let mapped = dataFromCallback.order.map((item)=>(item)).join(\",\");\n      this.setState({...dataFromCallback});      \n      this.props.orderNotes(mapped)              \n    } else {\n      this.setState({order: []});\n      this.props.orderNotes(\"\")   \n    }    \n  }\n  submitNote = (e) => {\n      e.preventDefault();\n      // check validation from helper file\n      const validation_errors = handleValidation(this.state)\n      // check validation_errors dictionary is empty or has any errors\n      if (Object.keys(validation_errors).length === 0) {\n        // Check what do you want add or edit?\n        if (this.state.updateNoteId === null) {\n            this.props.addNote(this.state.text, this.state.phone, this.state.status, \n              this.state.is_corporate, this.state.is_payed, this.state.email, \n              this.state.linkedin_profile, this.state.website, this.state.correspondence,)\n              .then(this.resetForm)\n              .then(this.toggleModal)            \n              .catch(function (error) {\n                 console.log(\"error\", error);\n               });\n        } else {\n            this.props.updateNote(this.state.updateNoteIndex, this.state.updateNoteId, \n              this.state.text, this.state.phone, this.state.status, this.state.is_corporate, \n              this.state.is_payed, this.state.email, this.state.linkedin_profile, \n              this.state.website, this.state.correspondence)\n              .then(this.resetForm)\n              .then(this.toggleModal)              \n              .catch(function (error) {\n                 console.log(\"error\", error);\n               });\n        }\n      } else {\n        this.setState({errors: validation_errors}); \n      }\n  }\n  renderModal() {\n      const { modal, \n        text, phone, email, linkedin_profile,\n        website, correspondence, is_corporate,\n        status, is_payed, dropdownOpen,\n        updateNoteId,\n        errors } = this.state;\n      const { is_staff } = this.props;\n      \n      if (this.state.modal) {\n        return (\n          <Modal isOpen={modal} toggle={this.toggleModal}>\n            <Form onSubmit={this.submitNote}>            \n\n              <ModalHeader toggle={this.toggleModal}>{updateNoteId === null ? \"New Investor\" : \"Edit Investor\"}</ModalHeader>\n              <ModalBody>                    \n                <InputFormNoteQuickAdd\n                  onInputChange={this.handleChange}\n                  handleCheckboxIsCorpBtnClick={this.onCheckboxIsCorpBtnClick}\n                  handleCheckboxIsPayBtnClick={this.onCheckboxIsPayBtnClick} \n                  onToggle={this.toggle} \n                  onChangeValue={this.changeValue}\n\n                  text={text} \n                  phone={phone}\n                  email={email}\n                  linkedin_profile={linkedin_profile}\n                  website={website}\n                  correspondence={correspondence}\n                  is_corporate={is_corporate}\n                  is_staff={is_staff}\n                  status={status}\n                  is_payed={is_payed}\n                  dropdownOpen={dropdownOpen}\n                  updateNoteId={updateNoteId}\n\n                  errors={errors} \n                />                              \n              </ModalBody>\n              <ModalFooter> \n                <FormGroup row>                   \n                <Button className=\"rounded-0\" color=\"info\" type=\"submit\"><FontAwesomeIcon icon={faSave} color=\"white\"/></Button>              \n                {updateNoteId === null ? <Button className=\"rounded-0\" outline onClick={this.resetForm}>Clear</Button> : null}\n                <Button className=\"rounded-0\" onClick={this.toggleModal}>Cancel</Button>\n                </FormGroup>\n              </ModalFooter>\n            </Form>\n          </Modal>            \n        );\n      }\n    }\n\n  renderNotes () {\n    const { notes } = this.props\n    const { errors, modal, searchtext, modaldelete, index, id, text } = this.state;\n    const { next } = this.props.notes[this.props.notes.length - 1];\n\n    return (\n      <div>\n        <div className=\"centering mt-2\"> \n          <div className=\"centering-left\"> \n            <Link to={\"/investors/add\"}><Button className=\"rounded-0 btn-add\" color=\"info\"><FontAwesomeIcon icon={faPlusSquare} color=\"white\"/> Add New</Button></Link>\n          </div>\n          <div className=\"centering-center\">\n          {modal ? this.renderModal() : null}\n          {modaldelete ? \n            <ModalDelete \n              modaldelete={modaldelete} index={index} \n              id={id} text={text}\n              toggle={this.toggleModalDelete}\n              onSelectForDelete={this.selectForDelete}\n            /> \n          : null}\n            <FormGroup row>\n              <Button className=\"rounded-0\" color=\"info\" onClick={this.addNew}><FontAwesomeIcon icon={faPlusSquare} color=\"white\"/><span className=\"btn-quick__text\"> Quick Add</span></Button>\n              <CustomInput inline\n                id=\"searchtext\"\n                type=\"text\" \n                name=\"searchtext\"\n                value={searchtext || ''}\n                placeholder=\"Search by Name...\"\n                onChange={this.handleChange}\n                \n                />\n                {errors.searchtext ? <FormText color=\"danger\">{errors.searchtext}</FormText>: \"\"}\n              <Button className=\"rounded-0\" onClick={this.searchNotes}><FontAwesomeIcon icon={faSearch} color=\"white\"/></Button>\n              {searchtext !== \"\" ? \n                <Button outline className=\"rounded-0\" onClick={this.resetSearch}>\n                  <FontAwesomeIcon icon={faTimes} color=\"default\" className=\"btn-search__icon\"/>\n                </Button> \n              : \"\"}          \n            </FormGroup>\n          </div>\n          <div className=\"centering-right\"> \n          </div>\n        </div>          \n        <div className=\"centering\"> \n          <div className=\"centering-left\"></div>\n          <h3 className=\"centering-center\">Leads</h3>\n          <div className=\"centering-right centering-right__tablepreffix\">\n          </div>\n        </div>\n        <Table className=\"table text-center table-investors\" striped>\n          <OrderingHeaderTable\n            onOrderNotes={this.onOrderNotes} \n          />\n\n          {notes !== undefined ? notes.map((post, index)=>{\n            return ( \n                <tbody key={index}>\n                    {post.noteitems !== undefined && post.noteitems.length > 0 ? post.noteitems.map((note, id) => {\n                      return (                                    \n                          <tr key={id}>\n                              <th scope=\"row\" className=\"table-num__text\">{id+1}</th>\n                              <td className=\"table-investor__text\">{note.is_corporate ? <FontAwesomeIcon icon={faUsers} color=\"black\"/> : <FontAwesomeIcon icon={faMale} color=\"black\"/>}</td>\n                              <td>\n                                <Link className=\"info-link\" to={{pathname:`/investors/${note.id}`,\n                                      state: {fromDashboard: false, prevLink: window.location.pathname}\n                                      }}>{note.text}</Link>\n                              </td>\n                              <td>\n                                <Link className=\"info-link\" to={{pathname:`/profile/${note.owner}`,\n                                      state: {fromDashboard: false, prevLink: window.location.pathname}\n                                      }}>{note.owner_username}</Link></td>\n                              <td className=\"table-phone__text\">{note.phone}</td>\n                              <td>{note.status}</td>\n                              <td>{note.is_payed ? <FontAwesomeIcon icon={faCheckCircle} color=\"black\"/> : <FontAwesomeIcon icon={faHandHoldingUsd} color=\"black\"/>}</td>\n                              <td>\n                                <Button className=\"rounded-0\" color=\"info\" title=\"edit\" onClick={() => this.selectForEdit(index, id)}><FontAwesomeIcon icon={faEdit} color=\"white\"/></Button>\n                                <Button className=\"rounded-0\" onClick={() => this.toggleModalDelete(index, id)} title=\"delete\"><FontAwesomeIcon icon={faTrash} color=\"white\"/></Button>\n                              </td>\n                          </tr>                                        \n                        )\n                      }\n                    ) : null}\n                </tbody>\n              )\n            }) : null}\n        </Table>\n        {next !== null ? <Button onClick={this.loadMorePosts}>Load more</Button> : ''}\n      </div>\n    )\n  }\n  render () {\n    const { loading } = this.state\n    return(\n      <div>\n        { loading ? <LoadScreen /> : this.renderNotes() }\n      </div>      \n    )\n  }\n}\n\nconst mapStateToProps = state => {\n    return {\n      notes: state.notes,\n      deleted: state.deleted,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchNotes: (next) => {\n            dispatch(notes.fetchNotes(next));\n        },\n        addNote: (text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence) => {\n            return dispatch(notes.addNote(text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence));\n        },\n        updateNote: (index, id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence) => {\n            return dispatch(notes.updateNote(index, id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence));\n        },\n        deleteNote: (index, id) => {\n            dispatch(notes.deleteNote(index, id));\n        },\n        searchNotes: (searchtext) => {\n            dispatch(notes.searchNotes(searchtext));\n        },\n        orderNotes: (order) => {\n            dispatch(notes.orderNotes(order));\n        },\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notes);","import React, { Component } from 'react'\nimport { Button, \n  FormGroup, Label, } from 'reactstrap';\nimport DatePicker from \"react-datepicker\";\nimport moment from \"moment\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n// Checkbox is corporate\nexport class DatePickLastCall extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      add_call: false,\n      last_call: \"\",      \n    }\n  }\n  handleChangeDate = (date) => {\n    if (date) {\n      this.props.handleChangeDate(moment(date, moment.defaultFormat).toDate());\n    } else {\n      this.props.handleChangeDate(null);\n    }\n    \n  }\n\n  render() {\n    // const { last_call } = this.state;\n    const { last_call } = this.props;\n    const is_valid_date = moment(last_call).isValid()\n\n    return ( \n      <div>\n        <FormGroup>\n          <Label>Last Call {is_valid_date ? <Button className=\"btn\" onClick={this.props.handleResetCallClick}>Reset</Button>: \"\"}</Label>\n          {is_valid_date ?\n          <div>\n            <DatePicker     \n              selected={is_valid_date ? moment(last_call, moment.defaultFormat).toDate() : moment(this.state.last_call, moment.defaultFormat).toDate()}\n              onChange={this.handleChangeDate}\n              showTimeSelect\n              timeFormat=\"HH:mm\"\n              timeIntervals={15}\n              dateFormat=\"d MMMM yyyy HH:mm\"\n              timeCaption=\"time\"\n            />\n          </div>\n          :                     \n            <Button className=\"btn btn-block\" onClick={this.props.handleAddCallClick}>Add Last Call</Button>\n          }\n        </FormGroup>\n      </div>\n    )    \n  }\n}","import React, { Component } from 'react'\nimport Dropzone from 'react-dropzone'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFileUpload } from '@fortawesome/free-solid-svg-icons'\nimport './style.scss'\n\nconst imageMaxSize = 10000000; //bytes\n\nclass FileDrop extends Component {\n\n\tonDrop = (acceptedFiles, rejectedFiles) => {\n\t\t// console.log(acceptedFiles, rejectedFiles)\n\t\tthis.props.onSelectDrop(acceptedFiles);\n\t}\n\trender () {\n\t\t\n\t\tconst { documents, detail } = this.props;\n\t\tlet drop_class\n\t\tlet drop_text\n\n\t\tif (documents) {\n\t\t\tif (detail) {\n\t\t\t\tif (documents === detail) {\n\t\t\t\t  drop_class = \"dropzone-field dropzone-field__default\"\n\t\t\t\t  drop_text = \"  Replace Document\"\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t  drop_class = \"dropzone-field dropzone-field__success\";\n\t\t\t  \t  drop_text = \"  Save to Attach\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdrop_class = \"dropzone-field dropzone-field__success\";\n\t\t\t\tdrop_text = \"  Save to Attach\";\n\t\t\t}\n\t\t} else {\n\t\t\tdrop_class = \"dropzone-field dropzone-field__default\";\n\t\t\tdrop_text = \"  Add Document\"\n\t\t} \n\n\t\treturn (\n\t\t  <div>Documents:\n            <span className=\"document-title\">{detail !== \"null\" ? \" (\"+detail.split(\"/\").slice(-1)[0]+\")\" : \"\"}</span>\n\t\t    <Dropzone\n\t            onDrop={this.onDrop}\t\t            \n\t            multiple={false}\n\t            maxSize={imageMaxSize}\n\t            >\n\t                {({getRootProps, getInputProps}) => (\n\t                    <div {...getRootProps()} className={`${drop_class}`}>\n\t                        <input {...getInputProps()} />\n\t                       \t<div>\n\t                       \t\t<FontAwesomeIcon icon={faFileUpload} color=\"white\"/>\n\t                       \t\t\t<span className=\"dropzone-field__text\">{`${drop_text}`}</span>\n\t\t\t\t\t\t\t</div>\n\t                    </div>\n\t                )}\n\t\t\t</Dropzone>﻿\n\t\t  </div>\n\t\t  )\n\t}\n}\nexport default FileDrop","import React, { Component } from 'react'\n\nimport * as Inputs from '../../Atoms/AddInputs/AddInputs'\nimport { CheckboxIsCorp } from '../../Atoms/Checkboxes/CheckboxIsCorp'\nimport { CheckboxIsPayed } from '../../Atoms/Checkboxes/CheckboxIsPayed'\nimport { CustomDropdown } from '../../Atoms/Dropdown/Dropdown'\nimport { DatePickLastCall } from '../../Atoms/DatePick/DatePickLastCall'\nimport FileDrop from '../../Atoms/FileDrop/FileDrop'\n\nexport class InputFormNoteDetail extends Component {\n  render() {\n    const { text, phone, email,  \n      linkedin_profile, website, \n      correspondence, is_corporate,\n      status, dropdownOpen, is_payed,\n      is_staff, add_call, last_call,\n      documents, detail,\n      errors, } = this.props;\n      \n    return (\n      <div>\n        <Inputs.InputName \n          onInputChange={this.props.onInputChange} \n          text={text} \n          errors={errors} \n        />\n        <Inputs.InputPhone \n          onInputChange={this.props.onInputChange} \n          phone={phone} \n          errors={errors} \n        />\n        <Inputs.InputEmail \n          onInputChange={this.props.onInputChange} \n          email={email} \n          errors={errors} \n        />      \n        <Inputs.InputLinkedin \n          onInputChange={this.props.onInputChange} \n          linkedin_profile={linkedin_profile} \n          errors={errors} \n        />\n        <Inputs.InputWebsite \n          onInputChange={this.props.onInputChange} \n          website={website} \n          errors={errors} \n        />      \n        <Inputs.InputCorrespondence \n          onInputChange={this.props.onInputChange} \n          correspondence={correspondence} \n          errors={errors} \n        />      \n        \n        <CheckboxIsCorp \n          handleCheckboxIsCorpBtnClick={this.props.handleCheckboxIsCorpBtnClick} \n          is_corporate={is_corporate} \n        />\n        <CheckboxIsPayed \n          handleCheckboxIsPayBtnClick={this.props.handleCheckboxIsPayBtnClick} \n          status={status} \n          is_staff={is_staff} \n          is_payed={is_payed}\n        />      \n      \n        <CustomDropdown \n          onChangeValue={this.props.onChangeValue} \n          onToggle={this.props.onToggle} \n          status={status} \n          dropdownOpen={dropdownOpen} \n        />      \n        <DatePickLastCall \n          handleChangeDate={this.props.handleChangeDate} \n          handleResetCallClick={this.props.handleResetCallClick} \n          handleAddCallClick={this.props.handleAddCallClick} \n          add_call={add_call} \n          last_call={last_call} \n        />      \n        <FileDrop \n          onSelectDrop={this.props.onSelectDrop} \n          documents={documents}\n          detail={detail}\n        />\n      </div>\n    )\n    \n  }\n}","import React, { Component } from 'react'\nimport { Table } from 'reactstrap';\n\nimport moment from \"moment\";\n\nexport class DetailPreviewTable extends Component {\n  render() {\n    const { text, phone, email,  \n      linkedin_profile, website, \n      correspondence, is_corporate,\n      status, is_payed,\n      last_call, documents, \n    } = this.props;\n\n    return (\n            <div className=\"col col-12 col-xs-12 col-sm-12 col-md-8 col-lg-8\">\n              <h3>Detailed Preview</h3>\n                <Table striped>\n                  <tbody>\n                    <tr>\n                      <th>Investor</th>\n                      <td>{is_corporate ? \"Corporate\" : \"Individual\" }</td>\n                    </tr>\n                    <tr>\n                      <th>Name</th>\n                      <td>{text}</td>\n                    </tr>\n                    <tr>\n                      <th>Phone</th>\n                      <td>{phone}</td>\n                    </tr>\n                    <tr>\n                      <th>Status</th>\n                      <td>{status}</td>\n                    </tr>\n                    <tr>\n                      <th>Email</th>\n                      <td className=\"table-correspondence__data\">{email}</td>\n                    </tr>\n                    <tr>\n                      <th>Linkedin</th>\n                      <td className=\"table-correspondence__data\"><a className=\"table-correspondence__url\" href={`${linkedin_profile}`} >{linkedin_profile}</a></td>\n                    </tr>\n                    <tr>\n                      <th>Website</th>\n                      <td className=\"table-correspondence__data\"><a className=\"table-correspondence__url\" href={`${website}`} >{website}</a></td>\n                    </tr>\n                    <tr>\n                      <th>Correspondence</th>\n                      <td className=\"table-correspondence__data\">{correspondence}</td>\n                    </tr>\n                    <tr>\n                      <th>Payment</th>\n                      <td>{is_payed ? \"Payed\" : \"New\" }</td>\n                    </tr>\n                    <tr>\n                      <th>Calls</th>\n                      <td>{last_call ? moment(last_call).format(\"D MMM YYYY HH:mm\") : \"\"}</td>\n                    </tr>\n                    <tr>\n                      <th>Documents</th>\n                      <td>{documents ? <a className=\"table-correspondence__url\" href={`${documents}`} >{documents.split(\"/\").slice(-1)[0]}</a> : \"\"}</td>\n                    </tr>\n                  </tbody>\n                </Table>\n            </div>\n    )\n    \n  }\n}","import React, {Component} from 'react'\n\nimport * as detail from \"../../../actions/noteDetailActions\";\nimport {connect} from 'react-redux';\nimport { Form, Container, Row,\n     } from 'reactstrap';\nimport moment from \"moment\";\n\nimport { LoadScreen } from '../../general/Organisms/LoadScreen/LoadScreen'\nimport { ReturnButton, SaveButton } from '../../general/Atoms/Buttons/Buttons'\nimport { InputFormNoteDetail } from '../Molecules/Forms/InputFormNoteDetail'\nimport { DetailPreviewTable } from '../Molecules/Tables/DetailPreviewTable'\nimport { handleValidation } from '../../../utils/helpers'\n\nclass NoteDetail extends Component {\n\n    constructor(props){\n        super(props);\n  \n        this.state = {\n          text: \"\",\n          phone: \"\",\n          status: \"\",\n          email:\"\",\n          linkedin_profile: \"\",\n          website: \"\",\n          correspondence: \"\",\n          is_corporate: false,\n          is_payed: false,\n          id: null,\n          loading: true,\n          errors: {},\n          hasError: false,\n          dropdownOpen: false,\n          detail: {},\n          add_call: false,\n          last_call: \"\", \n          documents: null,\n          attached: false,      \n        }\n    }\n\n    componentDidMount(){\n      if (this.props.match){\n        const {id} = this.props.match.params\n        this.setState({\n            id: id,\n        })\n        this.props.fetchDetailNote(id)        \n      }\n      \n    }\n\n    componentWillReceiveProps(nextProps) {\n      const detailed = nextProps.detail\n\n      if (Object.keys(detailed).length) {\n        this.setState({\n          text: detailed.text,\n          phone: detailed.phone,\n          status: detailed.status,\n          is_corporate: detailed.is_corporate,\n          is_payed: detailed.is_payed,\n          email: detailed.email,\n          linkedin_profile: detailed.linkedin_profile,\n          website: detailed.website,\n          correspondence: detailed.correspondence,\n          last_call: moment(detailed.last_call, moment.defaultFormat).toDate(),\n          documents: detailed.documents,\n          hasError: detailed.hasError,\n          loading: detailed.loading,\n        }) \n      }        \n    }    \n    toggle = () => {\n      this.setState(prevState => ({\n        dropdownOpen: !prevState.dropdownOpen\n      }));\n    }\n    handleChange = (e) => {\n      e.preventDefault();\n      let key = e.target.name\n      let value = e.target.value\n      this.setState({\n          [key]: value,\n          errors: {}\n      })\n    }\n    changeDate = (date) => {      \n      this.setState({last_call: date})\n    }\n\n    changeValue = (e) => {\n      this.setState({status: e.currentTarget.textContent})\n    }\n\n    getData = (documents) => {\n      // console.log(\"getData!\")\n      this.setState({\n        documents: documents[0],\n        attached: true,\n      })\n    }\n\n    onCheckboxIsCorpBtnClick = () => {\n      this.setState({\n        is_corporate: !this.state.is_corporate,\n      });\n    }\n    onCheckboxIsPayBtnClick = () => {\n      this.setState({\n        is_payed: !this.state.is_payed,\n      });\n    }\n    onAddCallClick = () => {\n      this.setState({\n        add_call: true,\n        last_call: moment(new Date(), moment.defaultFormat).toDate(),\n      });\n    }\n\n    onResetCallClick = () => {\n      this.setState({\n        add_call: false,\n        last_call: \"\",\n      });\n    }\n\n    submitNote = (e) => {\n      e.preventDefault();\n      // check validation from helper file\n      const validation_errors = handleValidation(this.state)\n      // check validation_errors dictionary is empty or has any errors\n      if (Object.keys(validation_errors).length === 0) {\n        this.props.updateDetailNote(this.state.id, this.state.text, \n          this.state.phone, this.state.status, this.state.is_corporate, \n          this.state.is_payed, this.state.email, this.state.linkedin_profile, \n          this.state.website, this.state.correspondence, this.state.last_call,\n          this.state.documents, this.state.attached,)\n      } else {\n        this.setState({errors: validation_errors}); \n      }\n    }\n\n    renderNote() {\n        const { detail, is_staff } = this.props;\n        const { text, phone, email, \n          linkedin_profile, website,\n          correspondence, is_corporate,\n          status, dropdownOpen, is_payed,\n          add_call, last_call, documents,\n          errors, hasError } = this.state;\n\n        if (!detail.detail && !hasError) {\n          return (\n                <Container fluid>\n                  <Row>\n                    <Form onSubmit={this.submitNote} className=\"form col-12 col-xs-12 col-sm-12 col-md-4 col-lg-4 mt-2 p-2\">\n                      <InputFormNoteDetail \n                        onInputChange={this.handleChange}\n                        handleCheckboxIsCorpBtnClick={this.onCheckboxIsCorpBtnClick}\n                        handleCheckboxIsPayBtnClick={this.onCheckboxIsPayBtnClick} \n                        onToggle={this.toggle} \n                        onChangeValue={this.changeValue}\n                        handleChangeDate={this.changeDate}\n                        handleResetCallClick={this.onResetCallClick}\n                        handleAddCallClick={this.onAddCallClick}\n                        onSelectDrop={this.getData}\n\n                        text={text} \n                        phone={phone}\n                        email={email}\n                        linkedin_profile={linkedin_profile}\n                        website={website}\n                        correspondence={correspondence}\n                        is_corporate={is_corporate}\n                        status={status}\n                        is_staff={is_staff}\n                        is_payed={is_payed}\n                        dropdownOpen={dropdownOpen}\n                        add_call={add_call}\n                        last_call={last_call}\n                        documents={documents}\n                        detail={`${detail.documents}`}\n\n                        errors={errors} \n                      />                \n                    <SaveButton />\n                    <ReturnButton />\n                  </Form>\n\n                  <DetailPreviewTable \n                    {...detail}\n                  />\n              </Row>\n            </Container>              \n          );\n\n        } else {\n            return (\n              <div>\n                <h1>404 error. Investor Not Found</h1>\n              </div>\n            );\n        }\n    }\n    render () {\n        const {loading} = this.state\n        return(\n            <div>\n              {loading ?<LoadScreen />:this.renderNote()}\n          </div>               \n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      detail: state.detail,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      fetchDetailNote: (id) => {\n          dispatch(detail.fetchDetailNote(id));\n      },\n      updateDetailNote: (id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence, last_call, documents, attached) => {\n          dispatch(detail.updateDetailNote(id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence, last_call, documents, attached));\n      }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteDetail);","import { toast } from 'react-toastify';\nexport const fetchDetailNote = (id) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        const endpoint = `/api/investors/${id}/` \n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        \n        return fetch(endpoint, {headers, })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n               \n                } else {\n                    toast.error(\"Server Error...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'FETCH_DETAIL_NOTE', detail: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authentication Error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", detail: res.data});\n                    throw res.data;\n                } \n                else if (res.status === 404) {\n                    toast.error(\"Investor is not found...\")\n                    dispatch({type: \"MESSAGE_NOT_FOUND\"});\n\n                }\n            })\n            .catch(error => {                \n                //error.redirect('/404');\n                //Handle error\n                console.log(\"error\", error);\n                // return dispatch({type: \"MESSAGE_NOT_FOUND\", detail: error});\n                // dispatch({type: \"MESSAGE_NOT_FOUND\", detail: error});\n            });\n    }\n}\n\nexport const updateDetailNote = (id, text, phone, status, is_corporate, is_payed, email, linkedin_profile, website, correspondence, last_call, documents, attached) => {\n    return (dispatch, getState) => {\n\n        let headers = {'Accept': 'application/json'};\n        // let headers = {\"Content-Type\": \"multipart/form-data\"};\n\n        let {token} = getState().auth;\n\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        let formData = new FormData();\n        formData.append('text', text);\n        formData.append('phone', phone);\n        formData.append('status', status);\n        formData.append('is_corporate', is_corporate);\n        formData.append('is_payed', is_payed);\n        formData.append('email', email);\n        formData.append('linkedin_profile', linkedin_profile);\n        formData.append('website', website);\n        // Not required fields\n        if (correspondence) {\n            formData.append('correspondence', correspondence);\n        }\n        //check if attached & if documents(file) is not string\n        //if documents is string don't append formData\n        if (attached && \n          !(typeof documents === 'string' || documents instanceof String)) {\n            formData.append('documents', documents);\n        }\n\n        // formData need to convert ISO format string\n        if (last_call){\n            if (String(last_call) !==\"Invalid Date\") {\n                formData.append('last_call', last_call.toISOString());\n            }            \n        } else {\n            formData.append('last_call', \"\");\n        }\n        let noteId = id;\n        return fetch(`/api/investors/${noteId}/`, {headers, method: \"PUT\", body: formData})\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    toast.error(\"Server error...\")\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 200) {\n                    toast.info(\"Investor \"+res.data.text+\" edited\")\n                    return dispatch({type: 'UPDATE_DETAIL_NOTE', detail: res.data, id});\n                } else if (res.status === 401 || res.status === 403) {\n                    toast.error(\"Authentication Error...\")\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\n\nexport const addDetailNote = (text, phone, status, is_corporate, email, linkedin_profile, website, correspondence) => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n\n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n\n        let body = JSON.stringify({text, phone, status, is_corporate, email, linkedin_profile, website, correspondence });\n        return fetch(\"/api/investors/\", {headers, method: \"POST\", body})\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 201) {\n                    toast.info(\"Investor \"+res.data.text+\" added\")\n                    return dispatch({type: 'ADD_DETAIL_NOTE', detail: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\n","import React, { Component } from 'react'\n\nimport * as Inputs from '../../Atoms/AddInputs/AddInputs'\nimport { CheckboxIsCorp } from '../../Atoms/Checkboxes/CheckboxIsCorp'\n\nexport class InputFormNoteAdd extends Component {\n  render() {\n    const { text, phone, email,  \n      linkedin_profile, website, \n      correspondence, is_corporate,\n\n      errors, \n    } = this.props;\n\n    return (\n      <div>\n        <Inputs.InputName \n          onInputChange={this.props.onInputChange} \n          text={text} \n          errors={errors} \n        />\n        <Inputs.InputPhone \n          onInputChange={this.props.onInputChange} \n          phone={phone} \n          errors={errors} \n        />\n        <Inputs.InputEmail \n          onInputChange={this.props.onInputChange} \n          email={email} \n          errors={errors} \n        />      \n        <Inputs.InputLinkedin \n          onInputChange={this.props.onInputChange} \n          linkedin_profile={linkedin_profile} \n          errors={errors} \n        />\n        <Inputs.InputWebsite \n          onInputChange={this.props.onInputChange} \n          website={website} \n          errors={errors} \n        />      \n        <Inputs.InputCorrespondence \n          onInputChange={this.props.onInputChange} \n          correspondence={correspondence} \n          errors={errors} \n        />      \n        \n        <CheckboxIsCorp \n          handleCheckboxIsCorpBtnClick={this.props.handleCheckboxIsCorpBtnClick} \n          is_corporate={is_corporate} \n        />\n\n      </div>\n    )\n    \n  }\n}","import React, {Component} from 'react'\n\nimport { Redirect } from 'react-router-dom'\nimport * as detail from \"../../../actions/noteDetailActions\";\nimport {connect} from 'react-redux';\n\nimport Form from 'reactstrap/lib/Form';\n\nimport { InputFormNoteAdd } from '../Molecules/Forms/InputFormNoteAdd'\n\nimport { ReturnButton, SaveButton, ClearButton } from '../../general/Atoms/Buttons/Buttons'\nimport { handleValidation } from '../../../utils/helpers'\n\nclass NoteNew extends Component {\n    constructor(props){\n        super(props)       \n        this.state = {\n          text: \"\",\n          phone: \"\",\n          email: \"\",\n          status: \"Candidate\",\n          linkedin_profile: \"\",\n          website: \"\",\n          correspondence: \"\",\n          is_corporate: false,\n          id: null,\n          doneLoading: false,\n          errors: {},        \n          redirectToNewPage: false          \n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n      if (this.state.redirectToNewPage) {  \n        this.setState({\n          id: nextProps.detail.id,\n        })\n      }\n    }    \n\n    resetForm = () => {\n      this.setState({text: \"\", phone: '', email:'', errors: {}, status: 'Candidate', \n        is_corporate: false, linkedin_profile: \"\", website: \"\",\n        correspondence: \"\",\n      });\n    }\n    handleChange = (e) => {\n      e.preventDefault();\n      let key = e.target.name\n      let value = e.target.value\n      this.setState({\n          [key]: value,\n          errors: {}\n      })\n    }\n    changeValue = (e) => {\n      this.setState({status: e.currentTarget.textContent})\n    }\n\n    onCheckboxIsCorpBtnClick = () => {\n      this.setState({\n        is_corporate: !this.state.is_corporate,\n      });\n    }\n\n    submitNote = (e) => {\n      e.preventDefault();\n      // check validation from helper file\n      const validation_errors = handleValidation(this.state)\n      // check validation_errors dictionary is empty or has any errors\n      if (Object.keys(validation_errors).length === 0) {\n        this.props.addDetailNote(this.state.text, this.state.phone, this.state.status, \n          this.state.is_corporate, this.state.email, this.state.linkedin_profile, \n          this.state.website, this.state.correspondence)\n          .then(this.setState({ redirectToNewPage: true }))            \n          .catch(function (error) {\n             console.log(\"error\", error);\n           });\n      } else {\n        this.setState({errors: validation_errors}); \n      }\n    }\n\n    render () {\n        const { text, phone, email, \n          linkedin_profile, website,\n          correspondence, is_corporate,\n          errors } = this.state;\n        // The part that makes the redirect happen\n        if (this.state.redirectToNewPage && this.state.id) {\n          return (\n            <Redirect to={{pathname:`/investors/${this.state.id}`}} />\n          )\n        }\n        return(\n            <div>\n              <div className=\"mt-2 mb-2\">\n                <h3>Add New</h3>\n              </div>\n              <Form onSubmit={this.submitNote} className=\"form col col-sm-4 mt-2 p-2\">\n                <InputFormNoteAdd\n                  onInputChange={this.handleChange}\n                  handleCheckboxIsCorpBtnClick={this.onCheckboxIsCorpBtnClick} \n\n                  text={text} \n                  phone={phone}\n                  email={email}\n                  linkedin_profile={linkedin_profile}\n                  website={website}\n                  correspondence={correspondence}\n                  is_corporate={is_corporate}\n\n                  errors={errors} \n                /> \n                <div>\n                  <SaveButton />\n                  <ClearButton\n                    onClear={this.resetForm} \n                  />\n                  <ReturnButton />\n                </div>\n            </Form>\n          </div>               \n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      detail: state.detail,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addDetailNote: (text, phone, status, is_corporate, email, linkedin_profile, website, correspondence) => {\n            return dispatch(detail.addDetailNote(text, phone, status, is_corporate, email, linkedin_profile, website, correspondence));\n        },\n    }\n}\n\n// export default NewNote;\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteNew);","import React, {Component} from 'react'\nimport {connect} from 'react-redux';\nimport { Link } from 'react-router-dom'\nimport { Table } from 'reactstrap';\n// import memoize from \"memoize-one\";\nimport * as lead from \"../../../actions/paymentsActions\";\nimport { LoadScreen } from '../../general/Organisms/LoadScreen/LoadScreen'\nimport { paymentsUtil } from '../../../utils/paymentsUtils'\n\nclass Payments extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {         \n        loading: true,\n        errors: {},\n        lead: {},\n      };\n    }\n\n    componentDidMount(){\n      if (this.props.match){\n        this.props.fetchPaymentsLead()\n      }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n      if (this.props.lead !== prevProps.lead) {\n        if (this.props.lead) {\n          const leads = paymentsUtil(this.props.lead.leads)\n          this.setState({leads: leads}); \n        }\n      }\n    }   \n    renderPayments() {\n      const { lead } = this.props;\n        if (lead.leads) {\n          return (\n            <div>\n              <h3>Leads View</h3>\n              <Table className=\"table text-center\" striped>\n                <thead>\n                  <tr>\n                    <th className=\"table-num__title table-payments\">#</th>\n                    <th className=\"table-payments\">Developer</th>\n                    <th className=\"table-payments\">Total Leads</th>\n                    <th className=\"table-payments\">Processed</th>\n                    <th className=\"table-payments\">Converted</th>\n                    <th className=\"table-payments\">Rejected</th>\n                    <th className=\"table-payments\">Next Payment</th>\n                  </tr>\n                </thead>  \n                <tbody>\n                  {lead.leads.length > 0 ? lead.leads.map((item,id) => (\n                    <tr key={id}>\n                        <th scope=\"row\" className=\"table-num__text\">{id+1}</th>\n                        <td>\n                          <Link className=\"info-link\" to={{pathname:`/profile/${item.id}`,\n                              state: {fromDashboard: false}\n                              }}>{item.owner}</Link>\n                        </td>\n                        <td>{item.total}</td>\n                        <td>{item.processed}</td>\n                        <td>{item.converted}</td>\n                        <td>{item.rejected}</td>\n                        <td>{item.price}</td>\n                    </tr>\n                  )) : <tr><td colSpan=\"7\">Table is empty. Add your investors</td></tr>}\n                </tbody>                     \n              </Table>\n            </div>              \n          );\n        }\n    }\n    render () {\n      const { loading } = this.props\n      return(\n          <div>\n            { loading ? <LoadScreen /> : this.renderPayments() }\n        </div>               \n      )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      lead: state.lead,\n      loading: state.lead.loading\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      fetchPaymentsLead: () => {\n          dispatch(lead.fetchPaymentsLead());\n      },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Payments);","export const paymentsUtil = (leads) => {\n\n  // initialize newstate for reducer (to add calculated parameter lead.price)\n  let newstate = leads\n  // calculating next payment\n  newstate.forEach(item=>{\n    // get true_investors (without candidate status)\n    let true_investors = item.converted + item.processed + item.rejected\n    // get count of payed investors\n    let count_payed = item.payed\n    let price_all = 0;\n    let price_payed = 0;\n\n    // Calculating price\n    for(let key in item.prices){\n      let value = item.prices[key]\n      // Calculating price for investors without Candidate status\n      if (true_investors >=10){\n          if (true_investors>=key) {\n              price_all += 10*value\n          } else {\n              if (Math.ceil(true_investors/10) === key/10) {\n                  price_all += (true_investors+10-key)*value \n              }\n          }\n      }\n      // Get payed price\n      if (count_payed && true_investors >=10){\n          if (count_payed >= key) {\n              price_payed += 10*value\n          } else {\n              if (Math.ceil(count_payed/10) === key/10) {\n                  price_payed += (count_payed+10-key)*value \n              }\n          }\n      }\n    }\n    // output price without payed prices\n    item.price =price_all-price_payed;              \n  });\n  return newstate\n}","export const fetchPaymentsLead = () => {\n    return (dispatch, getState) => {\n        let headers = {\"Content-Type\": \"application/json\"};\n        let {token} = getState().auth;\n        const endpoint = `/api/payments/` \n        if (token) {\n            headers[\"Authorization\"] = `Token ${token}`;\n        }\n        \n        return fetch(endpoint, {headers, })\n            .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                // } else if (res.status === 404) {\n                //     dispatch({type: \"MESSAGE_NOT_FOUND\", data: res.data});\n                //     throw res.data;\n                } else {\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n\n            .then(res => {\n                if (res.status === 200) {\n                    return dispatch({type: 'FETCH_PAYMENTS_LEAD', leads: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                } else if (res.status === 404) {\n                    dispatch({type: \"ERROR_NOT_FOUND\", leads: res.data});\n                    throw res.data;\n                }\n            })\n    }\n}\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport RequireAuth from \"./auth/RequireAuth\";\nimport Landing from \"./Landing\";\nimport Login from \"./auth/Login\";\nimport Logout from \"./auth/Logout\";\nimport Signup from \"./auth/Signup\";\nimport SignupDone from \"./auth/SignupDone\";\nimport AccountActivation from \"./auth/AccountActivation\";\nimport UserProfile from \"./auth/Templates/UserProfile\";\nimport UserProfileDetail from \"./auth/Templates/UserProfileDetail\";\nimport UserProfileEdit from \"./auth/UserProfileEdit\";\nimport PasswordChange from \"./auth/PasswordChange\";\nimport PasswordReset from \"./auth/PasswordReset\";\nimport PasswordResetDone from \"./auth/PasswordResetDone\";\nimport PasswordResetConfirm from \"./auth/PasswordResetConfirm\";\nimport NoMatch from \"./NoMatch\";\n\nimport ReactifyComp from '../routingComps/ReactifyComp'\nimport PostDetail from '../reactify/PostDetail';\nimport PostCreate from '../reactify/PostCreate'\nimport Notes from './notes/Templates/Notes'\nimport NoteDetail from './notes/Templates/NoteDetail'\nimport NoteNew from './notes/Templates/NoteNew'\nimport Payments from './notes/Templates/Payments'\n\nconst MainContent = () => (\n    <div>\n        <Switch>\n            <Route exact path=\"/\" component={props => <Landing {...props} />} />\n            <Route path=\"/reload\" component={null} key=\"reload\" />\n            <Route path=\"/login\" component={props => <Login {...props} />} />\n            <Route path=\"/logout\" component={props => <Logout {...props} />}/>\n            <Route path=\"/signup\" component={props => <Signup {...props} />}/>\n            <Route path=\"/activation/confirm-email/:key\" component={props => <AccountActivation {...props} />}/>\n            <Route path=\"/signup_done\" component={props => <SignupDone {...props} />}/>\n            <Route path=\"/reset_password\" component={props => <PasswordReset {...props} />}/>\n            <Route path=\"/reset_password_done\" component={props => <PasswordResetDone {...props} />}/>\n            <Route path=\"/pass/reset/:uid/:token/\" component={props => <PasswordResetConfirm {...props} />}/>\n            <Route exact path=\"/profile\" component={RequireAuth(UserProfile)}/>\n            <Route path='/profile/:id' component={RequireAuth(UserProfileDetail)}/>\n            <Route path=\"/profile_edit\" component={RequireAuth(UserProfileEdit)}/>\n            <Route path=\"/change_password\" component={RequireAuth(PasswordChange)}/>\n            <Route path='/react/posts/create' component={RequireAuth(PostCreate)}/>\n            <Route path='/react/posts/:slug' component={RequireAuth(PostDetail)}/>\n            <Route path='/react/posts' component={RequireAuth(ReactifyComp)} />\n            <Route exact path='/investors' component={RequireAuth(Notes)} />\n            <Route path='/investors/add' component={RequireAuth(NoteNew)}/>\n            <Route path='/investors/:id' component={RequireAuth(NoteDetail)}/>\n            <Route exact path='/payments' component={RequireAuth(Payments)} />\n\n            <Route component={props => <NoMatch {...props} />}/>\n        </Switch>\n    </div>\n);\n\nexport default MainContent;\n","import React, {Component} from \"react\";\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css'; \n\nimport Header from \"./Header\";\nimport MainContent from \"./MainContent\";\n\nexport default class App extends Component {\n\n    render() {\n        return (\n            <div>                \n                <Header />\n                <div className=\"container\">\n                    <ToastContainer \n                      hideProgressBar={true} \n                      position=\"bottom-right\"\n                      autoClose={3000}\n                      removeCloseButton={true}\n                    />\n                \t<MainContent />\n                </div>\n            </div>\n        );\n    }\n}","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"bootstrap/dist/css/bootstrap.css\";\n\nimport \"./styles/style.scss\"\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import { Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport store from \"./store\";\n// import history from \"./utils/historyUtils\";\nimport { authLogin } from \"./actions/authActions\";\nimport App from \"./components/App\";\nimport registerServiceWorker from './registerServiceWorker';\n\n// import { syncHistoryWithStore } from 'react-router-redux'\n\n\n// const browserhistory = syncHistoryWithStore(history, store)\n\nregisterServiceWorker();\n\nconst token = localStorage.getItem(\"token\");\n\nif (token) {\n    store.dispatch(authLogin(token));\n}\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <App />\n        </Router>\n    </Provider>\n    , document.getElementById(\"root\"));\n"],"sourceRoot":""}